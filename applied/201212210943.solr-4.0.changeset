Changeset created on Fri Dec 21 09:43:33 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Upgrade to solr4.0

    - Merge meresco-solr with solr-run
    - Support for solr4.0
    - Added pivoting
    - Solr output in json in stead of xml

Baseline version: 4.1.11

From 7b413293c366ce0da1f32ffeabfb919ae0bd94e1 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Fri, 7 Sep 2012 09:46:39 +0200
Subject: [PATCH 02/66] JJ: copied from cq2-packages

---
 bin/start-solr.py                                  |   96 ++
 share/core-data/.svn/entries                       |   31 +
 share/core-data/conf/.svn/entries                  |   96 ++
 .../conf/.svn/text-base/schema.xml.svn-base        |   47 +
 .../conf/.svn/text-base/solrconfig.xml.svn-base    | 1498 ++++++++++++++++++++
 share/core-data/conf/schema.xml                    |   47 +
 share/core-data/conf/solrconfig.xml                | 1498 ++++++++++++++++++++
 share/solr-data/.svn/entries                       |  170 +++
 share/solr-data/.svn/text-base/jetty.xml.svn-base  |  227 +++
 share/solr-data/.svn/text-base/solr.xml.svn-base   |    3 +
 .../solr-data/.svn/text-base/start.config.svn-base |   56 +
 .../.svn/text-base/webdefault.xml.svn-base         |  410 ++++++
 share/solr-data/contexts/.svn/entries              |   62 +
 .../contexts/.svn/text-base/solr.xml.svn-base      |    8 +
 share/solr-data/contexts/solr.xml                  |    8 +
 share/solr-data/cores/.svn/entries                 |   28 +
 share/solr-data/jetty.xml                          |  227 +++
 share/solr-data/solr.xml                           |    3 +
 share/solr-data/start.config                       |   56 +
 share/solr-data/webdefault.xml                     |  410 ++++++
 20 files changed, 4981 insertions(+), 0 deletions(-)
 create mode 100755 bin/start-solr.py
 create mode 100644 share/core-data/.svn/entries
 create mode 100644 share/core-data/conf/.svn/entries
 create mode 100644 share/core-data/conf/.svn/text-base/schema.xml.svn-base
 create mode 100644 share/core-data/conf/.svn/text-base/solrconfig.xml.svn-base
 create mode 100644 share/core-data/conf/schema.xml
 create mode 100644 share/core-data/conf/solrconfig.xml
 create mode 100644 share/solr-data/.svn/entries
 create mode 100644 share/solr-data/.svn/text-base/jetty.xml.svn-base
 create mode 100644 share/solr-data/.svn/text-base/solr.xml.svn-base
 create mode 100644 share/solr-data/.svn/text-base/start.config.svn-base
 create mode 100644 share/solr-data/.svn/text-base/webdefault.xml.svn-base
 create mode 100644 share/solr-data/contexts/.svn/entries
 create mode 100644 share/solr-data/contexts/.svn/text-base/solr.xml.svn-base
 create mode 100644 share/solr-data/contexts/solr.xml
 create mode 100644 share/solr-data/cores/.svn/entries
 create mode 100644 share/solr-data/jetty.xml
 create mode 100644 share/solr-data/solr.xml
 create mode 100644 share/solr-data/start.config
 create mode 100644 share/solr-data/webdefault.xml

diff --git a/bin/start-solr.py b/bin/start-solr.py
new file mode 100755
index 0000000..0532f0b
--- /dev/null
+++ b/bin/start-solr.py
@@ -0,0 +1,96 @@
+#!/usr/bin/env python2.6
+from sys import argv, exit
+from os import execvp, system, makedirs, listdir
+from os.path import dirname, abspath, isdir, join
+from optparse import OptionParser, Option
+from lxml.etree import parse, SubElement, tostring
+from subprocess import Popen
+
+mydir = dirname(abspath(__file__))
+configdir = join(mydir, 'usr-share') # is replaced by makeDeb.sh
+SOLR_VERSION = "3.6.0"
+
+def parseArguments(args):
+    parser = OptionParser()
+    parser.add_option(Option('', '--port', type='int', help='Solr port number', dest='port'))
+    parser.add_option(Option('', '--stateDir', type='string', help='Solr state directory', dest='stateDir'))
+    parser.add_option(Option('', '--core', type='string', action='append', help='Solr cores', dest='core'))
+    parser.add_option(Option('', '--javaMX', type='string', help="Value for -Xmx setting for java", dest="javaMX", default="1024M"))
+    options, arguments = parser.parse_args(args)
+    if not all([options.port, options.stateDir, options.core]):
+        parser.print_help()
+        raise ValueError("Missing required option (all except javaMX are required)")
+    return options, arguments
+
+def copyDir(src, dst):
+    system('cp -r %s/* %s/' % (src, dst))
+    system('find %s -name ".svn" | xargs rm -rf' % dst) # DO_NOT_DISTRIBUTE
+
+def setupSolrConfig(stateDir, port, cores):
+    if not isdir(stateDir):
+        makedirs(stateDir)
+        copyDir(join(configdir, 'solr-data'), stateDir)
+    else:
+        newMatchVersion = parse(open(join(configdir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+        for coreDir in listdir(join(stateDir, 'cores')):
+            currentMatchVersion = parse(open(join(stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+            if currentMatchVersion != newMatchVersion:
+                raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
+
+    system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
+            port,
+            join(stateDir, 'jetty.xml')
+        ))
+
+    system(r"""sed 's,^jetty\.home=.*$,jetty.home=%s,' -i %s""" % (
+            stateDir,
+            join(stateDir, 'start.config')
+        ))
+
+    system(r"""sed 's,^/.*$,/usr/share/java/solr%s/*,' -i %s""" % (
+            SOLR_VERSION,
+            join(stateDir, 'start.config')
+        ))
+
+    system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, stateDir))
+
+    solr_xml = parse(open(join(stateDir, 'solr.xml')))
+    for core in cores:
+        coreDir = join(stateDir, 'cores', core)
+        if not isdir(coreDir):
+            makedirs(coreDir)
+            coresElement = solr_xml.xpath("/solr/cores")[0]
+            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
+            copyDir(join(configdir, 'core-data'), coreDir)
+            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
+            schema_xml = parse(open(schema_xml_path))
+            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
+            open(schema_xml_path, 'w').write(tostring(schema_xml))
+
+    open(join(stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True))
+
+def startSolr(stateDir, port, javaMX):
+    _execvp('java', [
+        'java',
+        '-Xmx%s' % javaMX, 
+        '-Djetty.port=%s' % port,
+        '-DSTART=%s/start.config' % stateDir,
+        '-Dsolr.solr.home=%s' % stateDir, 
+        '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
+        ])
+
+def _execvp(*args, **kwargs):
+    execvp(*args, **kwargs)
+
+
+if __name__ == '__main__':
+    args = argv[1:]
+    options, arguments = parseArguments(args)
+
+    if Popen(["java -version 2>&1 | grep 'libgcj' > /dev/null 2>&1"], shell=True).wait() == 0:
+        print "Don't use GCJ as the default java JRE."
+        exit(1)
+
+    setupSolrConfig(stateDir=options.stateDir, port=options.port, cores=options.core)
+    startSolr(stateDir=options.stateDir, port=options.port, javaMX=options.javaMX)
+
diff --git a/share/core-data/.svn/entries b/share/core-data/.svn/entries
new file mode 100644
index 0000000..baf21b6
--- /dev/null
+++ b/share/core-data/.svn/entries
@@ -0,0 +1,31 @@
+10
+
+dir
+20568
+svn+ssh://svn@svn.seecr.nl/svn/cq2-packages/thirdparty/solr-run/3.6.0/1.0/usr-share/core-data
+svn+ssh://svn@svn.seecr.nl/svn
+
+
+
+2012-07-05T08:08:04.395682Z
+19831
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+7f82bda0-831b-0410-895c-c142f06d1e64
+
+conf
+dir
+
diff --git a/share/core-data/conf/.svn/entries b/share/core-data/conf/.svn/entries
new file mode 100644
index 0000000..fb733cc
--- /dev/null
+++ b/share/core-data/conf/.svn/entries
@@ -0,0 +1,96 @@
+10
+
+dir
+20568
+svn+ssh://svn@svn.seecr.nl/svn/cq2-packages/thirdparty/solr-run/3.6.0/1.0/usr-share/core-data/conf
+svn+ssh://svn@svn.seecr.nl/svn
+
+
+
+2012-07-05T08:08:04.395682Z
+19831
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+7f82bda0-831b-0410-895c-c142f06d1e64
+
+schema.xml
+file
+
+
+
+
+2012-08-21T22:07:00.000000Z
+77498aa1dd70a9f5b8d4b15d4b65895e
+2012-07-05T08:08:04.395682Z
+19831
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+2148
+
+solrconfig.xml
+file
+
+
+
+
+2012-08-21T22:07:00.000000Z
+4e294f8cdb3f4bba6f36c93b773eb258
+2012-07-02T14:00:02.395704Z
+19775
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+55248
+
diff --git a/share/core-data/conf/.svn/text-base/schema.xml.svn-base b/share/core-data/conf/.svn/text-base/schema.xml.svn-base
new file mode 100644
index 0000000..13e9782
--- /dev/null
+++ b/share/core-data/conf/.svn/text-base/schema.xml.svn-base
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<schema name="meresco-corename" version="1.5">
+
+  <types>
+    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
+    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100" omitNorms="false" multiValued="true" indexed="true" stored="false">
+      <analyzer>
+        <tokenizer class="solr.ClassicTokenizerFactory"/>
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+    </fieldType>
+    <fieldType name="untokenized_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="true" indexed="true" stored="false" />
+    <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
+ </types>
+
+
+ <fields>
+   <field name="__id__" type="string" stored="true" required="true" /> 
+   <field name="__all__" type="text_ws" /> 
+   <dynamicField name="sorted.*" type="sorted_string" />
+   <dynamicField name="untokenized.*" type="untokenized_string" />
+   <dynamicField name="meta.*" type="untokenized_string" />
+   <dynamicField name="*" type="text_ws" />
+ </fields>
+
+ <uniqueKey>__id__</uniqueKey>
+ <defaultSearchField>__all__</defaultSearchField>
+
+ <solrQueryParser defaultOperator="AND"/>
+</schema>
diff --git a/share/core-data/conf/.svn/text-base/solrconfig.xml.svn-base b/share/core-data/conf/.svn/text-base/solrconfig.xml.svn-base
new file mode 100644
index 0000000..3c5d73a
--- /dev/null
+++ b/share/core-data/conf/.svn/text-base/solrconfig.xml.svn-base
@@ -0,0 +1,1498 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<!-- 
+     For more details about configurations options that may appear in
+     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
+-->
+<config>
+  <!-- In all configuration below, a prefix of "solr." for class names
+       is an alias that causes solr to search appropriate packages,
+       including org.apache.solr.(search|update|request|core|analysis)
+
+       You may also specify a fully qualified Java classname if you
+       have your own custom plugins.
+    -->
+
+  <!-- Set this to 'false' if you want solr to continue working after
+       it has encountered an severe configuration error.  In a
+       production environment, you may want solr to keep working even
+       if one handler is mis-configured.
+
+       You may also set this to false using by setting the system
+       property:
+
+         -Dsolr.abortOnConfigurationError=false
+    -->
+  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
+  
+  <!-- Controls what version of Lucene various components of Solr
+       adhere to.  Generally, you want to use the latest version to
+       get all bug fixes and improvements. It is highly recommended
+       that you fully re-index after changing this setting as it can
+       affect both how text is indexed and queried.
+    -->
+  <luceneMatchVersion>LUCENE_36</luceneMatchVersion>
+
+  <!-- lib directives can be used to instruct Solr to load an Jars
+       identified and use them to resolve any "plugins" specified in
+       your solrconfig.xml or schema.xml (ie: Analyzers, Request
+       Handlers, etc...).
+
+       All directories and paths are resolved relative to the
+       instanceDir.
+
+       If a "./lib" directory exists in your instanceDir, all files
+       found in it are included as if you had used the following
+       syntax...
+       
+              <lib dir="./lib" />
+    -->
+  <!-- A dir option by itself adds any files found in the directory to
+       the classpath, this is useful for including all jars in a
+       directory.
+    -->
+  <lib dir="../../contrib/extraction/lib" />
+  <!-- When a regex is specified in addition to a directory, only the
+       files in that directory which completely match the regex
+       (anchored on both ends) will be included.
+    -->
+  <lib dir="../../dist/" regex="apache-solr-cell-\d.*\.jar" />
+  <lib dir="../../dist/" regex="apache-solr-clustering-\d.*\.jar" />
+  <lib dir="../../dist/" regex="apache-solr-dataimporthandler-\d.*\.jar" />
+
+  <!-- If a dir option (with or without a regex) is used and nothing
+       is found that matches, it will be ignored
+    -->
+  <lib dir="../../contrib/clustering/lib/" />
+  <lib dir="/total/crap/dir/ignored" /> 
+  <!-- an exact path can be used to specify a specific file.  This
+       will cause a serious error to be logged if it can't be loaded.
+    -->
+  <!--
+  <lib path="../a-jar-that-does-not-exist.jar" /> 
+  -->
+  
+  <!-- Data Directory
+
+       Used to specify an alternate directory to hold all index data
+       other than the default ./data under the Solr home.  If
+       replication is in use, this should match the replication
+       configuration.
+  <dataDir>${solr.data.dir:}</dataDir>
+    -->
+
+
+  <!-- The DirectoryFactory to use for indexes.
+       
+       solr.StandardDirectoryFactory, the default, is filesystem
+       based.  solr.RAMDirectoryFactory is memory based, not
+       persistent, and doesn't work with replication.
+    -->
+  <directoryFactory name="DirectoryFactory" 
+                    class="${solr.directoryFactory:solr.StandardDirectoryFactory}"/>
+
+
+  <!-- Index Defaults
+
+       Values here affect all index writers and act as a default
+       unless overridden.
+
+       WARNING: See also the <mainIndex> section below for parameters
+       that overfor Solr's main Lucene index.
+    -->
+  <indexDefaults>
+
+    <useCompoundFile>true</useCompoundFile>
+
+    <mergeFactor>10</mergeFactor>
+    <!-- Sets the amount of RAM that may be used by Lucene indexing
+         for buffering added documents and deletions before they are
+         flushed to the Directory.  -->
+    <ramBufferSizeMB>32</ramBufferSizeMB>
+    <!-- If both ramBufferSizeMB and maxBufferedDocs is set, then
+         Lucene will flush based on whichever limit is hit first.  
+      -->
+    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->
+
+    <maxFieldLength>10000</maxFieldLength>
+    <writeLockTimeout>1000</writeLockTimeout>
+    <commitLockTimeout>10000</commitLockTimeout>
+
+    <!-- Expert: Merge Policy 
+
+         The Merge Policy in Lucene controls how merging is handled by
+         Lucene.  The default in 2.3 is the LogByteSizeMergePolicy,
+         previous versions used LogDocMergePolicy.
+         
+         LogByteSizeMergePolicy chooses segments to merge based on
+         their size.  The Lucene 2.2 default, LogDocMergePolicy chose
+         when to merge based on number of documents
+         
+         Other implementations of MergePolicy must have a no-argument
+         constructor
+      -->
+    <!--
+       <mergePolicy class="org.apache.lucene.index.LogByteSizeMergePolicy"/>
+       -->
+
+    <!-- Expert: Merge Scheduler
+
+         The Merge Scheduler in Lucene controls how merges are
+         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
+         can perform merges in the background using separate threads.
+         The SerialMergeScheduler (Lucene 2.2 default) does not.
+     -->
+    <!-- 
+       <mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler"/>
+       -->
+	  
+    <!-- LockFactory 
+
+         This option specifies which Lucene LockFactory implementation
+         to use.
+      
+         single = SingleInstanceLockFactory - suggested for a
+                  read-only index or when there is no possibility of
+                  another process trying to modify the index.
+         native = NativeFSLockFactory - uses OS native file locking.
+                  Do not use when multiple solr webapps in the same
+                  JVM are attempting to share a single index.
+         simple = SimpleFSLockFactory  - uses a plain file for locking
+
+         (For backwards compatibility with Solr 1.2, 'simple' is the
+         default if not specified.)
+
+         More details on the nuances of each LockFactory...
+         http://wiki.apache.org/lucene-java/AvailableLockFactories
+    -->
+    <lockType>native</lockType>
+
+    <!-- Expert: Controls how often Lucene loads terms into memory
+         Default is 128 and is likely good for most everyone.
+      -->
+    <!-- <termIndexInterval>256</termIndexInterval> -->
+  </indexDefaults>
+
+  <!-- Main Index
+
+       Values here override the values in the <indexDefaults> section
+       for the main on disk index.
+    -->
+  <mainIndex>
+
+    <useCompoundFile>true</useCompoundFile>
+    <ramBufferSizeMB>32</ramBufferSizeMB>
+    <mergeFactor>10</mergeFactor>
+
+    <!-- Unlock On Startup
+
+         If true, unlock any held write or commit locks on startup.
+         This defeats the locking mechanism that allows multiple
+         processes to safely access a lucene index, and should be used
+         with care.
+
+         This is not needed if lock type is 'none' or 'single'
+     -->
+    <unlockOnStartup>false</unlockOnStartup>
+    
+    <!-- If true, IndexReaders will be reopened (often more efficient)
+         instead of closed and then opened.
+      -->
+    <reopenReaders>true</reopenReaders>
+
+    <!-- Commit Deletion Policy
+
+         Custom deletion policies can specified here. The class must
+         implement org.apache.lucene.index.IndexDeletionPolicy.
+
+         http://lucene.apache.org/java/2_9_1/api/all/org/apache/lucene/index/IndexDeletionPolicy.html
+
+         The standard Solr IndexDeletionPolicy implementation supports
+         deleting index commit points on number of commits, age of
+         commit point and optimized status.
+         
+         The latest commit point should always be preserved regardless
+         of the criteria.
+    -->
+    <deletionPolicy class="solr.SolrDeletionPolicy">
+      <!-- The number of commit points to be kept -->
+      <str name="maxCommitsToKeep">1</str>
+      <!-- The number of optimized commit points to be kept -->
+      <str name="maxOptimizedCommitsToKeep">0</str>
+      <!--
+          Delete all commit points once they have reached the given age.
+          Supports DateMathParser syntax e.g.
+        -->
+      <!--
+         <str name="maxCommitAge">30MINUTES</str>
+         <str name="maxCommitAge">1DAY</str>
+      -->
+    </deletionPolicy>
+
+    <!-- Lucene Infostream
+       
+         To aid in advanced debugging, Lucene provides an "InfoStream"
+         of detailed information when indexing.
+
+         Setting The value to true will instruct the underlying Lucene
+         IndexWriter to write it's debugging info the specified file
+      -->
+     <infoStream file="INFOSTREAM.txt">false</infoStream> 
+
+  </mainIndex>
+
+  <!-- JMX
+       
+       This example enables JMX if and only if an existing MBeanServer
+       is found, use this if you want to configure JMX through JVM
+       parameters. Remove this to disable exposing Solr configuration
+       and statistics to JMX.
+
+       For more details see http://wiki.apache.org/solr/SolrJmx
+    -->
+  <jmx />
+  <!-- If you want to connect to a particular server, specify the
+       agentId 
+    -->
+  <!-- <jmx agentId="myAgent" /> -->
+  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->
+  <!-- <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr"/>
+    -->
+
+  <!-- The default high-performance update handler -->
+  <updateHandler class="solr.DirectUpdateHandler2">
+
+    <!-- AutoCommit
+
+         Perform a <commit/> automatically under certain conditions.
+         Instead of enabling autoCommit, consider using "commitWithin"
+         when adding documents. 
+
+         http://wiki.apache.org/solr/UpdateXmlMessages
+
+         maxDocs - Maximum number of documents to add since the last
+                   commit before automaticly triggering a new commit.
+
+         maxTime - Maximum amount of time that is allowed to pass
+                   since a document was added before automaticly
+                   triggering a new commit. 
+      -->
+    <!--
+       <autoCommit> 
+         <maxDocs>10000</maxDocs>
+         <maxTime>1000</maxTime> 
+       </autoCommit>
+      -->
+
+    <!-- Update Related Event Listeners
+         
+         Various IndexWriter realted events can trigger Listeners to
+         take actions.
+
+         postCommit - fired after every commit or optimize command
+         postOptimize - fired after every optimize command
+      -->
+    <!-- The RunExecutableListener executes an external command from a
+         hook such as postCommit or postOptimize.
+         
+         exe - the name of the executable to run
+         dir - dir to use as the current working directory. (default=".")
+         wait - the calling thread waits until the executable returns. 
+                (default="true")
+         args - the arguments to pass to the program.  (default is none)
+         env - environment variables to set.  (default is none)
+      -->
+    <!-- This example shows how RunExecutableListener could be used
+         with the script based replication...
+         http://wiki.apache.org/solr/CollectionDistribution
+      -->
+    <!--
+       <listener event="postCommit" class="solr.RunExecutableListener">
+         <str name="exe">solr/bin/snapshooter</str>
+         <str name="dir">.</str>
+         <bool name="wait">true</bool>
+         <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
+         <arr name="env"> <str>MYVAR=val1</str> </arr>
+       </listener>
+      -->
+  </updateHandler>
+  
+  <!-- IndexReaderFactory
+
+       Use the following format to specify a custom IndexReaderFactory,
+       which allows for alternate IndexReader implementations.
+
+       ** Experimental Feature **
+
+       Please note - Using a custom IndexReaderFactory may prevent
+       certain other features from working. The API to
+       IndexReaderFactory may change without warning or may even be
+       removed from future releases if the problems cannot be
+       resolved.
+
+
+       ** Features that may not work with custom IndexReaderFactory **
+
+       The ReplicationHandler assumes a disk-resident index. Using a
+       custom IndexReader implementation may cause incompatibility
+       with ReplicationHandler and may cause replication to not work
+       correctly. See SOLR-1366 for details.
+
+    -->
+  <!--
+  <indexReaderFactory name="IndexReaderFactory" class="package.class">
+    <str name="someArg">Some Value</str>
+  </indexReaderFactory >
+  -->
+  <!-- By explicitly declaring the Factory, the termIndexDivisor can
+       be specified.
+    -->
+  <!--
+     <indexReaderFactory name="IndexReaderFactory" 
+                         class="solr.StandardIndexReaderFactory">
+       <int name="setTermIndexDivisor">12</int>
+     </indexReaderFactory >
+    -->
+
+
+  <query>
+    <!-- Max Boolean Clauses
+
+         Maximum number of clauses in each BooleanQuery,  an exception
+         is thrown if exceeded.
+
+         ** WARNING **
+         
+         This option actually modifies a global Lucene property that
+         will affect all SolrCores.  If multiple solrconfig.xml files
+         disagree on this property, the value at any given moment will
+         be based on the last SolrCore to be initialized.
+         
+      -->
+    <maxBooleanClauses>1024</maxBooleanClauses>
+
+
+    <!-- Solr Internal Query Caches
+
+         There are two implementations of cache available for Solr,
+         LRUCache, based on a synchronized LinkedHashMap, and
+         FastLRUCache, based on a ConcurrentHashMap.  
+
+         FastLRUCache has faster gets and slower puts in single
+         threaded operation and thus is generally faster than LRUCache
+         when the hit ratio of the cache is high (> 75%), and may be
+         faster under other scenarios on multi-cpu systems.
+    -->
+
+    <!-- Filter Cache
+
+         Cache used by SolrIndexSearcher for filters (DocSets),
+         unordered sets of *all* documents that match a query.  When a
+         new searcher is opened, its caches may be prepopulated or
+         "autowarmed" using data from caches in the old searcher.
+         autowarmCount is the number of items to prepopulate.  For
+         LRUCache, the autowarmed items will be the most recently
+         accessed items.
+
+         Parameters:
+           class - the SolrCache implementation LRUCache or
+               (LRUCache or FastLRUCache)
+           size - the maximum number of entries in the cache
+           initialSize - the initial capacity (number of entries) of
+               the cache.  (see java.util.HashMap)
+           autowarmCount - the number of entries to prepopulate from
+               and old cache.  
+      -->
+    <filterCache class="solr.FastLRUCache"
+                 size="512"
+                 initialSize="512"
+                 autowarmCount="0"/>
+
+    <!-- Query Result Cache
+         
+         Caches results of searches - ordered lists of document ids
+         (DocList) based on a query, a sort, and the range of documents requested.  
+      -->
+    <queryResultCache class="solr.LRUCache"
+                     size="512"
+                     initialSize="512"
+                     autowarmCount="0"/>
+   
+    <!-- Document Cache
+
+         Caches Lucene Document objects (the stored fields for each
+         document).  Since Lucene internal document ids are transient,
+         this cache will not be autowarmed.  
+      -->
+    <documentCache class="solr.LRUCache"
+                   size="512"
+                   initialSize="512"
+                   autowarmCount="0"/>
+    
+    <!-- Field Value Cache
+         
+         Cache used to hold field values that are quickly accessible
+         by document id.  The fieldValueCache is created by default
+         even if not configured here.
+      -->
+    <!--
+       <fieldValueCache class="solr.FastLRUCache"
+                        size="512"
+                        autowarmCount="128"
+                        showItems="32" />
+      -->
+
+    <!-- Custom Cache
+
+         Example of a generic cache.  These caches may be accessed by
+         name through SolrIndexSearcher.getCache(),cacheLookup(), and
+         cacheInsert().  The purpose is to enable easy caching of
+         user/application level data.  The regenerator argument should
+         be specified as an implementation of solr.CacheRegenerator 
+         if autowarming is desired.  
+      -->
+    <!--
+       <cache name="myUserCache"
+              class="solr.LRUCache"
+              size="4096"
+              initialSize="1024"
+              autowarmCount="1024"
+              regenerator="com.mycompany.MyRegenerator"
+              />
+      -->
+
+
+    <!-- Lazy Field Loading
+
+         If true, stored fields that are not requested will be loaded
+         lazily.  This can result in a significant speed improvement
+         if the usual case is to not load all stored fields,
+         especially if the skipped fields are large compressed text
+         fields.
+    -->
+    <enableLazyFieldLoading>true</enableLazyFieldLoading>
+
+   <!-- Use Filter For Sorted Query
+
+        A possible optimization that attempts to use a filter to
+        satisfy a search.  If the requested sort does not include
+        score, then the filterCache will be checked for a filter
+        matching the query. If found, the filter will be used as the
+        source of document ids, and then the sort will be applied to
+        that.
+
+        For most situations, this will not be useful unless you
+        frequently get the same search repeatedly with differnet sort
+        options, and none of them ever use "score"
+     -->
+   <!--
+      <useFilterForSortedQuery>true</useFilterForSortedQuery>
+     -->
+
+   <!-- Result Window Size
+
+        An optimization for use with the queryResultCache.  When a search
+        is requested, a superset of the requested number of document ids
+        are collected.  For example, if a search for a particular query
+        requests matching documents 10 through 19, and queryWindowSize is 50,
+        then documents 0 through 49 will be collected and cached.  Any further
+        requests in that range can be satisfied via the cache.  
+     -->
+   <queryResultWindowSize>20</queryResultWindowSize>
+
+   <!-- Maximum number of documents to cache for any entry in the
+        queryResultCache. 
+     -->
+   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
+
+   <!-- Query Related Event Listeners
+
+        Various IndexSearcher related events can trigger Listeners to
+        take actions.
+
+        newSearcher - fired whenever a new searcher is being prepared
+        and there is a current searcher handling requests (aka
+        registered).  It can be used to prime certain caches to
+        prevent long request times for certain requests.
+
+        firstSearcher - fired whenever a new searcher is being
+        prepared but there is no current registered searcher to handle
+        requests or to gain autowarming data from.
+
+        
+     -->
+    <!-- QuerySenderListener takes an array of NamedList and executes a
+         local query request for each NamedList in sequence. 
+      -->
+    <listener event="newSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <!--
+           <lst><str name="q">solr</str><str name="sort">price asc</str></lst>
+           <lst><str name="q">rocks</str><str name="sort">weight asc</str></lst>
+          -->
+      </arr>
+    </listener>
+    <listener event="firstSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <lst>
+          <str name="q">static firstSearcher warming in solrconfig.xml</str>
+        </lst>
+      </arr>
+    </listener>
+
+    <!-- Use Cold Searcher
+
+         If a search request comes in and there is no current
+         registered searcher, then immediately register the still
+         warming searcher and use it.  If "false" then all requests
+         will block until the first searcher is done warming.
+      -->
+    <useColdSearcher>false</useColdSearcher>
+
+    <!-- Max Warming Searchers
+         
+         Maximum number of searchers that may be warming in the
+         background concurrently.  An error is returned if this limit
+         is exceeded.
+
+         Recommend values of 1-2 for read-only slaves, higher for
+         masters w/o cache warming.
+      -->
+    <maxWarmingSearchers>2</maxWarmingSearchers>
+
+  </query>
+
+
+  <!-- Request Dispatcher
+
+       This section contains instructions for how the SolrDispatchFilter
+       should behave when processing requests for this SolrCore.
+
+       handleSelect affects the behavior of requests such as /select?qt=XXX
+
+       handleSelect="true" will cause the SolrDispatchFilter to process
+       the request and will result in consistent error handling and
+       formating for all types of requests.
+
+       handleSelect="false" will cause the SolrDispatchFilter to
+       ignore "/select" requests and fallback to using the legacy
+       SolrServlet and it's Solr 1.1 style error formatting
+    -->
+  <requestDispatcher handleSelect="true" >
+    <!-- Request Parsing
+
+         These settings indicate how Solr Requests may be parsed, and
+         what restrictions may be placed on the ContentStreams from
+         those requests
+
+         enableRemoteStreaming - enables use of the stream.file
+         and stream.url paramaters for specifying remote streams.
+
+         multipartUploadLimitInKB - specifies the max size of
+         Multipart File Uploads that Solr will alow in a Request.
+         
+         *** WARNING ***
+         The settings below authorize Solr to fetch remote files, You
+         should make sure your system has some authentication before
+         using enableRemoteStreaming="true"
+
+      --> 
+    <requestParsers enableRemoteStreaming="true" 
+                    multipartUploadLimitInKB="2048000" />
+
+    <!-- HTTP Caching
+
+         Set HTTP caching related parameters (for proxy caches and clients).
+
+         The options below instruct Solr not to output any HTTP Caching
+         related headers
+      -->
+    <httpCaching never304="true" />
+    <!-- If you include a <cacheControl> directive, it will be used to
+         generate a Cache-Control header (as well as an Expires header
+         if the value contains "max-age=")
+         
+         By default, no Cache-Control header is generated.
+         
+         You can use the <cacheControl> option even if you have set
+         never304="true"
+      -->
+    <!--
+       <httpCaching never304="true" >
+         <cacheControl>max-age=30, public</cacheControl> 
+       </httpCaching>
+      -->
+    <!-- To enable Solr to responde with automaticly generated HTTP
+         Caching headers, and to response to Cache Validation requests
+         correctly, set the value of never304="false"
+         
+         This will cause Solr to generate Last-Modified and ETag
+         headers based on the properties of the Index.
+
+         The following options can also be specified to affect the
+         values of these headers...
+
+         lastModFrom - the default value is "openTime" which means the
+         Last-Modified value (and validation against If-Modified-Since
+         requests) will all be relative to when the current Searcher
+         was opened.  You can change it to lastModFrom="dirLastMod" if
+         you want the value to exactly corrispond to when the physical
+         index was last modified.
+
+         etagSeed="..." is an option you can change to force the ETag
+         header (and validation against If-None-Match requests) to be
+         differnet even if the index has not changed (ie: when making
+         significant changes to your config file)
+
+         (lastModifiedFrom and etagSeed are both ignored if you use
+         the never304="true" option)
+      -->
+    <!--
+       <httpCaching lastModifiedFrom="openTime"
+                    etagSeed="Solr">
+         <cacheControl>max-age=30, public</cacheControl> 
+       </httpCaching>
+      -->
+  </requestDispatcher>
+
+  <!-- Request Handlers 
+
+       http://wiki.apache.org/solr/SolrRequestHandler
+
+       incoming queries will be dispatched to the correct handler
+       based on the path or the qt (query type) param.
+
+       Names starting with a '/' are accessed with the a path equal to
+       the registered name.  Names without a leading '/' are accessed
+       with: http://host/app/[core/]select?qt=name
+
+       If a /select request is processed with out a qt param
+       specified, the requestHandler that declares default="true" will
+       be used.
+       
+       If a Request Handler is declared with startup="lazy", then it will
+       not be initialized until the first request that uses it.
+
+    -->
+  <!-- SearchHandler
+
+       http://wiki.apache.org/solr/SearchHandler
+
+       For processing Search Queries, the primary Request Handler
+       provided with Solr is "SearchHandler" It delegates to a sequent
+       of SearchComponents (see below) and supports distributed
+       queries across multiple shards
+    -->
+  <requestHandler name="search" class="solr.SearchHandler" default="true">
+    <!-- default values for query parameters can be specified, these
+         will be overridden by parameters in the request
+      -->
+     <lst name="defaults">
+       <str name="echoParams">explicit</str>
+       <int name="rows">10</int>
+     </lst>
+    <!-- In addition to defaults, "appends" params can be specified
+         to identify values which should be appended to the list of
+         multi-val params from the query (or the existing "defaults").
+      -->
+    <!-- In this example, the param "fq=instock:true" would be appended to
+         any query time fq params the user may specify, as a mechanism for
+         partitioning the index, independent of any user selected filtering
+         that may also be desired (perhaps as a result of faceted searching).
+
+         NOTE: there is *absolutely* nothing a client can do to prevent these
+         "appends" values from being used, so don't use this mechanism
+         unless you are sure you always want it.
+      -->
+    <!--
+       <lst name="appends">
+         <str name="fq">inStock:true</str>
+       </lst>
+      -->
+    <!-- "invariants" are a way of letting the Solr maintainer lock down
+         the options available to Solr clients.  Any params values
+         specified here are used regardless of what values may be specified
+         in either the query, the "defaults", or the "appends" params.
+
+         In this example, the facet.field and facet.query params would
+         be fixed, limiting the facets clients can use.  Faceting is
+         not turned on by default - but if the client does specify
+         facet=true in the request, these are the only facets they
+         will be able to see counts for; regardless of what other
+         facet.field or facet.query params they may specify.
+
+         NOTE: there is *absolutely* nothing a client can do to prevent these
+         "invariants" values from being used, so don't use this mechanism
+         unless you are sure you always want it.
+      -->
+    <!--
+       <lst name="invariants">
+         <str name="facet.field">cat</str>
+         <str name="facet.field">manu_exact</str>
+         <str name="facet.query">price:[* TO 500]</str>
+         <str name="facet.query">price:[500 TO *]</str>
+       </lst>
+      -->
+    <!-- If the default list of SearchComponents is not desired, that
+         list can either be overridden completely, or components can be
+         prepended or appended to the default list.  (see below)
+      -->
+    <!--
+       <arr name="components">
+         <str>nameOfCustomComponent1</str>
+         <str>nameOfCustomComponent2</str>
+       </arr>
+      -->
+    </requestHandler>
+
+  <!-- A Robust Example
+
+       This example SearchHandler declaration shows off usage of the
+       SearchHandler with many defaults declared
+
+       Note that multiple instances of hte same Request Handler
+       (SearchHandler) can be registered multiple times with different
+       names (and different init parameters)
+    -->
+  <requestHandler name="/browse" class="solr.SearchHandler">
+     <lst name="defaults">
+       <str name="echoParams">explicit</str>
+
+       <!-- VelocityResponseWriter settings -->
+       <str name="wt">velocity</str>
+
+       <str name="v.template">browse</str>
+       <str name="v.layout">layout</str>
+       <str name="title">Solritas</str>
+
+       <str name="defType">edismax</str>
+       <str name="q.alt">*:*</str>
+       <str name="rows">10</str>
+       <str name="fl">*,score</str>
+       <str name="mlt.qf">
+         text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+       <str name="mlt.fl">text,features,name,sku,id,manu,cat</str>
+       <int name="mlt.count">3</int>
+
+       <str name="qf">
+          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+
+       <str name="facet">on</str>
+       <str name="facet.field">cat</str>
+       <str name="facet.field">manu_exact</str>
+       <str name="facet.query">ipod</str>
+       <str name="facet.query">GB</str>
+       <str name="facet.mincount">1</str>
+       <str name="facet.pivot">cat,inStock</str>
+       <str name="facet.range">price</str>
+       <int name="f.price.facet.range.start">0</int>
+       <int name="f.price.facet.range.end">600</int>
+       <int name="f.price.facet.range.gap">50</int>
+       <str name="f.price.facet.range.other">after</str>
+       <str name="facet.range">manufacturedate_dt</str>
+       <str name="f.manufacturedate_dt.facet.range.start">NOW/YEAR-10YEARS</str>
+       <str name="f.manufacturedate_dt.facet.range.end">NOW</str>
+       <str name="f.manufacturedate_dt.facet.range.gap">+1YEAR</str>
+       <str name="f.manufacturedate_dt.facet.range.other">before</str>
+       <str name="f.manufacturedate_dt.facet.range.other">after</str>
+
+
+       <!-- Highlighting defaults -->
+       <str name="hl">on</str>
+       <str name="hl.fl">text features name</str>
+       <str name="f.name.hl.fragsize">0</str>
+       <str name="f.name.hl.alternateField">name</str>
+     </lst>
+     <arr name="last-components">
+       <str>spellcheck</str>
+     </arr>
+     <!--
+     <str name="url-scheme">httpx</str>
+     -->
+  </requestHandler>
+
+  <!-- XML Update Request Handler.  
+       
+       http://wiki.apache.org/solr/UpdateXmlMessages
+
+       The canonical Request Handler for Modifying the Index through
+       commands specified using XML.
+
+       Note: Since solr1.1 requestHandlers requires a valid content
+       type header if posted in the body. For example, curl now
+       requires: -H 'Content-type:text/xml; charset=utf-8'
+    -->
+  <requestHandler name="/update" 
+                  class="solr.XmlUpdateRequestHandler">
+    <!-- See below for information on defining 
+         updateRequestProcessorChains that can be used by name 
+         on each Update Request
+      -->
+    <!--
+       <lst name="defaults">
+         <str name="update.chain">dedupe</str>
+       </lst>
+       -->
+    </requestHandler>
+  <!-- Binary Update Request Handler
+       http://wiki.apache.org/solr/javabin
+    -->
+  <requestHandler name="/update/javabin" 
+                  class="solr.BinaryUpdateRequestHandler" />
+
+  <!-- CSV Update Request Handler
+       http://wiki.apache.org/solr/UpdateCSV
+    -->
+  <requestHandler name="/update/csv" 
+                  class="solr.CSVRequestHandler" 
+                  startup="lazy" />
+
+  <!-- JSON Update Request Handler
+       http://wiki.apache.org/solr/UpdateJSON
+    -->
+  <requestHandler name="/update/json" 
+                  class="solr.JsonUpdateRequestHandler" 
+                  startup="lazy" />
+
+  <!-- Solr Cell Update Request Handler
+
+       http://wiki.apache.org/solr/ExtractingRequestHandler 
+
+    -->
+  <requestHandler name="/update/extract" 
+                  startup="lazy"
+                  class="solr.extraction.ExtractingRequestHandler" >
+    <lst name="defaults">
+      <!-- All the main content goes into "text"... if you need to return
+           the extracted text or do highlighting, use a stored field. -->
+      <str name="fmap.content">text</str>
+      <str name="lowernames">true</str>
+      <str name="uprefix">ignored_</str>
+
+      <!-- capture link hrefs but ignore div attributes -->
+      <str name="captureAttr">true</str>
+      <str name="fmap.a">links</str>
+      <str name="fmap.div">ignored_</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Field Analysis Request Handler
+
+       RequestHandler that provides much the same functionality as
+       analysis.jsp. Provides the ability to specify multiple field
+       types and field names in the same request and outputs
+       index-time and query-time analysis for each of them.
+
+       Request parameters are:
+       analysis.fieldname - field name whose analyzers are to be used
+
+       analysis.fieldtype - field type whose analyzers are to be used
+       analysis.fieldvalue - text for index-time analysis
+       q (or analysis.q) - text for query time analysis
+       analysis.showmatch (true|false) - When set to true and when
+           query analysis is performed, the produced tokens of the
+           field value analysis will be marked as "matched" for every
+           token that is produces by the query analysis
+   -->
+  <requestHandler name="/analysis/field" 
+                  startup="lazy"
+                  class="solr.FieldAnalysisRequestHandler" />
+
+
+  <!-- Document Analysis Handler
+
+       http://wiki.apache.org/solr/AnalysisRequestHandler
+
+       An analysis handler that provides a breakdown of the analysis
+       process of provided docuemnts. This handler expects a (single)
+       content stream with the following format:
+
+       <docs>
+         <doc>
+           <field name="id">1</field>
+           <field name="name">The Name</field>
+           <field name="text">The Text Value</field>
+         </doc>
+         <doc>...</doc>
+         <doc>...</doc>
+         ...
+       </docs>
+
+    Note: Each document must contain a field which serves as the
+    unique key. This key is used in the returned response to assoicate
+    ananalysis breakdown to the analyzed document.
+
+    Like the FieldAnalysisRequestHandler, this handler also supports
+    query analysis by sending either an "analysis.query" or "q"
+    request paraemter that holds the query text to be analyized. It
+    also supports the "analysis.showmatch" parameter which when set to
+    true, all field tokens that match the query tokens will be marked
+    as a "match". 
+  -->
+  <requestHandler name="/analysis/document" 
+                  class="solr.DocumentAnalysisRequestHandler" 
+                  startup="lazy" />
+
+  <!-- Admin Handlers
+
+       Admin Handlers - This will register all the standard admin
+       RequestHandlers.  
+    -->
+  <requestHandler name="/admin/" 
+                  class="solr.admin.AdminHandlers" />
+  <!-- This single handler is equivilent to the following... -->
+  <!--
+     <requestHandler name="/admin/luke"       class="solr.admin.LukeRequestHandler" />
+     <requestHandler name="/admin/system"     class="solr.admin.SystemInfoHandler" />
+     <requestHandler name="/admin/plugins"    class="solr.admin.PluginInfoHandler" />
+     <requestHandler name="/admin/threads"    class="solr.admin.ThreadDumpHandler" />
+     <requestHandler name="/admin/properties" class="solr.admin.PropertiesRequestHandler" />
+     <requestHandler name="/admin/file"       class="solr.admin.ShowFileRequestHandler" >
+    -->
+  <!-- If you wish to hide files under ${solr.home}/conf, explicitly
+       register the ShowFileRequestHandler using: 
+    -->
+  <!--
+     <requestHandler name="/admin/file" 
+                     class="solr.admin.ShowFileRequestHandler" >
+       <lst name="invariants">
+         <str name="hidden">synonyms.txt</str> 
+         <str name="hidden">anotherfile.txt</str> 
+       </lst>
+     </requestHandler>
+    -->
+
+  <!-- ping/healthcheck -->
+  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
+    <lst name="defaults">
+      <str name="qt">search</str>
+      <str name="q">solrpingquery</str>
+      <str name="echoParams">all</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Echo the request contents back to the client -->
+  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
+    <lst name="defaults">
+     <str name="echoParams">explicit</str> 
+     <str name="echoHandler">true</str>
+    </lst>
+  </requestHandler>
+  
+  <!-- Solr Replication
+
+       The SolrReplicationHandler supports replicating indexes from a
+       "master" used for indexing and "salves" used for queries.
+
+       http://wiki.apache.org/solr/SolrReplication 
+
+       In the example below, remove the <lst name="master"> section if
+       this is just a slave and remove  the <lst name="slave"> section
+       if this is just a master.
+    -->
+  <!--
+     <requestHandler name="/replication" class="solr.ReplicationHandler" >
+       <lst name="master">
+         <str name="replicateAfter">commit</str>
+         <str name="replicateAfter">startup</str>
+         <str name="confFiles">schema.xml,stopwords.txt</str>
+       </lst>
+       <lst name="slave">
+         <str name="masterUrl">http://localhost:8983/solr/replication</str>
+         <str name="pollInterval">00:00:60</str>
+       </lst>
+     </requestHandler>
+    -->
+
+  <!-- Search Components
+
+       Search components are registered to SolrCore and used by 
+       instances of SearchHandler (which can access them by name)
+       
+       By default, the following components are avaliable:
+       
+       <searchComponent name="query"     class="solr.QueryComponent" />
+       <searchComponent name="facet"     class="solr.FacetComponent" />
+       <searchComponent name="mlt"       class="solr.MoreLikeThisComponent" />
+       <searchComponent name="highlight" class="solr.HighlightComponent" />
+       <searchComponent name="stats"     class="solr.StatsComponent" />
+       <searchComponent name="debug"     class="solr.DebugComponent" />
+   
+       Default configuration in a requestHandler would look like:
+
+       <arr name="components">
+         <str>query</str>
+         <str>facet</str>
+         <str>mlt</str>
+         <str>highlight</str>
+         <str>stats</str>
+         <str>debug</str>
+       </arr>
+
+       If you register a searchComponent to one of the standard names, 
+       that will be used instead of the default.
+
+       To insert components before or after the 'standard' components, use:
+    
+       <arr name="first-components">
+         <str>myFirstComponentName</str>
+       </arr>
+    
+       <arr name="last-components">
+         <str>myLastComponentName</str>
+       </arr>
+
+       NOTE: The component registered with the name "debug" will
+       always be executed after the "last-components" 
+       
+     -->
+
+   <!-- Spell Check
+
+        The spell check component can return a list of alternative spelling
+        suggestions.  
+
+        http://wiki.apache.org/solr/SpellCheckComponent
+     -->
+  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
+
+    <str name="queryAnalyzerFieldType">textSpell</str>
+
+    <!-- Multiple "Spell Checkers" can be declared and used by this
+         component
+      -->
+
+    <!-- a spellchecker built from a field of hte main index, and
+         written to disk
+      -->
+    <lst name="spellchecker">
+      <str name="name">default</str>
+      <str name="field">name</str>
+      <str name="spellcheckIndexDir">spellchecker</str>
+    </lst>
+
+    <!-- a spellchecker that uses a different distance measure -->
+    <!--
+       <lst name="spellchecker">
+         <str name="name">jarowinkler</str>
+         <str name="field">spell</str>
+         <str name="distanceMeasure">
+           org.apache.lucene.search.spell.JaroWinklerDistance
+         </str>
+         <str name="spellcheckIndexDir">spellcheckerJaro</str>
+       </lst>
+     -->
+
+    <!-- a spellchecker that use an alternate comparator 
+
+         comparatorClass be one of:
+          1. score (default)
+          2. freq (Frequency first, then score)
+          3. A fully qualified class name
+      -->
+    <!--
+       <lst name="spellchecker">
+         <str name="name">freq</str>
+         <str name="field">lowerfilt</str>
+         <str name="spellcheckIndexDir">spellcheckerFreq</str>
+         <str name="comparatorClass">freq</str>
+         <str name="buildOnCommit">true</str>
+      -->
+
+    <!-- A spellchecker that reads the list of words from a file -->
+    <!--
+       <lst name="spellchecker">
+         <str name="classname">solr.FileBasedSpellChecker</str>
+         <str name="name">file</str>
+         <str name="sourceLocation">spellings.txt</str>
+         <str name="characterEncoding">UTF-8</str>
+         <str name="spellcheckIndexDir">spellcheckerFile</str>
+       </lst>
+      -->
+  </searchComponent>
+
+  <!-- A request handler for demonstrating the spellcheck component.  
+
+       NOTE: This is purely as an example.  The whole purpose of the
+       SpellCheckComponent is to hook it into the request handler that
+       handles your normal user queries so that a separate request is
+       not needed to get suggestions.
+
+       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS
+       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!
+       
+       See http://wiki.apache.org/solr/SpellCheckComponent for details
+       on the request parameters.
+    -->
+  <requestHandler name="/spell" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <str name="spellcheck.onlyMorePopular">false</str>
+      <str name="spellcheck.extendedResults">false</str>
+      <str name="spellcheck.count">1</str>
+    </lst>
+    <arr name="last-components">
+      <str>spellcheck</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Term Vector Component
+
+       http://wiki.apache.org/solr/TermVectorComponent
+    -->
+  <searchComponent name="tvComponent" class="solr.TermVectorComponent"/>
+
+  <!-- A request handler for demonstrating the term vector component
+
+       This is purely as an example.
+
+       In reality you will likely want to add the component to your 
+       already specified request handlers. 
+    -->
+  <requestHandler name="tvrh" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <bool name="tv">true</bool>
+    </lst>
+    <arr name="last-components">
+      <str>tvComponent</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Clustering Component
+
+       http://wiki.apache.org/solr/ClusteringComponent
+
+       This relies on third party jars which are notincluded in the
+       release.  To use this component (and the "/clustering" handler)
+       Those jars will need to be downloaded, and you'll need to set
+       the solr.cluster.enabled system property when running solr...
+
+          java -Dsolr.clustering.enabled=true -jar start.jar
+    -->
+  <searchComponent name="clustering" 
+                   enable="${solr.clustering.enabled:false}"
+                   class="solr.clustering.ClusteringComponent" >
+    <!-- Declare an engine -->
+    <lst name="engine">
+      <!-- The name, only one can be named "default" -->
+      <str name="name">default</str>
+
+      <!-- Class name of Carrot2 clustering algorithm. 
+           
+           Currently available algorithms are:
+           
+           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm
+           * org.carrot2.clustering.stc.STCClusteringAlgorithm
+           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm
+           
+           See http://project.carrot2.org/algorithms.html for the
+           algorithm's characteristics.
+        -->
+      <str name="carrot.algorithm">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>
+
+      <!-- Overriding values for Carrot2 default algorithm attributes.
+
+           For a description of all available attributes, see:
+           http://download.carrot2.org/stable/manual/#chapter.components.
+           Use attribute key as name attribute of str elements
+           below. These can be further overridden for individual
+           requests by specifying attribute key as request parameter
+           name and attribute value as parameter value.
+        -->
+      <str name="LingoClusteringAlgorithm.desiredClusterCountBase">20</str>
+      
+      <!-- Location of Carrot2 lexical resources.
+
+           A directory from which to load Carrot2-specific stop words
+           and stop labels. Absolute or relative to Solr config directory.
+           If a specific resource (e.g. stopwords.en) is present in the
+           specified dir, it will completely override the corresponding
+           default one that ships with Carrot2.
+
+           For an overview of Carrot2 lexical resources, see:
+           http://download.carrot2.org/head/manual/#chapter.lexical-resources
+        -->
+      <str name="carrot.lexicalResourcesDir">clustering/carrot2</str>
+
+      <!-- The language to assume for the documents.
+           
+           For a list of allowed values, see:
+           http://download.carrot2.org/stable/manual/#section.attribute.lingo.MultilingualClustering.defaultLanguage
+       -->
+      <str name="MultilingualClustering.defaultLanguage">ENGLISH</str>
+    </lst>
+    <lst name="engine">
+      <str name="name">stc</str>
+      <str name="carrot.algorithm">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>
+    </lst>
+  </searchComponent>
+
+  <!-- A request handler for demonstrating the clustering component
+
+       This is purely as an example.
+
+       In reality you will likely want to add the component to your 
+       already specified request handlers. 
+    -->
+  <requestHandler name="/clustering"
+                  startup="lazy"
+                  enable="${solr.clustering.enabled:false}"
+                  class="solr.SearchHandler">
+    <lst name="defaults">
+      <bool name="clustering">true</bool>
+      <str name="clustering.engine">default</str>
+      <bool name="clustering.results">true</bool>
+      <!-- The title field -->
+      <str name="carrot.title">name</str>
+      <str name="carrot.url">id</str>
+      <!-- The field to cluster on -->
+       <str name="carrot.snippet">features</str>
+       <!-- produce summaries -->
+       <bool name="carrot.produceSummary">true</bool>
+       <!-- the maximum number of labels per cluster -->
+       <!--<int name="carrot.numDescriptions">5</int>-->
+       <!-- produce sub clusters -->
+       <bool name="carrot.outputSubClusters">false</bool>
+       
+       <str name="defType">edismax</str>
+       <str name="qf">
+          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+       <str name="q.alt">*:*</str>
+       <str name="rows">10</str>
+       <str name="fl">*,score</str>
+    </lst>     
+    <arr name="last-components">
+      <str>clustering</str>
+    </arr>
+  </requestHandler>
+  
+  <!-- Terms Component
+
+       http://wiki.apache.org/solr/TermsComponent
+
+       A component to return terms and document frequency of those
+       terms
+    -->
+  <searchComponent name="terms" class="solr.TermsComponent"/>
+
+  <!-- A request handler for demonstrating the terms component -->
+  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
+     <lst name="defaults">
+      <bool name="terms">true</bool>
+    </lst>     
+    <arr name="components">
+      <str>terms</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Highlighting Component
+
+       http://wiki.apache.org/solr/HighlightingParameters
+    -->
+  <searchComponent class="solr.HighlightComponent" name="highlight">
+    <highlighting>
+      <!-- Configure the standard fragmenter -->
+      <!-- This could most likely be commented out in the "default" case -->
+      <fragmenter name="gap" 
+                  default="true"
+                  class="solr.highlight.GapFragmenter">
+        <lst name="defaults">
+          <int name="hl.fragsize">100</int>
+        </lst>
+      </fragmenter>
+
+      <!-- A regular-expression-based fragmenter 
+           (for sentence extraction) 
+        -->
+      <fragmenter name="regex" 
+                  class="solr.highlight.RegexFragmenter">
+        <lst name="defaults">
+          <!-- slightly smaller fragsizes work better because of slop -->
+          <int name="hl.fragsize">70</int>
+          <!-- allow 50% slop on fragment sizes -->
+          <float name="hl.regex.slop">0.5</float>
+          <!-- a basic sentence pattern -->
+          <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
+        </lst>
+      </fragmenter>
+
+      <!-- Configure the standard formatter -->
+      <formatter name="html" 
+                 default="true"
+                 class="solr.highlight.HtmlFormatter">
+        <lst name="defaults">
+          <str name="hl.simple.pre"><![CDATA[<em>]]></str>
+          <str name="hl.simple.post"><![CDATA[</em>]]></str>
+        </lst>
+      </formatter>
+
+      <!-- Configure the standard encoder -->
+      <encoder name="html" 
+               class="solr.highlight.HtmlEncoder" />
+
+      <!-- Configure the standard fragListBuilder -->
+      <fragListBuilder name="simple" 
+                       default="true"
+                       class="solr.highlight.SimpleFragListBuilder"/>
+
+      <!-- Configure the single fragListBuilder -->
+      <fragListBuilder name="single" 
+                       class="solr.highlight.SingleFragListBuilder"/>
+
+      <!-- default tag FragmentsBuilder -->
+      <fragmentsBuilder name="default" 
+                        default="true"
+                        class="solr.highlight.ScoreOrderFragmentsBuilder">
+        <!-- 
+        <lst name="defaults">
+          <str name="hl.multiValuedSeparatorChar">/</str>
+        </lst>
+        -->
+      </fragmentsBuilder>
+
+      <!-- multi-colored tag FragmentsBuilder -->
+      <fragmentsBuilder name="colored" 
+                        class="solr.highlight.ScoreOrderFragmentsBuilder">
+        <lst name="defaults">
+          <str name="hl.tag.pre"><![CDATA[
+               <b style="background:yellow">,<b style="background:lawgreen">,
+               <b style="background:aquamarine">,<b style="background:magenta">,
+               <b style="background:palegreen">,<b style="background:coral">,
+               <b style="background:wheat">,<b style="background:khaki">,
+               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
+          <str name="hl.tag.post"><![CDATA[</b>]]></str>
+        </lst>
+      </fragmentsBuilder>
+    </highlighting>
+  </searchComponent>
+
+  <!-- Update Processors
+
+       Chains of Update Processor Factories for dealing with Update
+       Requests can be declared, and then used by name in Update
+       Request Processors
+
+       http://wiki.apache.org/solr/UpdateRequestProcessor
+
+    --> 
+  <!-- Deduplication
+
+       An example dedup update processor that creates the "id" field
+       on the fly based on the hash code of some other fields.  This
+       example has overwriteDupes set to false since we are using the
+       id field as the signatureField and Solr will maintain
+       uniqueness based on that anyway.  
+       
+    -->
+  <!--
+     <updateRequestProcessorChain name="dedupe">
+       <processor class="solr.processor.SignatureUpdateProcessorFactory">
+         <bool name="enabled">true</bool>
+         <str name="signatureField">id</str>
+         <bool name="overwriteDupes">false</bool>
+         <str name="fields">name,features,cat</str>
+         <str name="signatureClass">solr.processor.Lookup3Signature</str>
+       </processor>
+       <processor class="solr.LogUpdateProcessorFactory" />
+       <processor class="solr.RunUpdateProcessorFactory" />
+     </updateRequestProcessorChain>
+    -->
+
+  <!-- Response Writers
+
+       http://wiki.apache.org/solr/QueryResponseWriter
+
+       Request responses will be written using the writer specified by
+       the 'wt' request parameter matching the name of a registered
+       writer.
+
+       The "default" writer is the default and will be used if 'wt' is
+       not specified in the request.
+    -->
+  <!-- The following response writers are implicitly configured unless
+       overridden...
+    -->
+  <!--
+     <queryResponseWriter name="xml" 
+                          default="true"
+                          class="solr.XMLResponseWriter" />
+     <queryResponseWriter name="json" class="solr.JSONResponseWriter"/>
+     <queryResponseWriter name="python" class="solr.PythonResponseWriter"/>
+     <queryResponseWriter name="ruby" class="solr.RubyResponseWriter"/>
+     <queryResponseWriter name="php" class="solr.PHPResponseWriter"/>
+     <queryResponseWriter name="phps" class="solr.PHPSerializedResponseWriter"/>
+     <queryResponseWriter name="velocity" class="solr.VelocityResponseWriter"/>
+     <queryResponseWriter name="csv" class="solr.CSVResponseWriter"/>
+    -->
+  <!--
+     Custom response writers can be declared as needed...
+    -->
+  <!--
+     <queryResponseWriter name="custom" class="com.example.MyResponseWriter"/>
+    -->
+
+  <!-- XSLT response writer transforms the XML output by any xslt file found
+       in Solr's conf/xslt directory.  Changes to xslt files are checked for
+       every xsltCacheLifetimeSeconds.  
+    -->
+  <queryResponseWriter name="xslt" class="solr.XSLTResponseWriter">
+    <int name="xsltCacheLifetimeSeconds">5</int>
+  </queryResponseWriter>
+
+  <!-- Query Parsers
+
+       http://wiki.apache.org/solr/SolrQuerySyntax
+
+       Multiple QParserPlugins can be registered by name, and then
+       used in either the "defType" param for the QueryComponent (used
+       by SearchHandler) or in LocalParams
+    -->
+  <!-- example of registering a query parser -->
+  <!--
+     <queryParser name="myparser" class="com.mycompany.MyQParserPlugin"/>
+    -->
+
+  <!-- Function Parsers
+
+       http://wiki.apache.org/solr/FunctionQuery
+
+       Multiple ValueSourceParsers can be registered by name, and then
+       used as function names when using the "func" QParser.
+    -->
+  <!-- example of registering a custom function parser  -->
+  <!--
+     <valueSourceParser name="myfunc" 
+                        class="com.mycompany.MyValueSourceParser" />
+    -->
+
+  <!-- Legacy config for the admin interface -->
+  <admin>
+    <defaultQuery>*:*</defaultQuery>
+
+    <!-- configure a healthcheck file for servers behind a
+         loadbalancer 
+      -->
+    <!--
+       <healthcheck type="file">server-enabled</healthcheck>
+      -->
+  </admin>
+
+</config>
diff --git a/share/core-data/conf/schema.xml b/share/core-data/conf/schema.xml
new file mode 100644
index 0000000..13e9782
--- /dev/null
+++ b/share/core-data/conf/schema.xml
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<schema name="meresco-corename" version="1.5">
+
+  <types>
+    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
+    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100" omitNorms="false" multiValued="true" indexed="true" stored="false">
+      <analyzer>
+        <tokenizer class="solr.ClassicTokenizerFactory"/>
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+    </fieldType>
+    <fieldType name="untokenized_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="true" indexed="true" stored="false" />
+    <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
+ </types>
+
+
+ <fields>
+   <field name="__id__" type="string" stored="true" required="true" /> 
+   <field name="__all__" type="text_ws" /> 
+   <dynamicField name="sorted.*" type="sorted_string" />
+   <dynamicField name="untokenized.*" type="untokenized_string" />
+   <dynamicField name="meta.*" type="untokenized_string" />
+   <dynamicField name="*" type="text_ws" />
+ </fields>
+
+ <uniqueKey>__id__</uniqueKey>
+ <defaultSearchField>__all__</defaultSearchField>
+
+ <solrQueryParser defaultOperator="AND"/>
+</schema>
diff --git a/share/core-data/conf/solrconfig.xml b/share/core-data/conf/solrconfig.xml
new file mode 100644
index 0000000..3c5d73a
--- /dev/null
+++ b/share/core-data/conf/solrconfig.xml
@@ -0,0 +1,1498 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<!-- 
+     For more details about configurations options that may appear in
+     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
+-->
+<config>
+  <!-- In all configuration below, a prefix of "solr." for class names
+       is an alias that causes solr to search appropriate packages,
+       including org.apache.solr.(search|update|request|core|analysis)
+
+       You may also specify a fully qualified Java classname if you
+       have your own custom plugins.
+    -->
+
+  <!-- Set this to 'false' if you want solr to continue working after
+       it has encountered an severe configuration error.  In a
+       production environment, you may want solr to keep working even
+       if one handler is mis-configured.
+
+       You may also set this to false using by setting the system
+       property:
+
+         -Dsolr.abortOnConfigurationError=false
+    -->
+  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
+  
+  <!-- Controls what version of Lucene various components of Solr
+       adhere to.  Generally, you want to use the latest version to
+       get all bug fixes and improvements. It is highly recommended
+       that you fully re-index after changing this setting as it can
+       affect both how text is indexed and queried.
+    -->
+  <luceneMatchVersion>LUCENE_36</luceneMatchVersion>
+
+  <!-- lib directives can be used to instruct Solr to load an Jars
+       identified and use them to resolve any "plugins" specified in
+       your solrconfig.xml or schema.xml (ie: Analyzers, Request
+       Handlers, etc...).
+
+       All directories and paths are resolved relative to the
+       instanceDir.
+
+       If a "./lib" directory exists in your instanceDir, all files
+       found in it are included as if you had used the following
+       syntax...
+       
+              <lib dir="./lib" />
+    -->
+  <!-- A dir option by itself adds any files found in the directory to
+       the classpath, this is useful for including all jars in a
+       directory.
+    -->
+  <lib dir="../../contrib/extraction/lib" />
+  <!-- When a regex is specified in addition to a directory, only the
+       files in that directory which completely match the regex
+       (anchored on both ends) will be included.
+    -->
+  <lib dir="../../dist/" regex="apache-solr-cell-\d.*\.jar" />
+  <lib dir="../../dist/" regex="apache-solr-clustering-\d.*\.jar" />
+  <lib dir="../../dist/" regex="apache-solr-dataimporthandler-\d.*\.jar" />
+
+  <!-- If a dir option (with or without a regex) is used and nothing
+       is found that matches, it will be ignored
+    -->
+  <lib dir="../../contrib/clustering/lib/" />
+  <lib dir="/total/crap/dir/ignored" /> 
+  <!-- an exact path can be used to specify a specific file.  This
+       will cause a serious error to be logged if it can't be loaded.
+    -->
+  <!--
+  <lib path="../a-jar-that-does-not-exist.jar" /> 
+  -->
+  
+  <!-- Data Directory
+
+       Used to specify an alternate directory to hold all index data
+       other than the default ./data under the Solr home.  If
+       replication is in use, this should match the replication
+       configuration.
+  <dataDir>${solr.data.dir:}</dataDir>
+    -->
+
+
+  <!-- The DirectoryFactory to use for indexes.
+       
+       solr.StandardDirectoryFactory, the default, is filesystem
+       based.  solr.RAMDirectoryFactory is memory based, not
+       persistent, and doesn't work with replication.
+    -->
+  <directoryFactory name="DirectoryFactory" 
+                    class="${solr.directoryFactory:solr.StandardDirectoryFactory}"/>
+
+
+  <!-- Index Defaults
+
+       Values here affect all index writers and act as a default
+       unless overridden.
+
+       WARNING: See also the <mainIndex> section below for parameters
+       that overfor Solr's main Lucene index.
+    -->
+  <indexDefaults>
+
+    <useCompoundFile>true</useCompoundFile>
+
+    <mergeFactor>10</mergeFactor>
+    <!-- Sets the amount of RAM that may be used by Lucene indexing
+         for buffering added documents and deletions before they are
+         flushed to the Directory.  -->
+    <ramBufferSizeMB>32</ramBufferSizeMB>
+    <!-- If both ramBufferSizeMB and maxBufferedDocs is set, then
+         Lucene will flush based on whichever limit is hit first.  
+      -->
+    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->
+
+    <maxFieldLength>10000</maxFieldLength>
+    <writeLockTimeout>1000</writeLockTimeout>
+    <commitLockTimeout>10000</commitLockTimeout>
+
+    <!-- Expert: Merge Policy 
+
+         The Merge Policy in Lucene controls how merging is handled by
+         Lucene.  The default in 2.3 is the LogByteSizeMergePolicy,
+         previous versions used LogDocMergePolicy.
+         
+         LogByteSizeMergePolicy chooses segments to merge based on
+         their size.  The Lucene 2.2 default, LogDocMergePolicy chose
+         when to merge based on number of documents
+         
+         Other implementations of MergePolicy must have a no-argument
+         constructor
+      -->
+    <!--
+       <mergePolicy class="org.apache.lucene.index.LogByteSizeMergePolicy"/>
+       -->
+
+    <!-- Expert: Merge Scheduler
+
+         The Merge Scheduler in Lucene controls how merges are
+         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
+         can perform merges in the background using separate threads.
+         The SerialMergeScheduler (Lucene 2.2 default) does not.
+     -->
+    <!-- 
+       <mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler"/>
+       -->
+	  
+    <!-- LockFactory 
+
+         This option specifies which Lucene LockFactory implementation
+         to use.
+      
+         single = SingleInstanceLockFactory - suggested for a
+                  read-only index or when there is no possibility of
+                  another process trying to modify the index.
+         native = NativeFSLockFactory - uses OS native file locking.
+                  Do not use when multiple solr webapps in the same
+                  JVM are attempting to share a single index.
+         simple = SimpleFSLockFactory  - uses a plain file for locking
+
+         (For backwards compatibility with Solr 1.2, 'simple' is the
+         default if not specified.)
+
+         More details on the nuances of each LockFactory...
+         http://wiki.apache.org/lucene-java/AvailableLockFactories
+    -->
+    <lockType>native</lockType>
+
+    <!-- Expert: Controls how often Lucene loads terms into memory
+         Default is 128 and is likely good for most everyone.
+      -->
+    <!-- <termIndexInterval>256</termIndexInterval> -->
+  </indexDefaults>
+
+  <!-- Main Index
+
+       Values here override the values in the <indexDefaults> section
+       for the main on disk index.
+    -->
+  <mainIndex>
+
+    <useCompoundFile>true</useCompoundFile>
+    <ramBufferSizeMB>32</ramBufferSizeMB>
+    <mergeFactor>10</mergeFactor>
+
+    <!-- Unlock On Startup
+
+         If true, unlock any held write or commit locks on startup.
+         This defeats the locking mechanism that allows multiple
+         processes to safely access a lucene index, and should be used
+         with care.
+
+         This is not needed if lock type is 'none' or 'single'
+     -->
+    <unlockOnStartup>false</unlockOnStartup>
+    
+    <!-- If true, IndexReaders will be reopened (often more efficient)
+         instead of closed and then opened.
+      -->
+    <reopenReaders>true</reopenReaders>
+
+    <!-- Commit Deletion Policy
+
+         Custom deletion policies can specified here. The class must
+         implement org.apache.lucene.index.IndexDeletionPolicy.
+
+         http://lucene.apache.org/java/2_9_1/api/all/org/apache/lucene/index/IndexDeletionPolicy.html
+
+         The standard Solr IndexDeletionPolicy implementation supports
+         deleting index commit points on number of commits, age of
+         commit point and optimized status.
+         
+         The latest commit point should always be preserved regardless
+         of the criteria.
+    -->
+    <deletionPolicy class="solr.SolrDeletionPolicy">
+      <!-- The number of commit points to be kept -->
+      <str name="maxCommitsToKeep">1</str>
+      <!-- The number of optimized commit points to be kept -->
+      <str name="maxOptimizedCommitsToKeep">0</str>
+      <!--
+          Delete all commit points once they have reached the given age.
+          Supports DateMathParser syntax e.g.
+        -->
+      <!--
+         <str name="maxCommitAge">30MINUTES</str>
+         <str name="maxCommitAge">1DAY</str>
+      -->
+    </deletionPolicy>
+
+    <!-- Lucene Infostream
+       
+         To aid in advanced debugging, Lucene provides an "InfoStream"
+         of detailed information when indexing.
+
+         Setting The value to true will instruct the underlying Lucene
+         IndexWriter to write it's debugging info the specified file
+      -->
+     <infoStream file="INFOSTREAM.txt">false</infoStream> 
+
+  </mainIndex>
+
+  <!-- JMX
+       
+       This example enables JMX if and only if an existing MBeanServer
+       is found, use this if you want to configure JMX through JVM
+       parameters. Remove this to disable exposing Solr configuration
+       and statistics to JMX.
+
+       For more details see http://wiki.apache.org/solr/SolrJmx
+    -->
+  <jmx />
+  <!-- If you want to connect to a particular server, specify the
+       agentId 
+    -->
+  <!-- <jmx agentId="myAgent" /> -->
+  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->
+  <!-- <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr"/>
+    -->
+
+  <!-- The default high-performance update handler -->
+  <updateHandler class="solr.DirectUpdateHandler2">
+
+    <!-- AutoCommit
+
+         Perform a <commit/> automatically under certain conditions.
+         Instead of enabling autoCommit, consider using "commitWithin"
+         when adding documents. 
+
+         http://wiki.apache.org/solr/UpdateXmlMessages
+
+         maxDocs - Maximum number of documents to add since the last
+                   commit before automaticly triggering a new commit.
+
+         maxTime - Maximum amount of time that is allowed to pass
+                   since a document was added before automaticly
+                   triggering a new commit. 
+      -->
+    <!--
+       <autoCommit> 
+         <maxDocs>10000</maxDocs>
+         <maxTime>1000</maxTime> 
+       </autoCommit>
+      -->
+
+    <!-- Update Related Event Listeners
+         
+         Various IndexWriter realted events can trigger Listeners to
+         take actions.
+
+         postCommit - fired after every commit or optimize command
+         postOptimize - fired after every optimize command
+      -->
+    <!-- The RunExecutableListener executes an external command from a
+         hook such as postCommit or postOptimize.
+         
+         exe - the name of the executable to run
+         dir - dir to use as the current working directory. (default=".")
+         wait - the calling thread waits until the executable returns. 
+                (default="true")
+         args - the arguments to pass to the program.  (default is none)
+         env - environment variables to set.  (default is none)
+      -->
+    <!-- This example shows how RunExecutableListener could be used
+         with the script based replication...
+         http://wiki.apache.org/solr/CollectionDistribution
+      -->
+    <!--
+       <listener event="postCommit" class="solr.RunExecutableListener">
+         <str name="exe">solr/bin/snapshooter</str>
+         <str name="dir">.</str>
+         <bool name="wait">true</bool>
+         <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
+         <arr name="env"> <str>MYVAR=val1</str> </arr>
+       </listener>
+      -->
+  </updateHandler>
+  
+  <!-- IndexReaderFactory
+
+       Use the following format to specify a custom IndexReaderFactory,
+       which allows for alternate IndexReader implementations.
+
+       ** Experimental Feature **
+
+       Please note - Using a custom IndexReaderFactory may prevent
+       certain other features from working. The API to
+       IndexReaderFactory may change without warning or may even be
+       removed from future releases if the problems cannot be
+       resolved.
+
+
+       ** Features that may not work with custom IndexReaderFactory **
+
+       The ReplicationHandler assumes a disk-resident index. Using a
+       custom IndexReader implementation may cause incompatibility
+       with ReplicationHandler and may cause replication to not work
+       correctly. See SOLR-1366 for details.
+
+    -->
+  <!--
+  <indexReaderFactory name="IndexReaderFactory" class="package.class">
+    <str name="someArg">Some Value</str>
+  </indexReaderFactory >
+  -->
+  <!-- By explicitly declaring the Factory, the termIndexDivisor can
+       be specified.
+    -->
+  <!--
+     <indexReaderFactory name="IndexReaderFactory" 
+                         class="solr.StandardIndexReaderFactory">
+       <int name="setTermIndexDivisor">12</int>
+     </indexReaderFactory >
+    -->
+
+
+  <query>
+    <!-- Max Boolean Clauses
+
+         Maximum number of clauses in each BooleanQuery,  an exception
+         is thrown if exceeded.
+
+         ** WARNING **
+         
+         This option actually modifies a global Lucene property that
+         will affect all SolrCores.  If multiple solrconfig.xml files
+         disagree on this property, the value at any given moment will
+         be based on the last SolrCore to be initialized.
+         
+      -->
+    <maxBooleanClauses>1024</maxBooleanClauses>
+
+
+    <!-- Solr Internal Query Caches
+
+         There are two implementations of cache available for Solr,
+         LRUCache, based on a synchronized LinkedHashMap, and
+         FastLRUCache, based on a ConcurrentHashMap.  
+
+         FastLRUCache has faster gets and slower puts in single
+         threaded operation and thus is generally faster than LRUCache
+         when the hit ratio of the cache is high (> 75%), and may be
+         faster under other scenarios on multi-cpu systems.
+    -->
+
+    <!-- Filter Cache
+
+         Cache used by SolrIndexSearcher for filters (DocSets),
+         unordered sets of *all* documents that match a query.  When a
+         new searcher is opened, its caches may be prepopulated or
+         "autowarmed" using data from caches in the old searcher.
+         autowarmCount is the number of items to prepopulate.  For
+         LRUCache, the autowarmed items will be the most recently
+         accessed items.
+
+         Parameters:
+           class - the SolrCache implementation LRUCache or
+               (LRUCache or FastLRUCache)
+           size - the maximum number of entries in the cache
+           initialSize - the initial capacity (number of entries) of
+               the cache.  (see java.util.HashMap)
+           autowarmCount - the number of entries to prepopulate from
+               and old cache.  
+      -->
+    <filterCache class="solr.FastLRUCache"
+                 size="512"
+                 initialSize="512"
+                 autowarmCount="0"/>
+
+    <!-- Query Result Cache
+         
+         Caches results of searches - ordered lists of document ids
+         (DocList) based on a query, a sort, and the range of documents requested.  
+      -->
+    <queryResultCache class="solr.LRUCache"
+                     size="512"
+                     initialSize="512"
+                     autowarmCount="0"/>
+   
+    <!-- Document Cache
+
+         Caches Lucene Document objects (the stored fields for each
+         document).  Since Lucene internal document ids are transient,
+         this cache will not be autowarmed.  
+      -->
+    <documentCache class="solr.LRUCache"
+                   size="512"
+                   initialSize="512"
+                   autowarmCount="0"/>
+    
+    <!-- Field Value Cache
+         
+         Cache used to hold field values that are quickly accessible
+         by document id.  The fieldValueCache is created by default
+         even if not configured here.
+      -->
+    <!--
+       <fieldValueCache class="solr.FastLRUCache"
+                        size="512"
+                        autowarmCount="128"
+                        showItems="32" />
+      -->
+
+    <!-- Custom Cache
+
+         Example of a generic cache.  These caches may be accessed by
+         name through SolrIndexSearcher.getCache(),cacheLookup(), and
+         cacheInsert().  The purpose is to enable easy caching of
+         user/application level data.  The regenerator argument should
+         be specified as an implementation of solr.CacheRegenerator 
+         if autowarming is desired.  
+      -->
+    <!--
+       <cache name="myUserCache"
+              class="solr.LRUCache"
+              size="4096"
+              initialSize="1024"
+              autowarmCount="1024"
+              regenerator="com.mycompany.MyRegenerator"
+              />
+      -->
+
+
+    <!-- Lazy Field Loading
+
+         If true, stored fields that are not requested will be loaded
+         lazily.  This can result in a significant speed improvement
+         if the usual case is to not load all stored fields,
+         especially if the skipped fields are large compressed text
+         fields.
+    -->
+    <enableLazyFieldLoading>true</enableLazyFieldLoading>
+
+   <!-- Use Filter For Sorted Query
+
+        A possible optimization that attempts to use a filter to
+        satisfy a search.  If the requested sort does not include
+        score, then the filterCache will be checked for a filter
+        matching the query. If found, the filter will be used as the
+        source of document ids, and then the sort will be applied to
+        that.
+
+        For most situations, this will not be useful unless you
+        frequently get the same search repeatedly with differnet sort
+        options, and none of them ever use "score"
+     -->
+   <!--
+      <useFilterForSortedQuery>true</useFilterForSortedQuery>
+     -->
+
+   <!-- Result Window Size
+
+        An optimization for use with the queryResultCache.  When a search
+        is requested, a superset of the requested number of document ids
+        are collected.  For example, if a search for a particular query
+        requests matching documents 10 through 19, and queryWindowSize is 50,
+        then documents 0 through 49 will be collected and cached.  Any further
+        requests in that range can be satisfied via the cache.  
+     -->
+   <queryResultWindowSize>20</queryResultWindowSize>
+
+   <!-- Maximum number of documents to cache for any entry in the
+        queryResultCache. 
+     -->
+   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
+
+   <!-- Query Related Event Listeners
+
+        Various IndexSearcher related events can trigger Listeners to
+        take actions.
+
+        newSearcher - fired whenever a new searcher is being prepared
+        and there is a current searcher handling requests (aka
+        registered).  It can be used to prime certain caches to
+        prevent long request times for certain requests.
+
+        firstSearcher - fired whenever a new searcher is being
+        prepared but there is no current registered searcher to handle
+        requests or to gain autowarming data from.
+
+        
+     -->
+    <!-- QuerySenderListener takes an array of NamedList and executes a
+         local query request for each NamedList in sequence. 
+      -->
+    <listener event="newSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <!--
+           <lst><str name="q">solr</str><str name="sort">price asc</str></lst>
+           <lst><str name="q">rocks</str><str name="sort">weight asc</str></lst>
+          -->
+      </arr>
+    </listener>
+    <listener event="firstSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <lst>
+          <str name="q">static firstSearcher warming in solrconfig.xml</str>
+        </lst>
+      </arr>
+    </listener>
+
+    <!-- Use Cold Searcher
+
+         If a search request comes in and there is no current
+         registered searcher, then immediately register the still
+         warming searcher and use it.  If "false" then all requests
+         will block until the first searcher is done warming.
+      -->
+    <useColdSearcher>false</useColdSearcher>
+
+    <!-- Max Warming Searchers
+         
+         Maximum number of searchers that may be warming in the
+         background concurrently.  An error is returned if this limit
+         is exceeded.
+
+         Recommend values of 1-2 for read-only slaves, higher for
+         masters w/o cache warming.
+      -->
+    <maxWarmingSearchers>2</maxWarmingSearchers>
+
+  </query>
+
+
+  <!-- Request Dispatcher
+
+       This section contains instructions for how the SolrDispatchFilter
+       should behave when processing requests for this SolrCore.
+
+       handleSelect affects the behavior of requests such as /select?qt=XXX
+
+       handleSelect="true" will cause the SolrDispatchFilter to process
+       the request and will result in consistent error handling and
+       formating for all types of requests.
+
+       handleSelect="false" will cause the SolrDispatchFilter to
+       ignore "/select" requests and fallback to using the legacy
+       SolrServlet and it's Solr 1.1 style error formatting
+    -->
+  <requestDispatcher handleSelect="true" >
+    <!-- Request Parsing
+
+         These settings indicate how Solr Requests may be parsed, and
+         what restrictions may be placed on the ContentStreams from
+         those requests
+
+         enableRemoteStreaming - enables use of the stream.file
+         and stream.url paramaters for specifying remote streams.
+
+         multipartUploadLimitInKB - specifies the max size of
+         Multipart File Uploads that Solr will alow in a Request.
+         
+         *** WARNING ***
+         The settings below authorize Solr to fetch remote files, You
+         should make sure your system has some authentication before
+         using enableRemoteStreaming="true"
+
+      --> 
+    <requestParsers enableRemoteStreaming="true" 
+                    multipartUploadLimitInKB="2048000" />
+
+    <!-- HTTP Caching
+
+         Set HTTP caching related parameters (for proxy caches and clients).
+
+         The options below instruct Solr not to output any HTTP Caching
+         related headers
+      -->
+    <httpCaching never304="true" />
+    <!-- If you include a <cacheControl> directive, it will be used to
+         generate a Cache-Control header (as well as an Expires header
+         if the value contains "max-age=")
+         
+         By default, no Cache-Control header is generated.
+         
+         You can use the <cacheControl> option even if you have set
+         never304="true"
+      -->
+    <!--
+       <httpCaching never304="true" >
+         <cacheControl>max-age=30, public</cacheControl> 
+       </httpCaching>
+      -->
+    <!-- To enable Solr to responde with automaticly generated HTTP
+         Caching headers, and to response to Cache Validation requests
+         correctly, set the value of never304="false"
+         
+         This will cause Solr to generate Last-Modified and ETag
+         headers based on the properties of the Index.
+
+         The following options can also be specified to affect the
+         values of these headers...
+
+         lastModFrom - the default value is "openTime" which means the
+         Last-Modified value (and validation against If-Modified-Since
+         requests) will all be relative to when the current Searcher
+         was opened.  You can change it to lastModFrom="dirLastMod" if
+         you want the value to exactly corrispond to when the physical
+         index was last modified.
+
+         etagSeed="..." is an option you can change to force the ETag
+         header (and validation against If-None-Match requests) to be
+         differnet even if the index has not changed (ie: when making
+         significant changes to your config file)
+
+         (lastModifiedFrom and etagSeed are both ignored if you use
+         the never304="true" option)
+      -->
+    <!--
+       <httpCaching lastModifiedFrom="openTime"
+                    etagSeed="Solr">
+         <cacheControl>max-age=30, public</cacheControl> 
+       </httpCaching>
+      -->
+  </requestDispatcher>
+
+  <!-- Request Handlers 
+
+       http://wiki.apache.org/solr/SolrRequestHandler
+
+       incoming queries will be dispatched to the correct handler
+       based on the path or the qt (query type) param.
+
+       Names starting with a '/' are accessed with the a path equal to
+       the registered name.  Names without a leading '/' are accessed
+       with: http://host/app/[core/]select?qt=name
+
+       If a /select request is processed with out a qt param
+       specified, the requestHandler that declares default="true" will
+       be used.
+       
+       If a Request Handler is declared with startup="lazy", then it will
+       not be initialized until the first request that uses it.
+
+    -->
+  <!-- SearchHandler
+
+       http://wiki.apache.org/solr/SearchHandler
+
+       For processing Search Queries, the primary Request Handler
+       provided with Solr is "SearchHandler" It delegates to a sequent
+       of SearchComponents (see below) and supports distributed
+       queries across multiple shards
+    -->
+  <requestHandler name="search" class="solr.SearchHandler" default="true">
+    <!-- default values for query parameters can be specified, these
+         will be overridden by parameters in the request
+      -->
+     <lst name="defaults">
+       <str name="echoParams">explicit</str>
+       <int name="rows">10</int>
+     </lst>
+    <!-- In addition to defaults, "appends" params can be specified
+         to identify values which should be appended to the list of
+         multi-val params from the query (or the existing "defaults").
+      -->
+    <!-- In this example, the param "fq=instock:true" would be appended to
+         any query time fq params the user may specify, as a mechanism for
+         partitioning the index, independent of any user selected filtering
+         that may also be desired (perhaps as a result of faceted searching).
+
+         NOTE: there is *absolutely* nothing a client can do to prevent these
+         "appends" values from being used, so don't use this mechanism
+         unless you are sure you always want it.
+      -->
+    <!--
+       <lst name="appends">
+         <str name="fq">inStock:true</str>
+       </lst>
+      -->
+    <!-- "invariants" are a way of letting the Solr maintainer lock down
+         the options available to Solr clients.  Any params values
+         specified here are used regardless of what values may be specified
+         in either the query, the "defaults", or the "appends" params.
+
+         In this example, the facet.field and facet.query params would
+         be fixed, limiting the facets clients can use.  Faceting is
+         not turned on by default - but if the client does specify
+         facet=true in the request, these are the only facets they
+         will be able to see counts for; regardless of what other
+         facet.field or facet.query params they may specify.
+
+         NOTE: there is *absolutely* nothing a client can do to prevent these
+         "invariants" values from being used, so don't use this mechanism
+         unless you are sure you always want it.
+      -->
+    <!--
+       <lst name="invariants">
+         <str name="facet.field">cat</str>
+         <str name="facet.field">manu_exact</str>
+         <str name="facet.query">price:[* TO 500]</str>
+         <str name="facet.query">price:[500 TO *]</str>
+       </lst>
+      -->
+    <!-- If the default list of SearchComponents is not desired, that
+         list can either be overridden completely, or components can be
+         prepended or appended to the default list.  (see below)
+      -->
+    <!--
+       <arr name="components">
+         <str>nameOfCustomComponent1</str>
+         <str>nameOfCustomComponent2</str>
+       </arr>
+      -->
+    </requestHandler>
+
+  <!-- A Robust Example
+
+       This example SearchHandler declaration shows off usage of the
+       SearchHandler with many defaults declared
+
+       Note that multiple instances of hte same Request Handler
+       (SearchHandler) can be registered multiple times with different
+       names (and different init parameters)
+    -->
+  <requestHandler name="/browse" class="solr.SearchHandler">
+     <lst name="defaults">
+       <str name="echoParams">explicit</str>
+
+       <!-- VelocityResponseWriter settings -->
+       <str name="wt">velocity</str>
+
+       <str name="v.template">browse</str>
+       <str name="v.layout">layout</str>
+       <str name="title">Solritas</str>
+
+       <str name="defType">edismax</str>
+       <str name="q.alt">*:*</str>
+       <str name="rows">10</str>
+       <str name="fl">*,score</str>
+       <str name="mlt.qf">
+         text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+       <str name="mlt.fl">text,features,name,sku,id,manu,cat</str>
+       <int name="mlt.count">3</int>
+
+       <str name="qf">
+          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+
+       <str name="facet">on</str>
+       <str name="facet.field">cat</str>
+       <str name="facet.field">manu_exact</str>
+       <str name="facet.query">ipod</str>
+       <str name="facet.query">GB</str>
+       <str name="facet.mincount">1</str>
+       <str name="facet.pivot">cat,inStock</str>
+       <str name="facet.range">price</str>
+       <int name="f.price.facet.range.start">0</int>
+       <int name="f.price.facet.range.end">600</int>
+       <int name="f.price.facet.range.gap">50</int>
+       <str name="f.price.facet.range.other">after</str>
+       <str name="facet.range">manufacturedate_dt</str>
+       <str name="f.manufacturedate_dt.facet.range.start">NOW/YEAR-10YEARS</str>
+       <str name="f.manufacturedate_dt.facet.range.end">NOW</str>
+       <str name="f.manufacturedate_dt.facet.range.gap">+1YEAR</str>
+       <str name="f.manufacturedate_dt.facet.range.other">before</str>
+       <str name="f.manufacturedate_dt.facet.range.other">after</str>
+
+
+       <!-- Highlighting defaults -->
+       <str name="hl">on</str>
+       <str name="hl.fl">text features name</str>
+       <str name="f.name.hl.fragsize">0</str>
+       <str name="f.name.hl.alternateField">name</str>
+     </lst>
+     <arr name="last-components">
+       <str>spellcheck</str>
+     </arr>
+     <!--
+     <str name="url-scheme">httpx</str>
+     -->
+  </requestHandler>
+
+  <!-- XML Update Request Handler.  
+       
+       http://wiki.apache.org/solr/UpdateXmlMessages
+
+       The canonical Request Handler for Modifying the Index through
+       commands specified using XML.
+
+       Note: Since solr1.1 requestHandlers requires a valid content
+       type header if posted in the body. For example, curl now
+       requires: -H 'Content-type:text/xml; charset=utf-8'
+    -->
+  <requestHandler name="/update" 
+                  class="solr.XmlUpdateRequestHandler">
+    <!-- See below for information on defining 
+         updateRequestProcessorChains that can be used by name 
+         on each Update Request
+      -->
+    <!--
+       <lst name="defaults">
+         <str name="update.chain">dedupe</str>
+       </lst>
+       -->
+    </requestHandler>
+  <!-- Binary Update Request Handler
+       http://wiki.apache.org/solr/javabin
+    -->
+  <requestHandler name="/update/javabin" 
+                  class="solr.BinaryUpdateRequestHandler" />
+
+  <!-- CSV Update Request Handler
+       http://wiki.apache.org/solr/UpdateCSV
+    -->
+  <requestHandler name="/update/csv" 
+                  class="solr.CSVRequestHandler" 
+                  startup="lazy" />
+
+  <!-- JSON Update Request Handler
+       http://wiki.apache.org/solr/UpdateJSON
+    -->
+  <requestHandler name="/update/json" 
+                  class="solr.JsonUpdateRequestHandler" 
+                  startup="lazy" />
+
+  <!-- Solr Cell Update Request Handler
+
+       http://wiki.apache.org/solr/ExtractingRequestHandler 
+
+    -->
+  <requestHandler name="/update/extract" 
+                  startup="lazy"
+                  class="solr.extraction.ExtractingRequestHandler" >
+    <lst name="defaults">
+      <!-- All the main content goes into "text"... if you need to return
+           the extracted text or do highlighting, use a stored field. -->
+      <str name="fmap.content">text</str>
+      <str name="lowernames">true</str>
+      <str name="uprefix">ignored_</str>
+
+      <!-- capture link hrefs but ignore div attributes -->
+      <str name="captureAttr">true</str>
+      <str name="fmap.a">links</str>
+      <str name="fmap.div">ignored_</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Field Analysis Request Handler
+
+       RequestHandler that provides much the same functionality as
+       analysis.jsp. Provides the ability to specify multiple field
+       types and field names in the same request and outputs
+       index-time and query-time analysis for each of them.
+
+       Request parameters are:
+       analysis.fieldname - field name whose analyzers are to be used
+
+       analysis.fieldtype - field type whose analyzers are to be used
+       analysis.fieldvalue - text for index-time analysis
+       q (or analysis.q) - text for query time analysis
+       analysis.showmatch (true|false) - When set to true and when
+           query analysis is performed, the produced tokens of the
+           field value analysis will be marked as "matched" for every
+           token that is produces by the query analysis
+   -->
+  <requestHandler name="/analysis/field" 
+                  startup="lazy"
+                  class="solr.FieldAnalysisRequestHandler" />
+
+
+  <!-- Document Analysis Handler
+
+       http://wiki.apache.org/solr/AnalysisRequestHandler
+
+       An analysis handler that provides a breakdown of the analysis
+       process of provided docuemnts. This handler expects a (single)
+       content stream with the following format:
+
+       <docs>
+         <doc>
+           <field name="id">1</field>
+           <field name="name">The Name</field>
+           <field name="text">The Text Value</field>
+         </doc>
+         <doc>...</doc>
+         <doc>...</doc>
+         ...
+       </docs>
+
+    Note: Each document must contain a field which serves as the
+    unique key. This key is used in the returned response to assoicate
+    ananalysis breakdown to the analyzed document.
+
+    Like the FieldAnalysisRequestHandler, this handler also supports
+    query analysis by sending either an "analysis.query" or "q"
+    request paraemter that holds the query text to be analyized. It
+    also supports the "analysis.showmatch" parameter which when set to
+    true, all field tokens that match the query tokens will be marked
+    as a "match". 
+  -->
+  <requestHandler name="/analysis/document" 
+                  class="solr.DocumentAnalysisRequestHandler" 
+                  startup="lazy" />
+
+  <!-- Admin Handlers
+
+       Admin Handlers - This will register all the standard admin
+       RequestHandlers.  
+    -->
+  <requestHandler name="/admin/" 
+                  class="solr.admin.AdminHandlers" />
+  <!-- This single handler is equivilent to the following... -->
+  <!--
+     <requestHandler name="/admin/luke"       class="solr.admin.LukeRequestHandler" />
+     <requestHandler name="/admin/system"     class="solr.admin.SystemInfoHandler" />
+     <requestHandler name="/admin/plugins"    class="solr.admin.PluginInfoHandler" />
+     <requestHandler name="/admin/threads"    class="solr.admin.ThreadDumpHandler" />
+     <requestHandler name="/admin/properties" class="solr.admin.PropertiesRequestHandler" />
+     <requestHandler name="/admin/file"       class="solr.admin.ShowFileRequestHandler" >
+    -->
+  <!-- If you wish to hide files under ${solr.home}/conf, explicitly
+       register the ShowFileRequestHandler using: 
+    -->
+  <!--
+     <requestHandler name="/admin/file" 
+                     class="solr.admin.ShowFileRequestHandler" >
+       <lst name="invariants">
+         <str name="hidden">synonyms.txt</str> 
+         <str name="hidden">anotherfile.txt</str> 
+       </lst>
+     </requestHandler>
+    -->
+
+  <!-- ping/healthcheck -->
+  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
+    <lst name="defaults">
+      <str name="qt">search</str>
+      <str name="q">solrpingquery</str>
+      <str name="echoParams">all</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Echo the request contents back to the client -->
+  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
+    <lst name="defaults">
+     <str name="echoParams">explicit</str> 
+     <str name="echoHandler">true</str>
+    </lst>
+  </requestHandler>
+  
+  <!-- Solr Replication
+
+       The SolrReplicationHandler supports replicating indexes from a
+       "master" used for indexing and "salves" used for queries.
+
+       http://wiki.apache.org/solr/SolrReplication 
+
+       In the example below, remove the <lst name="master"> section if
+       this is just a slave and remove  the <lst name="slave"> section
+       if this is just a master.
+    -->
+  <!--
+     <requestHandler name="/replication" class="solr.ReplicationHandler" >
+       <lst name="master">
+         <str name="replicateAfter">commit</str>
+         <str name="replicateAfter">startup</str>
+         <str name="confFiles">schema.xml,stopwords.txt</str>
+       </lst>
+       <lst name="slave">
+         <str name="masterUrl">http://localhost:8983/solr/replication</str>
+         <str name="pollInterval">00:00:60</str>
+       </lst>
+     </requestHandler>
+    -->
+
+  <!-- Search Components
+
+       Search components are registered to SolrCore and used by 
+       instances of SearchHandler (which can access them by name)
+       
+       By default, the following components are avaliable:
+       
+       <searchComponent name="query"     class="solr.QueryComponent" />
+       <searchComponent name="facet"     class="solr.FacetComponent" />
+       <searchComponent name="mlt"       class="solr.MoreLikeThisComponent" />
+       <searchComponent name="highlight" class="solr.HighlightComponent" />
+       <searchComponent name="stats"     class="solr.StatsComponent" />
+       <searchComponent name="debug"     class="solr.DebugComponent" />
+   
+       Default configuration in a requestHandler would look like:
+
+       <arr name="components">
+         <str>query</str>
+         <str>facet</str>
+         <str>mlt</str>
+         <str>highlight</str>
+         <str>stats</str>
+         <str>debug</str>
+       </arr>
+
+       If you register a searchComponent to one of the standard names, 
+       that will be used instead of the default.
+
+       To insert components before or after the 'standard' components, use:
+    
+       <arr name="first-components">
+         <str>myFirstComponentName</str>
+       </arr>
+    
+       <arr name="last-components">
+         <str>myLastComponentName</str>
+       </arr>
+
+       NOTE: The component registered with the name "debug" will
+       always be executed after the "last-components" 
+       
+     -->
+
+   <!-- Spell Check
+
+        The spell check component can return a list of alternative spelling
+        suggestions.  
+
+        http://wiki.apache.org/solr/SpellCheckComponent
+     -->
+  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
+
+    <str name="queryAnalyzerFieldType">textSpell</str>
+
+    <!-- Multiple "Spell Checkers" can be declared and used by this
+         component
+      -->
+
+    <!-- a spellchecker built from a field of hte main index, and
+         written to disk
+      -->
+    <lst name="spellchecker">
+      <str name="name">default</str>
+      <str name="field">name</str>
+      <str name="spellcheckIndexDir">spellchecker</str>
+    </lst>
+
+    <!-- a spellchecker that uses a different distance measure -->
+    <!--
+       <lst name="spellchecker">
+         <str name="name">jarowinkler</str>
+         <str name="field">spell</str>
+         <str name="distanceMeasure">
+           org.apache.lucene.search.spell.JaroWinklerDistance
+         </str>
+         <str name="spellcheckIndexDir">spellcheckerJaro</str>
+       </lst>
+     -->
+
+    <!-- a spellchecker that use an alternate comparator 
+
+         comparatorClass be one of:
+          1. score (default)
+          2. freq (Frequency first, then score)
+          3. A fully qualified class name
+      -->
+    <!--
+       <lst name="spellchecker">
+         <str name="name">freq</str>
+         <str name="field">lowerfilt</str>
+         <str name="spellcheckIndexDir">spellcheckerFreq</str>
+         <str name="comparatorClass">freq</str>
+         <str name="buildOnCommit">true</str>
+      -->
+
+    <!-- A spellchecker that reads the list of words from a file -->
+    <!--
+       <lst name="spellchecker">
+         <str name="classname">solr.FileBasedSpellChecker</str>
+         <str name="name">file</str>
+         <str name="sourceLocation">spellings.txt</str>
+         <str name="characterEncoding">UTF-8</str>
+         <str name="spellcheckIndexDir">spellcheckerFile</str>
+       </lst>
+      -->
+  </searchComponent>
+
+  <!-- A request handler for demonstrating the spellcheck component.  
+
+       NOTE: This is purely as an example.  The whole purpose of the
+       SpellCheckComponent is to hook it into the request handler that
+       handles your normal user queries so that a separate request is
+       not needed to get suggestions.
+
+       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS
+       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!
+       
+       See http://wiki.apache.org/solr/SpellCheckComponent for details
+       on the request parameters.
+    -->
+  <requestHandler name="/spell" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <str name="spellcheck.onlyMorePopular">false</str>
+      <str name="spellcheck.extendedResults">false</str>
+      <str name="spellcheck.count">1</str>
+    </lst>
+    <arr name="last-components">
+      <str>spellcheck</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Term Vector Component
+
+       http://wiki.apache.org/solr/TermVectorComponent
+    -->
+  <searchComponent name="tvComponent" class="solr.TermVectorComponent"/>
+
+  <!-- A request handler for demonstrating the term vector component
+
+       This is purely as an example.
+
+       In reality you will likely want to add the component to your 
+       already specified request handlers. 
+    -->
+  <requestHandler name="tvrh" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <bool name="tv">true</bool>
+    </lst>
+    <arr name="last-components">
+      <str>tvComponent</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Clustering Component
+
+       http://wiki.apache.org/solr/ClusteringComponent
+
+       This relies on third party jars which are notincluded in the
+       release.  To use this component (and the "/clustering" handler)
+       Those jars will need to be downloaded, and you'll need to set
+       the solr.cluster.enabled system property when running solr...
+
+          java -Dsolr.clustering.enabled=true -jar start.jar
+    -->
+  <searchComponent name="clustering" 
+                   enable="${solr.clustering.enabled:false}"
+                   class="solr.clustering.ClusteringComponent" >
+    <!-- Declare an engine -->
+    <lst name="engine">
+      <!-- The name, only one can be named "default" -->
+      <str name="name">default</str>
+
+      <!-- Class name of Carrot2 clustering algorithm. 
+           
+           Currently available algorithms are:
+           
+           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm
+           * org.carrot2.clustering.stc.STCClusteringAlgorithm
+           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm
+           
+           See http://project.carrot2.org/algorithms.html for the
+           algorithm's characteristics.
+        -->
+      <str name="carrot.algorithm">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>
+
+      <!-- Overriding values for Carrot2 default algorithm attributes.
+
+           For a description of all available attributes, see:
+           http://download.carrot2.org/stable/manual/#chapter.components.
+           Use attribute key as name attribute of str elements
+           below. These can be further overridden for individual
+           requests by specifying attribute key as request parameter
+           name and attribute value as parameter value.
+        -->
+      <str name="LingoClusteringAlgorithm.desiredClusterCountBase">20</str>
+      
+      <!-- Location of Carrot2 lexical resources.
+
+           A directory from which to load Carrot2-specific stop words
+           and stop labels. Absolute or relative to Solr config directory.
+           If a specific resource (e.g. stopwords.en) is present in the
+           specified dir, it will completely override the corresponding
+           default one that ships with Carrot2.
+
+           For an overview of Carrot2 lexical resources, see:
+           http://download.carrot2.org/head/manual/#chapter.lexical-resources
+        -->
+      <str name="carrot.lexicalResourcesDir">clustering/carrot2</str>
+
+      <!-- The language to assume for the documents.
+           
+           For a list of allowed values, see:
+           http://download.carrot2.org/stable/manual/#section.attribute.lingo.MultilingualClustering.defaultLanguage
+       -->
+      <str name="MultilingualClustering.defaultLanguage">ENGLISH</str>
+    </lst>
+    <lst name="engine">
+      <str name="name">stc</str>
+      <str name="carrot.algorithm">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>
+    </lst>
+  </searchComponent>
+
+  <!-- A request handler for demonstrating the clustering component
+
+       This is purely as an example.
+
+       In reality you will likely want to add the component to your 
+       already specified request handlers. 
+    -->
+  <requestHandler name="/clustering"
+                  startup="lazy"
+                  enable="${solr.clustering.enabled:false}"
+                  class="solr.SearchHandler">
+    <lst name="defaults">
+      <bool name="clustering">true</bool>
+      <str name="clustering.engine">default</str>
+      <bool name="clustering.results">true</bool>
+      <!-- The title field -->
+      <str name="carrot.title">name</str>
+      <str name="carrot.url">id</str>
+      <!-- The field to cluster on -->
+       <str name="carrot.snippet">features</str>
+       <!-- produce summaries -->
+       <bool name="carrot.produceSummary">true</bool>
+       <!-- the maximum number of labels per cluster -->
+       <!--<int name="carrot.numDescriptions">5</int>-->
+       <!-- produce sub clusters -->
+       <bool name="carrot.outputSubClusters">false</bool>
+       
+       <str name="defType">edismax</str>
+       <str name="qf">
+          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+       <str name="q.alt">*:*</str>
+       <str name="rows">10</str>
+       <str name="fl">*,score</str>
+    </lst>     
+    <arr name="last-components">
+      <str>clustering</str>
+    </arr>
+  </requestHandler>
+  
+  <!-- Terms Component
+
+       http://wiki.apache.org/solr/TermsComponent
+
+       A component to return terms and document frequency of those
+       terms
+    -->
+  <searchComponent name="terms" class="solr.TermsComponent"/>
+
+  <!-- A request handler for demonstrating the terms component -->
+  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
+     <lst name="defaults">
+      <bool name="terms">true</bool>
+    </lst>     
+    <arr name="components">
+      <str>terms</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Highlighting Component
+
+       http://wiki.apache.org/solr/HighlightingParameters
+    -->
+  <searchComponent class="solr.HighlightComponent" name="highlight">
+    <highlighting>
+      <!-- Configure the standard fragmenter -->
+      <!-- This could most likely be commented out in the "default" case -->
+      <fragmenter name="gap" 
+                  default="true"
+                  class="solr.highlight.GapFragmenter">
+        <lst name="defaults">
+          <int name="hl.fragsize">100</int>
+        </lst>
+      </fragmenter>
+
+      <!-- A regular-expression-based fragmenter 
+           (for sentence extraction) 
+        -->
+      <fragmenter name="regex" 
+                  class="solr.highlight.RegexFragmenter">
+        <lst name="defaults">
+          <!-- slightly smaller fragsizes work better because of slop -->
+          <int name="hl.fragsize">70</int>
+          <!-- allow 50% slop on fragment sizes -->
+          <float name="hl.regex.slop">0.5</float>
+          <!-- a basic sentence pattern -->
+          <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
+        </lst>
+      </fragmenter>
+
+      <!-- Configure the standard formatter -->
+      <formatter name="html" 
+                 default="true"
+                 class="solr.highlight.HtmlFormatter">
+        <lst name="defaults">
+          <str name="hl.simple.pre"><![CDATA[<em>]]></str>
+          <str name="hl.simple.post"><![CDATA[</em>]]></str>
+        </lst>
+      </formatter>
+
+      <!-- Configure the standard encoder -->
+      <encoder name="html" 
+               class="solr.highlight.HtmlEncoder" />
+
+      <!-- Configure the standard fragListBuilder -->
+      <fragListBuilder name="simple" 
+                       default="true"
+                       class="solr.highlight.SimpleFragListBuilder"/>
+
+      <!-- Configure the single fragListBuilder -->
+      <fragListBuilder name="single" 
+                       class="solr.highlight.SingleFragListBuilder"/>
+
+      <!-- default tag FragmentsBuilder -->
+      <fragmentsBuilder name="default" 
+                        default="true"
+                        class="solr.highlight.ScoreOrderFragmentsBuilder">
+        <!-- 
+        <lst name="defaults">
+          <str name="hl.multiValuedSeparatorChar">/</str>
+        </lst>
+        -->
+      </fragmentsBuilder>
+
+      <!-- multi-colored tag FragmentsBuilder -->
+      <fragmentsBuilder name="colored" 
+                        class="solr.highlight.ScoreOrderFragmentsBuilder">
+        <lst name="defaults">
+          <str name="hl.tag.pre"><![CDATA[
+               <b style="background:yellow">,<b style="background:lawgreen">,
+               <b style="background:aquamarine">,<b style="background:magenta">,
+               <b style="background:palegreen">,<b style="background:coral">,
+               <b style="background:wheat">,<b style="background:khaki">,
+               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
+          <str name="hl.tag.post"><![CDATA[</b>]]></str>
+        </lst>
+      </fragmentsBuilder>
+    </highlighting>
+  </searchComponent>
+
+  <!-- Update Processors
+
+       Chains of Update Processor Factories for dealing with Update
+       Requests can be declared, and then used by name in Update
+       Request Processors
+
+       http://wiki.apache.org/solr/UpdateRequestProcessor
+
+    --> 
+  <!-- Deduplication
+
+       An example dedup update processor that creates the "id" field
+       on the fly based on the hash code of some other fields.  This
+       example has overwriteDupes set to false since we are using the
+       id field as the signatureField and Solr will maintain
+       uniqueness based on that anyway.  
+       
+    -->
+  <!--
+     <updateRequestProcessorChain name="dedupe">
+       <processor class="solr.processor.SignatureUpdateProcessorFactory">
+         <bool name="enabled">true</bool>
+         <str name="signatureField">id</str>
+         <bool name="overwriteDupes">false</bool>
+         <str name="fields">name,features,cat</str>
+         <str name="signatureClass">solr.processor.Lookup3Signature</str>
+       </processor>
+       <processor class="solr.LogUpdateProcessorFactory" />
+       <processor class="solr.RunUpdateProcessorFactory" />
+     </updateRequestProcessorChain>
+    -->
+
+  <!-- Response Writers
+
+       http://wiki.apache.org/solr/QueryResponseWriter
+
+       Request responses will be written using the writer specified by
+       the 'wt' request parameter matching the name of a registered
+       writer.
+
+       The "default" writer is the default and will be used if 'wt' is
+       not specified in the request.
+    -->
+  <!-- The following response writers are implicitly configured unless
+       overridden...
+    -->
+  <!--
+     <queryResponseWriter name="xml" 
+                          default="true"
+                          class="solr.XMLResponseWriter" />
+     <queryResponseWriter name="json" class="solr.JSONResponseWriter"/>
+     <queryResponseWriter name="python" class="solr.PythonResponseWriter"/>
+     <queryResponseWriter name="ruby" class="solr.RubyResponseWriter"/>
+     <queryResponseWriter name="php" class="solr.PHPResponseWriter"/>
+     <queryResponseWriter name="phps" class="solr.PHPSerializedResponseWriter"/>
+     <queryResponseWriter name="velocity" class="solr.VelocityResponseWriter"/>
+     <queryResponseWriter name="csv" class="solr.CSVResponseWriter"/>
+    -->
+  <!--
+     Custom response writers can be declared as needed...
+    -->
+  <!--
+     <queryResponseWriter name="custom" class="com.example.MyResponseWriter"/>
+    -->
+
+  <!-- XSLT response writer transforms the XML output by any xslt file found
+       in Solr's conf/xslt directory.  Changes to xslt files are checked for
+       every xsltCacheLifetimeSeconds.  
+    -->
+  <queryResponseWriter name="xslt" class="solr.XSLTResponseWriter">
+    <int name="xsltCacheLifetimeSeconds">5</int>
+  </queryResponseWriter>
+
+  <!-- Query Parsers
+
+       http://wiki.apache.org/solr/SolrQuerySyntax
+
+       Multiple QParserPlugins can be registered by name, and then
+       used in either the "defType" param for the QueryComponent (used
+       by SearchHandler) or in LocalParams
+    -->
+  <!-- example of registering a query parser -->
+  <!--
+     <queryParser name="myparser" class="com.mycompany.MyQParserPlugin"/>
+    -->
+
+  <!-- Function Parsers
+
+       http://wiki.apache.org/solr/FunctionQuery
+
+       Multiple ValueSourceParsers can be registered by name, and then
+       used as function names when using the "func" QParser.
+    -->
+  <!-- example of registering a custom function parser  -->
+  <!--
+     <valueSourceParser name="myfunc" 
+                        class="com.mycompany.MyValueSourceParser" />
+    -->
+
+  <!-- Legacy config for the admin interface -->
+  <admin>
+    <defaultQuery>*:*</defaultQuery>
+
+    <!-- configure a healthcheck file for servers behind a
+         loadbalancer 
+      -->
+    <!--
+       <healthcheck type="file">server-enabled</healthcheck>
+      -->
+  </admin>
+
+</config>
diff --git a/share/solr-data/.svn/entries b/share/solr-data/.svn/entries
new file mode 100644
index 0000000..2bafc6b
--- /dev/null
+++ b/share/solr-data/.svn/entries
@@ -0,0 +1,170 @@
+10
+
+dir
+20568
+svn+ssh://svn@svn.seecr.nl/svn/cq2-packages/thirdparty/solr-run/3.6.0/1.0/usr-share/solr-data
+svn+ssh://svn@svn.seecr.nl/svn
+
+
+
+2012-06-04T11:55:55.587796Z
+19648
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+7f82bda0-831b-0410-895c-c142f06d1e64
+
+start.config
+file
+
+
+
+
+2012-08-21T22:07:00.000000Z
+37d16bf99b6e5afa3db0bce1c198cb88
+2012-06-04T11:55:55.587796Z
+19648
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+2095
+
+webdefault.xml
+file
+
+
+
+
+2012-08-21T22:07:00.000000Z
+58f7f6a85129aba970a4db7b9d124c7c
+2012-06-04T11:55:55.587796Z
+19648
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+24404
+
+contexts
+dir
+
+cores
+dir
+
+jetty.xml
+file
+
+
+
+
+2012-08-21T22:07:00.000000Z
+c231cbb7864331577258c7c625c52ea1
+2012-06-04T11:55:55.587796Z
+19648
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+10632
+
+solr.xml
+file
+
+
+
+
+2012-08-21T22:07:00.000000Z
+c560854ba4c7cb42197ed3c962b3e0bf
+2012-06-04T11:55:55.587796Z
+19648
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+87
+
diff --git a/share/solr-data/.svn/text-base/jetty.xml.svn-base b/share/solr-data/.svn/text-base/jetty.xml.svn-base
new file mode 100644
index 0000000..ccd347f
--- /dev/null
+++ b/share/solr-data/.svn/text-base/jetty.xml.svn-base
@@ -0,0 +1,227 @@
+<?xml version="1.0"?>
+<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">
+
+<!-- =============================================================== -->
+<!-- Configure the Jetty Server                                      -->
+<!--                                                                 -->
+<!-- Documentation of this file format can be found at:              -->
+<!-- http://docs.codehaus.org/display/JETTY/jetty.xml                -->
+<!--                                                                 -->
+<!-- =============================================================== -->
+
+
+<Configure id="Server" class="org.mortbay.jetty.Server">
+
+    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
+    <Call class="java.lang.System" name="setProperty">
+      <Arg>org.mortbay.jetty.Request.maxFormContentSize</Arg>
+      <Arg>1000000</Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Server Thread Pool                                          -->
+    <!-- =========================================================== -->
+    <Set name="ThreadPool">
+
+      <New class="org.mortbay.thread.QueuedThreadPool">
+        <Set name="minThreads">10</Set>
+        <Set name="maxThreads">10000</Set>
+        <Set name="lowThreads">20</Set>
+      </New>
+
+      <!-- Optional Java 5 bounded threadpool with job queue 
+      <New class="org.mortbay.thread.concurrent.ThreadPool">
+        <Set name="corePoolSize">50</Set>
+        <Set name="maximumPoolSize">50</Set>
+      </New>
+      -->
+    </Set>
+
+
+
+    <!-- =========================================================== -->
+    <!-- Set connectors                                              -->
+    <!-- =========================================================== -->
+    <!-- One of each type!                                           -->
+    <!-- =========================================================== -->
+
+    <!-- Use this connector for many frequently idle connections
+         and for threadless continuations.
+    -->    
+  <!--
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.mortbay.jetty.nio.SelectChannelConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">30000</Set>
+            <Set name="Acceptors">2</Set>
+            <Set name="statsOn">false</Set>
+            <Set name="confidentialPort">8443</Set>
+	    <Set name="lowResourcesConnections">5000</Set>
+	    <Set name="lowResourcesMaxIdleTime">5000</Set>
+          </New>
+      </Arg>
+    </Call>
+  -->
+
+    <!-- This connector is currently being used for Solr because it
+          showed better performance than nio.SelectChannelConnector
+          for typical Solr requests.  -->
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.mortbay.jetty.bio.SocketConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">50000</Set>
+            <Set name="lowResourceMaxIdleTime">1500</Set>
+            <Set name="statsOn">false</Set>
+          </New>
+      </Arg>
+    </Call>
+
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    <!-- To add a HTTPS SSL listener                                     -->
+    <!-- see jetty-ssl.xml to add an ssl connector. use                  -->
+    <!-- java -jar start.jar etc/jetty.xml etc/jetty-ssl.xml             -->
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    <!-- To allow Jetty to be started from xinetd                        -->
+    <!-- mixin jetty-xinetd.xml:                                         -->
+    <!--   java -jar start.jar etc/jetty.xml etc/jetty-xinetd.xml        -->
+    <!--                                                                 -->
+    <!-- See jetty-xinetd.xml for further instructions.                  -->
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    
+    <!-- =========================================================== -->
+    <!-- Set up global session ID manager                            -->
+    <!-- =========================================================== -->
+    <!--
+    <Set name="sessionIdManager">
+      <New class="org.mortbay.jetty.servlet.HashSessionIdManager">
+        <Set name="workerName">node1</Set>
+      </New>
+    </Set>
+    -->
+
+    <!-- =========================================================== -->
+    <!-- Set handler Collection Structure                            --> 
+    <!-- =========================================================== -->
+    <Set name="handler">
+      <New id="Handlers" class="org.mortbay.jetty.handler.HandlerCollection">
+        <Set name="handlers">
+         <Array type="org.mortbay.jetty.Handler">
+           <Item>
+             <New id="Contexts" class="org.mortbay.jetty.handler.ContextHandlerCollection"/>
+           </Item>
+           <Item>
+             <New id="DefaultHandler" class="org.mortbay.jetty.handler.DefaultHandler"/>
+           </Item>
+           <Item>
+             <New id="RequestLog" class="org.mortbay.jetty.handler.RequestLogHandler"/>
+           </Item>
+         </Array>
+        </Set>
+      </New>
+    </Set>
+    
+    <!-- =========================================================== -->
+    <!-- Configure the context deployer                              -->
+    <!-- A context deployer will deploy contexts described in        -->
+    <!-- configuration files discovered in a directory.              -->
+    <!-- The configuration directory can be scanned for hot          -->
+    <!-- deployments at the configured scanInterval.                 -->
+    <!--                                                             -->
+    <!-- This deployer is configured to deploy contexts configured   -->
+    <!-- in the $JETTY_HOME/contexts directory                       -->
+    <!--                                                             -->
+    <!-- =========================================================== -->
+    <Call name="addLifeCycle">
+      <Arg>
+        <New class="org.mortbay.jetty.deployer.ContextDeployer">
+          <Set name="contexts"><Ref id="Contexts"/></Set>
+          <Set name="configurationDir"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
+          <Set name="scanInterval">5</Set>
+        </New>
+      </Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Configure the webapp deployer.                              -->
+    <!-- A webapp  deployer will deploy standard webapps discovered  -->
+    <!-- in a directory at startup, without the need for additional  -->
+    <!-- configuration files.    It does not support hot deploy or   -->
+    <!-- non standard contexts (see ContextDeployer above).          -->
+    <!--                                                             -->
+    <!-- This deployer is configured to deploy webapps from the      -->
+    <!-- $JETTY_HOME/webapps directory                               -->
+    <!--                                                             -->
+    <!-- Normally only one type of deployer need be used.            -->
+    <!--                                                             -->
+    <!-- =========================================================== -->
+    <Call name="addLifeCycle">
+      <Arg>
+        <New class="org.mortbay.jetty.deployer.WebAppDeployer">
+          <Set name="contexts"><Ref id="Contexts"/></Set>
+          <Set name="webAppDir"><SystemProperty name="jetty.webapps" default="."/></Set>
+	  <Set name="parentLoaderPriority">false</Set>
+	  <Set name="extract">true</Set>
+	  <Set name="allowDuplicates">false</Set>
+          <Set name="defaultsDescriptor"><SystemProperty name="jetty.home" default="."/>/webdefault.xml</Set>
+        </New>
+      </Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Configure Authentication Realms                             -->
+    <!-- Realms may be configured for the entire server here, or     -->
+    <!-- they can be configured for a specific web app in a context  -->
+    <!-- configuration (see $(jetty.home)/contexts/test.xml for an   -->
+    <!-- example).                                                   -->
+    <!-- =========================================================== -->
+  <!--
+    <Set name="UserRealms">
+      <Array type="org.mortbay.jetty.security.UserRealm">
+        <Item>
+          <New class="org.mortbay.jetty.security.HashUserRealm">
+            <Set name="name">Test Realm</Set>
+            <Set name="config"><SystemProperty name="jetty.home" default="."/>/etc/realm.properties</Set>
+            <Set name="refreshInterval">0</Set>
+          </New>
+        </Item>
+      </Array>
+    </Set>
+  -->
+
+    <!-- =========================================================== -->
+    <!-- Configure Request Log                                       -->
+    <!-- Request logs  may be configured for the entire server here, -->
+    <!-- or they can be configured for a specific web app in a       -->
+    <!-- contexts configuration (see $(jetty.home)/contexts/test.xml -->
+    <!-- for an example).                                            -->
+    <!-- =========================================================== -->
+  <!--
+    <Ref id="RequestLog">
+      <Set name="requestLog">
+        <New id="RequestLogImpl" class="org.mortbay.jetty.NCSARequestLog">
+          <Set name="filename"><SystemProperty name="jetty.logs" default="./logs"/>/yyyy_mm_dd.request.log</Set>
+          <Set name="filenameDateFormat">yyyy_MM_dd</Set>
+          <Set name="retainDays">90</Set>
+          <Set name="append">true</Set>
+          <Set name="extended">false</Set>
+          <Set name="logCookies">false</Set>
+          <Set name="LogTimeZone">GMT</Set>
+        </New>
+      </Set>
+    </Ref>
+  -->
+    <!-- =========================================================== -->
+    <!-- extra options                                               -->
+    <!-- =========================================================== -->
+    <Set name="stopAtShutdown">true</Set>
+    <Set name="sendServerVersion">false</Set>
+    <Set name="sendDateHeader">false</Set>
+    <Set name="gracefulShutdown">1000</Set>
+
+</Configure>
diff --git a/share/solr-data/.svn/text-base/solr.xml.svn-base b/share/solr-data/.svn/text-base/solr.xml.svn-base
new file mode 100644
index 0000000..2fed50a
--- /dev/null
+++ b/share/solr-data/.svn/text-base/solr.xml.svn-base
@@ -0,0 +1,3 @@
+<solr persistent="true" sharedLib="lib">
+    <cores adminPath="/admin/cores"/>
+</solr>
diff --git a/share/solr-data/.svn/text-base/start.config.svn-base b/share/solr-data/.svn/text-base/start.config.svn-base
new file mode 100644
index 0000000..26fc367
--- /dev/null
+++ b/share/solr-data/.svn/text-base/start.config.svn-base
@@ -0,0 +1,56 @@
+# This file controls what file are to be put on classpath or command line.
+#
+# Format is as follows:
+# Each line contains entry for one JAR file.
+# Format of line:
+#
+#  SUBJECT [ [!] CONDITION [AND|OR] ]*
+# 
+# where SUBJECT: 
+#   ends with ".class" is the Main class to run.
+#   ends with ".xml" is a configuration file for the command line
+#   ends with "/" is a directory from which to add all jar and zip files. 
+#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
+#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
+#   Containing = are used to assign system properties.
+#   all other subjects are treated as files to be added to the classpath.
+#
+# Subjects may include system properties with $(propertyname) syntax. 
+#
+# Files starting with "/" are considered absolute, all others are relative to
+# the home directory.
+#
+# CONDITION is one of:
+#   always
+#   never
+#   available classname        # true if class on classpath
+#   property name              # true of set
+#   java OPERATOR version      # java version compared to literal
+#   nargs OPERATOR number      # number of command line args compared to literal
+#   OPERATOR := one of "<",">","<=",">=","==","!="
+#
+# CONTITIONS can be combined with AND OR or !, with AND being the assume
+# operator for a list of CONDITIONS.
+# Classpath operations are evaluated on the fly, so once a class or jar is
+# added to the classpath, subsequent available conditions will see that class.
+#
+
+$(jetty.class.path).path                         always
+$(jetty.lib)/**                                  exists $(jetty.lib)
+
+
+# Try different settings of jetty.home until the jetty.jar is found.
+jetty.home=/location/of/your/jetty/config/dir
+
+# The main class to run
+org.mortbay.xml.XmlConfiguration.class
+$(start.class).class
+
+# The default configuration files
+$(jetty.home)/jetty.xml                             nargs == 0
+
+# Set the jetty classpath
+/usr/share/java/solr/*                              always
+
+# Set webapps dir
+jetty.webapps=/usr/share/java/webapps
diff --git a/share/solr-data/.svn/text-base/webdefault.xml.svn-base b/share/solr-data/.svn/text-base/webdefault.xml.svn-base
new file mode 100644
index 0000000..b8d0114
--- /dev/null
+++ b/share/solr-data/.svn/text-base/webdefault.xml.svn-base
@@ -0,0 +1,410 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<!-- ===================================================================== -->
+<!-- This file contains the default descriptor for web applications.       -->
+<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+<!-- The intent of this descriptor is to include jetty specific or common  -->
+<!-- configuration for all webapps.   If a context has a webdefault.xml    -->
+<!-- descriptor, it is applied before the contexts own web.xml file        -->
+<!--                                                                       -->
+<!-- A context may be assigned a default descriptor by:                    -->
+<!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
+<!--  + Passed an arg to addWebApplications                                -->
+<!--                                                                       -->
+<!-- This file is used both as the resource within the jetty.jar (which is -->
+<!-- used as the default if no explicit defaults descriptor is set) and it -->
+<!-- is copied to the etc directory of the Jetty distro and explicitly     -->
+<!-- by the jetty.xml file.                                                -->
+<!--                                                                       -->
+<!-- ===================================================================== -->
+<web-app 
+   xmlns="http://java.sun.com/xml/ns/javaee" 
+   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
+   metadata-complete="true"
+   version="2.5"> 
+
+  <description>
+    Default web.xml file.  
+    This file is applied to a Web application before it's own WEB_INF/web.xml file
+  </description>
+
+
+  <!-- ==================================================================== -->
+  <!-- Context params to control Session Cookies                            -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- UNCOMMENT TO ACTIVATE
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.SessionDomain</param-name>
+    <param-value>127.0.0.1</param-value>
+  </context-param>
+
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.SessionPath</param-name>
+    <param-value>/</param-value>
+  </context-param>
+
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.MaxAge</param-name>
+    <param-value>-1</param-value>
+  </context-param>
+  -->
+
+  <context-param>
+    <param-name>org.mortbay.jetty.webapp.NoTLDJarPattern</param-name>
+    <param-value>start.jar|ant-.*\.jar|dojo-.*\.jar|jetty-.*\.jar|jsp-api-.*\.jar|junit-.*\.jar|servlet-api-.*\.jar|dnsns\.jar|rt\.jar|jsse\.jar|tools\.jar|sunpkcs11\.jar|sunjce_provider\.jar|xerces.*\.jar</param-value>
+  </context-param>
+            
+
+
+  <!-- ==================================================================== -->
+  <!-- The default servlet.                                                 -->
+  <!-- This servlet, normally mapped to /, provides the handling for static -->
+  <!-- content, OPTIONS and TRACE methods for the context.                  -->
+  <!-- The following initParameters are supported:                          -->
+  <!--                                                                      -->
+  <!--   acceptRanges     If true, range requests and responses are         -->
+  <!--                    supported                                         -->
+  <!--                                                                      -->
+  <!--   dirAllowed       If true, directory listings are returned if no    -->
+  <!--                    welcome file is found. Else 403 Forbidden.        -->
+  <!--                                                                      -->
+  <!--   welcomeServlets  If true, attempt to dispatch to welcome files     -->
+  <!--                    that are servlets, if no matching static          --> 
+  <!--                    resources can be found.                           -->
+  <!--                                                                      -->
+  <!--   redirectWelcome  If true, redirect welcome file requests           -->
+  <!--                    else use request dispatcher forwards              -->
+  <!--                                                                      -->
+  <!--   gzip             If set to true, then static content will be served--> 
+  <!--                    as gzip content encoded if a matching resource is -->
+  <!--                    found ending with ".gz"                           -->
+  <!--                                                                      -->
+  <!--   resoureBase      Can be set to replace the context resource base   -->
+  <!--                                                                      -->
+  <!--   relativeResourceBase                                               -->
+  <!--                    Set with a pathname relative to the base of the   -->
+  <!--                    servlet context root. Useful for only serving     -->
+  <!--                    static content from only specific subdirectories. -->
+  <!--                                                                      -->
+  <!--   useFileMappedBuffer                                                -->
+  <!--                    If set to true (the default), a  memory mapped    -->
+  <!--                    file buffer will be used to serve static content  -->
+  <!--                    when using an NIO connector. Setting this value   -->
+  <!--                    to false means that a direct buffer will be used  -->
+  <!--                    instead. If you are having trouble with Windows   -->
+  <!--                    file locking, set this to false.                  -->
+  <!--                                                                      -->
+  <!--  cacheControl      If set, all static content will have this value   -->
+  <!--                    set as the cache-control header.                  -->
+  <!--                                                                      -->
+  <!--  maxCacheSize      Maximum size of the static resource cache         -->
+  <!--                                                                      -->
+  <!--  maxCachedFileSize Maximum size of any single file in the cache      -->
+  <!--                                                                      -->
+  <!--  maxCachedFiles    Maximum number of files in the cache              -->
+  <!--                                                                      -->
+  <!--  cacheType         "nio", "bio" or "both" to determine the type(s)   -->
+  <!--                    of resource cache. A bio cached buffer may be used-->
+  <!--                    by nio but is not as efficient as a nio buffer.   -->
+  <!--                    An nio cached buffer may not be used by bio.      -->
+  <!--                                                                      -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet>
+    <servlet-name>default</servlet-name>
+    <servlet-class>org.mortbay.jetty.servlet.DefaultServlet</servlet-class>
+    <init-param>
+      <param-name>acceptRanges</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>dirAllowed</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>welcomeServlets</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>redirectWelcome</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCacheSize</param-name>
+      <param-value>256000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFileSize</param-name>
+      <param-value>10000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFiles</param-name>
+      <param-value>1000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>cacheType</param-name>
+      <param-value>both</param-value>
+    </init-param>
+    <init-param>
+      <param-name>gzip</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>useFileMappedBuffer</param-name>
+      <param-value>true</param-value>
+    </init-param>  
+    <!--
+    <init-param>
+      <param-name>cacheControl</param-name>
+      <param-value>max-age=3600,public</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet> 
+
+  <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping>
+  
+
+  <!-- ==================================================================== -->
+  <!-- JSP Servlet                                                          -->
+  <!-- This is the jasper JSP servlet from the jakarta project              -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
+  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
+  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
+  <!-- following initialization parameters (default values are in square    -->
+  <!-- brackets):                                                           -->
+  <!--                                                                      -->
+  <!--   checkInterval       If development is false and reloading is true, -->
+  <!--                       background compiles are enabled. checkInterval -->
+  <!--                       is the time in seconds between checks to see   -->
+  <!--                       if a JSP page needs to be recompiled. [300]    -->
+  <!--                                                                      -->
+  <!--   compiler            Which compiler Ant should use to compile JSP   -->
+  <!--                       pages.  See the Ant documenation for more      -->
+  <!--                       information. [javac]                           -->
+  <!--                                                                      -->
+  <!--   classdebuginfo      Should the class file be compiled with         -->
+  <!--                       debugging information?  [true]                 -->
+  <!--                                                                      -->
+  <!--   classpath           What class path should I use while compiling   -->
+  <!--                       generated servlets?  [Created dynamically      -->
+  <!--                       based on the current web application]          -->
+  <!--                       Set to ? to make the container explicitly set  -->
+  <!--                       this parameter.                                -->
+  <!--                                                                      -->
+  <!--   development         Is Jasper used in development mode (will check -->
+  <!--                       for JSP modification on every access)?  [true] -->
+  <!--                                                                      -->
+  <!--   enablePooling       Determines whether tag handler pooling is      -->
+  <!--                       enabled  [true]                                -->
+  <!--                                                                      -->
+  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
+  <!--                       a separate JVM is used for JSP page compiles   -->
+  <!--                       from the one Tomcat is running in. [true]      -->
+  <!--                                                                      -->
+  <!--   ieClassId           The class-id value to be sent to Internet      -->
+  <!--                       Explorer when using <jsp:plugin> tags.         -->
+  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
+  <!--                                                                      -->
+  <!--   javaEncoding        Java file encoding to use for generating java  -->
+  <!--                       source files. [UTF-8]                          -->
+  <!--                                                                      -->
+  <!--   keepgenerated       Should we keep the generated Java source code  -->
+  <!--                       for each page instead of deleting it? [true]   -->
+  <!--                                                                      -->
+  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
+  <!--                       by this servlet.  Increasing levels cause the  -->
+  <!--                       generation of more messages.  Valid values are -->
+  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
+  <!--                       [WARNING]                                      -->
+  <!--                                                                      -->
+  <!--   mappedfile          Should we generate static content with one     -->
+  <!--                       print statement per input line, to ease        -->
+  <!--                       debugging?  [false]                            -->
+  <!--                                                                      -->
+  <!--                                                                      -->
+  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
+  <!--                                                                      -->
+  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
+  <!--                       debugging be suppressed?  [false]              -->
+  <!--                                                                      -->
+  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
+  <!--                       dumped to a file? [false]                      -->
+  <!--                       False if suppressSmap is true                  -->
+  <!--                                                                      -->
+  <!--   scratchdir          What scratch directory should we use when      -->
+  <!--                       compiling JSP pages?  [default work directory  -->
+  <!--                       for the current web application]               -->
+  <!--                                                                      -->
+  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
+  <!--                                                                      -->
+  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
+  <!--                       header is added by generated servlet  [false]  -->
+  <!--                                                                      -->
+  <!-- If you wish to use Jikes to compile JSP pages:                       -->
+  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
+  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
+  <!--   to cause Jikes to emit error messages in a format compatible with  -->
+  <!--   Jasper.                                                            -->
+  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
+  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet id="jsp">
+    <servlet-name>jsp</servlet-name>
+    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
+    <init-param>
+        <param-name>logVerbosityLevel</param-name>
+        <param-value>DEBUG</param-value>
+    </init-param>
+    <init-param>
+        <param-name>fork</param-name>
+        <param-value>false</param-value>
+    </init-param>
+    <init-param>
+        <param-name>xpoweredBy</param-name>
+        <param-value>false</param-value>
+    </init-param>
+    <!--  
+    <init-param>
+        <param-name>classpath</param-name>
+        <param-value>?</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping> 
+    <servlet-name>jsp</servlet-name> 
+    <url-pattern>*.jsp</url-pattern> 
+    <url-pattern>*.jspf</url-pattern>
+    <url-pattern>*.jspx</url-pattern>
+    <url-pattern>*.xsp</url-pattern>
+    <url-pattern>*.JSP</url-pattern> 
+    <url-pattern>*.JSPF</url-pattern>
+    <url-pattern>*.JSPX</url-pattern>
+    <url-pattern>*.XSP</url-pattern>
+  </servlet-mapping>
+  
+  <!-- ==================================================================== -->
+  <!-- Dynamic Servlet Invoker.                                             -->
+  <!-- This servlet invokes anonymous servlets that have not been defined   -->
+  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
+  <!-- of a request passed to the envoker is treated as a servlet name for  -->
+  <!-- an existing servlet, or as a class name of a new servlet.            -->
+  <!-- This servlet is normally mapped to /servlet/*                        -->
+  <!-- This servlet support the following initParams:                       -->
+  <!--                                                                      -->
+  <!--  nonContextServlets       If false, the invoker can only load        -->
+  <!--                           servlets from the contexts classloader.    -->
+  <!--                           This is false by default and setting this  -->
+  <!--                           to true may have security implications.    -->
+  <!--                                                                      -->
+  <!--  verbose                  If true, log dynamic loads                 -->
+  <!--                                                                      -->
+  <!--  *                        All other parameters are copied to the     -->
+  <!--                           each dynamic servlet as init parameters    -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- Uncomment for dynamic invocation
+  <servlet>
+    <servlet-name>invoker</servlet-name>
+    <servlet-class>org.mortbay.jetty.servlet.Invoker</servlet-class>
+    <init-param>
+      <param-name>verbose</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>nonContextServlets</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>dynamicParam</param-name>
+      <param-value>anyValue</param-value>
+    </init-param>
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping> <servlet-name>invoker</servlet-name> <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
+  -->
+
+
+
+  <!-- ==================================================================== -->
+  <session-config>
+    <session-timeout>30</session-timeout>
+  </session-config>
+
+  <!-- ==================================================================== -->
+  <!-- Default MIME mappings                                                -->
+  <!-- The default MIME mappings are provided by the mime.properties        -->
+  <!-- resource in the org.mortbay.jetty.jar file.  Additional or modified  -->
+  <!-- mappings may be specified here                                       -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- UNCOMMENT TO ACTIVATE
+  <mime-mapping>
+    <extension>mysuffix</extension>
+    <mime-type>mymime/type</mime-type>
+  </mime-mapping>
+  -->
+
+  <!-- ==================================================================== -->
+  <welcome-file-list>
+    <welcome-file>index.html</welcome-file>
+    <welcome-file>index.htm</welcome-file>
+    <welcome-file>index.jsp</welcome-file>
+  </welcome-file-list>
+
+  <!-- ==================================================================== -->
+  <locale-encoding-mapping-list>
+    <locale-encoding-mapping><locale>ar</locale><encoding>ISO-8859-6</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>be</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>bg</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ca</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>cs</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>da</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>de</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>el</locale><encoding>ISO-8859-7</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>en</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>es</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>et</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>fi</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>fr</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>hr</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>hu</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>is</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>it</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>iw</locale><encoding>ISO-8859-8</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ja</locale><encoding>Shift_JIS</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ko</locale><encoding>EUC-KR</encoding></locale-encoding-mapping>     
+    <locale-encoding-mapping><locale>lt</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>lv</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>mk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>nl</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>no</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>pl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>pt</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ro</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ru</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sh</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sk</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sq</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sr</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sv</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>tr</locale><encoding>ISO-8859-9</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>uk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>zh</locale><encoding>GB2312</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>zh_TW</locale><encoding>Big5</encoding></locale-encoding-mapping>   
+  </locale-encoding-mapping-list>
+  
+  <security-constraint>
+    <web-resource-collection>
+      <web-resource-name>Disable TRACE</web-resource-name>
+      <url-pattern>/</url-pattern>
+      <http-method>TRACE</http-method>
+    </web-resource-collection>
+    <auth-constraint/>
+  </security-constraint>
+  
+</web-app>
+
diff --git a/share/solr-data/contexts/.svn/entries b/share/solr-data/contexts/.svn/entries
new file mode 100644
index 0000000..53add67
--- /dev/null
+++ b/share/solr-data/contexts/.svn/entries
@@ -0,0 +1,62 @@
+10
+
+dir
+20568
+svn+ssh://svn@svn.seecr.nl/svn/cq2-packages/thirdparty/solr-run/3.6.0/1.0/usr-share/solr-data/contexts
+svn+ssh://svn@svn.seecr.nl/svn
+
+
+
+2012-06-04T11:55:55.587796Z
+19648
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+7f82bda0-831b-0410-895c-c142f06d1e64
+
+solr.xml
+file
+
+
+
+
+2012-08-21T22:07:00.000000Z
+de7dd32bb3d7ef09b4acbdd72a273867
+2012-06-04T11:55:55.587796Z
+19648
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+327
+
diff --git a/share/solr-data/contexts/.svn/text-base/solr.xml.svn-base b/share/solr-data/contexts/.svn/text-base/solr.xml.svn-base
new file mode 100644
index 0000000..1ce8d44
--- /dev/null
+++ b/share/solr-data/contexts/.svn/text-base/solr.xml.svn-base
@@ -0,0 +1,8 @@
+<?xml version="1.0"  encoding="ISO-8859-1"?>
+<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
+ 
+<Configure class="org.mortbay.jetty.webapp.WebAppContext">
+  <Set name="contextPath">/solr</Set>
+  <Set name="war">/usr/share/java/webapps/apache-solr-3.6.0.war</Set>
+</Configure>
+
diff --git a/share/solr-data/contexts/solr.xml b/share/solr-data/contexts/solr.xml
new file mode 100644
index 0000000..1ce8d44
--- /dev/null
+++ b/share/solr-data/contexts/solr.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0"  encoding="ISO-8859-1"?>
+<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
+ 
+<Configure class="org.mortbay.jetty.webapp.WebAppContext">
+  <Set name="contextPath">/solr</Set>
+  <Set name="war">/usr/share/java/webapps/apache-solr-3.6.0.war</Set>
+</Configure>
+
diff --git a/share/solr-data/cores/.svn/entries b/share/solr-data/cores/.svn/entries
new file mode 100644
index 0000000..84e3523
--- /dev/null
+++ b/share/solr-data/cores/.svn/entries
@@ -0,0 +1,28 @@
+10
+
+dir
+20568
+svn+ssh://svn@svn.seecr.nl/svn/cq2-packages/thirdparty/solr-run/3.6.0/1.0/usr-share/solr-data/cores
+svn+ssh://svn@svn.seecr.nl/svn
+
+
+
+2012-06-04T11:55:55.587796Z
+19648
+HM
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+7f82bda0-831b-0410-895c-c142f06d1e64
+
diff --git a/share/solr-data/jetty.xml b/share/solr-data/jetty.xml
new file mode 100644
index 0000000..ccd347f
--- /dev/null
+++ b/share/solr-data/jetty.xml
@@ -0,0 +1,227 @@
+<?xml version="1.0"?>
+<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">
+
+<!-- =============================================================== -->
+<!-- Configure the Jetty Server                                      -->
+<!--                                                                 -->
+<!-- Documentation of this file format can be found at:              -->
+<!-- http://docs.codehaus.org/display/JETTY/jetty.xml                -->
+<!--                                                                 -->
+<!-- =============================================================== -->
+
+
+<Configure id="Server" class="org.mortbay.jetty.Server">
+
+    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
+    <Call class="java.lang.System" name="setProperty">
+      <Arg>org.mortbay.jetty.Request.maxFormContentSize</Arg>
+      <Arg>1000000</Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Server Thread Pool                                          -->
+    <!-- =========================================================== -->
+    <Set name="ThreadPool">
+
+      <New class="org.mortbay.thread.QueuedThreadPool">
+        <Set name="minThreads">10</Set>
+        <Set name="maxThreads">10000</Set>
+        <Set name="lowThreads">20</Set>
+      </New>
+
+      <!-- Optional Java 5 bounded threadpool with job queue 
+      <New class="org.mortbay.thread.concurrent.ThreadPool">
+        <Set name="corePoolSize">50</Set>
+        <Set name="maximumPoolSize">50</Set>
+      </New>
+      -->
+    </Set>
+
+
+
+    <!-- =========================================================== -->
+    <!-- Set connectors                                              -->
+    <!-- =========================================================== -->
+    <!-- One of each type!                                           -->
+    <!-- =========================================================== -->
+
+    <!-- Use this connector for many frequently idle connections
+         and for threadless continuations.
+    -->    
+  <!--
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.mortbay.jetty.nio.SelectChannelConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">30000</Set>
+            <Set name="Acceptors">2</Set>
+            <Set name="statsOn">false</Set>
+            <Set name="confidentialPort">8443</Set>
+	    <Set name="lowResourcesConnections">5000</Set>
+	    <Set name="lowResourcesMaxIdleTime">5000</Set>
+          </New>
+      </Arg>
+    </Call>
+  -->
+
+    <!-- This connector is currently being used for Solr because it
+          showed better performance than nio.SelectChannelConnector
+          for typical Solr requests.  -->
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.mortbay.jetty.bio.SocketConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">50000</Set>
+            <Set name="lowResourceMaxIdleTime">1500</Set>
+            <Set name="statsOn">false</Set>
+          </New>
+      </Arg>
+    </Call>
+
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    <!-- To add a HTTPS SSL listener                                     -->
+    <!-- see jetty-ssl.xml to add an ssl connector. use                  -->
+    <!-- java -jar start.jar etc/jetty.xml etc/jetty-ssl.xml             -->
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    <!-- To allow Jetty to be started from xinetd                        -->
+    <!-- mixin jetty-xinetd.xml:                                         -->
+    <!--   java -jar start.jar etc/jetty.xml etc/jetty-xinetd.xml        -->
+    <!--                                                                 -->
+    <!-- See jetty-xinetd.xml for further instructions.                  -->
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    
+    <!-- =========================================================== -->
+    <!-- Set up global session ID manager                            -->
+    <!-- =========================================================== -->
+    <!--
+    <Set name="sessionIdManager">
+      <New class="org.mortbay.jetty.servlet.HashSessionIdManager">
+        <Set name="workerName">node1</Set>
+      </New>
+    </Set>
+    -->
+
+    <!-- =========================================================== -->
+    <!-- Set handler Collection Structure                            --> 
+    <!-- =========================================================== -->
+    <Set name="handler">
+      <New id="Handlers" class="org.mortbay.jetty.handler.HandlerCollection">
+        <Set name="handlers">
+         <Array type="org.mortbay.jetty.Handler">
+           <Item>
+             <New id="Contexts" class="org.mortbay.jetty.handler.ContextHandlerCollection"/>
+           </Item>
+           <Item>
+             <New id="DefaultHandler" class="org.mortbay.jetty.handler.DefaultHandler"/>
+           </Item>
+           <Item>
+             <New id="RequestLog" class="org.mortbay.jetty.handler.RequestLogHandler"/>
+           </Item>
+         </Array>
+        </Set>
+      </New>
+    </Set>
+    
+    <!-- =========================================================== -->
+    <!-- Configure the context deployer                              -->
+    <!-- A context deployer will deploy contexts described in        -->
+    <!-- configuration files discovered in a directory.              -->
+    <!-- The configuration directory can be scanned for hot          -->
+    <!-- deployments at the configured scanInterval.                 -->
+    <!--                                                             -->
+    <!-- This deployer is configured to deploy contexts configured   -->
+    <!-- in the $JETTY_HOME/contexts directory                       -->
+    <!--                                                             -->
+    <!-- =========================================================== -->
+    <Call name="addLifeCycle">
+      <Arg>
+        <New class="org.mortbay.jetty.deployer.ContextDeployer">
+          <Set name="contexts"><Ref id="Contexts"/></Set>
+          <Set name="configurationDir"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
+          <Set name="scanInterval">5</Set>
+        </New>
+      </Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Configure the webapp deployer.                              -->
+    <!-- A webapp  deployer will deploy standard webapps discovered  -->
+    <!-- in a directory at startup, without the need for additional  -->
+    <!-- configuration files.    It does not support hot deploy or   -->
+    <!-- non standard contexts (see ContextDeployer above).          -->
+    <!--                                                             -->
+    <!-- This deployer is configured to deploy webapps from the      -->
+    <!-- $JETTY_HOME/webapps directory                               -->
+    <!--                                                             -->
+    <!-- Normally only one type of deployer need be used.            -->
+    <!--                                                             -->
+    <!-- =========================================================== -->
+    <Call name="addLifeCycle">
+      <Arg>
+        <New class="org.mortbay.jetty.deployer.WebAppDeployer">
+          <Set name="contexts"><Ref id="Contexts"/></Set>
+          <Set name="webAppDir"><SystemProperty name="jetty.webapps" default="."/></Set>
+	  <Set name="parentLoaderPriority">false</Set>
+	  <Set name="extract">true</Set>
+	  <Set name="allowDuplicates">false</Set>
+          <Set name="defaultsDescriptor"><SystemProperty name="jetty.home" default="."/>/webdefault.xml</Set>
+        </New>
+      </Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Configure Authentication Realms                             -->
+    <!-- Realms may be configured for the entire server here, or     -->
+    <!-- they can be configured for a specific web app in a context  -->
+    <!-- configuration (see $(jetty.home)/contexts/test.xml for an   -->
+    <!-- example).                                                   -->
+    <!-- =========================================================== -->
+  <!--
+    <Set name="UserRealms">
+      <Array type="org.mortbay.jetty.security.UserRealm">
+        <Item>
+          <New class="org.mortbay.jetty.security.HashUserRealm">
+            <Set name="name">Test Realm</Set>
+            <Set name="config"><SystemProperty name="jetty.home" default="."/>/etc/realm.properties</Set>
+            <Set name="refreshInterval">0</Set>
+          </New>
+        </Item>
+      </Array>
+    </Set>
+  -->
+
+    <!-- =========================================================== -->
+    <!-- Configure Request Log                                       -->
+    <!-- Request logs  may be configured for the entire server here, -->
+    <!-- or they can be configured for a specific web app in a       -->
+    <!-- contexts configuration (see $(jetty.home)/contexts/test.xml -->
+    <!-- for an example).                                            -->
+    <!-- =========================================================== -->
+  <!--
+    <Ref id="RequestLog">
+      <Set name="requestLog">
+        <New id="RequestLogImpl" class="org.mortbay.jetty.NCSARequestLog">
+          <Set name="filename"><SystemProperty name="jetty.logs" default="./logs"/>/yyyy_mm_dd.request.log</Set>
+          <Set name="filenameDateFormat">yyyy_MM_dd</Set>
+          <Set name="retainDays">90</Set>
+          <Set name="append">true</Set>
+          <Set name="extended">false</Set>
+          <Set name="logCookies">false</Set>
+          <Set name="LogTimeZone">GMT</Set>
+        </New>
+      </Set>
+    </Ref>
+  -->
+    <!-- =========================================================== -->
+    <!-- extra options                                               -->
+    <!-- =========================================================== -->
+    <Set name="stopAtShutdown">true</Set>
+    <Set name="sendServerVersion">false</Set>
+    <Set name="sendDateHeader">false</Set>
+    <Set name="gracefulShutdown">1000</Set>
+
+</Configure>
diff --git a/share/solr-data/solr.xml b/share/solr-data/solr.xml
new file mode 100644
index 0000000..2fed50a
--- /dev/null
+++ b/share/solr-data/solr.xml
@@ -0,0 +1,3 @@
+<solr persistent="true" sharedLib="lib">
+    <cores adminPath="/admin/cores"/>
+</solr>
diff --git a/share/solr-data/start.config b/share/solr-data/start.config
new file mode 100644
index 0000000..26fc367
--- /dev/null
+++ b/share/solr-data/start.config
@@ -0,0 +1,56 @@
+# This file controls what file are to be put on classpath or command line.
+#
+# Format is as follows:
+# Each line contains entry for one JAR file.
+# Format of line:
+#
+#  SUBJECT [ [!] CONDITION [AND|OR] ]*
+# 
+# where SUBJECT: 
+#   ends with ".class" is the Main class to run.
+#   ends with ".xml" is a configuration file for the command line
+#   ends with "/" is a directory from which to add all jar and zip files. 
+#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
+#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
+#   Containing = are used to assign system properties.
+#   all other subjects are treated as files to be added to the classpath.
+#
+# Subjects may include system properties with $(propertyname) syntax. 
+#
+# Files starting with "/" are considered absolute, all others are relative to
+# the home directory.
+#
+# CONDITION is one of:
+#   always
+#   never
+#   available classname        # true if class on classpath
+#   property name              # true of set
+#   java OPERATOR version      # java version compared to literal
+#   nargs OPERATOR number      # number of command line args compared to literal
+#   OPERATOR := one of "<",">","<=",">=","==","!="
+#
+# CONTITIONS can be combined with AND OR or !, with AND being the assume
+# operator for a list of CONDITIONS.
+# Classpath operations are evaluated on the fly, so once a class or jar is
+# added to the classpath, subsequent available conditions will see that class.
+#
+
+$(jetty.class.path).path                         always
+$(jetty.lib)/**                                  exists $(jetty.lib)
+
+
+# Try different settings of jetty.home until the jetty.jar is found.
+jetty.home=/location/of/your/jetty/config/dir
+
+# The main class to run
+org.mortbay.xml.XmlConfiguration.class
+$(start.class).class
+
+# The default configuration files
+$(jetty.home)/jetty.xml                             nargs == 0
+
+# Set the jetty classpath
+/usr/share/java/solr/*                              always
+
+# Set webapps dir
+jetty.webapps=/usr/share/java/webapps
diff --git a/share/solr-data/webdefault.xml b/share/solr-data/webdefault.xml
new file mode 100644
index 0000000..b8d0114
--- /dev/null
+++ b/share/solr-data/webdefault.xml
@@ -0,0 +1,410 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<!-- ===================================================================== -->
+<!-- This file contains the default descriptor for web applications.       -->
+<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+<!-- The intent of this descriptor is to include jetty specific or common  -->
+<!-- configuration for all webapps.   If a context has a webdefault.xml    -->
+<!-- descriptor, it is applied before the contexts own web.xml file        -->
+<!--                                                                       -->
+<!-- A context may be assigned a default descriptor by:                    -->
+<!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
+<!--  + Passed an arg to addWebApplications                                -->
+<!--                                                                       -->
+<!-- This file is used both as the resource within the jetty.jar (which is -->
+<!-- used as the default if no explicit defaults descriptor is set) and it -->
+<!-- is copied to the etc directory of the Jetty distro and explicitly     -->
+<!-- by the jetty.xml file.                                                -->
+<!--                                                                       -->
+<!-- ===================================================================== -->
+<web-app 
+   xmlns="http://java.sun.com/xml/ns/javaee" 
+   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
+   metadata-complete="true"
+   version="2.5"> 
+
+  <description>
+    Default web.xml file.  
+    This file is applied to a Web application before it's own WEB_INF/web.xml file
+  </description>
+
+
+  <!-- ==================================================================== -->
+  <!-- Context params to control Session Cookies                            -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- UNCOMMENT TO ACTIVATE
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.SessionDomain</param-name>
+    <param-value>127.0.0.1</param-value>
+  </context-param>
+
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.SessionPath</param-name>
+    <param-value>/</param-value>
+  </context-param>
+
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.MaxAge</param-name>
+    <param-value>-1</param-value>
+  </context-param>
+  -->
+
+  <context-param>
+    <param-name>org.mortbay.jetty.webapp.NoTLDJarPattern</param-name>
+    <param-value>start.jar|ant-.*\.jar|dojo-.*\.jar|jetty-.*\.jar|jsp-api-.*\.jar|junit-.*\.jar|servlet-api-.*\.jar|dnsns\.jar|rt\.jar|jsse\.jar|tools\.jar|sunpkcs11\.jar|sunjce_provider\.jar|xerces.*\.jar</param-value>
+  </context-param>
+            
+
+
+  <!-- ==================================================================== -->
+  <!-- The default servlet.                                                 -->
+  <!-- This servlet, normally mapped to /, provides the handling for static -->
+  <!-- content, OPTIONS and TRACE methods for the context.                  -->
+  <!-- The following initParameters are supported:                          -->
+  <!--                                                                      -->
+  <!--   acceptRanges     If true, range requests and responses are         -->
+  <!--                    supported                                         -->
+  <!--                                                                      -->
+  <!--   dirAllowed       If true, directory listings are returned if no    -->
+  <!--                    welcome file is found. Else 403 Forbidden.        -->
+  <!--                                                                      -->
+  <!--   welcomeServlets  If true, attempt to dispatch to welcome files     -->
+  <!--                    that are servlets, if no matching static          --> 
+  <!--                    resources can be found.                           -->
+  <!--                                                                      -->
+  <!--   redirectWelcome  If true, redirect welcome file requests           -->
+  <!--                    else use request dispatcher forwards              -->
+  <!--                                                                      -->
+  <!--   gzip             If set to true, then static content will be served--> 
+  <!--                    as gzip content encoded if a matching resource is -->
+  <!--                    found ending with ".gz"                           -->
+  <!--                                                                      -->
+  <!--   resoureBase      Can be set to replace the context resource base   -->
+  <!--                                                                      -->
+  <!--   relativeResourceBase                                               -->
+  <!--                    Set with a pathname relative to the base of the   -->
+  <!--                    servlet context root. Useful for only serving     -->
+  <!--                    static content from only specific subdirectories. -->
+  <!--                                                                      -->
+  <!--   useFileMappedBuffer                                                -->
+  <!--                    If set to true (the default), a  memory mapped    -->
+  <!--                    file buffer will be used to serve static content  -->
+  <!--                    when using an NIO connector. Setting this value   -->
+  <!--                    to false means that a direct buffer will be used  -->
+  <!--                    instead. If you are having trouble with Windows   -->
+  <!--                    file locking, set this to false.                  -->
+  <!--                                                                      -->
+  <!--  cacheControl      If set, all static content will have this value   -->
+  <!--                    set as the cache-control header.                  -->
+  <!--                                                                      -->
+  <!--  maxCacheSize      Maximum size of the static resource cache         -->
+  <!--                                                                      -->
+  <!--  maxCachedFileSize Maximum size of any single file in the cache      -->
+  <!--                                                                      -->
+  <!--  maxCachedFiles    Maximum number of files in the cache              -->
+  <!--                                                                      -->
+  <!--  cacheType         "nio", "bio" or "both" to determine the type(s)   -->
+  <!--                    of resource cache. A bio cached buffer may be used-->
+  <!--                    by nio but is not as efficient as a nio buffer.   -->
+  <!--                    An nio cached buffer may not be used by bio.      -->
+  <!--                                                                      -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet>
+    <servlet-name>default</servlet-name>
+    <servlet-class>org.mortbay.jetty.servlet.DefaultServlet</servlet-class>
+    <init-param>
+      <param-name>acceptRanges</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>dirAllowed</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>welcomeServlets</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>redirectWelcome</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCacheSize</param-name>
+      <param-value>256000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFileSize</param-name>
+      <param-value>10000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFiles</param-name>
+      <param-value>1000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>cacheType</param-name>
+      <param-value>both</param-value>
+    </init-param>
+    <init-param>
+      <param-name>gzip</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>useFileMappedBuffer</param-name>
+      <param-value>true</param-value>
+    </init-param>  
+    <!--
+    <init-param>
+      <param-name>cacheControl</param-name>
+      <param-value>max-age=3600,public</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet> 
+
+  <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping>
+  
+
+  <!-- ==================================================================== -->
+  <!-- JSP Servlet                                                          -->
+  <!-- This is the jasper JSP servlet from the jakarta project              -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
+  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
+  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
+  <!-- following initialization parameters (default values are in square    -->
+  <!-- brackets):                                                           -->
+  <!--                                                                      -->
+  <!--   checkInterval       If development is false and reloading is true, -->
+  <!--                       background compiles are enabled. checkInterval -->
+  <!--                       is the time in seconds between checks to see   -->
+  <!--                       if a JSP page needs to be recompiled. [300]    -->
+  <!--                                                                      -->
+  <!--   compiler            Which compiler Ant should use to compile JSP   -->
+  <!--                       pages.  See the Ant documenation for more      -->
+  <!--                       information. [javac]                           -->
+  <!--                                                                      -->
+  <!--   classdebuginfo      Should the class file be compiled with         -->
+  <!--                       debugging information?  [true]                 -->
+  <!--                                                                      -->
+  <!--   classpath           What class path should I use while compiling   -->
+  <!--                       generated servlets?  [Created dynamically      -->
+  <!--                       based on the current web application]          -->
+  <!--                       Set to ? to make the container explicitly set  -->
+  <!--                       this parameter.                                -->
+  <!--                                                                      -->
+  <!--   development         Is Jasper used in development mode (will check -->
+  <!--                       for JSP modification on every access)?  [true] -->
+  <!--                                                                      -->
+  <!--   enablePooling       Determines whether tag handler pooling is      -->
+  <!--                       enabled  [true]                                -->
+  <!--                                                                      -->
+  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
+  <!--                       a separate JVM is used for JSP page compiles   -->
+  <!--                       from the one Tomcat is running in. [true]      -->
+  <!--                                                                      -->
+  <!--   ieClassId           The class-id value to be sent to Internet      -->
+  <!--                       Explorer when using <jsp:plugin> tags.         -->
+  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
+  <!--                                                                      -->
+  <!--   javaEncoding        Java file encoding to use for generating java  -->
+  <!--                       source files. [UTF-8]                          -->
+  <!--                                                                      -->
+  <!--   keepgenerated       Should we keep the generated Java source code  -->
+  <!--                       for each page instead of deleting it? [true]   -->
+  <!--                                                                      -->
+  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
+  <!--                       by this servlet.  Increasing levels cause the  -->
+  <!--                       generation of more messages.  Valid values are -->
+  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
+  <!--                       [WARNING]                                      -->
+  <!--                                                                      -->
+  <!--   mappedfile          Should we generate static content with one     -->
+  <!--                       print statement per input line, to ease        -->
+  <!--                       debugging?  [false]                            -->
+  <!--                                                                      -->
+  <!--                                                                      -->
+  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
+  <!--                                                                      -->
+  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
+  <!--                       debugging be suppressed?  [false]              -->
+  <!--                                                                      -->
+  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
+  <!--                       dumped to a file? [false]                      -->
+  <!--                       False if suppressSmap is true                  -->
+  <!--                                                                      -->
+  <!--   scratchdir          What scratch directory should we use when      -->
+  <!--                       compiling JSP pages?  [default work directory  -->
+  <!--                       for the current web application]               -->
+  <!--                                                                      -->
+  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
+  <!--                                                                      -->
+  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
+  <!--                       header is added by generated servlet  [false]  -->
+  <!--                                                                      -->
+  <!-- If you wish to use Jikes to compile JSP pages:                       -->
+  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
+  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
+  <!--   to cause Jikes to emit error messages in a format compatible with  -->
+  <!--   Jasper.                                                            -->
+  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
+  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet id="jsp">
+    <servlet-name>jsp</servlet-name>
+    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
+    <init-param>
+        <param-name>logVerbosityLevel</param-name>
+        <param-value>DEBUG</param-value>
+    </init-param>
+    <init-param>
+        <param-name>fork</param-name>
+        <param-value>false</param-value>
+    </init-param>
+    <init-param>
+        <param-name>xpoweredBy</param-name>
+        <param-value>false</param-value>
+    </init-param>
+    <!--  
+    <init-param>
+        <param-name>classpath</param-name>
+        <param-value>?</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping> 
+    <servlet-name>jsp</servlet-name> 
+    <url-pattern>*.jsp</url-pattern> 
+    <url-pattern>*.jspf</url-pattern>
+    <url-pattern>*.jspx</url-pattern>
+    <url-pattern>*.xsp</url-pattern>
+    <url-pattern>*.JSP</url-pattern> 
+    <url-pattern>*.JSPF</url-pattern>
+    <url-pattern>*.JSPX</url-pattern>
+    <url-pattern>*.XSP</url-pattern>
+  </servlet-mapping>
+  
+  <!-- ==================================================================== -->
+  <!-- Dynamic Servlet Invoker.                                             -->
+  <!-- This servlet invokes anonymous servlets that have not been defined   -->
+  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
+  <!-- of a request passed to the envoker is treated as a servlet name for  -->
+  <!-- an existing servlet, or as a class name of a new servlet.            -->
+  <!-- This servlet is normally mapped to /servlet/*                        -->
+  <!-- This servlet support the following initParams:                       -->
+  <!--                                                                      -->
+  <!--  nonContextServlets       If false, the invoker can only load        -->
+  <!--                           servlets from the contexts classloader.    -->
+  <!--                           This is false by default and setting this  -->
+  <!--                           to true may have security implications.    -->
+  <!--                                                                      -->
+  <!--  verbose                  If true, log dynamic loads                 -->
+  <!--                                                                      -->
+  <!--  *                        All other parameters are copied to the     -->
+  <!--                           each dynamic servlet as init parameters    -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- Uncomment for dynamic invocation
+  <servlet>
+    <servlet-name>invoker</servlet-name>
+    <servlet-class>org.mortbay.jetty.servlet.Invoker</servlet-class>
+    <init-param>
+      <param-name>verbose</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>nonContextServlets</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>dynamicParam</param-name>
+      <param-value>anyValue</param-value>
+    </init-param>
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping> <servlet-name>invoker</servlet-name> <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
+  -->
+
+
+
+  <!-- ==================================================================== -->
+  <session-config>
+    <session-timeout>30</session-timeout>
+  </session-config>
+
+  <!-- ==================================================================== -->
+  <!-- Default MIME mappings                                                -->
+  <!-- The default MIME mappings are provided by the mime.properties        -->
+  <!-- resource in the org.mortbay.jetty.jar file.  Additional or modified  -->
+  <!-- mappings may be specified here                                       -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- UNCOMMENT TO ACTIVATE
+  <mime-mapping>
+    <extension>mysuffix</extension>
+    <mime-type>mymime/type</mime-type>
+  </mime-mapping>
+  -->
+
+  <!-- ==================================================================== -->
+  <welcome-file-list>
+    <welcome-file>index.html</welcome-file>
+    <welcome-file>index.htm</welcome-file>
+    <welcome-file>index.jsp</welcome-file>
+  </welcome-file-list>
+
+  <!-- ==================================================================== -->
+  <locale-encoding-mapping-list>
+    <locale-encoding-mapping><locale>ar</locale><encoding>ISO-8859-6</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>be</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>bg</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ca</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>cs</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>da</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>de</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>el</locale><encoding>ISO-8859-7</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>en</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>es</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>et</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>fi</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>fr</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>hr</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>hu</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>is</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>it</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>iw</locale><encoding>ISO-8859-8</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ja</locale><encoding>Shift_JIS</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ko</locale><encoding>EUC-KR</encoding></locale-encoding-mapping>     
+    <locale-encoding-mapping><locale>lt</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>lv</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>mk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>nl</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>no</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>pl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>pt</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ro</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ru</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sh</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sk</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sq</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sr</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sv</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>tr</locale><encoding>ISO-8859-9</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>uk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>zh</locale><encoding>GB2312</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>zh_TW</locale><encoding>Big5</encoding></locale-encoding-mapping>   
+  </locale-encoding-mapping-list>
+  
+  <security-constraint>
+    <web-resource-collection>
+      <web-resource-name>Disable TRACE</web-resource-name>
+      <url-pattern>/</url-pattern>
+      <http-method>TRACE</http-method>
+    </web-resource-collection>
+    <auth-constraint/>
+  </security-constraint>
+  
+</web-app>
+
-- 
1.7.2.5


From 3150af29a7770605c384e9c36415e36f4a34d3fc Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Fri, 7 Sep 2012 09:47:15 +0200
Subject: [PATCH 03/66] JJ: delete svn files

---
 .../conf/.svn/text-base/schema.xml.svn-base        |   47 -
 .../conf/.svn/text-base/solrconfig.xml.svn-base    | 1498 --------------------
 share/solr-data/.svn/text-base/jetty.xml.svn-base  |  227 ---
 share/solr-data/.svn/text-base/solr.xml.svn-base   |    3 -
 .../solr-data/.svn/text-base/start.config.svn-base |   56 -
 .../.svn/text-base/webdefault.xml.svn-base         |  410 ------
 .../contexts/.svn/text-base/solr.xml.svn-base      |    8 -
 7 files changed, 0 insertions(+), 2249 deletions(-)
 delete mode 100644 share/core-data/conf/.svn/text-base/schema.xml.svn-base
 delete mode 100644 share/core-data/conf/.svn/text-base/solrconfig.xml.svn-base
 delete mode 100644 share/solr-data/.svn/text-base/jetty.xml.svn-base
 delete mode 100644 share/solr-data/.svn/text-base/solr.xml.svn-base
 delete mode 100644 share/solr-data/.svn/text-base/start.config.svn-base
 delete mode 100644 share/solr-data/.svn/text-base/webdefault.xml.svn-base
 delete mode 100644 share/solr-data/contexts/.svn/text-base/solr.xml.svn-base

diff --git a/share/core-data/conf/.svn/text-base/schema.xml.svn-base b/share/core-data/conf/.svn/text-base/schema.xml.svn-base
deleted file mode 100644
index 13e9782..0000000
--- a/share/core-data/conf/.svn/text-base/schema.xml.svn-base
+++ /dev/null
@@ -1,47 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<schema name="meresco-corename" version="1.5">
-
-  <types>
-    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
-    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100" omitNorms="false" multiValued="true" indexed="true" stored="false">
-      <analyzer>
-        <tokenizer class="solr.ClassicTokenizerFactory"/>
-        <filter class="solr.LowerCaseFilterFactory"/>
-      </analyzer>
-    </fieldType>
-    <fieldType name="untokenized_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="true" indexed="true" stored="false" />
-    <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
- </types>
-
-
- <fields>
-   <field name="__id__" type="string" stored="true" required="true" /> 
-   <field name="__all__" type="text_ws" /> 
-   <dynamicField name="sorted.*" type="sorted_string" />
-   <dynamicField name="untokenized.*" type="untokenized_string" />
-   <dynamicField name="meta.*" type="untokenized_string" />
-   <dynamicField name="*" type="text_ws" />
- </fields>
-
- <uniqueKey>__id__</uniqueKey>
- <defaultSearchField>__all__</defaultSearchField>
-
- <solrQueryParser defaultOperator="AND"/>
-</schema>
diff --git a/share/core-data/conf/.svn/text-base/solrconfig.xml.svn-base b/share/core-data/conf/.svn/text-base/solrconfig.xml.svn-base
deleted file mode 100644
index 3c5d73a..0000000
--- a/share/core-data/conf/.svn/text-base/solrconfig.xml.svn-base
+++ /dev/null
@@ -1,1498 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<!-- 
-     For more details about configurations options that may appear in
-     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
--->
-<config>
-  <!-- In all configuration below, a prefix of "solr." for class names
-       is an alias that causes solr to search appropriate packages,
-       including org.apache.solr.(search|update|request|core|analysis)
-
-       You may also specify a fully qualified Java classname if you
-       have your own custom plugins.
-    -->
-
-  <!-- Set this to 'false' if you want solr to continue working after
-       it has encountered an severe configuration error.  In a
-       production environment, you may want solr to keep working even
-       if one handler is mis-configured.
-
-       You may also set this to false using by setting the system
-       property:
-
-         -Dsolr.abortOnConfigurationError=false
-    -->
-  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
-  
-  <!-- Controls what version of Lucene various components of Solr
-       adhere to.  Generally, you want to use the latest version to
-       get all bug fixes and improvements. It is highly recommended
-       that you fully re-index after changing this setting as it can
-       affect both how text is indexed and queried.
-    -->
-  <luceneMatchVersion>LUCENE_36</luceneMatchVersion>
-
-  <!-- lib directives can be used to instruct Solr to load an Jars
-       identified and use them to resolve any "plugins" specified in
-       your solrconfig.xml or schema.xml (ie: Analyzers, Request
-       Handlers, etc...).
-
-       All directories and paths are resolved relative to the
-       instanceDir.
-
-       If a "./lib" directory exists in your instanceDir, all files
-       found in it are included as if you had used the following
-       syntax...
-       
-              <lib dir="./lib" />
-    -->
-  <!-- A dir option by itself adds any files found in the directory to
-       the classpath, this is useful for including all jars in a
-       directory.
-    -->
-  <lib dir="../../contrib/extraction/lib" />
-  <!-- When a regex is specified in addition to a directory, only the
-       files in that directory which completely match the regex
-       (anchored on both ends) will be included.
-    -->
-  <lib dir="../../dist/" regex="apache-solr-cell-\d.*\.jar" />
-  <lib dir="../../dist/" regex="apache-solr-clustering-\d.*\.jar" />
-  <lib dir="../../dist/" regex="apache-solr-dataimporthandler-\d.*\.jar" />
-
-  <!-- If a dir option (with or without a regex) is used and nothing
-       is found that matches, it will be ignored
-    -->
-  <lib dir="../../contrib/clustering/lib/" />
-  <lib dir="/total/crap/dir/ignored" /> 
-  <!-- an exact path can be used to specify a specific file.  This
-       will cause a serious error to be logged if it can't be loaded.
-    -->
-  <!--
-  <lib path="../a-jar-that-does-not-exist.jar" /> 
-  -->
-  
-  <!-- Data Directory
-
-       Used to specify an alternate directory to hold all index data
-       other than the default ./data under the Solr home.  If
-       replication is in use, this should match the replication
-       configuration.
-  <dataDir>${solr.data.dir:}</dataDir>
-    -->
-
-
-  <!-- The DirectoryFactory to use for indexes.
-       
-       solr.StandardDirectoryFactory, the default, is filesystem
-       based.  solr.RAMDirectoryFactory is memory based, not
-       persistent, and doesn't work with replication.
-    -->
-  <directoryFactory name="DirectoryFactory" 
-                    class="${solr.directoryFactory:solr.StandardDirectoryFactory}"/>
-
-
-  <!-- Index Defaults
-
-       Values here affect all index writers and act as a default
-       unless overridden.
-
-       WARNING: See also the <mainIndex> section below for parameters
-       that overfor Solr's main Lucene index.
-    -->
-  <indexDefaults>
-
-    <useCompoundFile>true</useCompoundFile>
-
-    <mergeFactor>10</mergeFactor>
-    <!-- Sets the amount of RAM that may be used by Lucene indexing
-         for buffering added documents and deletions before they are
-         flushed to the Directory.  -->
-    <ramBufferSizeMB>32</ramBufferSizeMB>
-    <!-- If both ramBufferSizeMB and maxBufferedDocs is set, then
-         Lucene will flush based on whichever limit is hit first.  
-      -->
-    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->
-
-    <maxFieldLength>10000</maxFieldLength>
-    <writeLockTimeout>1000</writeLockTimeout>
-    <commitLockTimeout>10000</commitLockTimeout>
-
-    <!-- Expert: Merge Policy 
-
-         The Merge Policy in Lucene controls how merging is handled by
-         Lucene.  The default in 2.3 is the LogByteSizeMergePolicy,
-         previous versions used LogDocMergePolicy.
-         
-         LogByteSizeMergePolicy chooses segments to merge based on
-         their size.  The Lucene 2.2 default, LogDocMergePolicy chose
-         when to merge based on number of documents
-         
-         Other implementations of MergePolicy must have a no-argument
-         constructor
-      -->
-    <!--
-       <mergePolicy class="org.apache.lucene.index.LogByteSizeMergePolicy"/>
-       -->
-
-    <!-- Expert: Merge Scheduler
-
-         The Merge Scheduler in Lucene controls how merges are
-         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
-         can perform merges in the background using separate threads.
-         The SerialMergeScheduler (Lucene 2.2 default) does not.
-     -->
-    <!-- 
-       <mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler"/>
-       -->
-	  
-    <!-- LockFactory 
-
-         This option specifies which Lucene LockFactory implementation
-         to use.
-      
-         single = SingleInstanceLockFactory - suggested for a
-                  read-only index or when there is no possibility of
-                  another process trying to modify the index.
-         native = NativeFSLockFactory - uses OS native file locking.
-                  Do not use when multiple solr webapps in the same
-                  JVM are attempting to share a single index.
-         simple = SimpleFSLockFactory  - uses a plain file for locking
-
-         (For backwards compatibility with Solr 1.2, 'simple' is the
-         default if not specified.)
-
-         More details on the nuances of each LockFactory...
-         http://wiki.apache.org/lucene-java/AvailableLockFactories
-    -->
-    <lockType>native</lockType>
-
-    <!-- Expert: Controls how often Lucene loads terms into memory
-         Default is 128 and is likely good for most everyone.
-      -->
-    <!-- <termIndexInterval>256</termIndexInterval> -->
-  </indexDefaults>
-
-  <!-- Main Index
-
-       Values here override the values in the <indexDefaults> section
-       for the main on disk index.
-    -->
-  <mainIndex>
-
-    <useCompoundFile>true</useCompoundFile>
-    <ramBufferSizeMB>32</ramBufferSizeMB>
-    <mergeFactor>10</mergeFactor>
-
-    <!-- Unlock On Startup
-
-         If true, unlock any held write or commit locks on startup.
-         This defeats the locking mechanism that allows multiple
-         processes to safely access a lucene index, and should be used
-         with care.
-
-         This is not needed if lock type is 'none' or 'single'
-     -->
-    <unlockOnStartup>false</unlockOnStartup>
-    
-    <!-- If true, IndexReaders will be reopened (often more efficient)
-         instead of closed and then opened.
-      -->
-    <reopenReaders>true</reopenReaders>
-
-    <!-- Commit Deletion Policy
-
-         Custom deletion policies can specified here. The class must
-         implement org.apache.lucene.index.IndexDeletionPolicy.
-
-         http://lucene.apache.org/java/2_9_1/api/all/org/apache/lucene/index/IndexDeletionPolicy.html
-
-         The standard Solr IndexDeletionPolicy implementation supports
-         deleting index commit points on number of commits, age of
-         commit point and optimized status.
-         
-         The latest commit point should always be preserved regardless
-         of the criteria.
-    -->
-    <deletionPolicy class="solr.SolrDeletionPolicy">
-      <!-- The number of commit points to be kept -->
-      <str name="maxCommitsToKeep">1</str>
-      <!-- The number of optimized commit points to be kept -->
-      <str name="maxOptimizedCommitsToKeep">0</str>
-      <!--
-          Delete all commit points once they have reached the given age.
-          Supports DateMathParser syntax e.g.
-        -->
-      <!--
-         <str name="maxCommitAge">30MINUTES</str>
-         <str name="maxCommitAge">1DAY</str>
-      -->
-    </deletionPolicy>
-
-    <!-- Lucene Infostream
-       
-         To aid in advanced debugging, Lucene provides an "InfoStream"
-         of detailed information when indexing.
-
-         Setting The value to true will instruct the underlying Lucene
-         IndexWriter to write it's debugging info the specified file
-      -->
-     <infoStream file="INFOSTREAM.txt">false</infoStream> 
-
-  </mainIndex>
-
-  <!-- JMX
-       
-       This example enables JMX if and only if an existing MBeanServer
-       is found, use this if you want to configure JMX through JVM
-       parameters. Remove this to disable exposing Solr configuration
-       and statistics to JMX.
-
-       For more details see http://wiki.apache.org/solr/SolrJmx
-    -->
-  <jmx />
-  <!-- If you want to connect to a particular server, specify the
-       agentId 
-    -->
-  <!-- <jmx agentId="myAgent" /> -->
-  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->
-  <!-- <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr"/>
-    -->
-
-  <!-- The default high-performance update handler -->
-  <updateHandler class="solr.DirectUpdateHandler2">
-
-    <!-- AutoCommit
-
-         Perform a <commit/> automatically under certain conditions.
-         Instead of enabling autoCommit, consider using "commitWithin"
-         when adding documents. 
-
-         http://wiki.apache.org/solr/UpdateXmlMessages
-
-         maxDocs - Maximum number of documents to add since the last
-                   commit before automaticly triggering a new commit.
-
-         maxTime - Maximum amount of time that is allowed to pass
-                   since a document was added before automaticly
-                   triggering a new commit. 
-      -->
-    <!--
-       <autoCommit> 
-         <maxDocs>10000</maxDocs>
-         <maxTime>1000</maxTime> 
-       </autoCommit>
-      -->
-
-    <!-- Update Related Event Listeners
-         
-         Various IndexWriter realted events can trigger Listeners to
-         take actions.
-
-         postCommit - fired after every commit or optimize command
-         postOptimize - fired after every optimize command
-      -->
-    <!-- The RunExecutableListener executes an external command from a
-         hook such as postCommit or postOptimize.
-         
-         exe - the name of the executable to run
-         dir - dir to use as the current working directory. (default=".")
-         wait - the calling thread waits until the executable returns. 
-                (default="true")
-         args - the arguments to pass to the program.  (default is none)
-         env - environment variables to set.  (default is none)
-      -->
-    <!-- This example shows how RunExecutableListener could be used
-         with the script based replication...
-         http://wiki.apache.org/solr/CollectionDistribution
-      -->
-    <!--
-       <listener event="postCommit" class="solr.RunExecutableListener">
-         <str name="exe">solr/bin/snapshooter</str>
-         <str name="dir">.</str>
-         <bool name="wait">true</bool>
-         <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
-         <arr name="env"> <str>MYVAR=val1</str> </arr>
-       </listener>
-      -->
-  </updateHandler>
-  
-  <!-- IndexReaderFactory
-
-       Use the following format to specify a custom IndexReaderFactory,
-       which allows for alternate IndexReader implementations.
-
-       ** Experimental Feature **
-
-       Please note - Using a custom IndexReaderFactory may prevent
-       certain other features from working. The API to
-       IndexReaderFactory may change without warning or may even be
-       removed from future releases if the problems cannot be
-       resolved.
-
-
-       ** Features that may not work with custom IndexReaderFactory **
-
-       The ReplicationHandler assumes a disk-resident index. Using a
-       custom IndexReader implementation may cause incompatibility
-       with ReplicationHandler and may cause replication to not work
-       correctly. See SOLR-1366 for details.
-
-    -->
-  <!--
-  <indexReaderFactory name="IndexReaderFactory" class="package.class">
-    <str name="someArg">Some Value</str>
-  </indexReaderFactory >
-  -->
-  <!-- By explicitly declaring the Factory, the termIndexDivisor can
-       be specified.
-    -->
-  <!--
-     <indexReaderFactory name="IndexReaderFactory" 
-                         class="solr.StandardIndexReaderFactory">
-       <int name="setTermIndexDivisor">12</int>
-     </indexReaderFactory >
-    -->
-
-
-  <query>
-    <!-- Max Boolean Clauses
-
-         Maximum number of clauses in each BooleanQuery,  an exception
-         is thrown if exceeded.
-
-         ** WARNING **
-         
-         This option actually modifies a global Lucene property that
-         will affect all SolrCores.  If multiple solrconfig.xml files
-         disagree on this property, the value at any given moment will
-         be based on the last SolrCore to be initialized.
-         
-      -->
-    <maxBooleanClauses>1024</maxBooleanClauses>
-
-
-    <!-- Solr Internal Query Caches
-
-         There are two implementations of cache available for Solr,
-         LRUCache, based on a synchronized LinkedHashMap, and
-         FastLRUCache, based on a ConcurrentHashMap.  
-
-         FastLRUCache has faster gets and slower puts in single
-         threaded operation and thus is generally faster than LRUCache
-         when the hit ratio of the cache is high (> 75%), and may be
-         faster under other scenarios on multi-cpu systems.
-    -->
-
-    <!-- Filter Cache
-
-         Cache used by SolrIndexSearcher for filters (DocSets),
-         unordered sets of *all* documents that match a query.  When a
-         new searcher is opened, its caches may be prepopulated or
-         "autowarmed" using data from caches in the old searcher.
-         autowarmCount is the number of items to prepopulate.  For
-         LRUCache, the autowarmed items will be the most recently
-         accessed items.
-
-         Parameters:
-           class - the SolrCache implementation LRUCache or
-               (LRUCache or FastLRUCache)
-           size - the maximum number of entries in the cache
-           initialSize - the initial capacity (number of entries) of
-               the cache.  (see java.util.HashMap)
-           autowarmCount - the number of entries to prepopulate from
-               and old cache.  
-      -->
-    <filterCache class="solr.FastLRUCache"
-                 size="512"
-                 initialSize="512"
-                 autowarmCount="0"/>
-
-    <!-- Query Result Cache
-         
-         Caches results of searches - ordered lists of document ids
-         (DocList) based on a query, a sort, and the range of documents requested.  
-      -->
-    <queryResultCache class="solr.LRUCache"
-                     size="512"
-                     initialSize="512"
-                     autowarmCount="0"/>
-   
-    <!-- Document Cache
-
-         Caches Lucene Document objects (the stored fields for each
-         document).  Since Lucene internal document ids are transient,
-         this cache will not be autowarmed.  
-      -->
-    <documentCache class="solr.LRUCache"
-                   size="512"
-                   initialSize="512"
-                   autowarmCount="0"/>
-    
-    <!-- Field Value Cache
-         
-         Cache used to hold field values that are quickly accessible
-         by document id.  The fieldValueCache is created by default
-         even if not configured here.
-      -->
-    <!--
-       <fieldValueCache class="solr.FastLRUCache"
-                        size="512"
-                        autowarmCount="128"
-                        showItems="32" />
-      -->
-
-    <!-- Custom Cache
-
-         Example of a generic cache.  These caches may be accessed by
-         name through SolrIndexSearcher.getCache(),cacheLookup(), and
-         cacheInsert().  The purpose is to enable easy caching of
-         user/application level data.  The regenerator argument should
-         be specified as an implementation of solr.CacheRegenerator 
-         if autowarming is desired.  
-      -->
-    <!--
-       <cache name="myUserCache"
-              class="solr.LRUCache"
-              size="4096"
-              initialSize="1024"
-              autowarmCount="1024"
-              regenerator="com.mycompany.MyRegenerator"
-              />
-      -->
-
-
-    <!-- Lazy Field Loading
-
-         If true, stored fields that are not requested will be loaded
-         lazily.  This can result in a significant speed improvement
-         if the usual case is to not load all stored fields,
-         especially if the skipped fields are large compressed text
-         fields.
-    -->
-    <enableLazyFieldLoading>true</enableLazyFieldLoading>
-
-   <!-- Use Filter For Sorted Query
-
-        A possible optimization that attempts to use a filter to
-        satisfy a search.  If the requested sort does not include
-        score, then the filterCache will be checked for a filter
-        matching the query. If found, the filter will be used as the
-        source of document ids, and then the sort will be applied to
-        that.
-
-        For most situations, this will not be useful unless you
-        frequently get the same search repeatedly with differnet sort
-        options, and none of them ever use "score"
-     -->
-   <!--
-      <useFilterForSortedQuery>true</useFilterForSortedQuery>
-     -->
-
-   <!-- Result Window Size
-
-        An optimization for use with the queryResultCache.  When a search
-        is requested, a superset of the requested number of document ids
-        are collected.  For example, if a search for a particular query
-        requests matching documents 10 through 19, and queryWindowSize is 50,
-        then documents 0 through 49 will be collected and cached.  Any further
-        requests in that range can be satisfied via the cache.  
-     -->
-   <queryResultWindowSize>20</queryResultWindowSize>
-
-   <!-- Maximum number of documents to cache for any entry in the
-        queryResultCache. 
-     -->
-   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
-
-   <!-- Query Related Event Listeners
-
-        Various IndexSearcher related events can trigger Listeners to
-        take actions.
-
-        newSearcher - fired whenever a new searcher is being prepared
-        and there is a current searcher handling requests (aka
-        registered).  It can be used to prime certain caches to
-        prevent long request times for certain requests.
-
-        firstSearcher - fired whenever a new searcher is being
-        prepared but there is no current registered searcher to handle
-        requests or to gain autowarming data from.
-
-        
-     -->
-    <!-- QuerySenderListener takes an array of NamedList and executes a
-         local query request for each NamedList in sequence. 
-      -->
-    <listener event="newSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <!--
-           <lst><str name="q">solr</str><str name="sort">price asc</str></lst>
-           <lst><str name="q">rocks</str><str name="sort">weight asc</str></lst>
-          -->
-      </arr>
-    </listener>
-    <listener event="firstSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <lst>
-          <str name="q">static firstSearcher warming in solrconfig.xml</str>
-        </lst>
-      </arr>
-    </listener>
-
-    <!-- Use Cold Searcher
-
-         If a search request comes in and there is no current
-         registered searcher, then immediately register the still
-         warming searcher and use it.  If "false" then all requests
-         will block until the first searcher is done warming.
-      -->
-    <useColdSearcher>false</useColdSearcher>
-
-    <!-- Max Warming Searchers
-         
-         Maximum number of searchers that may be warming in the
-         background concurrently.  An error is returned if this limit
-         is exceeded.
-
-         Recommend values of 1-2 for read-only slaves, higher for
-         masters w/o cache warming.
-      -->
-    <maxWarmingSearchers>2</maxWarmingSearchers>
-
-  </query>
-
-
-  <!-- Request Dispatcher
-
-       This section contains instructions for how the SolrDispatchFilter
-       should behave when processing requests for this SolrCore.
-
-       handleSelect affects the behavior of requests such as /select?qt=XXX
-
-       handleSelect="true" will cause the SolrDispatchFilter to process
-       the request and will result in consistent error handling and
-       formating for all types of requests.
-
-       handleSelect="false" will cause the SolrDispatchFilter to
-       ignore "/select" requests and fallback to using the legacy
-       SolrServlet and it's Solr 1.1 style error formatting
-    -->
-  <requestDispatcher handleSelect="true" >
-    <!-- Request Parsing
-
-         These settings indicate how Solr Requests may be parsed, and
-         what restrictions may be placed on the ContentStreams from
-         those requests
-
-         enableRemoteStreaming - enables use of the stream.file
-         and stream.url paramaters for specifying remote streams.
-
-         multipartUploadLimitInKB - specifies the max size of
-         Multipart File Uploads that Solr will alow in a Request.
-         
-         *** WARNING ***
-         The settings below authorize Solr to fetch remote files, You
-         should make sure your system has some authentication before
-         using enableRemoteStreaming="true"
-
-      --> 
-    <requestParsers enableRemoteStreaming="true" 
-                    multipartUploadLimitInKB="2048000" />
-
-    <!-- HTTP Caching
-
-         Set HTTP caching related parameters (for proxy caches and clients).
-
-         The options below instruct Solr not to output any HTTP Caching
-         related headers
-      -->
-    <httpCaching never304="true" />
-    <!-- If you include a <cacheControl> directive, it will be used to
-         generate a Cache-Control header (as well as an Expires header
-         if the value contains "max-age=")
-         
-         By default, no Cache-Control header is generated.
-         
-         You can use the <cacheControl> option even if you have set
-         never304="true"
-      -->
-    <!--
-       <httpCaching never304="true" >
-         <cacheControl>max-age=30, public</cacheControl> 
-       </httpCaching>
-      -->
-    <!-- To enable Solr to responde with automaticly generated HTTP
-         Caching headers, and to response to Cache Validation requests
-         correctly, set the value of never304="false"
-         
-         This will cause Solr to generate Last-Modified and ETag
-         headers based on the properties of the Index.
-
-         The following options can also be specified to affect the
-         values of these headers...
-
-         lastModFrom - the default value is "openTime" which means the
-         Last-Modified value (and validation against If-Modified-Since
-         requests) will all be relative to when the current Searcher
-         was opened.  You can change it to lastModFrom="dirLastMod" if
-         you want the value to exactly corrispond to when the physical
-         index was last modified.
-
-         etagSeed="..." is an option you can change to force the ETag
-         header (and validation against If-None-Match requests) to be
-         differnet even if the index has not changed (ie: when making
-         significant changes to your config file)
-
-         (lastModifiedFrom and etagSeed are both ignored if you use
-         the never304="true" option)
-      -->
-    <!--
-       <httpCaching lastModifiedFrom="openTime"
-                    etagSeed="Solr">
-         <cacheControl>max-age=30, public</cacheControl> 
-       </httpCaching>
-      -->
-  </requestDispatcher>
-
-  <!-- Request Handlers 
-
-       http://wiki.apache.org/solr/SolrRequestHandler
-
-       incoming queries will be dispatched to the correct handler
-       based on the path or the qt (query type) param.
-
-       Names starting with a '/' are accessed with the a path equal to
-       the registered name.  Names without a leading '/' are accessed
-       with: http://host/app/[core/]select?qt=name
-
-       If a /select request is processed with out a qt param
-       specified, the requestHandler that declares default="true" will
-       be used.
-       
-       If a Request Handler is declared with startup="lazy", then it will
-       not be initialized until the first request that uses it.
-
-    -->
-  <!-- SearchHandler
-
-       http://wiki.apache.org/solr/SearchHandler
-
-       For processing Search Queries, the primary Request Handler
-       provided with Solr is "SearchHandler" It delegates to a sequent
-       of SearchComponents (see below) and supports distributed
-       queries across multiple shards
-    -->
-  <requestHandler name="search" class="solr.SearchHandler" default="true">
-    <!-- default values for query parameters can be specified, these
-         will be overridden by parameters in the request
-      -->
-     <lst name="defaults">
-       <str name="echoParams">explicit</str>
-       <int name="rows">10</int>
-     </lst>
-    <!-- In addition to defaults, "appends" params can be specified
-         to identify values which should be appended to the list of
-         multi-val params from the query (or the existing "defaults").
-      -->
-    <!-- In this example, the param "fq=instock:true" would be appended to
-         any query time fq params the user may specify, as a mechanism for
-         partitioning the index, independent of any user selected filtering
-         that may also be desired (perhaps as a result of faceted searching).
-
-         NOTE: there is *absolutely* nothing a client can do to prevent these
-         "appends" values from being used, so don't use this mechanism
-         unless you are sure you always want it.
-      -->
-    <!--
-       <lst name="appends">
-         <str name="fq">inStock:true</str>
-       </lst>
-      -->
-    <!-- "invariants" are a way of letting the Solr maintainer lock down
-         the options available to Solr clients.  Any params values
-         specified here are used regardless of what values may be specified
-         in either the query, the "defaults", or the "appends" params.
-
-         In this example, the facet.field and facet.query params would
-         be fixed, limiting the facets clients can use.  Faceting is
-         not turned on by default - but if the client does specify
-         facet=true in the request, these are the only facets they
-         will be able to see counts for; regardless of what other
-         facet.field or facet.query params they may specify.
-
-         NOTE: there is *absolutely* nothing a client can do to prevent these
-         "invariants" values from being used, so don't use this mechanism
-         unless you are sure you always want it.
-      -->
-    <!--
-       <lst name="invariants">
-         <str name="facet.field">cat</str>
-         <str name="facet.field">manu_exact</str>
-         <str name="facet.query">price:[* TO 500]</str>
-         <str name="facet.query">price:[500 TO *]</str>
-       </lst>
-      -->
-    <!-- If the default list of SearchComponents is not desired, that
-         list can either be overridden completely, or components can be
-         prepended or appended to the default list.  (see below)
-      -->
-    <!--
-       <arr name="components">
-         <str>nameOfCustomComponent1</str>
-         <str>nameOfCustomComponent2</str>
-       </arr>
-      -->
-    </requestHandler>
-
-  <!-- A Robust Example
-
-       This example SearchHandler declaration shows off usage of the
-       SearchHandler with many defaults declared
-
-       Note that multiple instances of hte same Request Handler
-       (SearchHandler) can be registered multiple times with different
-       names (and different init parameters)
-    -->
-  <requestHandler name="/browse" class="solr.SearchHandler">
-     <lst name="defaults">
-       <str name="echoParams">explicit</str>
-
-       <!-- VelocityResponseWriter settings -->
-       <str name="wt">velocity</str>
-
-       <str name="v.template">browse</str>
-       <str name="v.layout">layout</str>
-       <str name="title">Solritas</str>
-
-       <str name="defType">edismax</str>
-       <str name="q.alt">*:*</str>
-       <str name="rows">10</str>
-       <str name="fl">*,score</str>
-       <str name="mlt.qf">
-         text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-       <str name="mlt.fl">text,features,name,sku,id,manu,cat</str>
-       <int name="mlt.count">3</int>
-
-       <str name="qf">
-          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-
-       <str name="facet">on</str>
-       <str name="facet.field">cat</str>
-       <str name="facet.field">manu_exact</str>
-       <str name="facet.query">ipod</str>
-       <str name="facet.query">GB</str>
-       <str name="facet.mincount">1</str>
-       <str name="facet.pivot">cat,inStock</str>
-       <str name="facet.range">price</str>
-       <int name="f.price.facet.range.start">0</int>
-       <int name="f.price.facet.range.end">600</int>
-       <int name="f.price.facet.range.gap">50</int>
-       <str name="f.price.facet.range.other">after</str>
-       <str name="facet.range">manufacturedate_dt</str>
-       <str name="f.manufacturedate_dt.facet.range.start">NOW/YEAR-10YEARS</str>
-       <str name="f.manufacturedate_dt.facet.range.end">NOW</str>
-       <str name="f.manufacturedate_dt.facet.range.gap">+1YEAR</str>
-       <str name="f.manufacturedate_dt.facet.range.other">before</str>
-       <str name="f.manufacturedate_dt.facet.range.other">after</str>
-
-
-       <!-- Highlighting defaults -->
-       <str name="hl">on</str>
-       <str name="hl.fl">text features name</str>
-       <str name="f.name.hl.fragsize">0</str>
-       <str name="f.name.hl.alternateField">name</str>
-     </lst>
-     <arr name="last-components">
-       <str>spellcheck</str>
-     </arr>
-     <!--
-     <str name="url-scheme">httpx</str>
-     -->
-  </requestHandler>
-
-  <!-- XML Update Request Handler.  
-       
-       http://wiki.apache.org/solr/UpdateXmlMessages
-
-       The canonical Request Handler for Modifying the Index through
-       commands specified using XML.
-
-       Note: Since solr1.1 requestHandlers requires a valid content
-       type header if posted in the body. For example, curl now
-       requires: -H 'Content-type:text/xml; charset=utf-8'
-    -->
-  <requestHandler name="/update" 
-                  class="solr.XmlUpdateRequestHandler">
-    <!-- See below for information on defining 
-         updateRequestProcessorChains that can be used by name 
-         on each Update Request
-      -->
-    <!--
-       <lst name="defaults">
-         <str name="update.chain">dedupe</str>
-       </lst>
-       -->
-    </requestHandler>
-  <!-- Binary Update Request Handler
-       http://wiki.apache.org/solr/javabin
-    -->
-  <requestHandler name="/update/javabin" 
-                  class="solr.BinaryUpdateRequestHandler" />
-
-  <!-- CSV Update Request Handler
-       http://wiki.apache.org/solr/UpdateCSV
-    -->
-  <requestHandler name="/update/csv" 
-                  class="solr.CSVRequestHandler" 
-                  startup="lazy" />
-
-  <!-- JSON Update Request Handler
-       http://wiki.apache.org/solr/UpdateJSON
-    -->
-  <requestHandler name="/update/json" 
-                  class="solr.JsonUpdateRequestHandler" 
-                  startup="lazy" />
-
-  <!-- Solr Cell Update Request Handler
-
-       http://wiki.apache.org/solr/ExtractingRequestHandler 
-
-    -->
-  <requestHandler name="/update/extract" 
-                  startup="lazy"
-                  class="solr.extraction.ExtractingRequestHandler" >
-    <lst name="defaults">
-      <!-- All the main content goes into "text"... if you need to return
-           the extracted text or do highlighting, use a stored field. -->
-      <str name="fmap.content">text</str>
-      <str name="lowernames">true</str>
-      <str name="uprefix">ignored_</str>
-
-      <!-- capture link hrefs but ignore div attributes -->
-      <str name="captureAttr">true</str>
-      <str name="fmap.a">links</str>
-      <str name="fmap.div">ignored_</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Field Analysis Request Handler
-
-       RequestHandler that provides much the same functionality as
-       analysis.jsp. Provides the ability to specify multiple field
-       types and field names in the same request and outputs
-       index-time and query-time analysis for each of them.
-
-       Request parameters are:
-       analysis.fieldname - field name whose analyzers are to be used
-
-       analysis.fieldtype - field type whose analyzers are to be used
-       analysis.fieldvalue - text for index-time analysis
-       q (or analysis.q) - text for query time analysis
-       analysis.showmatch (true|false) - When set to true and when
-           query analysis is performed, the produced tokens of the
-           field value analysis will be marked as "matched" for every
-           token that is produces by the query analysis
-   -->
-  <requestHandler name="/analysis/field" 
-                  startup="lazy"
-                  class="solr.FieldAnalysisRequestHandler" />
-
-
-  <!-- Document Analysis Handler
-
-       http://wiki.apache.org/solr/AnalysisRequestHandler
-
-       An analysis handler that provides a breakdown of the analysis
-       process of provided docuemnts. This handler expects a (single)
-       content stream with the following format:
-
-       <docs>
-         <doc>
-           <field name="id">1</field>
-           <field name="name">The Name</field>
-           <field name="text">The Text Value</field>
-         </doc>
-         <doc>...</doc>
-         <doc>...</doc>
-         ...
-       </docs>
-
-    Note: Each document must contain a field which serves as the
-    unique key. This key is used in the returned response to assoicate
-    ananalysis breakdown to the analyzed document.
-
-    Like the FieldAnalysisRequestHandler, this handler also supports
-    query analysis by sending either an "analysis.query" or "q"
-    request paraemter that holds the query text to be analyized. It
-    also supports the "analysis.showmatch" parameter which when set to
-    true, all field tokens that match the query tokens will be marked
-    as a "match". 
-  -->
-  <requestHandler name="/analysis/document" 
-                  class="solr.DocumentAnalysisRequestHandler" 
-                  startup="lazy" />
-
-  <!-- Admin Handlers
-
-       Admin Handlers - This will register all the standard admin
-       RequestHandlers.  
-    -->
-  <requestHandler name="/admin/" 
-                  class="solr.admin.AdminHandlers" />
-  <!-- This single handler is equivilent to the following... -->
-  <!--
-     <requestHandler name="/admin/luke"       class="solr.admin.LukeRequestHandler" />
-     <requestHandler name="/admin/system"     class="solr.admin.SystemInfoHandler" />
-     <requestHandler name="/admin/plugins"    class="solr.admin.PluginInfoHandler" />
-     <requestHandler name="/admin/threads"    class="solr.admin.ThreadDumpHandler" />
-     <requestHandler name="/admin/properties" class="solr.admin.PropertiesRequestHandler" />
-     <requestHandler name="/admin/file"       class="solr.admin.ShowFileRequestHandler" >
-    -->
-  <!-- If you wish to hide files under ${solr.home}/conf, explicitly
-       register the ShowFileRequestHandler using: 
-    -->
-  <!--
-     <requestHandler name="/admin/file" 
-                     class="solr.admin.ShowFileRequestHandler" >
-       <lst name="invariants">
-         <str name="hidden">synonyms.txt</str> 
-         <str name="hidden">anotherfile.txt</str> 
-       </lst>
-     </requestHandler>
-    -->
-
-  <!-- ping/healthcheck -->
-  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
-    <lst name="defaults">
-      <str name="qt">search</str>
-      <str name="q">solrpingquery</str>
-      <str name="echoParams">all</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Echo the request contents back to the client -->
-  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
-    <lst name="defaults">
-     <str name="echoParams">explicit</str> 
-     <str name="echoHandler">true</str>
-    </lst>
-  </requestHandler>
-  
-  <!-- Solr Replication
-
-       The SolrReplicationHandler supports replicating indexes from a
-       "master" used for indexing and "salves" used for queries.
-
-       http://wiki.apache.org/solr/SolrReplication 
-
-       In the example below, remove the <lst name="master"> section if
-       this is just a slave and remove  the <lst name="slave"> section
-       if this is just a master.
-    -->
-  <!--
-     <requestHandler name="/replication" class="solr.ReplicationHandler" >
-       <lst name="master">
-         <str name="replicateAfter">commit</str>
-         <str name="replicateAfter">startup</str>
-         <str name="confFiles">schema.xml,stopwords.txt</str>
-       </lst>
-       <lst name="slave">
-         <str name="masterUrl">http://localhost:8983/solr/replication</str>
-         <str name="pollInterval">00:00:60</str>
-       </lst>
-     </requestHandler>
-    -->
-
-  <!-- Search Components
-
-       Search components are registered to SolrCore and used by 
-       instances of SearchHandler (which can access them by name)
-       
-       By default, the following components are avaliable:
-       
-       <searchComponent name="query"     class="solr.QueryComponent" />
-       <searchComponent name="facet"     class="solr.FacetComponent" />
-       <searchComponent name="mlt"       class="solr.MoreLikeThisComponent" />
-       <searchComponent name="highlight" class="solr.HighlightComponent" />
-       <searchComponent name="stats"     class="solr.StatsComponent" />
-       <searchComponent name="debug"     class="solr.DebugComponent" />
-   
-       Default configuration in a requestHandler would look like:
-
-       <arr name="components">
-         <str>query</str>
-         <str>facet</str>
-         <str>mlt</str>
-         <str>highlight</str>
-         <str>stats</str>
-         <str>debug</str>
-       </arr>
-
-       If you register a searchComponent to one of the standard names, 
-       that will be used instead of the default.
-
-       To insert components before or after the 'standard' components, use:
-    
-       <arr name="first-components">
-         <str>myFirstComponentName</str>
-       </arr>
-    
-       <arr name="last-components">
-         <str>myLastComponentName</str>
-       </arr>
-
-       NOTE: The component registered with the name "debug" will
-       always be executed after the "last-components" 
-       
-     -->
-
-   <!-- Spell Check
-
-        The spell check component can return a list of alternative spelling
-        suggestions.  
-
-        http://wiki.apache.org/solr/SpellCheckComponent
-     -->
-  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
-
-    <str name="queryAnalyzerFieldType">textSpell</str>
-
-    <!-- Multiple "Spell Checkers" can be declared and used by this
-         component
-      -->
-
-    <!-- a spellchecker built from a field of hte main index, and
-         written to disk
-      -->
-    <lst name="spellchecker">
-      <str name="name">default</str>
-      <str name="field">name</str>
-      <str name="spellcheckIndexDir">spellchecker</str>
-    </lst>
-
-    <!-- a spellchecker that uses a different distance measure -->
-    <!--
-       <lst name="spellchecker">
-         <str name="name">jarowinkler</str>
-         <str name="field">spell</str>
-         <str name="distanceMeasure">
-           org.apache.lucene.search.spell.JaroWinklerDistance
-         </str>
-         <str name="spellcheckIndexDir">spellcheckerJaro</str>
-       </lst>
-     -->
-
-    <!-- a spellchecker that use an alternate comparator 
-
-         comparatorClass be one of:
-          1. score (default)
-          2. freq (Frequency first, then score)
-          3. A fully qualified class name
-      -->
-    <!--
-       <lst name="spellchecker">
-         <str name="name">freq</str>
-         <str name="field">lowerfilt</str>
-         <str name="spellcheckIndexDir">spellcheckerFreq</str>
-         <str name="comparatorClass">freq</str>
-         <str name="buildOnCommit">true</str>
-      -->
-
-    <!-- A spellchecker that reads the list of words from a file -->
-    <!--
-       <lst name="spellchecker">
-         <str name="classname">solr.FileBasedSpellChecker</str>
-         <str name="name">file</str>
-         <str name="sourceLocation">spellings.txt</str>
-         <str name="characterEncoding">UTF-8</str>
-         <str name="spellcheckIndexDir">spellcheckerFile</str>
-       </lst>
-      -->
-  </searchComponent>
-
-  <!-- A request handler for demonstrating the spellcheck component.  
-
-       NOTE: This is purely as an example.  The whole purpose of the
-       SpellCheckComponent is to hook it into the request handler that
-       handles your normal user queries so that a separate request is
-       not needed to get suggestions.
-
-       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS
-       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!
-       
-       See http://wiki.apache.org/solr/SpellCheckComponent for details
-       on the request parameters.
-    -->
-  <requestHandler name="/spell" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <str name="spellcheck.onlyMorePopular">false</str>
-      <str name="spellcheck.extendedResults">false</str>
-      <str name="spellcheck.count">1</str>
-    </lst>
-    <arr name="last-components">
-      <str>spellcheck</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Term Vector Component
-
-       http://wiki.apache.org/solr/TermVectorComponent
-    -->
-  <searchComponent name="tvComponent" class="solr.TermVectorComponent"/>
-
-  <!-- A request handler for demonstrating the term vector component
-
-       This is purely as an example.
-
-       In reality you will likely want to add the component to your 
-       already specified request handlers. 
-    -->
-  <requestHandler name="tvrh" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <bool name="tv">true</bool>
-    </lst>
-    <arr name="last-components">
-      <str>tvComponent</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Clustering Component
-
-       http://wiki.apache.org/solr/ClusteringComponent
-
-       This relies on third party jars which are notincluded in the
-       release.  To use this component (and the "/clustering" handler)
-       Those jars will need to be downloaded, and you'll need to set
-       the solr.cluster.enabled system property when running solr...
-
-          java -Dsolr.clustering.enabled=true -jar start.jar
-    -->
-  <searchComponent name="clustering" 
-                   enable="${solr.clustering.enabled:false}"
-                   class="solr.clustering.ClusteringComponent" >
-    <!-- Declare an engine -->
-    <lst name="engine">
-      <!-- The name, only one can be named "default" -->
-      <str name="name">default</str>
-
-      <!-- Class name of Carrot2 clustering algorithm. 
-           
-           Currently available algorithms are:
-           
-           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm
-           * org.carrot2.clustering.stc.STCClusteringAlgorithm
-           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm
-           
-           See http://project.carrot2.org/algorithms.html for the
-           algorithm's characteristics.
-        -->
-      <str name="carrot.algorithm">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>
-
-      <!-- Overriding values for Carrot2 default algorithm attributes.
-
-           For a description of all available attributes, see:
-           http://download.carrot2.org/stable/manual/#chapter.components.
-           Use attribute key as name attribute of str elements
-           below. These can be further overridden for individual
-           requests by specifying attribute key as request parameter
-           name and attribute value as parameter value.
-        -->
-      <str name="LingoClusteringAlgorithm.desiredClusterCountBase">20</str>
-      
-      <!-- Location of Carrot2 lexical resources.
-
-           A directory from which to load Carrot2-specific stop words
-           and stop labels. Absolute or relative to Solr config directory.
-           If a specific resource (e.g. stopwords.en) is present in the
-           specified dir, it will completely override the corresponding
-           default one that ships with Carrot2.
-
-           For an overview of Carrot2 lexical resources, see:
-           http://download.carrot2.org/head/manual/#chapter.lexical-resources
-        -->
-      <str name="carrot.lexicalResourcesDir">clustering/carrot2</str>
-
-      <!-- The language to assume for the documents.
-           
-           For a list of allowed values, see:
-           http://download.carrot2.org/stable/manual/#section.attribute.lingo.MultilingualClustering.defaultLanguage
-       -->
-      <str name="MultilingualClustering.defaultLanguage">ENGLISH</str>
-    </lst>
-    <lst name="engine">
-      <str name="name">stc</str>
-      <str name="carrot.algorithm">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>
-    </lst>
-  </searchComponent>
-
-  <!-- A request handler for demonstrating the clustering component
-
-       This is purely as an example.
-
-       In reality you will likely want to add the component to your 
-       already specified request handlers. 
-    -->
-  <requestHandler name="/clustering"
-                  startup="lazy"
-                  enable="${solr.clustering.enabled:false}"
-                  class="solr.SearchHandler">
-    <lst name="defaults">
-      <bool name="clustering">true</bool>
-      <str name="clustering.engine">default</str>
-      <bool name="clustering.results">true</bool>
-      <!-- The title field -->
-      <str name="carrot.title">name</str>
-      <str name="carrot.url">id</str>
-      <!-- The field to cluster on -->
-       <str name="carrot.snippet">features</str>
-       <!-- produce summaries -->
-       <bool name="carrot.produceSummary">true</bool>
-       <!-- the maximum number of labels per cluster -->
-       <!--<int name="carrot.numDescriptions">5</int>-->
-       <!-- produce sub clusters -->
-       <bool name="carrot.outputSubClusters">false</bool>
-       
-       <str name="defType">edismax</str>
-       <str name="qf">
-          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-       <str name="q.alt">*:*</str>
-       <str name="rows">10</str>
-       <str name="fl">*,score</str>
-    </lst>     
-    <arr name="last-components">
-      <str>clustering</str>
-    </arr>
-  </requestHandler>
-  
-  <!-- Terms Component
-
-       http://wiki.apache.org/solr/TermsComponent
-
-       A component to return terms and document frequency of those
-       terms
-    -->
-  <searchComponent name="terms" class="solr.TermsComponent"/>
-
-  <!-- A request handler for demonstrating the terms component -->
-  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
-     <lst name="defaults">
-      <bool name="terms">true</bool>
-    </lst>     
-    <arr name="components">
-      <str>terms</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Highlighting Component
-
-       http://wiki.apache.org/solr/HighlightingParameters
-    -->
-  <searchComponent class="solr.HighlightComponent" name="highlight">
-    <highlighting>
-      <!-- Configure the standard fragmenter -->
-      <!-- This could most likely be commented out in the "default" case -->
-      <fragmenter name="gap" 
-                  default="true"
-                  class="solr.highlight.GapFragmenter">
-        <lst name="defaults">
-          <int name="hl.fragsize">100</int>
-        </lst>
-      </fragmenter>
-
-      <!-- A regular-expression-based fragmenter 
-           (for sentence extraction) 
-        -->
-      <fragmenter name="regex" 
-                  class="solr.highlight.RegexFragmenter">
-        <lst name="defaults">
-          <!-- slightly smaller fragsizes work better because of slop -->
-          <int name="hl.fragsize">70</int>
-          <!-- allow 50% slop on fragment sizes -->
-          <float name="hl.regex.slop">0.5</float>
-          <!-- a basic sentence pattern -->
-          <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
-        </lst>
-      </fragmenter>
-
-      <!-- Configure the standard formatter -->
-      <formatter name="html" 
-                 default="true"
-                 class="solr.highlight.HtmlFormatter">
-        <lst name="defaults">
-          <str name="hl.simple.pre"><![CDATA[<em>]]></str>
-          <str name="hl.simple.post"><![CDATA[</em>]]></str>
-        </lst>
-      </formatter>
-
-      <!-- Configure the standard encoder -->
-      <encoder name="html" 
-               class="solr.highlight.HtmlEncoder" />
-
-      <!-- Configure the standard fragListBuilder -->
-      <fragListBuilder name="simple" 
-                       default="true"
-                       class="solr.highlight.SimpleFragListBuilder"/>
-
-      <!-- Configure the single fragListBuilder -->
-      <fragListBuilder name="single" 
-                       class="solr.highlight.SingleFragListBuilder"/>
-
-      <!-- default tag FragmentsBuilder -->
-      <fragmentsBuilder name="default" 
-                        default="true"
-                        class="solr.highlight.ScoreOrderFragmentsBuilder">
-        <!-- 
-        <lst name="defaults">
-          <str name="hl.multiValuedSeparatorChar">/</str>
-        </lst>
-        -->
-      </fragmentsBuilder>
-
-      <!-- multi-colored tag FragmentsBuilder -->
-      <fragmentsBuilder name="colored" 
-                        class="solr.highlight.ScoreOrderFragmentsBuilder">
-        <lst name="defaults">
-          <str name="hl.tag.pre"><![CDATA[
-               <b style="background:yellow">,<b style="background:lawgreen">,
-               <b style="background:aquamarine">,<b style="background:magenta">,
-               <b style="background:palegreen">,<b style="background:coral">,
-               <b style="background:wheat">,<b style="background:khaki">,
-               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
-          <str name="hl.tag.post"><![CDATA[</b>]]></str>
-        </lst>
-      </fragmentsBuilder>
-    </highlighting>
-  </searchComponent>
-
-  <!-- Update Processors
-
-       Chains of Update Processor Factories for dealing with Update
-       Requests can be declared, and then used by name in Update
-       Request Processors
-
-       http://wiki.apache.org/solr/UpdateRequestProcessor
-
-    --> 
-  <!-- Deduplication
-
-       An example dedup update processor that creates the "id" field
-       on the fly based on the hash code of some other fields.  This
-       example has overwriteDupes set to false since we are using the
-       id field as the signatureField and Solr will maintain
-       uniqueness based on that anyway.  
-       
-    -->
-  <!--
-     <updateRequestProcessorChain name="dedupe">
-       <processor class="solr.processor.SignatureUpdateProcessorFactory">
-         <bool name="enabled">true</bool>
-         <str name="signatureField">id</str>
-         <bool name="overwriteDupes">false</bool>
-         <str name="fields">name,features,cat</str>
-         <str name="signatureClass">solr.processor.Lookup3Signature</str>
-       </processor>
-       <processor class="solr.LogUpdateProcessorFactory" />
-       <processor class="solr.RunUpdateProcessorFactory" />
-     </updateRequestProcessorChain>
-    -->
-
-  <!-- Response Writers
-
-       http://wiki.apache.org/solr/QueryResponseWriter
-
-       Request responses will be written using the writer specified by
-       the 'wt' request parameter matching the name of a registered
-       writer.
-
-       The "default" writer is the default and will be used if 'wt' is
-       not specified in the request.
-    -->
-  <!-- The following response writers are implicitly configured unless
-       overridden...
-    -->
-  <!--
-     <queryResponseWriter name="xml" 
-                          default="true"
-                          class="solr.XMLResponseWriter" />
-     <queryResponseWriter name="json" class="solr.JSONResponseWriter"/>
-     <queryResponseWriter name="python" class="solr.PythonResponseWriter"/>
-     <queryResponseWriter name="ruby" class="solr.RubyResponseWriter"/>
-     <queryResponseWriter name="php" class="solr.PHPResponseWriter"/>
-     <queryResponseWriter name="phps" class="solr.PHPSerializedResponseWriter"/>
-     <queryResponseWriter name="velocity" class="solr.VelocityResponseWriter"/>
-     <queryResponseWriter name="csv" class="solr.CSVResponseWriter"/>
-    -->
-  <!--
-     Custom response writers can be declared as needed...
-    -->
-  <!--
-     <queryResponseWriter name="custom" class="com.example.MyResponseWriter"/>
-    -->
-
-  <!-- XSLT response writer transforms the XML output by any xslt file found
-       in Solr's conf/xslt directory.  Changes to xslt files are checked for
-       every xsltCacheLifetimeSeconds.  
-    -->
-  <queryResponseWriter name="xslt" class="solr.XSLTResponseWriter">
-    <int name="xsltCacheLifetimeSeconds">5</int>
-  </queryResponseWriter>
-
-  <!-- Query Parsers
-
-       http://wiki.apache.org/solr/SolrQuerySyntax
-
-       Multiple QParserPlugins can be registered by name, and then
-       used in either the "defType" param for the QueryComponent (used
-       by SearchHandler) or in LocalParams
-    -->
-  <!-- example of registering a query parser -->
-  <!--
-     <queryParser name="myparser" class="com.mycompany.MyQParserPlugin"/>
-    -->
-
-  <!-- Function Parsers
-
-       http://wiki.apache.org/solr/FunctionQuery
-
-       Multiple ValueSourceParsers can be registered by name, and then
-       used as function names when using the "func" QParser.
-    -->
-  <!-- example of registering a custom function parser  -->
-  <!--
-     <valueSourceParser name="myfunc" 
-                        class="com.mycompany.MyValueSourceParser" />
-    -->
-
-  <!-- Legacy config for the admin interface -->
-  <admin>
-    <defaultQuery>*:*</defaultQuery>
-
-    <!-- configure a healthcheck file for servers behind a
-         loadbalancer 
-      -->
-    <!--
-       <healthcheck type="file">server-enabled</healthcheck>
-      -->
-  </admin>
-
-</config>
diff --git a/share/solr-data/.svn/text-base/jetty.xml.svn-base b/share/solr-data/.svn/text-base/jetty.xml.svn-base
deleted file mode 100644
index ccd347f..0000000
--- a/share/solr-data/.svn/text-base/jetty.xml.svn-base
+++ /dev/null
@@ -1,227 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">
-
-<!-- =============================================================== -->
-<!-- Configure the Jetty Server                                      -->
-<!--                                                                 -->
-<!-- Documentation of this file format can be found at:              -->
-<!-- http://docs.codehaus.org/display/JETTY/jetty.xml                -->
-<!--                                                                 -->
-<!-- =============================================================== -->
-
-
-<Configure id="Server" class="org.mortbay.jetty.Server">
-
-    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
-    <Call class="java.lang.System" name="setProperty">
-      <Arg>org.mortbay.jetty.Request.maxFormContentSize</Arg>
-      <Arg>1000000</Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Server Thread Pool                                          -->
-    <!-- =========================================================== -->
-    <Set name="ThreadPool">
-
-      <New class="org.mortbay.thread.QueuedThreadPool">
-        <Set name="minThreads">10</Set>
-        <Set name="maxThreads">10000</Set>
-        <Set name="lowThreads">20</Set>
-      </New>
-
-      <!-- Optional Java 5 bounded threadpool with job queue 
-      <New class="org.mortbay.thread.concurrent.ThreadPool">
-        <Set name="corePoolSize">50</Set>
-        <Set name="maximumPoolSize">50</Set>
-      </New>
-      -->
-    </Set>
-
-
-
-    <!-- =========================================================== -->
-    <!-- Set connectors                                              -->
-    <!-- =========================================================== -->
-    <!-- One of each type!                                           -->
-    <!-- =========================================================== -->
-
-    <!-- Use this connector for many frequently idle connections
-         and for threadless continuations.
-    -->    
-  <!--
-    <Call name="addConnector">
-      <Arg>
-          <New class="org.mortbay.jetty.nio.SelectChannelConnector">
-            <Set name="host"><SystemProperty name="jetty.host" /></Set>
-            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">30000</Set>
-            <Set name="Acceptors">2</Set>
-            <Set name="statsOn">false</Set>
-            <Set name="confidentialPort">8443</Set>
-	    <Set name="lowResourcesConnections">5000</Set>
-	    <Set name="lowResourcesMaxIdleTime">5000</Set>
-          </New>
-      </Arg>
-    </Call>
-  -->
-
-    <!-- This connector is currently being used for Solr because it
-          showed better performance than nio.SelectChannelConnector
-          for typical Solr requests.  -->
-    <Call name="addConnector">
-      <Arg>
-          <New class="org.mortbay.jetty.bio.SocketConnector">
-            <Set name="host"><SystemProperty name="jetty.host" /></Set>
-            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">50000</Set>
-            <Set name="lowResourceMaxIdleTime">1500</Set>
-            <Set name="statsOn">false</Set>
-          </New>
-      </Arg>
-    </Call>
-
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    <!-- To add a HTTPS SSL listener                                     -->
-    <!-- see jetty-ssl.xml to add an ssl connector. use                  -->
-    <!-- java -jar start.jar etc/jetty.xml etc/jetty-ssl.xml             -->
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    <!-- To allow Jetty to be started from xinetd                        -->
-    <!-- mixin jetty-xinetd.xml:                                         -->
-    <!--   java -jar start.jar etc/jetty.xml etc/jetty-xinetd.xml        -->
-    <!--                                                                 -->
-    <!-- See jetty-xinetd.xml for further instructions.                  -->
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    
-    <!-- =========================================================== -->
-    <!-- Set up global session ID manager                            -->
-    <!-- =========================================================== -->
-    <!--
-    <Set name="sessionIdManager">
-      <New class="org.mortbay.jetty.servlet.HashSessionIdManager">
-        <Set name="workerName">node1</Set>
-      </New>
-    </Set>
-    -->
-
-    <!-- =========================================================== -->
-    <!-- Set handler Collection Structure                            --> 
-    <!-- =========================================================== -->
-    <Set name="handler">
-      <New id="Handlers" class="org.mortbay.jetty.handler.HandlerCollection">
-        <Set name="handlers">
-         <Array type="org.mortbay.jetty.Handler">
-           <Item>
-             <New id="Contexts" class="org.mortbay.jetty.handler.ContextHandlerCollection"/>
-           </Item>
-           <Item>
-             <New id="DefaultHandler" class="org.mortbay.jetty.handler.DefaultHandler"/>
-           </Item>
-           <Item>
-             <New id="RequestLog" class="org.mortbay.jetty.handler.RequestLogHandler"/>
-           </Item>
-         </Array>
-        </Set>
-      </New>
-    </Set>
-    
-    <!-- =========================================================== -->
-    <!-- Configure the context deployer                              -->
-    <!-- A context deployer will deploy contexts described in        -->
-    <!-- configuration files discovered in a directory.              -->
-    <!-- The configuration directory can be scanned for hot          -->
-    <!-- deployments at the configured scanInterval.                 -->
-    <!--                                                             -->
-    <!-- This deployer is configured to deploy contexts configured   -->
-    <!-- in the $JETTY_HOME/contexts directory                       -->
-    <!--                                                             -->
-    <!-- =========================================================== -->
-    <Call name="addLifeCycle">
-      <Arg>
-        <New class="org.mortbay.jetty.deployer.ContextDeployer">
-          <Set name="contexts"><Ref id="Contexts"/></Set>
-          <Set name="configurationDir"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
-          <Set name="scanInterval">5</Set>
-        </New>
-      </Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Configure the webapp deployer.                              -->
-    <!-- A webapp  deployer will deploy standard webapps discovered  -->
-    <!-- in a directory at startup, without the need for additional  -->
-    <!-- configuration files.    It does not support hot deploy or   -->
-    <!-- non standard contexts (see ContextDeployer above).          -->
-    <!--                                                             -->
-    <!-- This deployer is configured to deploy webapps from the      -->
-    <!-- $JETTY_HOME/webapps directory                               -->
-    <!--                                                             -->
-    <!-- Normally only one type of deployer need be used.            -->
-    <!--                                                             -->
-    <!-- =========================================================== -->
-    <Call name="addLifeCycle">
-      <Arg>
-        <New class="org.mortbay.jetty.deployer.WebAppDeployer">
-          <Set name="contexts"><Ref id="Contexts"/></Set>
-          <Set name="webAppDir"><SystemProperty name="jetty.webapps" default="."/></Set>
-	  <Set name="parentLoaderPriority">false</Set>
-	  <Set name="extract">true</Set>
-	  <Set name="allowDuplicates">false</Set>
-          <Set name="defaultsDescriptor"><SystemProperty name="jetty.home" default="."/>/webdefault.xml</Set>
-        </New>
-      </Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Configure Authentication Realms                             -->
-    <!-- Realms may be configured for the entire server here, or     -->
-    <!-- they can be configured for a specific web app in a context  -->
-    <!-- configuration (see $(jetty.home)/contexts/test.xml for an   -->
-    <!-- example).                                                   -->
-    <!-- =========================================================== -->
-  <!--
-    <Set name="UserRealms">
-      <Array type="org.mortbay.jetty.security.UserRealm">
-        <Item>
-          <New class="org.mortbay.jetty.security.HashUserRealm">
-            <Set name="name">Test Realm</Set>
-            <Set name="config"><SystemProperty name="jetty.home" default="."/>/etc/realm.properties</Set>
-            <Set name="refreshInterval">0</Set>
-          </New>
-        </Item>
-      </Array>
-    </Set>
-  -->
-
-    <!-- =========================================================== -->
-    <!-- Configure Request Log                                       -->
-    <!-- Request logs  may be configured for the entire server here, -->
-    <!-- or they can be configured for a specific web app in a       -->
-    <!-- contexts configuration (see $(jetty.home)/contexts/test.xml -->
-    <!-- for an example).                                            -->
-    <!-- =========================================================== -->
-  <!--
-    <Ref id="RequestLog">
-      <Set name="requestLog">
-        <New id="RequestLogImpl" class="org.mortbay.jetty.NCSARequestLog">
-          <Set name="filename"><SystemProperty name="jetty.logs" default="./logs"/>/yyyy_mm_dd.request.log</Set>
-          <Set name="filenameDateFormat">yyyy_MM_dd</Set>
-          <Set name="retainDays">90</Set>
-          <Set name="append">true</Set>
-          <Set name="extended">false</Set>
-          <Set name="logCookies">false</Set>
-          <Set name="LogTimeZone">GMT</Set>
-        </New>
-      </Set>
-    </Ref>
-  -->
-    <!-- =========================================================== -->
-    <!-- extra options                                               -->
-    <!-- =========================================================== -->
-    <Set name="stopAtShutdown">true</Set>
-    <Set name="sendServerVersion">false</Set>
-    <Set name="sendDateHeader">false</Set>
-    <Set name="gracefulShutdown">1000</Set>
-
-</Configure>
diff --git a/share/solr-data/.svn/text-base/solr.xml.svn-base b/share/solr-data/.svn/text-base/solr.xml.svn-base
deleted file mode 100644
index 2fed50a..0000000
--- a/share/solr-data/.svn/text-base/solr.xml.svn-base
+++ /dev/null
@@ -1,3 +0,0 @@
-<solr persistent="true" sharedLib="lib">
-    <cores adminPath="/admin/cores"/>
-</solr>
diff --git a/share/solr-data/.svn/text-base/start.config.svn-base b/share/solr-data/.svn/text-base/start.config.svn-base
deleted file mode 100644
index 26fc367..0000000
--- a/share/solr-data/.svn/text-base/start.config.svn-base
+++ /dev/null
@@ -1,56 +0,0 @@
-# This file controls what file are to be put on classpath or command line.
-#
-# Format is as follows:
-# Each line contains entry for one JAR file.
-# Format of line:
-#
-#  SUBJECT [ [!] CONDITION [AND|OR] ]*
-# 
-# where SUBJECT: 
-#   ends with ".class" is the Main class to run.
-#   ends with ".xml" is a configuration file for the command line
-#   ends with "/" is a directory from which to add all jar and zip files. 
-#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
-#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
-#   Containing = are used to assign system properties.
-#   all other subjects are treated as files to be added to the classpath.
-#
-# Subjects may include system properties with $(propertyname) syntax. 
-#
-# Files starting with "/" are considered absolute, all others are relative to
-# the home directory.
-#
-# CONDITION is one of:
-#   always
-#   never
-#   available classname        # true if class on classpath
-#   property name              # true of set
-#   java OPERATOR version      # java version compared to literal
-#   nargs OPERATOR number      # number of command line args compared to literal
-#   OPERATOR := one of "<",">","<=",">=","==","!="
-#
-# CONTITIONS can be combined with AND OR or !, with AND being the assume
-# operator for a list of CONDITIONS.
-# Classpath operations are evaluated on the fly, so once a class or jar is
-# added to the classpath, subsequent available conditions will see that class.
-#
-
-$(jetty.class.path).path                         always
-$(jetty.lib)/**                                  exists $(jetty.lib)
-
-
-# Try different settings of jetty.home until the jetty.jar is found.
-jetty.home=/location/of/your/jetty/config/dir
-
-# The main class to run
-org.mortbay.xml.XmlConfiguration.class
-$(start.class).class
-
-# The default configuration files
-$(jetty.home)/jetty.xml                             nargs == 0
-
-# Set the jetty classpath
-/usr/share/java/solr/*                              always
-
-# Set webapps dir
-jetty.webapps=/usr/share/java/webapps
diff --git a/share/solr-data/.svn/text-base/webdefault.xml.svn-base b/share/solr-data/.svn/text-base/webdefault.xml.svn-base
deleted file mode 100644
index b8d0114..0000000
--- a/share/solr-data/.svn/text-base/webdefault.xml.svn-base
+++ /dev/null
@@ -1,410 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<!-- ===================================================================== -->
-<!-- This file contains the default descriptor for web applications.       -->
-<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-<!-- The intent of this descriptor is to include jetty specific or common  -->
-<!-- configuration for all webapps.   If a context has a webdefault.xml    -->
-<!-- descriptor, it is applied before the contexts own web.xml file        -->
-<!--                                                                       -->
-<!-- A context may be assigned a default descriptor by:                    -->
-<!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
-<!--  + Passed an arg to addWebApplications                                -->
-<!--                                                                       -->
-<!-- This file is used both as the resource within the jetty.jar (which is -->
-<!-- used as the default if no explicit defaults descriptor is set) and it -->
-<!-- is copied to the etc directory of the Jetty distro and explicitly     -->
-<!-- by the jetty.xml file.                                                -->
-<!--                                                                       -->
-<!-- ===================================================================== -->
-<web-app 
-   xmlns="http://java.sun.com/xml/ns/javaee" 
-   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
-   metadata-complete="true"
-   version="2.5"> 
-
-  <description>
-    Default web.xml file.  
-    This file is applied to a Web application before it's own WEB_INF/web.xml file
-  </description>
-
-
-  <!-- ==================================================================== -->
-  <!-- Context params to control Session Cookies                            -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- UNCOMMENT TO ACTIVATE
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.SessionDomain</param-name>
-    <param-value>127.0.0.1</param-value>
-  </context-param>
-
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.SessionPath</param-name>
-    <param-value>/</param-value>
-  </context-param>
-
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.MaxAge</param-name>
-    <param-value>-1</param-value>
-  </context-param>
-  -->
-
-  <context-param>
-    <param-name>org.mortbay.jetty.webapp.NoTLDJarPattern</param-name>
-    <param-value>start.jar|ant-.*\.jar|dojo-.*\.jar|jetty-.*\.jar|jsp-api-.*\.jar|junit-.*\.jar|servlet-api-.*\.jar|dnsns\.jar|rt\.jar|jsse\.jar|tools\.jar|sunpkcs11\.jar|sunjce_provider\.jar|xerces.*\.jar</param-value>
-  </context-param>
-            
-
-
-  <!-- ==================================================================== -->
-  <!-- The default servlet.                                                 -->
-  <!-- This servlet, normally mapped to /, provides the handling for static -->
-  <!-- content, OPTIONS and TRACE methods for the context.                  -->
-  <!-- The following initParameters are supported:                          -->
-  <!--                                                                      -->
-  <!--   acceptRanges     If true, range requests and responses are         -->
-  <!--                    supported                                         -->
-  <!--                                                                      -->
-  <!--   dirAllowed       If true, directory listings are returned if no    -->
-  <!--                    welcome file is found. Else 403 Forbidden.        -->
-  <!--                                                                      -->
-  <!--   welcomeServlets  If true, attempt to dispatch to welcome files     -->
-  <!--                    that are servlets, if no matching static          --> 
-  <!--                    resources can be found.                           -->
-  <!--                                                                      -->
-  <!--   redirectWelcome  If true, redirect welcome file requests           -->
-  <!--                    else use request dispatcher forwards              -->
-  <!--                                                                      -->
-  <!--   gzip             If set to true, then static content will be served--> 
-  <!--                    as gzip content encoded if a matching resource is -->
-  <!--                    found ending with ".gz"                           -->
-  <!--                                                                      -->
-  <!--   resoureBase      Can be set to replace the context resource base   -->
-  <!--                                                                      -->
-  <!--   relativeResourceBase                                               -->
-  <!--                    Set with a pathname relative to the base of the   -->
-  <!--                    servlet context root. Useful for only serving     -->
-  <!--                    static content from only specific subdirectories. -->
-  <!--                                                                      -->
-  <!--   useFileMappedBuffer                                                -->
-  <!--                    If set to true (the default), a  memory mapped    -->
-  <!--                    file buffer will be used to serve static content  -->
-  <!--                    when using an NIO connector. Setting this value   -->
-  <!--                    to false means that a direct buffer will be used  -->
-  <!--                    instead. If you are having trouble with Windows   -->
-  <!--                    file locking, set this to false.                  -->
-  <!--                                                                      -->
-  <!--  cacheControl      If set, all static content will have this value   -->
-  <!--                    set as the cache-control header.                  -->
-  <!--                                                                      -->
-  <!--  maxCacheSize      Maximum size of the static resource cache         -->
-  <!--                                                                      -->
-  <!--  maxCachedFileSize Maximum size of any single file in the cache      -->
-  <!--                                                                      -->
-  <!--  maxCachedFiles    Maximum number of files in the cache              -->
-  <!--                                                                      -->
-  <!--  cacheType         "nio", "bio" or "both" to determine the type(s)   -->
-  <!--                    of resource cache. A bio cached buffer may be used-->
-  <!--                    by nio but is not as efficient as a nio buffer.   -->
-  <!--                    An nio cached buffer may not be used by bio.      -->
-  <!--                                                                      -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet>
-    <servlet-name>default</servlet-name>
-    <servlet-class>org.mortbay.jetty.servlet.DefaultServlet</servlet-class>
-    <init-param>
-      <param-name>acceptRanges</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>dirAllowed</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>welcomeServlets</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>redirectWelcome</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCacheSize</param-name>
-      <param-value>256000000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCachedFileSize</param-name>
-      <param-value>10000000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCachedFiles</param-name>
-      <param-value>1000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>cacheType</param-name>
-      <param-value>both</param-value>
-    </init-param>
-    <init-param>
-      <param-name>gzip</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>useFileMappedBuffer</param-name>
-      <param-value>true</param-value>
-    </init-param>  
-    <!--
-    <init-param>
-      <param-name>cacheControl</param-name>
-      <param-value>max-age=3600,public</param-value>
-    </init-param>
-    -->
-    <load-on-startup>0</load-on-startup>
-  </servlet> 
-
-  <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping>
-  
-
-  <!-- ==================================================================== -->
-  <!-- JSP Servlet                                                          -->
-  <!-- This is the jasper JSP servlet from the jakarta project              -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
-  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
-  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
-  <!-- following initialization parameters (default values are in square    -->
-  <!-- brackets):                                                           -->
-  <!--                                                                      -->
-  <!--   checkInterval       If development is false and reloading is true, -->
-  <!--                       background compiles are enabled. checkInterval -->
-  <!--                       is the time in seconds between checks to see   -->
-  <!--                       if a JSP page needs to be recompiled. [300]    -->
-  <!--                                                                      -->
-  <!--   compiler            Which compiler Ant should use to compile JSP   -->
-  <!--                       pages.  See the Ant documenation for more      -->
-  <!--                       information. [javac]                           -->
-  <!--                                                                      -->
-  <!--   classdebuginfo      Should the class file be compiled with         -->
-  <!--                       debugging information?  [true]                 -->
-  <!--                                                                      -->
-  <!--   classpath           What class path should I use while compiling   -->
-  <!--                       generated servlets?  [Created dynamically      -->
-  <!--                       based on the current web application]          -->
-  <!--                       Set to ? to make the container explicitly set  -->
-  <!--                       this parameter.                                -->
-  <!--                                                                      -->
-  <!--   development         Is Jasper used in development mode (will check -->
-  <!--                       for JSP modification on every access)?  [true] -->
-  <!--                                                                      -->
-  <!--   enablePooling       Determines whether tag handler pooling is      -->
-  <!--                       enabled  [true]                                -->
-  <!--                                                                      -->
-  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
-  <!--                       a separate JVM is used for JSP page compiles   -->
-  <!--                       from the one Tomcat is running in. [true]      -->
-  <!--                                                                      -->
-  <!--   ieClassId           The class-id value to be sent to Internet      -->
-  <!--                       Explorer when using <jsp:plugin> tags.         -->
-  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
-  <!--                                                                      -->
-  <!--   javaEncoding        Java file encoding to use for generating java  -->
-  <!--                       source files. [UTF-8]                          -->
-  <!--                                                                      -->
-  <!--   keepgenerated       Should we keep the generated Java source code  -->
-  <!--                       for each page instead of deleting it? [true]   -->
-  <!--                                                                      -->
-  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
-  <!--                       by this servlet.  Increasing levels cause the  -->
-  <!--                       generation of more messages.  Valid values are -->
-  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
-  <!--                       [WARNING]                                      -->
-  <!--                                                                      -->
-  <!--   mappedfile          Should we generate static content with one     -->
-  <!--                       print statement per input line, to ease        -->
-  <!--                       debugging?  [false]                            -->
-  <!--                                                                      -->
-  <!--                                                                      -->
-  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
-  <!--                                                                      -->
-  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
-  <!--                       debugging be suppressed?  [false]              -->
-  <!--                                                                      -->
-  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
-  <!--                       dumped to a file? [false]                      -->
-  <!--                       False if suppressSmap is true                  -->
-  <!--                                                                      -->
-  <!--   scratchdir          What scratch directory should we use when      -->
-  <!--                       compiling JSP pages?  [default work directory  -->
-  <!--                       for the current web application]               -->
-  <!--                                                                      -->
-  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
-  <!--                                                                      -->
-  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
-  <!--                       header is added by generated servlet  [false]  -->
-  <!--                                                                      -->
-  <!-- If you wish to use Jikes to compile JSP pages:                       -->
-  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
-  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
-  <!--   to cause Jikes to emit error messages in a format compatible with  -->
-  <!--   Jasper.                                                            -->
-  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
-  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet id="jsp">
-    <servlet-name>jsp</servlet-name>
-    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
-    <init-param>
-        <param-name>logVerbosityLevel</param-name>
-        <param-value>DEBUG</param-value>
-    </init-param>
-    <init-param>
-        <param-name>fork</param-name>
-        <param-value>false</param-value>
-    </init-param>
-    <init-param>
-        <param-name>xpoweredBy</param-name>
-        <param-value>false</param-value>
-    </init-param>
-    <!--  
-    <init-param>
-        <param-name>classpath</param-name>
-        <param-value>?</param-value>
-    </init-param>
-    -->
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping> 
-    <servlet-name>jsp</servlet-name> 
-    <url-pattern>*.jsp</url-pattern> 
-    <url-pattern>*.jspf</url-pattern>
-    <url-pattern>*.jspx</url-pattern>
-    <url-pattern>*.xsp</url-pattern>
-    <url-pattern>*.JSP</url-pattern> 
-    <url-pattern>*.JSPF</url-pattern>
-    <url-pattern>*.JSPX</url-pattern>
-    <url-pattern>*.XSP</url-pattern>
-  </servlet-mapping>
-  
-  <!-- ==================================================================== -->
-  <!-- Dynamic Servlet Invoker.                                             -->
-  <!-- This servlet invokes anonymous servlets that have not been defined   -->
-  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
-  <!-- of a request passed to the envoker is treated as a servlet name for  -->
-  <!-- an existing servlet, or as a class name of a new servlet.            -->
-  <!-- This servlet is normally mapped to /servlet/*                        -->
-  <!-- This servlet support the following initParams:                       -->
-  <!--                                                                      -->
-  <!--  nonContextServlets       If false, the invoker can only load        -->
-  <!--                           servlets from the contexts classloader.    -->
-  <!--                           This is false by default and setting this  -->
-  <!--                           to true may have security implications.    -->
-  <!--                                                                      -->
-  <!--  verbose                  If true, log dynamic loads                 -->
-  <!--                                                                      -->
-  <!--  *                        All other parameters are copied to the     -->
-  <!--                           each dynamic servlet as init parameters    -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- Uncomment for dynamic invocation
-  <servlet>
-    <servlet-name>invoker</servlet-name>
-    <servlet-class>org.mortbay.jetty.servlet.Invoker</servlet-class>
-    <init-param>
-      <param-name>verbose</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>nonContextServlets</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>dynamicParam</param-name>
-      <param-value>anyValue</param-value>
-    </init-param>
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping> <servlet-name>invoker</servlet-name> <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
-  -->
-
-
-
-  <!-- ==================================================================== -->
-  <session-config>
-    <session-timeout>30</session-timeout>
-  </session-config>
-
-  <!-- ==================================================================== -->
-  <!-- Default MIME mappings                                                -->
-  <!-- The default MIME mappings are provided by the mime.properties        -->
-  <!-- resource in the org.mortbay.jetty.jar file.  Additional or modified  -->
-  <!-- mappings may be specified here                                       -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- UNCOMMENT TO ACTIVATE
-  <mime-mapping>
-    <extension>mysuffix</extension>
-    <mime-type>mymime/type</mime-type>
-  </mime-mapping>
-  -->
-
-  <!-- ==================================================================== -->
-  <welcome-file-list>
-    <welcome-file>index.html</welcome-file>
-    <welcome-file>index.htm</welcome-file>
-    <welcome-file>index.jsp</welcome-file>
-  </welcome-file-list>
-
-  <!-- ==================================================================== -->
-  <locale-encoding-mapping-list>
-    <locale-encoding-mapping><locale>ar</locale><encoding>ISO-8859-6</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>be</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>bg</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ca</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>cs</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>da</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>de</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>el</locale><encoding>ISO-8859-7</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>en</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>es</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>et</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>fi</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>fr</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>hr</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>hu</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>is</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>it</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>iw</locale><encoding>ISO-8859-8</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ja</locale><encoding>Shift_JIS</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ko</locale><encoding>EUC-KR</encoding></locale-encoding-mapping>     
-    <locale-encoding-mapping><locale>lt</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>lv</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>mk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>nl</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>no</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>pl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>pt</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ro</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ru</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sh</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sk</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sq</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sr</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sv</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>tr</locale><encoding>ISO-8859-9</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>uk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>zh</locale><encoding>GB2312</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>zh_TW</locale><encoding>Big5</encoding></locale-encoding-mapping>   
-  </locale-encoding-mapping-list>
-  
-  <security-constraint>
-    <web-resource-collection>
-      <web-resource-name>Disable TRACE</web-resource-name>
-      <url-pattern>/</url-pattern>
-      <http-method>TRACE</http-method>
-    </web-resource-collection>
-    <auth-constraint/>
-  </security-constraint>
-  
-</web-app>
-
diff --git a/share/solr-data/contexts/.svn/text-base/solr.xml.svn-base b/share/solr-data/contexts/.svn/text-base/solr.xml.svn-base
deleted file mode 100644
index 1ce8d44..0000000
--- a/share/solr-data/contexts/.svn/text-base/solr.xml.svn-base
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0"  encoding="ISO-8859-1"?>
-<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
- 
-<Configure class="org.mortbay.jetty.webapp.WebAppContext">
-  <Set name="contextPath">/solr</Set>
-  <Set name="war">/usr/share/java/webapps/apache-solr-3.6.0.war</Set>
-</Configure>
-
-- 
1.7.2.5


From 32c90ef5e40c3cef0afebb9b650c36a725f2009d Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Fri, 7 Sep 2012 09:47:53 +0200
Subject: [PATCH 04/66] JJ: and svn dirs

---
 share/core-data/.svn/entries          |   31 ------
 share/core-data/conf/.svn/entries     |   96 ------------------
 share/solr-data/.svn/entries          |  170 ---------------------------------
 share/solr-data/contexts/.svn/entries |   62 ------------
 share/solr-data/cores/.svn/entries    |   28 ------
 5 files changed, 0 insertions(+), 387 deletions(-)
 delete mode 100644 share/core-data/.svn/entries
 delete mode 100644 share/core-data/conf/.svn/entries
 delete mode 100644 share/solr-data/.svn/entries
 delete mode 100644 share/solr-data/contexts/.svn/entries
 delete mode 100644 share/solr-data/cores/.svn/entries

diff --git a/share/core-data/.svn/entries b/share/core-data/.svn/entries
deleted file mode 100644
index baf21b6..0000000
--- a/share/core-data/.svn/entries
+++ /dev/null
@@ -1,31 +0,0 @@
-10
-
-dir
-20568
-svn+ssh://svn@svn.seecr.nl/svn/cq2-packages/thirdparty/solr-run/3.6.0/1.0/usr-share/core-data
-svn+ssh://svn@svn.seecr.nl/svn
-
-
-
-2012-07-05T08:08:04.395682Z
-19831
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-7f82bda0-831b-0410-895c-c142f06d1e64
-
-conf
-dir
-
diff --git a/share/core-data/conf/.svn/entries b/share/core-data/conf/.svn/entries
deleted file mode 100644
index fb733cc..0000000
--- a/share/core-data/conf/.svn/entries
+++ /dev/null
@@ -1,96 +0,0 @@
-10
-
-dir
-20568
-svn+ssh://svn@svn.seecr.nl/svn/cq2-packages/thirdparty/solr-run/3.6.0/1.0/usr-share/core-data/conf
-svn+ssh://svn@svn.seecr.nl/svn
-
-
-
-2012-07-05T08:08:04.395682Z
-19831
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-7f82bda0-831b-0410-895c-c142f06d1e64
-
-schema.xml
-file
-
-
-
-
-2012-08-21T22:07:00.000000Z
-77498aa1dd70a9f5b8d4b15d4b65895e
-2012-07-05T08:08:04.395682Z
-19831
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-2148
-
-solrconfig.xml
-file
-
-
-
-
-2012-08-21T22:07:00.000000Z
-4e294f8cdb3f4bba6f36c93b773eb258
-2012-07-02T14:00:02.395704Z
-19775
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-55248
-
diff --git a/share/solr-data/.svn/entries b/share/solr-data/.svn/entries
deleted file mode 100644
index 2bafc6b..0000000
--- a/share/solr-data/.svn/entries
+++ /dev/null
@@ -1,170 +0,0 @@
-10
-
-dir
-20568
-svn+ssh://svn@svn.seecr.nl/svn/cq2-packages/thirdparty/solr-run/3.6.0/1.0/usr-share/solr-data
-svn+ssh://svn@svn.seecr.nl/svn
-
-
-
-2012-06-04T11:55:55.587796Z
-19648
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-7f82bda0-831b-0410-895c-c142f06d1e64
-
-start.config
-file
-
-
-
-
-2012-08-21T22:07:00.000000Z
-37d16bf99b6e5afa3db0bce1c198cb88
-2012-06-04T11:55:55.587796Z
-19648
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-2095
-
-webdefault.xml
-file
-
-
-
-
-2012-08-21T22:07:00.000000Z
-58f7f6a85129aba970a4db7b9d124c7c
-2012-06-04T11:55:55.587796Z
-19648
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-24404
-
-contexts
-dir
-
-cores
-dir
-
-jetty.xml
-file
-
-
-
-
-2012-08-21T22:07:00.000000Z
-c231cbb7864331577258c7c625c52ea1
-2012-06-04T11:55:55.587796Z
-19648
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-10632
-
-solr.xml
-file
-
-
-
-
-2012-08-21T22:07:00.000000Z
-c560854ba4c7cb42197ed3c962b3e0bf
-2012-06-04T11:55:55.587796Z
-19648
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-87
-
diff --git a/share/solr-data/contexts/.svn/entries b/share/solr-data/contexts/.svn/entries
deleted file mode 100644
index 53add67..0000000
--- a/share/solr-data/contexts/.svn/entries
+++ /dev/null
@@ -1,62 +0,0 @@
-10
-
-dir
-20568
-svn+ssh://svn@svn.seecr.nl/svn/cq2-packages/thirdparty/solr-run/3.6.0/1.0/usr-share/solr-data/contexts
-svn+ssh://svn@svn.seecr.nl/svn
-
-
-
-2012-06-04T11:55:55.587796Z
-19648
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-7f82bda0-831b-0410-895c-c142f06d1e64
-
-solr.xml
-file
-
-
-
-
-2012-08-21T22:07:00.000000Z
-de7dd32bb3d7ef09b4acbdd72a273867
-2012-06-04T11:55:55.587796Z
-19648
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-327
-
diff --git a/share/solr-data/cores/.svn/entries b/share/solr-data/cores/.svn/entries
deleted file mode 100644
index 84e3523..0000000
--- a/share/solr-data/cores/.svn/entries
+++ /dev/null
@@ -1,28 +0,0 @@
-10
-
-dir
-20568
-svn+ssh://svn@svn.seecr.nl/svn/cq2-packages/thirdparty/solr-run/3.6.0/1.0/usr-share/solr-data/cores
-svn+ssh://svn@svn.seecr.nl/svn
-
-
-
-2012-06-04T11:55:55.587796Z
-19648
-HM
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-7f82bda0-831b-0410-895c-c142f06d1e64
-
-- 
1.7.2.5


From 1d67fed6838a763e5e9027c669833a159ad3d2ba Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Fri, 7 Sep 2012 11:53:17 +0200
Subject: [PATCH 05/66] TS/HM: Added tests for solr-run

---
 bin/start-solr.py                       |    2 +-
 share/core-data/conf/schema.xml         |   47 -
 share/core-data/conf/solrconfig.xml     | 1498 -------------------------------
 share/solr-data/contexts/solr.xml       |    8 -
 share/solr-data/jetty.xml               |  227 -----
 share/solr-data/solr.xml                |    3 -
 share/solr-data/start.config            |   56 --
 share/solr-data/webdefault.xml          |  410 ---------
 test/_solr-tests.py                     |  135 +++
 test/alltest.sh                         |    8 +
 usr-share/core-data/conf/schema.xml     |   47 +
 usr-share/core-data/conf/solrconfig.xml | 1498 +++++++++++++++++++++++++++++++
 usr-share/solr-data/contexts/solr.xml   |    8 +
 usr-share/solr-data/jetty.xml           |  227 +++++
 usr-share/solr-data/solr.xml            |    3 +
 usr-share/solr-data/start.config        |   56 ++
 usr-share/solr-data/webdefault.xml      |  410 +++++++++
 17 files changed, 2393 insertions(+), 2250 deletions(-)
 delete mode 100644 share/core-data/conf/schema.xml
 delete mode 100644 share/core-data/conf/solrconfig.xml
 delete mode 100644 share/solr-data/contexts/solr.xml
 delete mode 100644 share/solr-data/jetty.xml
 delete mode 100644 share/solr-data/solr.xml
 delete mode 100644 share/solr-data/start.config
 delete mode 100644 share/solr-data/webdefault.xml
 create mode 100644 test/_solr-tests.py
 create mode 100755 test/alltest.sh
 create mode 100644 usr-share/core-data/conf/schema.xml
 create mode 100644 usr-share/core-data/conf/solrconfig.xml
 create mode 100644 usr-share/solr-data/contexts/solr.xml
 create mode 100644 usr-share/solr-data/jetty.xml
 create mode 100644 usr-share/solr-data/solr.xml
 create mode 100644 usr-share/solr-data/start.config
 create mode 100644 usr-share/solr-data/webdefault.xml

diff --git a/bin/start-solr.py b/bin/start-solr.py
index 0532f0b..07567ff 100755
--- a/bin/start-solr.py
+++ b/bin/start-solr.py
@@ -7,7 +7,7 @@ from lxml.etree import parse, SubElement, tostring
 from subprocess import Popen
 
 mydir = dirname(abspath(__file__))
-configdir = join(mydir, 'usr-share') # is replaced by makeDeb.sh
+configdir = join(dirname(mydir), 'usr-share') # is replaced by makeDeb.sh
 SOLR_VERSION = "3.6.0"
 
 def parseArguments(args):
diff --git a/share/core-data/conf/schema.xml b/share/core-data/conf/schema.xml
deleted file mode 100644
index 13e9782..0000000
--- a/share/core-data/conf/schema.xml
+++ /dev/null
@@ -1,47 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<schema name="meresco-corename" version="1.5">
-
-  <types>
-    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
-    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100" omitNorms="false" multiValued="true" indexed="true" stored="false">
-      <analyzer>
-        <tokenizer class="solr.ClassicTokenizerFactory"/>
-        <filter class="solr.LowerCaseFilterFactory"/>
-      </analyzer>
-    </fieldType>
-    <fieldType name="untokenized_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="true" indexed="true" stored="false" />
-    <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
- </types>
-
-
- <fields>
-   <field name="__id__" type="string" stored="true" required="true" /> 
-   <field name="__all__" type="text_ws" /> 
-   <dynamicField name="sorted.*" type="sorted_string" />
-   <dynamicField name="untokenized.*" type="untokenized_string" />
-   <dynamicField name="meta.*" type="untokenized_string" />
-   <dynamicField name="*" type="text_ws" />
- </fields>
-
- <uniqueKey>__id__</uniqueKey>
- <defaultSearchField>__all__</defaultSearchField>
-
- <solrQueryParser defaultOperator="AND"/>
-</schema>
diff --git a/share/core-data/conf/solrconfig.xml b/share/core-data/conf/solrconfig.xml
deleted file mode 100644
index 3c5d73a..0000000
--- a/share/core-data/conf/solrconfig.xml
+++ /dev/null
@@ -1,1498 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<!-- 
-     For more details about configurations options that may appear in
-     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
--->
-<config>
-  <!-- In all configuration below, a prefix of "solr." for class names
-       is an alias that causes solr to search appropriate packages,
-       including org.apache.solr.(search|update|request|core|analysis)
-
-       You may also specify a fully qualified Java classname if you
-       have your own custom plugins.
-    -->
-
-  <!-- Set this to 'false' if you want solr to continue working after
-       it has encountered an severe configuration error.  In a
-       production environment, you may want solr to keep working even
-       if one handler is mis-configured.
-
-       You may also set this to false using by setting the system
-       property:
-
-         -Dsolr.abortOnConfigurationError=false
-    -->
-  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
-  
-  <!-- Controls what version of Lucene various components of Solr
-       adhere to.  Generally, you want to use the latest version to
-       get all bug fixes and improvements. It is highly recommended
-       that you fully re-index after changing this setting as it can
-       affect both how text is indexed and queried.
-    -->
-  <luceneMatchVersion>LUCENE_36</luceneMatchVersion>
-
-  <!-- lib directives can be used to instruct Solr to load an Jars
-       identified and use them to resolve any "plugins" specified in
-       your solrconfig.xml or schema.xml (ie: Analyzers, Request
-       Handlers, etc...).
-
-       All directories and paths are resolved relative to the
-       instanceDir.
-
-       If a "./lib" directory exists in your instanceDir, all files
-       found in it are included as if you had used the following
-       syntax...
-       
-              <lib dir="./lib" />
-    -->
-  <!-- A dir option by itself adds any files found in the directory to
-       the classpath, this is useful for including all jars in a
-       directory.
-    -->
-  <lib dir="../../contrib/extraction/lib" />
-  <!-- When a regex is specified in addition to a directory, only the
-       files in that directory which completely match the regex
-       (anchored on both ends) will be included.
-    -->
-  <lib dir="../../dist/" regex="apache-solr-cell-\d.*\.jar" />
-  <lib dir="../../dist/" regex="apache-solr-clustering-\d.*\.jar" />
-  <lib dir="../../dist/" regex="apache-solr-dataimporthandler-\d.*\.jar" />
-
-  <!-- If a dir option (with or without a regex) is used and nothing
-       is found that matches, it will be ignored
-    -->
-  <lib dir="../../contrib/clustering/lib/" />
-  <lib dir="/total/crap/dir/ignored" /> 
-  <!-- an exact path can be used to specify a specific file.  This
-       will cause a serious error to be logged if it can't be loaded.
-    -->
-  <!--
-  <lib path="../a-jar-that-does-not-exist.jar" /> 
-  -->
-  
-  <!-- Data Directory
-
-       Used to specify an alternate directory to hold all index data
-       other than the default ./data under the Solr home.  If
-       replication is in use, this should match the replication
-       configuration.
-  <dataDir>${solr.data.dir:}</dataDir>
-    -->
-
-
-  <!-- The DirectoryFactory to use for indexes.
-       
-       solr.StandardDirectoryFactory, the default, is filesystem
-       based.  solr.RAMDirectoryFactory is memory based, not
-       persistent, and doesn't work with replication.
-    -->
-  <directoryFactory name="DirectoryFactory" 
-                    class="${solr.directoryFactory:solr.StandardDirectoryFactory}"/>
-
-
-  <!-- Index Defaults
-
-       Values here affect all index writers and act as a default
-       unless overridden.
-
-       WARNING: See also the <mainIndex> section below for parameters
-       that overfor Solr's main Lucene index.
-    -->
-  <indexDefaults>
-
-    <useCompoundFile>true</useCompoundFile>
-
-    <mergeFactor>10</mergeFactor>
-    <!-- Sets the amount of RAM that may be used by Lucene indexing
-         for buffering added documents and deletions before they are
-         flushed to the Directory.  -->
-    <ramBufferSizeMB>32</ramBufferSizeMB>
-    <!-- If both ramBufferSizeMB and maxBufferedDocs is set, then
-         Lucene will flush based on whichever limit is hit first.  
-      -->
-    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->
-
-    <maxFieldLength>10000</maxFieldLength>
-    <writeLockTimeout>1000</writeLockTimeout>
-    <commitLockTimeout>10000</commitLockTimeout>
-
-    <!-- Expert: Merge Policy 
-
-         The Merge Policy in Lucene controls how merging is handled by
-         Lucene.  The default in 2.3 is the LogByteSizeMergePolicy,
-         previous versions used LogDocMergePolicy.
-         
-         LogByteSizeMergePolicy chooses segments to merge based on
-         their size.  The Lucene 2.2 default, LogDocMergePolicy chose
-         when to merge based on number of documents
-         
-         Other implementations of MergePolicy must have a no-argument
-         constructor
-      -->
-    <!--
-       <mergePolicy class="org.apache.lucene.index.LogByteSizeMergePolicy"/>
-       -->
-
-    <!-- Expert: Merge Scheduler
-
-         The Merge Scheduler in Lucene controls how merges are
-         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
-         can perform merges in the background using separate threads.
-         The SerialMergeScheduler (Lucene 2.2 default) does not.
-     -->
-    <!-- 
-       <mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler"/>
-       -->
-	  
-    <!-- LockFactory 
-
-         This option specifies which Lucene LockFactory implementation
-         to use.
-      
-         single = SingleInstanceLockFactory - suggested for a
-                  read-only index or when there is no possibility of
-                  another process trying to modify the index.
-         native = NativeFSLockFactory - uses OS native file locking.
-                  Do not use when multiple solr webapps in the same
-                  JVM are attempting to share a single index.
-         simple = SimpleFSLockFactory  - uses a plain file for locking
-
-         (For backwards compatibility with Solr 1.2, 'simple' is the
-         default if not specified.)
-
-         More details on the nuances of each LockFactory...
-         http://wiki.apache.org/lucene-java/AvailableLockFactories
-    -->
-    <lockType>native</lockType>
-
-    <!-- Expert: Controls how often Lucene loads terms into memory
-         Default is 128 and is likely good for most everyone.
-      -->
-    <!-- <termIndexInterval>256</termIndexInterval> -->
-  </indexDefaults>
-
-  <!-- Main Index
-
-       Values here override the values in the <indexDefaults> section
-       for the main on disk index.
-    -->
-  <mainIndex>
-
-    <useCompoundFile>true</useCompoundFile>
-    <ramBufferSizeMB>32</ramBufferSizeMB>
-    <mergeFactor>10</mergeFactor>
-
-    <!-- Unlock On Startup
-
-         If true, unlock any held write or commit locks on startup.
-         This defeats the locking mechanism that allows multiple
-         processes to safely access a lucene index, and should be used
-         with care.
-
-         This is not needed if lock type is 'none' or 'single'
-     -->
-    <unlockOnStartup>false</unlockOnStartup>
-    
-    <!-- If true, IndexReaders will be reopened (often more efficient)
-         instead of closed and then opened.
-      -->
-    <reopenReaders>true</reopenReaders>
-
-    <!-- Commit Deletion Policy
-
-         Custom deletion policies can specified here. The class must
-         implement org.apache.lucene.index.IndexDeletionPolicy.
-
-         http://lucene.apache.org/java/2_9_1/api/all/org/apache/lucene/index/IndexDeletionPolicy.html
-
-         The standard Solr IndexDeletionPolicy implementation supports
-         deleting index commit points on number of commits, age of
-         commit point and optimized status.
-         
-         The latest commit point should always be preserved regardless
-         of the criteria.
-    -->
-    <deletionPolicy class="solr.SolrDeletionPolicy">
-      <!-- The number of commit points to be kept -->
-      <str name="maxCommitsToKeep">1</str>
-      <!-- The number of optimized commit points to be kept -->
-      <str name="maxOptimizedCommitsToKeep">0</str>
-      <!--
-          Delete all commit points once they have reached the given age.
-          Supports DateMathParser syntax e.g.
-        -->
-      <!--
-         <str name="maxCommitAge">30MINUTES</str>
-         <str name="maxCommitAge">1DAY</str>
-      -->
-    </deletionPolicy>
-
-    <!-- Lucene Infostream
-       
-         To aid in advanced debugging, Lucene provides an "InfoStream"
-         of detailed information when indexing.
-
-         Setting The value to true will instruct the underlying Lucene
-         IndexWriter to write it's debugging info the specified file
-      -->
-     <infoStream file="INFOSTREAM.txt">false</infoStream> 
-
-  </mainIndex>
-
-  <!-- JMX
-       
-       This example enables JMX if and only if an existing MBeanServer
-       is found, use this if you want to configure JMX through JVM
-       parameters. Remove this to disable exposing Solr configuration
-       and statistics to JMX.
-
-       For more details see http://wiki.apache.org/solr/SolrJmx
-    -->
-  <jmx />
-  <!-- If you want to connect to a particular server, specify the
-       agentId 
-    -->
-  <!-- <jmx agentId="myAgent" /> -->
-  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->
-  <!-- <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr"/>
-    -->
-
-  <!-- The default high-performance update handler -->
-  <updateHandler class="solr.DirectUpdateHandler2">
-
-    <!-- AutoCommit
-
-         Perform a <commit/> automatically under certain conditions.
-         Instead of enabling autoCommit, consider using "commitWithin"
-         when adding documents. 
-
-         http://wiki.apache.org/solr/UpdateXmlMessages
-
-         maxDocs - Maximum number of documents to add since the last
-                   commit before automaticly triggering a new commit.
-
-         maxTime - Maximum amount of time that is allowed to pass
-                   since a document was added before automaticly
-                   triggering a new commit. 
-      -->
-    <!--
-       <autoCommit> 
-         <maxDocs>10000</maxDocs>
-         <maxTime>1000</maxTime> 
-       </autoCommit>
-      -->
-
-    <!-- Update Related Event Listeners
-         
-         Various IndexWriter realted events can trigger Listeners to
-         take actions.
-
-         postCommit - fired after every commit or optimize command
-         postOptimize - fired after every optimize command
-      -->
-    <!-- The RunExecutableListener executes an external command from a
-         hook such as postCommit or postOptimize.
-         
-         exe - the name of the executable to run
-         dir - dir to use as the current working directory. (default=".")
-         wait - the calling thread waits until the executable returns. 
-                (default="true")
-         args - the arguments to pass to the program.  (default is none)
-         env - environment variables to set.  (default is none)
-      -->
-    <!-- This example shows how RunExecutableListener could be used
-         with the script based replication...
-         http://wiki.apache.org/solr/CollectionDistribution
-      -->
-    <!--
-       <listener event="postCommit" class="solr.RunExecutableListener">
-         <str name="exe">solr/bin/snapshooter</str>
-         <str name="dir">.</str>
-         <bool name="wait">true</bool>
-         <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
-         <arr name="env"> <str>MYVAR=val1</str> </arr>
-       </listener>
-      -->
-  </updateHandler>
-  
-  <!-- IndexReaderFactory
-
-       Use the following format to specify a custom IndexReaderFactory,
-       which allows for alternate IndexReader implementations.
-
-       ** Experimental Feature **
-
-       Please note - Using a custom IndexReaderFactory may prevent
-       certain other features from working. The API to
-       IndexReaderFactory may change without warning or may even be
-       removed from future releases if the problems cannot be
-       resolved.
-
-
-       ** Features that may not work with custom IndexReaderFactory **
-
-       The ReplicationHandler assumes a disk-resident index. Using a
-       custom IndexReader implementation may cause incompatibility
-       with ReplicationHandler and may cause replication to not work
-       correctly. See SOLR-1366 for details.
-
-    -->
-  <!--
-  <indexReaderFactory name="IndexReaderFactory" class="package.class">
-    <str name="someArg">Some Value</str>
-  </indexReaderFactory >
-  -->
-  <!-- By explicitly declaring the Factory, the termIndexDivisor can
-       be specified.
-    -->
-  <!--
-     <indexReaderFactory name="IndexReaderFactory" 
-                         class="solr.StandardIndexReaderFactory">
-       <int name="setTermIndexDivisor">12</int>
-     </indexReaderFactory >
-    -->
-
-
-  <query>
-    <!-- Max Boolean Clauses
-
-         Maximum number of clauses in each BooleanQuery,  an exception
-         is thrown if exceeded.
-
-         ** WARNING **
-         
-         This option actually modifies a global Lucene property that
-         will affect all SolrCores.  If multiple solrconfig.xml files
-         disagree on this property, the value at any given moment will
-         be based on the last SolrCore to be initialized.
-         
-      -->
-    <maxBooleanClauses>1024</maxBooleanClauses>
-
-
-    <!-- Solr Internal Query Caches
-
-         There are two implementations of cache available for Solr,
-         LRUCache, based on a synchronized LinkedHashMap, and
-         FastLRUCache, based on a ConcurrentHashMap.  
-
-         FastLRUCache has faster gets and slower puts in single
-         threaded operation and thus is generally faster than LRUCache
-         when the hit ratio of the cache is high (> 75%), and may be
-         faster under other scenarios on multi-cpu systems.
-    -->
-
-    <!-- Filter Cache
-
-         Cache used by SolrIndexSearcher for filters (DocSets),
-         unordered sets of *all* documents that match a query.  When a
-         new searcher is opened, its caches may be prepopulated or
-         "autowarmed" using data from caches in the old searcher.
-         autowarmCount is the number of items to prepopulate.  For
-         LRUCache, the autowarmed items will be the most recently
-         accessed items.
-
-         Parameters:
-           class - the SolrCache implementation LRUCache or
-               (LRUCache or FastLRUCache)
-           size - the maximum number of entries in the cache
-           initialSize - the initial capacity (number of entries) of
-               the cache.  (see java.util.HashMap)
-           autowarmCount - the number of entries to prepopulate from
-               and old cache.  
-      -->
-    <filterCache class="solr.FastLRUCache"
-                 size="512"
-                 initialSize="512"
-                 autowarmCount="0"/>
-
-    <!-- Query Result Cache
-         
-         Caches results of searches - ordered lists of document ids
-         (DocList) based on a query, a sort, and the range of documents requested.  
-      -->
-    <queryResultCache class="solr.LRUCache"
-                     size="512"
-                     initialSize="512"
-                     autowarmCount="0"/>
-   
-    <!-- Document Cache
-
-         Caches Lucene Document objects (the stored fields for each
-         document).  Since Lucene internal document ids are transient,
-         this cache will not be autowarmed.  
-      -->
-    <documentCache class="solr.LRUCache"
-                   size="512"
-                   initialSize="512"
-                   autowarmCount="0"/>
-    
-    <!-- Field Value Cache
-         
-         Cache used to hold field values that are quickly accessible
-         by document id.  The fieldValueCache is created by default
-         even if not configured here.
-      -->
-    <!--
-       <fieldValueCache class="solr.FastLRUCache"
-                        size="512"
-                        autowarmCount="128"
-                        showItems="32" />
-      -->
-
-    <!-- Custom Cache
-
-         Example of a generic cache.  These caches may be accessed by
-         name through SolrIndexSearcher.getCache(),cacheLookup(), and
-         cacheInsert().  The purpose is to enable easy caching of
-         user/application level data.  The regenerator argument should
-         be specified as an implementation of solr.CacheRegenerator 
-         if autowarming is desired.  
-      -->
-    <!--
-       <cache name="myUserCache"
-              class="solr.LRUCache"
-              size="4096"
-              initialSize="1024"
-              autowarmCount="1024"
-              regenerator="com.mycompany.MyRegenerator"
-              />
-      -->
-
-
-    <!-- Lazy Field Loading
-
-         If true, stored fields that are not requested will be loaded
-         lazily.  This can result in a significant speed improvement
-         if the usual case is to not load all stored fields,
-         especially if the skipped fields are large compressed text
-         fields.
-    -->
-    <enableLazyFieldLoading>true</enableLazyFieldLoading>
-
-   <!-- Use Filter For Sorted Query
-
-        A possible optimization that attempts to use a filter to
-        satisfy a search.  If the requested sort does not include
-        score, then the filterCache will be checked for a filter
-        matching the query. If found, the filter will be used as the
-        source of document ids, and then the sort will be applied to
-        that.
-
-        For most situations, this will not be useful unless you
-        frequently get the same search repeatedly with differnet sort
-        options, and none of them ever use "score"
-     -->
-   <!--
-      <useFilterForSortedQuery>true</useFilterForSortedQuery>
-     -->
-
-   <!-- Result Window Size
-
-        An optimization for use with the queryResultCache.  When a search
-        is requested, a superset of the requested number of document ids
-        are collected.  For example, if a search for a particular query
-        requests matching documents 10 through 19, and queryWindowSize is 50,
-        then documents 0 through 49 will be collected and cached.  Any further
-        requests in that range can be satisfied via the cache.  
-     -->
-   <queryResultWindowSize>20</queryResultWindowSize>
-
-   <!-- Maximum number of documents to cache for any entry in the
-        queryResultCache. 
-     -->
-   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
-
-   <!-- Query Related Event Listeners
-
-        Various IndexSearcher related events can trigger Listeners to
-        take actions.
-
-        newSearcher - fired whenever a new searcher is being prepared
-        and there is a current searcher handling requests (aka
-        registered).  It can be used to prime certain caches to
-        prevent long request times for certain requests.
-
-        firstSearcher - fired whenever a new searcher is being
-        prepared but there is no current registered searcher to handle
-        requests or to gain autowarming data from.
-
-        
-     -->
-    <!-- QuerySenderListener takes an array of NamedList and executes a
-         local query request for each NamedList in sequence. 
-      -->
-    <listener event="newSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <!--
-           <lst><str name="q">solr</str><str name="sort">price asc</str></lst>
-           <lst><str name="q">rocks</str><str name="sort">weight asc</str></lst>
-          -->
-      </arr>
-    </listener>
-    <listener event="firstSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <lst>
-          <str name="q">static firstSearcher warming in solrconfig.xml</str>
-        </lst>
-      </arr>
-    </listener>
-
-    <!-- Use Cold Searcher
-
-         If a search request comes in and there is no current
-         registered searcher, then immediately register the still
-         warming searcher and use it.  If "false" then all requests
-         will block until the first searcher is done warming.
-      -->
-    <useColdSearcher>false</useColdSearcher>
-
-    <!-- Max Warming Searchers
-         
-         Maximum number of searchers that may be warming in the
-         background concurrently.  An error is returned if this limit
-         is exceeded.
-
-         Recommend values of 1-2 for read-only slaves, higher for
-         masters w/o cache warming.
-      -->
-    <maxWarmingSearchers>2</maxWarmingSearchers>
-
-  </query>
-
-
-  <!-- Request Dispatcher
-
-       This section contains instructions for how the SolrDispatchFilter
-       should behave when processing requests for this SolrCore.
-
-       handleSelect affects the behavior of requests such as /select?qt=XXX
-
-       handleSelect="true" will cause the SolrDispatchFilter to process
-       the request and will result in consistent error handling and
-       formating for all types of requests.
-
-       handleSelect="false" will cause the SolrDispatchFilter to
-       ignore "/select" requests and fallback to using the legacy
-       SolrServlet and it's Solr 1.1 style error formatting
-    -->
-  <requestDispatcher handleSelect="true" >
-    <!-- Request Parsing
-
-         These settings indicate how Solr Requests may be parsed, and
-         what restrictions may be placed on the ContentStreams from
-         those requests
-
-         enableRemoteStreaming - enables use of the stream.file
-         and stream.url paramaters for specifying remote streams.
-
-         multipartUploadLimitInKB - specifies the max size of
-         Multipart File Uploads that Solr will alow in a Request.
-         
-         *** WARNING ***
-         The settings below authorize Solr to fetch remote files, You
-         should make sure your system has some authentication before
-         using enableRemoteStreaming="true"
-
-      --> 
-    <requestParsers enableRemoteStreaming="true" 
-                    multipartUploadLimitInKB="2048000" />
-
-    <!-- HTTP Caching
-
-         Set HTTP caching related parameters (for proxy caches and clients).
-
-         The options below instruct Solr not to output any HTTP Caching
-         related headers
-      -->
-    <httpCaching never304="true" />
-    <!-- If you include a <cacheControl> directive, it will be used to
-         generate a Cache-Control header (as well as an Expires header
-         if the value contains "max-age=")
-         
-         By default, no Cache-Control header is generated.
-         
-         You can use the <cacheControl> option even if you have set
-         never304="true"
-      -->
-    <!--
-       <httpCaching never304="true" >
-         <cacheControl>max-age=30, public</cacheControl> 
-       </httpCaching>
-      -->
-    <!-- To enable Solr to responde with automaticly generated HTTP
-         Caching headers, and to response to Cache Validation requests
-         correctly, set the value of never304="false"
-         
-         This will cause Solr to generate Last-Modified and ETag
-         headers based on the properties of the Index.
-
-         The following options can also be specified to affect the
-         values of these headers...
-
-         lastModFrom - the default value is "openTime" which means the
-         Last-Modified value (and validation against If-Modified-Since
-         requests) will all be relative to when the current Searcher
-         was opened.  You can change it to lastModFrom="dirLastMod" if
-         you want the value to exactly corrispond to when the physical
-         index was last modified.
-
-         etagSeed="..." is an option you can change to force the ETag
-         header (and validation against If-None-Match requests) to be
-         differnet even if the index has not changed (ie: when making
-         significant changes to your config file)
-
-         (lastModifiedFrom and etagSeed are both ignored if you use
-         the never304="true" option)
-      -->
-    <!--
-       <httpCaching lastModifiedFrom="openTime"
-                    etagSeed="Solr">
-         <cacheControl>max-age=30, public</cacheControl> 
-       </httpCaching>
-      -->
-  </requestDispatcher>
-
-  <!-- Request Handlers 
-
-       http://wiki.apache.org/solr/SolrRequestHandler
-
-       incoming queries will be dispatched to the correct handler
-       based on the path or the qt (query type) param.
-
-       Names starting with a '/' are accessed with the a path equal to
-       the registered name.  Names without a leading '/' are accessed
-       with: http://host/app/[core/]select?qt=name
-
-       If a /select request is processed with out a qt param
-       specified, the requestHandler that declares default="true" will
-       be used.
-       
-       If a Request Handler is declared with startup="lazy", then it will
-       not be initialized until the first request that uses it.
-
-    -->
-  <!-- SearchHandler
-
-       http://wiki.apache.org/solr/SearchHandler
-
-       For processing Search Queries, the primary Request Handler
-       provided with Solr is "SearchHandler" It delegates to a sequent
-       of SearchComponents (see below) and supports distributed
-       queries across multiple shards
-    -->
-  <requestHandler name="search" class="solr.SearchHandler" default="true">
-    <!-- default values for query parameters can be specified, these
-         will be overridden by parameters in the request
-      -->
-     <lst name="defaults">
-       <str name="echoParams">explicit</str>
-       <int name="rows">10</int>
-     </lst>
-    <!-- In addition to defaults, "appends" params can be specified
-         to identify values which should be appended to the list of
-         multi-val params from the query (or the existing "defaults").
-      -->
-    <!-- In this example, the param "fq=instock:true" would be appended to
-         any query time fq params the user may specify, as a mechanism for
-         partitioning the index, independent of any user selected filtering
-         that may also be desired (perhaps as a result of faceted searching).
-
-         NOTE: there is *absolutely* nothing a client can do to prevent these
-         "appends" values from being used, so don't use this mechanism
-         unless you are sure you always want it.
-      -->
-    <!--
-       <lst name="appends">
-         <str name="fq">inStock:true</str>
-       </lst>
-      -->
-    <!-- "invariants" are a way of letting the Solr maintainer lock down
-         the options available to Solr clients.  Any params values
-         specified here are used regardless of what values may be specified
-         in either the query, the "defaults", or the "appends" params.
-
-         In this example, the facet.field and facet.query params would
-         be fixed, limiting the facets clients can use.  Faceting is
-         not turned on by default - but if the client does specify
-         facet=true in the request, these are the only facets they
-         will be able to see counts for; regardless of what other
-         facet.field or facet.query params they may specify.
-
-         NOTE: there is *absolutely* nothing a client can do to prevent these
-         "invariants" values from being used, so don't use this mechanism
-         unless you are sure you always want it.
-      -->
-    <!--
-       <lst name="invariants">
-         <str name="facet.field">cat</str>
-         <str name="facet.field">manu_exact</str>
-         <str name="facet.query">price:[* TO 500]</str>
-         <str name="facet.query">price:[500 TO *]</str>
-       </lst>
-      -->
-    <!-- If the default list of SearchComponents is not desired, that
-         list can either be overridden completely, or components can be
-         prepended or appended to the default list.  (see below)
-      -->
-    <!--
-       <arr name="components">
-         <str>nameOfCustomComponent1</str>
-         <str>nameOfCustomComponent2</str>
-       </arr>
-      -->
-    </requestHandler>
-
-  <!-- A Robust Example
-
-       This example SearchHandler declaration shows off usage of the
-       SearchHandler with many defaults declared
-
-       Note that multiple instances of hte same Request Handler
-       (SearchHandler) can be registered multiple times with different
-       names (and different init parameters)
-    -->
-  <requestHandler name="/browse" class="solr.SearchHandler">
-     <lst name="defaults">
-       <str name="echoParams">explicit</str>
-
-       <!-- VelocityResponseWriter settings -->
-       <str name="wt">velocity</str>
-
-       <str name="v.template">browse</str>
-       <str name="v.layout">layout</str>
-       <str name="title">Solritas</str>
-
-       <str name="defType">edismax</str>
-       <str name="q.alt">*:*</str>
-       <str name="rows">10</str>
-       <str name="fl">*,score</str>
-       <str name="mlt.qf">
-         text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-       <str name="mlt.fl">text,features,name,sku,id,manu,cat</str>
-       <int name="mlt.count">3</int>
-
-       <str name="qf">
-          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-
-       <str name="facet">on</str>
-       <str name="facet.field">cat</str>
-       <str name="facet.field">manu_exact</str>
-       <str name="facet.query">ipod</str>
-       <str name="facet.query">GB</str>
-       <str name="facet.mincount">1</str>
-       <str name="facet.pivot">cat,inStock</str>
-       <str name="facet.range">price</str>
-       <int name="f.price.facet.range.start">0</int>
-       <int name="f.price.facet.range.end">600</int>
-       <int name="f.price.facet.range.gap">50</int>
-       <str name="f.price.facet.range.other">after</str>
-       <str name="facet.range">manufacturedate_dt</str>
-       <str name="f.manufacturedate_dt.facet.range.start">NOW/YEAR-10YEARS</str>
-       <str name="f.manufacturedate_dt.facet.range.end">NOW</str>
-       <str name="f.manufacturedate_dt.facet.range.gap">+1YEAR</str>
-       <str name="f.manufacturedate_dt.facet.range.other">before</str>
-       <str name="f.manufacturedate_dt.facet.range.other">after</str>
-
-
-       <!-- Highlighting defaults -->
-       <str name="hl">on</str>
-       <str name="hl.fl">text features name</str>
-       <str name="f.name.hl.fragsize">0</str>
-       <str name="f.name.hl.alternateField">name</str>
-     </lst>
-     <arr name="last-components">
-       <str>spellcheck</str>
-     </arr>
-     <!--
-     <str name="url-scheme">httpx</str>
-     -->
-  </requestHandler>
-
-  <!-- XML Update Request Handler.  
-       
-       http://wiki.apache.org/solr/UpdateXmlMessages
-
-       The canonical Request Handler for Modifying the Index through
-       commands specified using XML.
-
-       Note: Since solr1.1 requestHandlers requires a valid content
-       type header if posted in the body. For example, curl now
-       requires: -H 'Content-type:text/xml; charset=utf-8'
-    -->
-  <requestHandler name="/update" 
-                  class="solr.XmlUpdateRequestHandler">
-    <!-- See below for information on defining 
-         updateRequestProcessorChains that can be used by name 
-         on each Update Request
-      -->
-    <!--
-       <lst name="defaults">
-         <str name="update.chain">dedupe</str>
-       </lst>
-       -->
-    </requestHandler>
-  <!-- Binary Update Request Handler
-       http://wiki.apache.org/solr/javabin
-    -->
-  <requestHandler name="/update/javabin" 
-                  class="solr.BinaryUpdateRequestHandler" />
-
-  <!-- CSV Update Request Handler
-       http://wiki.apache.org/solr/UpdateCSV
-    -->
-  <requestHandler name="/update/csv" 
-                  class="solr.CSVRequestHandler" 
-                  startup="lazy" />
-
-  <!-- JSON Update Request Handler
-       http://wiki.apache.org/solr/UpdateJSON
-    -->
-  <requestHandler name="/update/json" 
-                  class="solr.JsonUpdateRequestHandler" 
-                  startup="lazy" />
-
-  <!-- Solr Cell Update Request Handler
-
-       http://wiki.apache.org/solr/ExtractingRequestHandler 
-
-    -->
-  <requestHandler name="/update/extract" 
-                  startup="lazy"
-                  class="solr.extraction.ExtractingRequestHandler" >
-    <lst name="defaults">
-      <!-- All the main content goes into "text"... if you need to return
-           the extracted text or do highlighting, use a stored field. -->
-      <str name="fmap.content">text</str>
-      <str name="lowernames">true</str>
-      <str name="uprefix">ignored_</str>
-
-      <!-- capture link hrefs but ignore div attributes -->
-      <str name="captureAttr">true</str>
-      <str name="fmap.a">links</str>
-      <str name="fmap.div">ignored_</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Field Analysis Request Handler
-
-       RequestHandler that provides much the same functionality as
-       analysis.jsp. Provides the ability to specify multiple field
-       types and field names in the same request and outputs
-       index-time and query-time analysis for each of them.
-
-       Request parameters are:
-       analysis.fieldname - field name whose analyzers are to be used
-
-       analysis.fieldtype - field type whose analyzers are to be used
-       analysis.fieldvalue - text for index-time analysis
-       q (or analysis.q) - text for query time analysis
-       analysis.showmatch (true|false) - When set to true and when
-           query analysis is performed, the produced tokens of the
-           field value analysis will be marked as "matched" for every
-           token that is produces by the query analysis
-   -->
-  <requestHandler name="/analysis/field" 
-                  startup="lazy"
-                  class="solr.FieldAnalysisRequestHandler" />
-
-
-  <!-- Document Analysis Handler
-
-       http://wiki.apache.org/solr/AnalysisRequestHandler
-
-       An analysis handler that provides a breakdown of the analysis
-       process of provided docuemnts. This handler expects a (single)
-       content stream with the following format:
-
-       <docs>
-         <doc>
-           <field name="id">1</field>
-           <field name="name">The Name</field>
-           <field name="text">The Text Value</field>
-         </doc>
-         <doc>...</doc>
-         <doc>...</doc>
-         ...
-       </docs>
-
-    Note: Each document must contain a field which serves as the
-    unique key. This key is used in the returned response to assoicate
-    ananalysis breakdown to the analyzed document.
-
-    Like the FieldAnalysisRequestHandler, this handler also supports
-    query analysis by sending either an "analysis.query" or "q"
-    request paraemter that holds the query text to be analyized. It
-    also supports the "analysis.showmatch" parameter which when set to
-    true, all field tokens that match the query tokens will be marked
-    as a "match". 
-  -->
-  <requestHandler name="/analysis/document" 
-                  class="solr.DocumentAnalysisRequestHandler" 
-                  startup="lazy" />
-
-  <!-- Admin Handlers
-
-       Admin Handlers - This will register all the standard admin
-       RequestHandlers.  
-    -->
-  <requestHandler name="/admin/" 
-                  class="solr.admin.AdminHandlers" />
-  <!-- This single handler is equivilent to the following... -->
-  <!--
-     <requestHandler name="/admin/luke"       class="solr.admin.LukeRequestHandler" />
-     <requestHandler name="/admin/system"     class="solr.admin.SystemInfoHandler" />
-     <requestHandler name="/admin/plugins"    class="solr.admin.PluginInfoHandler" />
-     <requestHandler name="/admin/threads"    class="solr.admin.ThreadDumpHandler" />
-     <requestHandler name="/admin/properties" class="solr.admin.PropertiesRequestHandler" />
-     <requestHandler name="/admin/file"       class="solr.admin.ShowFileRequestHandler" >
-    -->
-  <!-- If you wish to hide files under ${solr.home}/conf, explicitly
-       register the ShowFileRequestHandler using: 
-    -->
-  <!--
-     <requestHandler name="/admin/file" 
-                     class="solr.admin.ShowFileRequestHandler" >
-       <lst name="invariants">
-         <str name="hidden">synonyms.txt</str> 
-         <str name="hidden">anotherfile.txt</str> 
-       </lst>
-     </requestHandler>
-    -->
-
-  <!-- ping/healthcheck -->
-  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
-    <lst name="defaults">
-      <str name="qt">search</str>
-      <str name="q">solrpingquery</str>
-      <str name="echoParams">all</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Echo the request contents back to the client -->
-  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
-    <lst name="defaults">
-     <str name="echoParams">explicit</str> 
-     <str name="echoHandler">true</str>
-    </lst>
-  </requestHandler>
-  
-  <!-- Solr Replication
-
-       The SolrReplicationHandler supports replicating indexes from a
-       "master" used for indexing and "salves" used for queries.
-
-       http://wiki.apache.org/solr/SolrReplication 
-
-       In the example below, remove the <lst name="master"> section if
-       this is just a slave and remove  the <lst name="slave"> section
-       if this is just a master.
-    -->
-  <!--
-     <requestHandler name="/replication" class="solr.ReplicationHandler" >
-       <lst name="master">
-         <str name="replicateAfter">commit</str>
-         <str name="replicateAfter">startup</str>
-         <str name="confFiles">schema.xml,stopwords.txt</str>
-       </lst>
-       <lst name="slave">
-         <str name="masterUrl">http://localhost:8983/solr/replication</str>
-         <str name="pollInterval">00:00:60</str>
-       </lst>
-     </requestHandler>
-    -->
-
-  <!-- Search Components
-
-       Search components are registered to SolrCore and used by 
-       instances of SearchHandler (which can access them by name)
-       
-       By default, the following components are avaliable:
-       
-       <searchComponent name="query"     class="solr.QueryComponent" />
-       <searchComponent name="facet"     class="solr.FacetComponent" />
-       <searchComponent name="mlt"       class="solr.MoreLikeThisComponent" />
-       <searchComponent name="highlight" class="solr.HighlightComponent" />
-       <searchComponent name="stats"     class="solr.StatsComponent" />
-       <searchComponent name="debug"     class="solr.DebugComponent" />
-   
-       Default configuration in a requestHandler would look like:
-
-       <arr name="components">
-         <str>query</str>
-         <str>facet</str>
-         <str>mlt</str>
-         <str>highlight</str>
-         <str>stats</str>
-         <str>debug</str>
-       </arr>
-
-       If you register a searchComponent to one of the standard names, 
-       that will be used instead of the default.
-
-       To insert components before or after the 'standard' components, use:
-    
-       <arr name="first-components">
-         <str>myFirstComponentName</str>
-       </arr>
-    
-       <arr name="last-components">
-         <str>myLastComponentName</str>
-       </arr>
-
-       NOTE: The component registered with the name "debug" will
-       always be executed after the "last-components" 
-       
-     -->
-
-   <!-- Spell Check
-
-        The spell check component can return a list of alternative spelling
-        suggestions.  
-
-        http://wiki.apache.org/solr/SpellCheckComponent
-     -->
-  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
-
-    <str name="queryAnalyzerFieldType">textSpell</str>
-
-    <!-- Multiple "Spell Checkers" can be declared and used by this
-         component
-      -->
-
-    <!-- a spellchecker built from a field of hte main index, and
-         written to disk
-      -->
-    <lst name="spellchecker">
-      <str name="name">default</str>
-      <str name="field">name</str>
-      <str name="spellcheckIndexDir">spellchecker</str>
-    </lst>
-
-    <!-- a spellchecker that uses a different distance measure -->
-    <!--
-       <lst name="spellchecker">
-         <str name="name">jarowinkler</str>
-         <str name="field">spell</str>
-         <str name="distanceMeasure">
-           org.apache.lucene.search.spell.JaroWinklerDistance
-         </str>
-         <str name="spellcheckIndexDir">spellcheckerJaro</str>
-       </lst>
-     -->
-
-    <!-- a spellchecker that use an alternate comparator 
-
-         comparatorClass be one of:
-          1. score (default)
-          2. freq (Frequency first, then score)
-          3. A fully qualified class name
-      -->
-    <!--
-       <lst name="spellchecker">
-         <str name="name">freq</str>
-         <str name="field">lowerfilt</str>
-         <str name="spellcheckIndexDir">spellcheckerFreq</str>
-         <str name="comparatorClass">freq</str>
-         <str name="buildOnCommit">true</str>
-      -->
-
-    <!-- A spellchecker that reads the list of words from a file -->
-    <!--
-       <lst name="spellchecker">
-         <str name="classname">solr.FileBasedSpellChecker</str>
-         <str name="name">file</str>
-         <str name="sourceLocation">spellings.txt</str>
-         <str name="characterEncoding">UTF-8</str>
-         <str name="spellcheckIndexDir">spellcheckerFile</str>
-       </lst>
-      -->
-  </searchComponent>
-
-  <!-- A request handler for demonstrating the spellcheck component.  
-
-       NOTE: This is purely as an example.  The whole purpose of the
-       SpellCheckComponent is to hook it into the request handler that
-       handles your normal user queries so that a separate request is
-       not needed to get suggestions.
-
-       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS
-       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!
-       
-       See http://wiki.apache.org/solr/SpellCheckComponent for details
-       on the request parameters.
-    -->
-  <requestHandler name="/spell" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <str name="spellcheck.onlyMorePopular">false</str>
-      <str name="spellcheck.extendedResults">false</str>
-      <str name="spellcheck.count">1</str>
-    </lst>
-    <arr name="last-components">
-      <str>spellcheck</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Term Vector Component
-
-       http://wiki.apache.org/solr/TermVectorComponent
-    -->
-  <searchComponent name="tvComponent" class="solr.TermVectorComponent"/>
-
-  <!-- A request handler for demonstrating the term vector component
-
-       This is purely as an example.
-
-       In reality you will likely want to add the component to your 
-       already specified request handlers. 
-    -->
-  <requestHandler name="tvrh" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <bool name="tv">true</bool>
-    </lst>
-    <arr name="last-components">
-      <str>tvComponent</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Clustering Component
-
-       http://wiki.apache.org/solr/ClusteringComponent
-
-       This relies on third party jars which are notincluded in the
-       release.  To use this component (and the "/clustering" handler)
-       Those jars will need to be downloaded, and you'll need to set
-       the solr.cluster.enabled system property when running solr...
-
-          java -Dsolr.clustering.enabled=true -jar start.jar
-    -->
-  <searchComponent name="clustering" 
-                   enable="${solr.clustering.enabled:false}"
-                   class="solr.clustering.ClusteringComponent" >
-    <!-- Declare an engine -->
-    <lst name="engine">
-      <!-- The name, only one can be named "default" -->
-      <str name="name">default</str>
-
-      <!-- Class name of Carrot2 clustering algorithm. 
-           
-           Currently available algorithms are:
-           
-           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm
-           * org.carrot2.clustering.stc.STCClusteringAlgorithm
-           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm
-           
-           See http://project.carrot2.org/algorithms.html for the
-           algorithm's characteristics.
-        -->
-      <str name="carrot.algorithm">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>
-
-      <!-- Overriding values for Carrot2 default algorithm attributes.
-
-           For a description of all available attributes, see:
-           http://download.carrot2.org/stable/manual/#chapter.components.
-           Use attribute key as name attribute of str elements
-           below. These can be further overridden for individual
-           requests by specifying attribute key as request parameter
-           name and attribute value as parameter value.
-        -->
-      <str name="LingoClusteringAlgorithm.desiredClusterCountBase">20</str>
-      
-      <!-- Location of Carrot2 lexical resources.
-
-           A directory from which to load Carrot2-specific stop words
-           and stop labels. Absolute or relative to Solr config directory.
-           If a specific resource (e.g. stopwords.en) is present in the
-           specified dir, it will completely override the corresponding
-           default one that ships with Carrot2.
-
-           For an overview of Carrot2 lexical resources, see:
-           http://download.carrot2.org/head/manual/#chapter.lexical-resources
-        -->
-      <str name="carrot.lexicalResourcesDir">clustering/carrot2</str>
-
-      <!-- The language to assume for the documents.
-           
-           For a list of allowed values, see:
-           http://download.carrot2.org/stable/manual/#section.attribute.lingo.MultilingualClustering.defaultLanguage
-       -->
-      <str name="MultilingualClustering.defaultLanguage">ENGLISH</str>
-    </lst>
-    <lst name="engine">
-      <str name="name">stc</str>
-      <str name="carrot.algorithm">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>
-    </lst>
-  </searchComponent>
-
-  <!-- A request handler for demonstrating the clustering component
-
-       This is purely as an example.
-
-       In reality you will likely want to add the component to your 
-       already specified request handlers. 
-    -->
-  <requestHandler name="/clustering"
-                  startup="lazy"
-                  enable="${solr.clustering.enabled:false}"
-                  class="solr.SearchHandler">
-    <lst name="defaults">
-      <bool name="clustering">true</bool>
-      <str name="clustering.engine">default</str>
-      <bool name="clustering.results">true</bool>
-      <!-- The title field -->
-      <str name="carrot.title">name</str>
-      <str name="carrot.url">id</str>
-      <!-- The field to cluster on -->
-       <str name="carrot.snippet">features</str>
-       <!-- produce summaries -->
-       <bool name="carrot.produceSummary">true</bool>
-       <!-- the maximum number of labels per cluster -->
-       <!--<int name="carrot.numDescriptions">5</int>-->
-       <!-- produce sub clusters -->
-       <bool name="carrot.outputSubClusters">false</bool>
-       
-       <str name="defType">edismax</str>
-       <str name="qf">
-          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-       <str name="q.alt">*:*</str>
-       <str name="rows">10</str>
-       <str name="fl">*,score</str>
-    </lst>     
-    <arr name="last-components">
-      <str>clustering</str>
-    </arr>
-  </requestHandler>
-  
-  <!-- Terms Component
-
-       http://wiki.apache.org/solr/TermsComponent
-
-       A component to return terms and document frequency of those
-       terms
-    -->
-  <searchComponent name="terms" class="solr.TermsComponent"/>
-
-  <!-- A request handler for demonstrating the terms component -->
-  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
-     <lst name="defaults">
-      <bool name="terms">true</bool>
-    </lst>     
-    <arr name="components">
-      <str>terms</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Highlighting Component
-
-       http://wiki.apache.org/solr/HighlightingParameters
-    -->
-  <searchComponent class="solr.HighlightComponent" name="highlight">
-    <highlighting>
-      <!-- Configure the standard fragmenter -->
-      <!-- This could most likely be commented out in the "default" case -->
-      <fragmenter name="gap" 
-                  default="true"
-                  class="solr.highlight.GapFragmenter">
-        <lst name="defaults">
-          <int name="hl.fragsize">100</int>
-        </lst>
-      </fragmenter>
-
-      <!-- A regular-expression-based fragmenter 
-           (for sentence extraction) 
-        -->
-      <fragmenter name="regex" 
-                  class="solr.highlight.RegexFragmenter">
-        <lst name="defaults">
-          <!-- slightly smaller fragsizes work better because of slop -->
-          <int name="hl.fragsize">70</int>
-          <!-- allow 50% slop on fragment sizes -->
-          <float name="hl.regex.slop">0.5</float>
-          <!-- a basic sentence pattern -->
-          <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
-        </lst>
-      </fragmenter>
-
-      <!-- Configure the standard formatter -->
-      <formatter name="html" 
-                 default="true"
-                 class="solr.highlight.HtmlFormatter">
-        <lst name="defaults">
-          <str name="hl.simple.pre"><![CDATA[<em>]]></str>
-          <str name="hl.simple.post"><![CDATA[</em>]]></str>
-        </lst>
-      </formatter>
-
-      <!-- Configure the standard encoder -->
-      <encoder name="html" 
-               class="solr.highlight.HtmlEncoder" />
-
-      <!-- Configure the standard fragListBuilder -->
-      <fragListBuilder name="simple" 
-                       default="true"
-                       class="solr.highlight.SimpleFragListBuilder"/>
-
-      <!-- Configure the single fragListBuilder -->
-      <fragListBuilder name="single" 
-                       class="solr.highlight.SingleFragListBuilder"/>
-
-      <!-- default tag FragmentsBuilder -->
-      <fragmentsBuilder name="default" 
-                        default="true"
-                        class="solr.highlight.ScoreOrderFragmentsBuilder">
-        <!-- 
-        <lst name="defaults">
-          <str name="hl.multiValuedSeparatorChar">/</str>
-        </lst>
-        -->
-      </fragmentsBuilder>
-
-      <!-- multi-colored tag FragmentsBuilder -->
-      <fragmentsBuilder name="colored" 
-                        class="solr.highlight.ScoreOrderFragmentsBuilder">
-        <lst name="defaults">
-          <str name="hl.tag.pre"><![CDATA[
-               <b style="background:yellow">,<b style="background:lawgreen">,
-               <b style="background:aquamarine">,<b style="background:magenta">,
-               <b style="background:palegreen">,<b style="background:coral">,
-               <b style="background:wheat">,<b style="background:khaki">,
-               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
-          <str name="hl.tag.post"><![CDATA[</b>]]></str>
-        </lst>
-      </fragmentsBuilder>
-    </highlighting>
-  </searchComponent>
-
-  <!-- Update Processors
-
-       Chains of Update Processor Factories for dealing with Update
-       Requests can be declared, and then used by name in Update
-       Request Processors
-
-       http://wiki.apache.org/solr/UpdateRequestProcessor
-
-    --> 
-  <!-- Deduplication
-
-       An example dedup update processor that creates the "id" field
-       on the fly based on the hash code of some other fields.  This
-       example has overwriteDupes set to false since we are using the
-       id field as the signatureField and Solr will maintain
-       uniqueness based on that anyway.  
-       
-    -->
-  <!--
-     <updateRequestProcessorChain name="dedupe">
-       <processor class="solr.processor.SignatureUpdateProcessorFactory">
-         <bool name="enabled">true</bool>
-         <str name="signatureField">id</str>
-         <bool name="overwriteDupes">false</bool>
-         <str name="fields">name,features,cat</str>
-         <str name="signatureClass">solr.processor.Lookup3Signature</str>
-       </processor>
-       <processor class="solr.LogUpdateProcessorFactory" />
-       <processor class="solr.RunUpdateProcessorFactory" />
-     </updateRequestProcessorChain>
-    -->
-
-  <!-- Response Writers
-
-       http://wiki.apache.org/solr/QueryResponseWriter
-
-       Request responses will be written using the writer specified by
-       the 'wt' request parameter matching the name of a registered
-       writer.
-
-       The "default" writer is the default and will be used if 'wt' is
-       not specified in the request.
-    -->
-  <!-- The following response writers are implicitly configured unless
-       overridden...
-    -->
-  <!--
-     <queryResponseWriter name="xml" 
-                          default="true"
-                          class="solr.XMLResponseWriter" />
-     <queryResponseWriter name="json" class="solr.JSONResponseWriter"/>
-     <queryResponseWriter name="python" class="solr.PythonResponseWriter"/>
-     <queryResponseWriter name="ruby" class="solr.RubyResponseWriter"/>
-     <queryResponseWriter name="php" class="solr.PHPResponseWriter"/>
-     <queryResponseWriter name="phps" class="solr.PHPSerializedResponseWriter"/>
-     <queryResponseWriter name="velocity" class="solr.VelocityResponseWriter"/>
-     <queryResponseWriter name="csv" class="solr.CSVResponseWriter"/>
-    -->
-  <!--
-     Custom response writers can be declared as needed...
-    -->
-  <!--
-     <queryResponseWriter name="custom" class="com.example.MyResponseWriter"/>
-    -->
-
-  <!-- XSLT response writer transforms the XML output by any xslt file found
-       in Solr's conf/xslt directory.  Changes to xslt files are checked for
-       every xsltCacheLifetimeSeconds.  
-    -->
-  <queryResponseWriter name="xslt" class="solr.XSLTResponseWriter">
-    <int name="xsltCacheLifetimeSeconds">5</int>
-  </queryResponseWriter>
-
-  <!-- Query Parsers
-
-       http://wiki.apache.org/solr/SolrQuerySyntax
-
-       Multiple QParserPlugins can be registered by name, and then
-       used in either the "defType" param for the QueryComponent (used
-       by SearchHandler) or in LocalParams
-    -->
-  <!-- example of registering a query parser -->
-  <!--
-     <queryParser name="myparser" class="com.mycompany.MyQParserPlugin"/>
-    -->
-
-  <!-- Function Parsers
-
-       http://wiki.apache.org/solr/FunctionQuery
-
-       Multiple ValueSourceParsers can be registered by name, and then
-       used as function names when using the "func" QParser.
-    -->
-  <!-- example of registering a custom function parser  -->
-  <!--
-     <valueSourceParser name="myfunc" 
-                        class="com.mycompany.MyValueSourceParser" />
-    -->
-
-  <!-- Legacy config for the admin interface -->
-  <admin>
-    <defaultQuery>*:*</defaultQuery>
-
-    <!-- configure a healthcheck file for servers behind a
-         loadbalancer 
-      -->
-    <!--
-       <healthcheck type="file">server-enabled</healthcheck>
-      -->
-  </admin>
-
-</config>
diff --git a/share/solr-data/contexts/solr.xml b/share/solr-data/contexts/solr.xml
deleted file mode 100644
index 1ce8d44..0000000
--- a/share/solr-data/contexts/solr.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0"  encoding="ISO-8859-1"?>
-<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
- 
-<Configure class="org.mortbay.jetty.webapp.WebAppContext">
-  <Set name="contextPath">/solr</Set>
-  <Set name="war">/usr/share/java/webapps/apache-solr-3.6.0.war</Set>
-</Configure>
-
diff --git a/share/solr-data/jetty.xml b/share/solr-data/jetty.xml
deleted file mode 100644
index ccd347f..0000000
--- a/share/solr-data/jetty.xml
+++ /dev/null
@@ -1,227 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">
-
-<!-- =============================================================== -->
-<!-- Configure the Jetty Server                                      -->
-<!--                                                                 -->
-<!-- Documentation of this file format can be found at:              -->
-<!-- http://docs.codehaus.org/display/JETTY/jetty.xml                -->
-<!--                                                                 -->
-<!-- =============================================================== -->
-
-
-<Configure id="Server" class="org.mortbay.jetty.Server">
-
-    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
-    <Call class="java.lang.System" name="setProperty">
-      <Arg>org.mortbay.jetty.Request.maxFormContentSize</Arg>
-      <Arg>1000000</Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Server Thread Pool                                          -->
-    <!-- =========================================================== -->
-    <Set name="ThreadPool">
-
-      <New class="org.mortbay.thread.QueuedThreadPool">
-        <Set name="minThreads">10</Set>
-        <Set name="maxThreads">10000</Set>
-        <Set name="lowThreads">20</Set>
-      </New>
-
-      <!-- Optional Java 5 bounded threadpool with job queue 
-      <New class="org.mortbay.thread.concurrent.ThreadPool">
-        <Set name="corePoolSize">50</Set>
-        <Set name="maximumPoolSize">50</Set>
-      </New>
-      -->
-    </Set>
-
-
-
-    <!-- =========================================================== -->
-    <!-- Set connectors                                              -->
-    <!-- =========================================================== -->
-    <!-- One of each type!                                           -->
-    <!-- =========================================================== -->
-
-    <!-- Use this connector for many frequently idle connections
-         and for threadless continuations.
-    -->    
-  <!--
-    <Call name="addConnector">
-      <Arg>
-          <New class="org.mortbay.jetty.nio.SelectChannelConnector">
-            <Set name="host"><SystemProperty name="jetty.host" /></Set>
-            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">30000</Set>
-            <Set name="Acceptors">2</Set>
-            <Set name="statsOn">false</Set>
-            <Set name="confidentialPort">8443</Set>
-	    <Set name="lowResourcesConnections">5000</Set>
-	    <Set name="lowResourcesMaxIdleTime">5000</Set>
-          </New>
-      </Arg>
-    </Call>
-  -->
-
-    <!-- This connector is currently being used for Solr because it
-          showed better performance than nio.SelectChannelConnector
-          for typical Solr requests.  -->
-    <Call name="addConnector">
-      <Arg>
-          <New class="org.mortbay.jetty.bio.SocketConnector">
-            <Set name="host"><SystemProperty name="jetty.host" /></Set>
-            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">50000</Set>
-            <Set name="lowResourceMaxIdleTime">1500</Set>
-            <Set name="statsOn">false</Set>
-          </New>
-      </Arg>
-    </Call>
-
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    <!-- To add a HTTPS SSL listener                                     -->
-    <!-- see jetty-ssl.xml to add an ssl connector. use                  -->
-    <!-- java -jar start.jar etc/jetty.xml etc/jetty-ssl.xml             -->
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    <!-- To allow Jetty to be started from xinetd                        -->
-    <!-- mixin jetty-xinetd.xml:                                         -->
-    <!--   java -jar start.jar etc/jetty.xml etc/jetty-xinetd.xml        -->
-    <!--                                                                 -->
-    <!-- See jetty-xinetd.xml for further instructions.                  -->
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    
-    <!-- =========================================================== -->
-    <!-- Set up global session ID manager                            -->
-    <!-- =========================================================== -->
-    <!--
-    <Set name="sessionIdManager">
-      <New class="org.mortbay.jetty.servlet.HashSessionIdManager">
-        <Set name="workerName">node1</Set>
-      </New>
-    </Set>
-    -->
-
-    <!-- =========================================================== -->
-    <!-- Set handler Collection Structure                            --> 
-    <!-- =========================================================== -->
-    <Set name="handler">
-      <New id="Handlers" class="org.mortbay.jetty.handler.HandlerCollection">
-        <Set name="handlers">
-         <Array type="org.mortbay.jetty.Handler">
-           <Item>
-             <New id="Contexts" class="org.mortbay.jetty.handler.ContextHandlerCollection"/>
-           </Item>
-           <Item>
-             <New id="DefaultHandler" class="org.mortbay.jetty.handler.DefaultHandler"/>
-           </Item>
-           <Item>
-             <New id="RequestLog" class="org.mortbay.jetty.handler.RequestLogHandler"/>
-           </Item>
-         </Array>
-        </Set>
-      </New>
-    </Set>
-    
-    <!-- =========================================================== -->
-    <!-- Configure the context deployer                              -->
-    <!-- A context deployer will deploy contexts described in        -->
-    <!-- configuration files discovered in a directory.              -->
-    <!-- The configuration directory can be scanned for hot          -->
-    <!-- deployments at the configured scanInterval.                 -->
-    <!--                                                             -->
-    <!-- This deployer is configured to deploy contexts configured   -->
-    <!-- in the $JETTY_HOME/contexts directory                       -->
-    <!--                                                             -->
-    <!-- =========================================================== -->
-    <Call name="addLifeCycle">
-      <Arg>
-        <New class="org.mortbay.jetty.deployer.ContextDeployer">
-          <Set name="contexts"><Ref id="Contexts"/></Set>
-          <Set name="configurationDir"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
-          <Set name="scanInterval">5</Set>
-        </New>
-      </Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Configure the webapp deployer.                              -->
-    <!-- A webapp  deployer will deploy standard webapps discovered  -->
-    <!-- in a directory at startup, without the need for additional  -->
-    <!-- configuration files.    It does not support hot deploy or   -->
-    <!-- non standard contexts (see ContextDeployer above).          -->
-    <!--                                                             -->
-    <!-- This deployer is configured to deploy webapps from the      -->
-    <!-- $JETTY_HOME/webapps directory                               -->
-    <!--                                                             -->
-    <!-- Normally only one type of deployer need be used.            -->
-    <!--                                                             -->
-    <!-- =========================================================== -->
-    <Call name="addLifeCycle">
-      <Arg>
-        <New class="org.mortbay.jetty.deployer.WebAppDeployer">
-          <Set name="contexts"><Ref id="Contexts"/></Set>
-          <Set name="webAppDir"><SystemProperty name="jetty.webapps" default="."/></Set>
-	  <Set name="parentLoaderPriority">false</Set>
-	  <Set name="extract">true</Set>
-	  <Set name="allowDuplicates">false</Set>
-          <Set name="defaultsDescriptor"><SystemProperty name="jetty.home" default="."/>/webdefault.xml</Set>
-        </New>
-      </Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Configure Authentication Realms                             -->
-    <!-- Realms may be configured for the entire server here, or     -->
-    <!-- they can be configured for a specific web app in a context  -->
-    <!-- configuration (see $(jetty.home)/contexts/test.xml for an   -->
-    <!-- example).                                                   -->
-    <!-- =========================================================== -->
-  <!--
-    <Set name="UserRealms">
-      <Array type="org.mortbay.jetty.security.UserRealm">
-        <Item>
-          <New class="org.mortbay.jetty.security.HashUserRealm">
-            <Set name="name">Test Realm</Set>
-            <Set name="config"><SystemProperty name="jetty.home" default="."/>/etc/realm.properties</Set>
-            <Set name="refreshInterval">0</Set>
-          </New>
-        </Item>
-      </Array>
-    </Set>
-  -->
-
-    <!-- =========================================================== -->
-    <!-- Configure Request Log                                       -->
-    <!-- Request logs  may be configured for the entire server here, -->
-    <!-- or they can be configured for a specific web app in a       -->
-    <!-- contexts configuration (see $(jetty.home)/contexts/test.xml -->
-    <!-- for an example).                                            -->
-    <!-- =========================================================== -->
-  <!--
-    <Ref id="RequestLog">
-      <Set name="requestLog">
-        <New id="RequestLogImpl" class="org.mortbay.jetty.NCSARequestLog">
-          <Set name="filename"><SystemProperty name="jetty.logs" default="./logs"/>/yyyy_mm_dd.request.log</Set>
-          <Set name="filenameDateFormat">yyyy_MM_dd</Set>
-          <Set name="retainDays">90</Set>
-          <Set name="append">true</Set>
-          <Set name="extended">false</Set>
-          <Set name="logCookies">false</Set>
-          <Set name="LogTimeZone">GMT</Set>
-        </New>
-      </Set>
-    </Ref>
-  -->
-    <!-- =========================================================== -->
-    <!-- extra options                                               -->
-    <!-- =========================================================== -->
-    <Set name="stopAtShutdown">true</Set>
-    <Set name="sendServerVersion">false</Set>
-    <Set name="sendDateHeader">false</Set>
-    <Set name="gracefulShutdown">1000</Set>
-
-</Configure>
diff --git a/share/solr-data/solr.xml b/share/solr-data/solr.xml
deleted file mode 100644
index 2fed50a..0000000
--- a/share/solr-data/solr.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<solr persistent="true" sharedLib="lib">
-    <cores adminPath="/admin/cores"/>
-</solr>
diff --git a/share/solr-data/start.config b/share/solr-data/start.config
deleted file mode 100644
index 26fc367..0000000
--- a/share/solr-data/start.config
+++ /dev/null
@@ -1,56 +0,0 @@
-# This file controls what file are to be put on classpath or command line.
-#
-# Format is as follows:
-# Each line contains entry for one JAR file.
-# Format of line:
-#
-#  SUBJECT [ [!] CONDITION [AND|OR] ]*
-# 
-# where SUBJECT: 
-#   ends with ".class" is the Main class to run.
-#   ends with ".xml" is a configuration file for the command line
-#   ends with "/" is a directory from which to add all jar and zip files. 
-#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
-#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
-#   Containing = are used to assign system properties.
-#   all other subjects are treated as files to be added to the classpath.
-#
-# Subjects may include system properties with $(propertyname) syntax. 
-#
-# Files starting with "/" are considered absolute, all others are relative to
-# the home directory.
-#
-# CONDITION is one of:
-#   always
-#   never
-#   available classname        # true if class on classpath
-#   property name              # true of set
-#   java OPERATOR version      # java version compared to literal
-#   nargs OPERATOR number      # number of command line args compared to literal
-#   OPERATOR := one of "<",">","<=",">=","==","!="
-#
-# CONTITIONS can be combined with AND OR or !, with AND being the assume
-# operator for a list of CONDITIONS.
-# Classpath operations are evaluated on the fly, so once a class or jar is
-# added to the classpath, subsequent available conditions will see that class.
-#
-
-$(jetty.class.path).path                         always
-$(jetty.lib)/**                                  exists $(jetty.lib)
-
-
-# Try different settings of jetty.home until the jetty.jar is found.
-jetty.home=/location/of/your/jetty/config/dir
-
-# The main class to run
-org.mortbay.xml.XmlConfiguration.class
-$(start.class).class
-
-# The default configuration files
-$(jetty.home)/jetty.xml                             nargs == 0
-
-# Set the jetty classpath
-/usr/share/java/solr/*                              always
-
-# Set webapps dir
-jetty.webapps=/usr/share/java/webapps
diff --git a/share/solr-data/webdefault.xml b/share/solr-data/webdefault.xml
deleted file mode 100644
index b8d0114..0000000
--- a/share/solr-data/webdefault.xml
+++ /dev/null
@@ -1,410 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<!-- ===================================================================== -->
-<!-- This file contains the default descriptor for web applications.       -->
-<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-<!-- The intent of this descriptor is to include jetty specific or common  -->
-<!-- configuration for all webapps.   If a context has a webdefault.xml    -->
-<!-- descriptor, it is applied before the contexts own web.xml file        -->
-<!--                                                                       -->
-<!-- A context may be assigned a default descriptor by:                    -->
-<!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
-<!--  + Passed an arg to addWebApplications                                -->
-<!--                                                                       -->
-<!-- This file is used both as the resource within the jetty.jar (which is -->
-<!-- used as the default if no explicit defaults descriptor is set) and it -->
-<!-- is copied to the etc directory of the Jetty distro and explicitly     -->
-<!-- by the jetty.xml file.                                                -->
-<!--                                                                       -->
-<!-- ===================================================================== -->
-<web-app 
-   xmlns="http://java.sun.com/xml/ns/javaee" 
-   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
-   metadata-complete="true"
-   version="2.5"> 
-
-  <description>
-    Default web.xml file.  
-    This file is applied to a Web application before it's own WEB_INF/web.xml file
-  </description>
-
-
-  <!-- ==================================================================== -->
-  <!-- Context params to control Session Cookies                            -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- UNCOMMENT TO ACTIVATE
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.SessionDomain</param-name>
-    <param-value>127.0.0.1</param-value>
-  </context-param>
-
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.SessionPath</param-name>
-    <param-value>/</param-value>
-  </context-param>
-
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.MaxAge</param-name>
-    <param-value>-1</param-value>
-  </context-param>
-  -->
-
-  <context-param>
-    <param-name>org.mortbay.jetty.webapp.NoTLDJarPattern</param-name>
-    <param-value>start.jar|ant-.*\.jar|dojo-.*\.jar|jetty-.*\.jar|jsp-api-.*\.jar|junit-.*\.jar|servlet-api-.*\.jar|dnsns\.jar|rt\.jar|jsse\.jar|tools\.jar|sunpkcs11\.jar|sunjce_provider\.jar|xerces.*\.jar</param-value>
-  </context-param>
-            
-
-
-  <!-- ==================================================================== -->
-  <!-- The default servlet.                                                 -->
-  <!-- This servlet, normally mapped to /, provides the handling for static -->
-  <!-- content, OPTIONS and TRACE methods for the context.                  -->
-  <!-- The following initParameters are supported:                          -->
-  <!--                                                                      -->
-  <!--   acceptRanges     If true, range requests and responses are         -->
-  <!--                    supported                                         -->
-  <!--                                                                      -->
-  <!--   dirAllowed       If true, directory listings are returned if no    -->
-  <!--                    welcome file is found. Else 403 Forbidden.        -->
-  <!--                                                                      -->
-  <!--   welcomeServlets  If true, attempt to dispatch to welcome files     -->
-  <!--                    that are servlets, if no matching static          --> 
-  <!--                    resources can be found.                           -->
-  <!--                                                                      -->
-  <!--   redirectWelcome  If true, redirect welcome file requests           -->
-  <!--                    else use request dispatcher forwards              -->
-  <!--                                                                      -->
-  <!--   gzip             If set to true, then static content will be served--> 
-  <!--                    as gzip content encoded if a matching resource is -->
-  <!--                    found ending with ".gz"                           -->
-  <!--                                                                      -->
-  <!--   resoureBase      Can be set to replace the context resource base   -->
-  <!--                                                                      -->
-  <!--   relativeResourceBase                                               -->
-  <!--                    Set with a pathname relative to the base of the   -->
-  <!--                    servlet context root. Useful for only serving     -->
-  <!--                    static content from only specific subdirectories. -->
-  <!--                                                                      -->
-  <!--   useFileMappedBuffer                                                -->
-  <!--                    If set to true (the default), a  memory mapped    -->
-  <!--                    file buffer will be used to serve static content  -->
-  <!--                    when using an NIO connector. Setting this value   -->
-  <!--                    to false means that a direct buffer will be used  -->
-  <!--                    instead. If you are having trouble with Windows   -->
-  <!--                    file locking, set this to false.                  -->
-  <!--                                                                      -->
-  <!--  cacheControl      If set, all static content will have this value   -->
-  <!--                    set as the cache-control header.                  -->
-  <!--                                                                      -->
-  <!--  maxCacheSize      Maximum size of the static resource cache         -->
-  <!--                                                                      -->
-  <!--  maxCachedFileSize Maximum size of any single file in the cache      -->
-  <!--                                                                      -->
-  <!--  maxCachedFiles    Maximum number of files in the cache              -->
-  <!--                                                                      -->
-  <!--  cacheType         "nio", "bio" or "both" to determine the type(s)   -->
-  <!--                    of resource cache. A bio cached buffer may be used-->
-  <!--                    by nio but is not as efficient as a nio buffer.   -->
-  <!--                    An nio cached buffer may not be used by bio.      -->
-  <!--                                                                      -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet>
-    <servlet-name>default</servlet-name>
-    <servlet-class>org.mortbay.jetty.servlet.DefaultServlet</servlet-class>
-    <init-param>
-      <param-name>acceptRanges</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>dirAllowed</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>welcomeServlets</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>redirectWelcome</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCacheSize</param-name>
-      <param-value>256000000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCachedFileSize</param-name>
-      <param-value>10000000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCachedFiles</param-name>
-      <param-value>1000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>cacheType</param-name>
-      <param-value>both</param-value>
-    </init-param>
-    <init-param>
-      <param-name>gzip</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>useFileMappedBuffer</param-name>
-      <param-value>true</param-value>
-    </init-param>  
-    <!--
-    <init-param>
-      <param-name>cacheControl</param-name>
-      <param-value>max-age=3600,public</param-value>
-    </init-param>
-    -->
-    <load-on-startup>0</load-on-startup>
-  </servlet> 
-
-  <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping>
-  
-
-  <!-- ==================================================================== -->
-  <!-- JSP Servlet                                                          -->
-  <!-- This is the jasper JSP servlet from the jakarta project              -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
-  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
-  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
-  <!-- following initialization parameters (default values are in square    -->
-  <!-- brackets):                                                           -->
-  <!--                                                                      -->
-  <!--   checkInterval       If development is false and reloading is true, -->
-  <!--                       background compiles are enabled. checkInterval -->
-  <!--                       is the time in seconds between checks to see   -->
-  <!--                       if a JSP page needs to be recompiled. [300]    -->
-  <!--                                                                      -->
-  <!--   compiler            Which compiler Ant should use to compile JSP   -->
-  <!--                       pages.  See the Ant documenation for more      -->
-  <!--                       information. [javac]                           -->
-  <!--                                                                      -->
-  <!--   classdebuginfo      Should the class file be compiled with         -->
-  <!--                       debugging information?  [true]                 -->
-  <!--                                                                      -->
-  <!--   classpath           What class path should I use while compiling   -->
-  <!--                       generated servlets?  [Created dynamically      -->
-  <!--                       based on the current web application]          -->
-  <!--                       Set to ? to make the container explicitly set  -->
-  <!--                       this parameter.                                -->
-  <!--                                                                      -->
-  <!--   development         Is Jasper used in development mode (will check -->
-  <!--                       for JSP modification on every access)?  [true] -->
-  <!--                                                                      -->
-  <!--   enablePooling       Determines whether tag handler pooling is      -->
-  <!--                       enabled  [true]                                -->
-  <!--                                                                      -->
-  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
-  <!--                       a separate JVM is used for JSP page compiles   -->
-  <!--                       from the one Tomcat is running in. [true]      -->
-  <!--                                                                      -->
-  <!--   ieClassId           The class-id value to be sent to Internet      -->
-  <!--                       Explorer when using <jsp:plugin> tags.         -->
-  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
-  <!--                                                                      -->
-  <!--   javaEncoding        Java file encoding to use for generating java  -->
-  <!--                       source files. [UTF-8]                          -->
-  <!--                                                                      -->
-  <!--   keepgenerated       Should we keep the generated Java source code  -->
-  <!--                       for each page instead of deleting it? [true]   -->
-  <!--                                                                      -->
-  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
-  <!--                       by this servlet.  Increasing levels cause the  -->
-  <!--                       generation of more messages.  Valid values are -->
-  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
-  <!--                       [WARNING]                                      -->
-  <!--                                                                      -->
-  <!--   mappedfile          Should we generate static content with one     -->
-  <!--                       print statement per input line, to ease        -->
-  <!--                       debugging?  [false]                            -->
-  <!--                                                                      -->
-  <!--                                                                      -->
-  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
-  <!--                                                                      -->
-  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
-  <!--                       debugging be suppressed?  [false]              -->
-  <!--                                                                      -->
-  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
-  <!--                       dumped to a file? [false]                      -->
-  <!--                       False if suppressSmap is true                  -->
-  <!--                                                                      -->
-  <!--   scratchdir          What scratch directory should we use when      -->
-  <!--                       compiling JSP pages?  [default work directory  -->
-  <!--                       for the current web application]               -->
-  <!--                                                                      -->
-  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
-  <!--                                                                      -->
-  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
-  <!--                       header is added by generated servlet  [false]  -->
-  <!--                                                                      -->
-  <!-- If you wish to use Jikes to compile JSP pages:                       -->
-  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
-  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
-  <!--   to cause Jikes to emit error messages in a format compatible with  -->
-  <!--   Jasper.                                                            -->
-  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
-  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet id="jsp">
-    <servlet-name>jsp</servlet-name>
-    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
-    <init-param>
-        <param-name>logVerbosityLevel</param-name>
-        <param-value>DEBUG</param-value>
-    </init-param>
-    <init-param>
-        <param-name>fork</param-name>
-        <param-value>false</param-value>
-    </init-param>
-    <init-param>
-        <param-name>xpoweredBy</param-name>
-        <param-value>false</param-value>
-    </init-param>
-    <!--  
-    <init-param>
-        <param-name>classpath</param-name>
-        <param-value>?</param-value>
-    </init-param>
-    -->
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping> 
-    <servlet-name>jsp</servlet-name> 
-    <url-pattern>*.jsp</url-pattern> 
-    <url-pattern>*.jspf</url-pattern>
-    <url-pattern>*.jspx</url-pattern>
-    <url-pattern>*.xsp</url-pattern>
-    <url-pattern>*.JSP</url-pattern> 
-    <url-pattern>*.JSPF</url-pattern>
-    <url-pattern>*.JSPX</url-pattern>
-    <url-pattern>*.XSP</url-pattern>
-  </servlet-mapping>
-  
-  <!-- ==================================================================== -->
-  <!-- Dynamic Servlet Invoker.                                             -->
-  <!-- This servlet invokes anonymous servlets that have not been defined   -->
-  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
-  <!-- of a request passed to the envoker is treated as a servlet name for  -->
-  <!-- an existing servlet, or as a class name of a new servlet.            -->
-  <!-- This servlet is normally mapped to /servlet/*                        -->
-  <!-- This servlet support the following initParams:                       -->
-  <!--                                                                      -->
-  <!--  nonContextServlets       If false, the invoker can only load        -->
-  <!--                           servlets from the contexts classloader.    -->
-  <!--                           This is false by default and setting this  -->
-  <!--                           to true may have security implications.    -->
-  <!--                                                                      -->
-  <!--  verbose                  If true, log dynamic loads                 -->
-  <!--                                                                      -->
-  <!--  *                        All other parameters are copied to the     -->
-  <!--                           each dynamic servlet as init parameters    -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- Uncomment for dynamic invocation
-  <servlet>
-    <servlet-name>invoker</servlet-name>
-    <servlet-class>org.mortbay.jetty.servlet.Invoker</servlet-class>
-    <init-param>
-      <param-name>verbose</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>nonContextServlets</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>dynamicParam</param-name>
-      <param-value>anyValue</param-value>
-    </init-param>
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping> <servlet-name>invoker</servlet-name> <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
-  -->
-
-
-
-  <!-- ==================================================================== -->
-  <session-config>
-    <session-timeout>30</session-timeout>
-  </session-config>
-
-  <!-- ==================================================================== -->
-  <!-- Default MIME mappings                                                -->
-  <!-- The default MIME mappings are provided by the mime.properties        -->
-  <!-- resource in the org.mortbay.jetty.jar file.  Additional or modified  -->
-  <!-- mappings may be specified here                                       -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- UNCOMMENT TO ACTIVATE
-  <mime-mapping>
-    <extension>mysuffix</extension>
-    <mime-type>mymime/type</mime-type>
-  </mime-mapping>
-  -->
-
-  <!-- ==================================================================== -->
-  <welcome-file-list>
-    <welcome-file>index.html</welcome-file>
-    <welcome-file>index.htm</welcome-file>
-    <welcome-file>index.jsp</welcome-file>
-  </welcome-file-list>
-
-  <!-- ==================================================================== -->
-  <locale-encoding-mapping-list>
-    <locale-encoding-mapping><locale>ar</locale><encoding>ISO-8859-6</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>be</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>bg</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ca</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>cs</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>da</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>de</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>el</locale><encoding>ISO-8859-7</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>en</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>es</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>et</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>fi</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>fr</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>hr</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>hu</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>is</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>it</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>iw</locale><encoding>ISO-8859-8</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ja</locale><encoding>Shift_JIS</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ko</locale><encoding>EUC-KR</encoding></locale-encoding-mapping>     
-    <locale-encoding-mapping><locale>lt</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>lv</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>mk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>nl</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>no</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>pl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>pt</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ro</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ru</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sh</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sk</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sq</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sr</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sv</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>tr</locale><encoding>ISO-8859-9</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>uk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>zh</locale><encoding>GB2312</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>zh_TW</locale><encoding>Big5</encoding></locale-encoding-mapping>   
-  </locale-encoding-mapping-list>
-  
-  <security-constraint>
-    <web-resource-collection>
-      <web-resource-name>Disable TRACE</web-resource-name>
-      <url-pattern>/</url-pattern>
-      <http-method>TRACE</http-method>
-    </web-resource-collection>
-    <auth-constraint/>
-  </security-constraint>
-  
-</web-app>
-
diff --git a/test/_solr-tests.py b/test/_solr-tests.py
new file mode 100644
index 0000000..5234201
--- /dev/null
+++ b/test/_solr-tests.py
@@ -0,0 +1,135 @@
+# -*- coding: utf-8 -*-
+from unittest import main, TestCase
+from StringIO import StringIO
+from os import mkdir, listdir, system
+from os.path import join, dirname, abspath, basename
+from shutil import rmtree
+from lxml.etree import parse
+import sys
+
+start_solr = __import__('start-solr')
+mydir = dirname(abspath(__file__))
+version = "3.6.0"
+
+class SolrRunTest(TestCase):
+
+    def testParseArguments(self):
+        options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--core=core1', '--core=core2'])
+        self.assertEquals(8042, options.port)
+        self.assertEquals('/tmp', options.stateDir)
+        self.assertEquals(['core1', 'core2'], options.core)
+
+    def testIncompleteArguments(self):
+        stdout_mock = StringIO()
+        sys.stdout = stdout_mock
+        try:
+            self.assertRaises(ValueError, lambda: start_solr.parseArguments(['--port=8042', '--stateDir=/tmp']))
+        finally:
+            sys.stdout = sys.__stdout__
+
+    def testSetupSolrConfig(self):
+        tempdir = "/tmp/testSetupSolrConfig"
+        mkdir(tempdir)
+        try:
+            solrDataDir = join(tempdir, 'solr-data')
+            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'córë2'])
+            self.assertEquals(set(['contexts', 'cores', 'webdefault.xml', 'jetty.xml', 'start.config', 'solr.xml']), set(listdir(solrDataDir)))
+            jetty_xml = parse(open(join(solrDataDir, 'jetty.xml')))
+            self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+            f = open(join(solrDataDir, 'start.config'))
+            for line in f:
+                if line.startswith('jetty.home'):
+                    break
+            else:
+                self.fail("No jetty.home line found")
+            f.close()
+            self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+            self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
+
+            context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+            self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+            self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+            solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+            self.assertEquals(['core1', 'córë2'], solr_xml.xpath("//core/@name"))
+            self.assertEquals(['cores/core1', 'cores/córë2'], solr_xml.xpath("//core/@instanceDir"))
+
+            schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+            self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+            schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+            self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+        finally:
+            rmtree(tempdir)
+
+    def testSetupSolrTwiceConfig(self):
+        tempdir = "/tmp/testSetupSolrConfig"
+        mkdir(tempdir)
+        try:
+            solrDataDir = join(tempdir, 'solr-data')
+            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1'])
+            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'córë2'])
+            self.assertEquals(set(['contexts', 'cores', 'webdefault.xml', 'jetty.xml', 'start.config', 'solr.xml']), set(listdir(solrDataDir)))
+            jetty_xml = parse(open(join(solrDataDir, 'jetty.xml')))
+            self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+            f = open(join(solrDataDir, 'start.config'))
+            for line in f:
+                if line.startswith('jetty.home'):
+                    break
+            else:
+                self.fail("No jetty.home line found")
+            f.close()
+            self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+            self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
+
+            context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+            self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+            self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+            solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+            self.assertEquals(['core1', 'córë2'], solr_xml.xpath("//core/@name"))
+            self.assertEquals(['cores/core1', 'cores/córë2'], solr_xml.xpath("//core/@instanceDir"))
+
+            schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+            self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+            schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+            self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+        finally:
+            rmtree(tempdir)
+
+    def testNotMatchingLuceneMatchVersion(self):
+        tempdir = "/tmp/testSetupSolrConfig"
+        mkdir(tempdir)
+        try:
+            solrDataDir = join(tempdir, 'solr-data')
+            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1'])
+            system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
+
+            self.assertRaises(ValueError, lambda: start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1']))
+        finally:
+            rmtree(tempdir)
+
+
+    def testStartSolr(self):
+        execCalled = []
+        def execvpMock(*args, **kwargs):
+            execCalled.append((args, kwargs))
+
+        try:
+            _original_execvp = start_solr._execvp
+            start_solr._execvp = execvpMock
+            start_solr.startSolr(stateDir='/the/state/dir', port=1423, javaMX="1234M")
+            self.assertEquals(1, len(execCalled))
+            self.assertEquals((
+                'java', 
+                ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=/the/state/dir/start.config', '-Dsolr.solr.home=/the/state/dir', '-jar', '/usr/share/java/solr3.6.0/start.jar'],
+            ), execCalled[0][0])
+            self.assertEquals({}, execCalled[0][1])
+        finally:
+            start_solr._execvp = _original_execvp
+
+if __name__ == '__main__':
+    main()
diff --git a/test/alltest.sh b/test/alltest.sh
new file mode 100755
index 0000000..54c3e56
--- /dev/null
+++ b/test/alltest.sh
@@ -0,0 +1,8 @@
+#!/bin/bash
+mydir=$(cd $(dirname $0); pwd)
+export PYTHONPATH=$(dirname $mydir)/bin:$PYTHONPATH
+if [ "$(python -V 2>&1 | awk '{print $2}' | cut -c -3)" == "2.4" ]; then
+    python2.5 ${mydir}/_solr-tests.py
+else
+    python ${mydir}/_solr-tests.py
+fi
diff --git a/usr-share/core-data/conf/schema.xml b/usr-share/core-data/conf/schema.xml
new file mode 100644
index 0000000..13e9782
--- /dev/null
+++ b/usr-share/core-data/conf/schema.xml
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<schema name="meresco-corename" version="1.5">
+
+  <types>
+    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
+    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100" omitNorms="false" multiValued="true" indexed="true" stored="false">
+      <analyzer>
+        <tokenizer class="solr.ClassicTokenizerFactory"/>
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+    </fieldType>
+    <fieldType name="untokenized_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="true" indexed="true" stored="false" />
+    <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
+ </types>
+
+
+ <fields>
+   <field name="__id__" type="string" stored="true" required="true" /> 
+   <field name="__all__" type="text_ws" /> 
+   <dynamicField name="sorted.*" type="sorted_string" />
+   <dynamicField name="untokenized.*" type="untokenized_string" />
+   <dynamicField name="meta.*" type="untokenized_string" />
+   <dynamicField name="*" type="text_ws" />
+ </fields>
+
+ <uniqueKey>__id__</uniqueKey>
+ <defaultSearchField>__all__</defaultSearchField>
+
+ <solrQueryParser defaultOperator="AND"/>
+</schema>
diff --git a/usr-share/core-data/conf/solrconfig.xml b/usr-share/core-data/conf/solrconfig.xml
new file mode 100644
index 0000000..3c5d73a
--- /dev/null
+++ b/usr-share/core-data/conf/solrconfig.xml
@@ -0,0 +1,1498 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<!-- 
+     For more details about configurations options that may appear in
+     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
+-->
+<config>
+  <!-- In all configuration below, a prefix of "solr." for class names
+       is an alias that causes solr to search appropriate packages,
+       including org.apache.solr.(search|update|request|core|analysis)
+
+       You may also specify a fully qualified Java classname if you
+       have your own custom plugins.
+    -->
+
+  <!-- Set this to 'false' if you want solr to continue working after
+       it has encountered an severe configuration error.  In a
+       production environment, you may want solr to keep working even
+       if one handler is mis-configured.
+
+       You may also set this to false using by setting the system
+       property:
+
+         -Dsolr.abortOnConfigurationError=false
+    -->
+  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
+  
+  <!-- Controls what version of Lucene various components of Solr
+       adhere to.  Generally, you want to use the latest version to
+       get all bug fixes and improvements. It is highly recommended
+       that you fully re-index after changing this setting as it can
+       affect both how text is indexed and queried.
+    -->
+  <luceneMatchVersion>LUCENE_36</luceneMatchVersion>
+
+  <!-- lib directives can be used to instruct Solr to load an Jars
+       identified and use them to resolve any "plugins" specified in
+       your solrconfig.xml or schema.xml (ie: Analyzers, Request
+       Handlers, etc...).
+
+       All directories and paths are resolved relative to the
+       instanceDir.
+
+       If a "./lib" directory exists in your instanceDir, all files
+       found in it are included as if you had used the following
+       syntax...
+       
+              <lib dir="./lib" />
+    -->
+  <!-- A dir option by itself adds any files found in the directory to
+       the classpath, this is useful for including all jars in a
+       directory.
+    -->
+  <lib dir="../../contrib/extraction/lib" />
+  <!-- When a regex is specified in addition to a directory, only the
+       files in that directory which completely match the regex
+       (anchored on both ends) will be included.
+    -->
+  <lib dir="../../dist/" regex="apache-solr-cell-\d.*\.jar" />
+  <lib dir="../../dist/" regex="apache-solr-clustering-\d.*\.jar" />
+  <lib dir="../../dist/" regex="apache-solr-dataimporthandler-\d.*\.jar" />
+
+  <!-- If a dir option (with or without a regex) is used and nothing
+       is found that matches, it will be ignored
+    -->
+  <lib dir="../../contrib/clustering/lib/" />
+  <lib dir="/total/crap/dir/ignored" /> 
+  <!-- an exact path can be used to specify a specific file.  This
+       will cause a serious error to be logged if it can't be loaded.
+    -->
+  <!--
+  <lib path="../a-jar-that-does-not-exist.jar" /> 
+  -->
+  
+  <!-- Data Directory
+
+       Used to specify an alternate directory to hold all index data
+       other than the default ./data under the Solr home.  If
+       replication is in use, this should match the replication
+       configuration.
+  <dataDir>${solr.data.dir:}</dataDir>
+    -->
+
+
+  <!-- The DirectoryFactory to use for indexes.
+       
+       solr.StandardDirectoryFactory, the default, is filesystem
+       based.  solr.RAMDirectoryFactory is memory based, not
+       persistent, and doesn't work with replication.
+    -->
+  <directoryFactory name="DirectoryFactory" 
+                    class="${solr.directoryFactory:solr.StandardDirectoryFactory}"/>
+
+
+  <!-- Index Defaults
+
+       Values here affect all index writers and act as a default
+       unless overridden.
+
+       WARNING: See also the <mainIndex> section below for parameters
+       that overfor Solr's main Lucene index.
+    -->
+  <indexDefaults>
+
+    <useCompoundFile>true</useCompoundFile>
+
+    <mergeFactor>10</mergeFactor>
+    <!-- Sets the amount of RAM that may be used by Lucene indexing
+         for buffering added documents and deletions before they are
+         flushed to the Directory.  -->
+    <ramBufferSizeMB>32</ramBufferSizeMB>
+    <!-- If both ramBufferSizeMB and maxBufferedDocs is set, then
+         Lucene will flush based on whichever limit is hit first.  
+      -->
+    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->
+
+    <maxFieldLength>10000</maxFieldLength>
+    <writeLockTimeout>1000</writeLockTimeout>
+    <commitLockTimeout>10000</commitLockTimeout>
+
+    <!-- Expert: Merge Policy 
+
+         The Merge Policy in Lucene controls how merging is handled by
+         Lucene.  The default in 2.3 is the LogByteSizeMergePolicy,
+         previous versions used LogDocMergePolicy.
+         
+         LogByteSizeMergePolicy chooses segments to merge based on
+         their size.  The Lucene 2.2 default, LogDocMergePolicy chose
+         when to merge based on number of documents
+         
+         Other implementations of MergePolicy must have a no-argument
+         constructor
+      -->
+    <!--
+       <mergePolicy class="org.apache.lucene.index.LogByteSizeMergePolicy"/>
+       -->
+
+    <!-- Expert: Merge Scheduler
+
+         The Merge Scheduler in Lucene controls how merges are
+         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
+         can perform merges in the background using separate threads.
+         The SerialMergeScheduler (Lucene 2.2 default) does not.
+     -->
+    <!-- 
+       <mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler"/>
+       -->
+	  
+    <!-- LockFactory 
+
+         This option specifies which Lucene LockFactory implementation
+         to use.
+      
+         single = SingleInstanceLockFactory - suggested for a
+                  read-only index or when there is no possibility of
+                  another process trying to modify the index.
+         native = NativeFSLockFactory - uses OS native file locking.
+                  Do not use when multiple solr webapps in the same
+                  JVM are attempting to share a single index.
+         simple = SimpleFSLockFactory  - uses a plain file for locking
+
+         (For backwards compatibility with Solr 1.2, 'simple' is the
+         default if not specified.)
+
+         More details on the nuances of each LockFactory...
+         http://wiki.apache.org/lucene-java/AvailableLockFactories
+    -->
+    <lockType>native</lockType>
+
+    <!-- Expert: Controls how often Lucene loads terms into memory
+         Default is 128 and is likely good for most everyone.
+      -->
+    <!-- <termIndexInterval>256</termIndexInterval> -->
+  </indexDefaults>
+
+  <!-- Main Index
+
+       Values here override the values in the <indexDefaults> section
+       for the main on disk index.
+    -->
+  <mainIndex>
+
+    <useCompoundFile>true</useCompoundFile>
+    <ramBufferSizeMB>32</ramBufferSizeMB>
+    <mergeFactor>10</mergeFactor>
+
+    <!-- Unlock On Startup
+
+         If true, unlock any held write or commit locks on startup.
+         This defeats the locking mechanism that allows multiple
+         processes to safely access a lucene index, and should be used
+         with care.
+
+         This is not needed if lock type is 'none' or 'single'
+     -->
+    <unlockOnStartup>false</unlockOnStartup>
+    
+    <!-- If true, IndexReaders will be reopened (often more efficient)
+         instead of closed and then opened.
+      -->
+    <reopenReaders>true</reopenReaders>
+
+    <!-- Commit Deletion Policy
+
+         Custom deletion policies can specified here. The class must
+         implement org.apache.lucene.index.IndexDeletionPolicy.
+
+         http://lucene.apache.org/java/2_9_1/api/all/org/apache/lucene/index/IndexDeletionPolicy.html
+
+         The standard Solr IndexDeletionPolicy implementation supports
+         deleting index commit points on number of commits, age of
+         commit point and optimized status.
+         
+         The latest commit point should always be preserved regardless
+         of the criteria.
+    -->
+    <deletionPolicy class="solr.SolrDeletionPolicy">
+      <!-- The number of commit points to be kept -->
+      <str name="maxCommitsToKeep">1</str>
+      <!-- The number of optimized commit points to be kept -->
+      <str name="maxOptimizedCommitsToKeep">0</str>
+      <!--
+          Delete all commit points once they have reached the given age.
+          Supports DateMathParser syntax e.g.
+        -->
+      <!--
+         <str name="maxCommitAge">30MINUTES</str>
+         <str name="maxCommitAge">1DAY</str>
+      -->
+    </deletionPolicy>
+
+    <!-- Lucene Infostream
+       
+         To aid in advanced debugging, Lucene provides an "InfoStream"
+         of detailed information when indexing.
+
+         Setting The value to true will instruct the underlying Lucene
+         IndexWriter to write it's debugging info the specified file
+      -->
+     <infoStream file="INFOSTREAM.txt">false</infoStream> 
+
+  </mainIndex>
+
+  <!-- JMX
+       
+       This example enables JMX if and only if an existing MBeanServer
+       is found, use this if you want to configure JMX through JVM
+       parameters. Remove this to disable exposing Solr configuration
+       and statistics to JMX.
+
+       For more details see http://wiki.apache.org/solr/SolrJmx
+    -->
+  <jmx />
+  <!-- If you want to connect to a particular server, specify the
+       agentId 
+    -->
+  <!-- <jmx agentId="myAgent" /> -->
+  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->
+  <!-- <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr"/>
+    -->
+
+  <!-- The default high-performance update handler -->
+  <updateHandler class="solr.DirectUpdateHandler2">
+
+    <!-- AutoCommit
+
+         Perform a <commit/> automatically under certain conditions.
+         Instead of enabling autoCommit, consider using "commitWithin"
+         when adding documents. 
+
+         http://wiki.apache.org/solr/UpdateXmlMessages
+
+         maxDocs - Maximum number of documents to add since the last
+                   commit before automaticly triggering a new commit.
+
+         maxTime - Maximum amount of time that is allowed to pass
+                   since a document was added before automaticly
+                   triggering a new commit. 
+      -->
+    <!--
+       <autoCommit> 
+         <maxDocs>10000</maxDocs>
+         <maxTime>1000</maxTime> 
+       </autoCommit>
+      -->
+
+    <!-- Update Related Event Listeners
+         
+         Various IndexWriter realted events can trigger Listeners to
+         take actions.
+
+         postCommit - fired after every commit or optimize command
+         postOptimize - fired after every optimize command
+      -->
+    <!-- The RunExecutableListener executes an external command from a
+         hook such as postCommit or postOptimize.
+         
+         exe - the name of the executable to run
+         dir - dir to use as the current working directory. (default=".")
+         wait - the calling thread waits until the executable returns. 
+                (default="true")
+         args - the arguments to pass to the program.  (default is none)
+         env - environment variables to set.  (default is none)
+      -->
+    <!-- This example shows how RunExecutableListener could be used
+         with the script based replication...
+         http://wiki.apache.org/solr/CollectionDistribution
+      -->
+    <!--
+       <listener event="postCommit" class="solr.RunExecutableListener">
+         <str name="exe">solr/bin/snapshooter</str>
+         <str name="dir">.</str>
+         <bool name="wait">true</bool>
+         <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
+         <arr name="env"> <str>MYVAR=val1</str> </arr>
+       </listener>
+      -->
+  </updateHandler>
+  
+  <!-- IndexReaderFactory
+
+       Use the following format to specify a custom IndexReaderFactory,
+       which allows for alternate IndexReader implementations.
+
+       ** Experimental Feature **
+
+       Please note - Using a custom IndexReaderFactory may prevent
+       certain other features from working. The API to
+       IndexReaderFactory may change without warning or may even be
+       removed from future releases if the problems cannot be
+       resolved.
+
+
+       ** Features that may not work with custom IndexReaderFactory **
+
+       The ReplicationHandler assumes a disk-resident index. Using a
+       custom IndexReader implementation may cause incompatibility
+       with ReplicationHandler and may cause replication to not work
+       correctly. See SOLR-1366 for details.
+
+    -->
+  <!--
+  <indexReaderFactory name="IndexReaderFactory" class="package.class">
+    <str name="someArg">Some Value</str>
+  </indexReaderFactory >
+  -->
+  <!-- By explicitly declaring the Factory, the termIndexDivisor can
+       be specified.
+    -->
+  <!--
+     <indexReaderFactory name="IndexReaderFactory" 
+                         class="solr.StandardIndexReaderFactory">
+       <int name="setTermIndexDivisor">12</int>
+     </indexReaderFactory >
+    -->
+
+
+  <query>
+    <!-- Max Boolean Clauses
+
+         Maximum number of clauses in each BooleanQuery,  an exception
+         is thrown if exceeded.
+
+         ** WARNING **
+         
+         This option actually modifies a global Lucene property that
+         will affect all SolrCores.  If multiple solrconfig.xml files
+         disagree on this property, the value at any given moment will
+         be based on the last SolrCore to be initialized.
+         
+      -->
+    <maxBooleanClauses>1024</maxBooleanClauses>
+
+
+    <!-- Solr Internal Query Caches
+
+         There are two implementations of cache available for Solr,
+         LRUCache, based on a synchronized LinkedHashMap, and
+         FastLRUCache, based on a ConcurrentHashMap.  
+
+         FastLRUCache has faster gets and slower puts in single
+         threaded operation and thus is generally faster than LRUCache
+         when the hit ratio of the cache is high (> 75%), and may be
+         faster under other scenarios on multi-cpu systems.
+    -->
+
+    <!-- Filter Cache
+
+         Cache used by SolrIndexSearcher for filters (DocSets),
+         unordered sets of *all* documents that match a query.  When a
+         new searcher is opened, its caches may be prepopulated or
+         "autowarmed" using data from caches in the old searcher.
+         autowarmCount is the number of items to prepopulate.  For
+         LRUCache, the autowarmed items will be the most recently
+         accessed items.
+
+         Parameters:
+           class - the SolrCache implementation LRUCache or
+               (LRUCache or FastLRUCache)
+           size - the maximum number of entries in the cache
+           initialSize - the initial capacity (number of entries) of
+               the cache.  (see java.util.HashMap)
+           autowarmCount - the number of entries to prepopulate from
+               and old cache.  
+      -->
+    <filterCache class="solr.FastLRUCache"
+                 size="512"
+                 initialSize="512"
+                 autowarmCount="0"/>
+
+    <!-- Query Result Cache
+         
+         Caches results of searches - ordered lists of document ids
+         (DocList) based on a query, a sort, and the range of documents requested.  
+      -->
+    <queryResultCache class="solr.LRUCache"
+                     size="512"
+                     initialSize="512"
+                     autowarmCount="0"/>
+   
+    <!-- Document Cache
+
+         Caches Lucene Document objects (the stored fields for each
+         document).  Since Lucene internal document ids are transient,
+         this cache will not be autowarmed.  
+      -->
+    <documentCache class="solr.LRUCache"
+                   size="512"
+                   initialSize="512"
+                   autowarmCount="0"/>
+    
+    <!-- Field Value Cache
+         
+         Cache used to hold field values that are quickly accessible
+         by document id.  The fieldValueCache is created by default
+         even if not configured here.
+      -->
+    <!--
+       <fieldValueCache class="solr.FastLRUCache"
+                        size="512"
+                        autowarmCount="128"
+                        showItems="32" />
+      -->
+
+    <!-- Custom Cache
+
+         Example of a generic cache.  These caches may be accessed by
+         name through SolrIndexSearcher.getCache(),cacheLookup(), and
+         cacheInsert().  The purpose is to enable easy caching of
+         user/application level data.  The regenerator argument should
+         be specified as an implementation of solr.CacheRegenerator 
+         if autowarming is desired.  
+      -->
+    <!--
+       <cache name="myUserCache"
+              class="solr.LRUCache"
+              size="4096"
+              initialSize="1024"
+              autowarmCount="1024"
+              regenerator="com.mycompany.MyRegenerator"
+              />
+      -->
+
+
+    <!-- Lazy Field Loading
+
+         If true, stored fields that are not requested will be loaded
+         lazily.  This can result in a significant speed improvement
+         if the usual case is to not load all stored fields,
+         especially if the skipped fields are large compressed text
+         fields.
+    -->
+    <enableLazyFieldLoading>true</enableLazyFieldLoading>
+
+   <!-- Use Filter For Sorted Query
+
+        A possible optimization that attempts to use a filter to
+        satisfy a search.  If the requested sort does not include
+        score, then the filterCache will be checked for a filter
+        matching the query. If found, the filter will be used as the
+        source of document ids, and then the sort will be applied to
+        that.
+
+        For most situations, this will not be useful unless you
+        frequently get the same search repeatedly with differnet sort
+        options, and none of them ever use "score"
+     -->
+   <!--
+      <useFilterForSortedQuery>true</useFilterForSortedQuery>
+     -->
+
+   <!-- Result Window Size
+
+        An optimization for use with the queryResultCache.  When a search
+        is requested, a superset of the requested number of document ids
+        are collected.  For example, if a search for a particular query
+        requests matching documents 10 through 19, and queryWindowSize is 50,
+        then documents 0 through 49 will be collected and cached.  Any further
+        requests in that range can be satisfied via the cache.  
+     -->
+   <queryResultWindowSize>20</queryResultWindowSize>
+
+   <!-- Maximum number of documents to cache for any entry in the
+        queryResultCache. 
+     -->
+   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
+
+   <!-- Query Related Event Listeners
+
+        Various IndexSearcher related events can trigger Listeners to
+        take actions.
+
+        newSearcher - fired whenever a new searcher is being prepared
+        and there is a current searcher handling requests (aka
+        registered).  It can be used to prime certain caches to
+        prevent long request times for certain requests.
+
+        firstSearcher - fired whenever a new searcher is being
+        prepared but there is no current registered searcher to handle
+        requests or to gain autowarming data from.
+
+        
+     -->
+    <!-- QuerySenderListener takes an array of NamedList and executes a
+         local query request for each NamedList in sequence. 
+      -->
+    <listener event="newSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <!--
+           <lst><str name="q">solr</str><str name="sort">price asc</str></lst>
+           <lst><str name="q">rocks</str><str name="sort">weight asc</str></lst>
+          -->
+      </arr>
+    </listener>
+    <listener event="firstSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <lst>
+          <str name="q">static firstSearcher warming in solrconfig.xml</str>
+        </lst>
+      </arr>
+    </listener>
+
+    <!-- Use Cold Searcher
+
+         If a search request comes in and there is no current
+         registered searcher, then immediately register the still
+         warming searcher and use it.  If "false" then all requests
+         will block until the first searcher is done warming.
+      -->
+    <useColdSearcher>false</useColdSearcher>
+
+    <!-- Max Warming Searchers
+         
+         Maximum number of searchers that may be warming in the
+         background concurrently.  An error is returned if this limit
+         is exceeded.
+
+         Recommend values of 1-2 for read-only slaves, higher for
+         masters w/o cache warming.
+      -->
+    <maxWarmingSearchers>2</maxWarmingSearchers>
+
+  </query>
+
+
+  <!-- Request Dispatcher
+
+       This section contains instructions for how the SolrDispatchFilter
+       should behave when processing requests for this SolrCore.
+
+       handleSelect affects the behavior of requests such as /select?qt=XXX
+
+       handleSelect="true" will cause the SolrDispatchFilter to process
+       the request and will result in consistent error handling and
+       formating for all types of requests.
+
+       handleSelect="false" will cause the SolrDispatchFilter to
+       ignore "/select" requests and fallback to using the legacy
+       SolrServlet and it's Solr 1.1 style error formatting
+    -->
+  <requestDispatcher handleSelect="true" >
+    <!-- Request Parsing
+
+         These settings indicate how Solr Requests may be parsed, and
+         what restrictions may be placed on the ContentStreams from
+         those requests
+
+         enableRemoteStreaming - enables use of the stream.file
+         and stream.url paramaters for specifying remote streams.
+
+         multipartUploadLimitInKB - specifies the max size of
+         Multipart File Uploads that Solr will alow in a Request.
+         
+         *** WARNING ***
+         The settings below authorize Solr to fetch remote files, You
+         should make sure your system has some authentication before
+         using enableRemoteStreaming="true"
+
+      --> 
+    <requestParsers enableRemoteStreaming="true" 
+                    multipartUploadLimitInKB="2048000" />
+
+    <!-- HTTP Caching
+
+         Set HTTP caching related parameters (for proxy caches and clients).
+
+         The options below instruct Solr not to output any HTTP Caching
+         related headers
+      -->
+    <httpCaching never304="true" />
+    <!-- If you include a <cacheControl> directive, it will be used to
+         generate a Cache-Control header (as well as an Expires header
+         if the value contains "max-age=")
+         
+         By default, no Cache-Control header is generated.
+         
+         You can use the <cacheControl> option even if you have set
+         never304="true"
+      -->
+    <!--
+       <httpCaching never304="true" >
+         <cacheControl>max-age=30, public</cacheControl> 
+       </httpCaching>
+      -->
+    <!-- To enable Solr to responde with automaticly generated HTTP
+         Caching headers, and to response to Cache Validation requests
+         correctly, set the value of never304="false"
+         
+         This will cause Solr to generate Last-Modified and ETag
+         headers based on the properties of the Index.
+
+         The following options can also be specified to affect the
+         values of these headers...
+
+         lastModFrom - the default value is "openTime" which means the
+         Last-Modified value (and validation against If-Modified-Since
+         requests) will all be relative to when the current Searcher
+         was opened.  You can change it to lastModFrom="dirLastMod" if
+         you want the value to exactly corrispond to when the physical
+         index was last modified.
+
+         etagSeed="..." is an option you can change to force the ETag
+         header (and validation against If-None-Match requests) to be
+         differnet even if the index has not changed (ie: when making
+         significant changes to your config file)
+
+         (lastModifiedFrom and etagSeed are both ignored if you use
+         the never304="true" option)
+      -->
+    <!--
+       <httpCaching lastModifiedFrom="openTime"
+                    etagSeed="Solr">
+         <cacheControl>max-age=30, public</cacheControl> 
+       </httpCaching>
+      -->
+  </requestDispatcher>
+
+  <!-- Request Handlers 
+
+       http://wiki.apache.org/solr/SolrRequestHandler
+
+       incoming queries will be dispatched to the correct handler
+       based on the path or the qt (query type) param.
+
+       Names starting with a '/' are accessed with the a path equal to
+       the registered name.  Names without a leading '/' are accessed
+       with: http://host/app/[core/]select?qt=name
+
+       If a /select request is processed with out a qt param
+       specified, the requestHandler that declares default="true" will
+       be used.
+       
+       If a Request Handler is declared with startup="lazy", then it will
+       not be initialized until the first request that uses it.
+
+    -->
+  <!-- SearchHandler
+
+       http://wiki.apache.org/solr/SearchHandler
+
+       For processing Search Queries, the primary Request Handler
+       provided with Solr is "SearchHandler" It delegates to a sequent
+       of SearchComponents (see below) and supports distributed
+       queries across multiple shards
+    -->
+  <requestHandler name="search" class="solr.SearchHandler" default="true">
+    <!-- default values for query parameters can be specified, these
+         will be overridden by parameters in the request
+      -->
+     <lst name="defaults">
+       <str name="echoParams">explicit</str>
+       <int name="rows">10</int>
+     </lst>
+    <!-- In addition to defaults, "appends" params can be specified
+         to identify values which should be appended to the list of
+         multi-val params from the query (or the existing "defaults").
+      -->
+    <!-- In this example, the param "fq=instock:true" would be appended to
+         any query time fq params the user may specify, as a mechanism for
+         partitioning the index, independent of any user selected filtering
+         that may also be desired (perhaps as a result of faceted searching).
+
+         NOTE: there is *absolutely* nothing a client can do to prevent these
+         "appends" values from being used, so don't use this mechanism
+         unless you are sure you always want it.
+      -->
+    <!--
+       <lst name="appends">
+         <str name="fq">inStock:true</str>
+       </lst>
+      -->
+    <!-- "invariants" are a way of letting the Solr maintainer lock down
+         the options available to Solr clients.  Any params values
+         specified here are used regardless of what values may be specified
+         in either the query, the "defaults", or the "appends" params.
+
+         In this example, the facet.field and facet.query params would
+         be fixed, limiting the facets clients can use.  Faceting is
+         not turned on by default - but if the client does specify
+         facet=true in the request, these are the only facets they
+         will be able to see counts for; regardless of what other
+         facet.field or facet.query params they may specify.
+
+         NOTE: there is *absolutely* nothing a client can do to prevent these
+         "invariants" values from being used, so don't use this mechanism
+         unless you are sure you always want it.
+      -->
+    <!--
+       <lst name="invariants">
+         <str name="facet.field">cat</str>
+         <str name="facet.field">manu_exact</str>
+         <str name="facet.query">price:[* TO 500]</str>
+         <str name="facet.query">price:[500 TO *]</str>
+       </lst>
+      -->
+    <!-- If the default list of SearchComponents is not desired, that
+         list can either be overridden completely, or components can be
+         prepended or appended to the default list.  (see below)
+      -->
+    <!--
+       <arr name="components">
+         <str>nameOfCustomComponent1</str>
+         <str>nameOfCustomComponent2</str>
+       </arr>
+      -->
+    </requestHandler>
+
+  <!-- A Robust Example
+
+       This example SearchHandler declaration shows off usage of the
+       SearchHandler with many defaults declared
+
+       Note that multiple instances of hte same Request Handler
+       (SearchHandler) can be registered multiple times with different
+       names (and different init parameters)
+    -->
+  <requestHandler name="/browse" class="solr.SearchHandler">
+     <lst name="defaults">
+       <str name="echoParams">explicit</str>
+
+       <!-- VelocityResponseWriter settings -->
+       <str name="wt">velocity</str>
+
+       <str name="v.template">browse</str>
+       <str name="v.layout">layout</str>
+       <str name="title">Solritas</str>
+
+       <str name="defType">edismax</str>
+       <str name="q.alt">*:*</str>
+       <str name="rows">10</str>
+       <str name="fl">*,score</str>
+       <str name="mlt.qf">
+         text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+       <str name="mlt.fl">text,features,name,sku,id,manu,cat</str>
+       <int name="mlt.count">3</int>
+
+       <str name="qf">
+          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+
+       <str name="facet">on</str>
+       <str name="facet.field">cat</str>
+       <str name="facet.field">manu_exact</str>
+       <str name="facet.query">ipod</str>
+       <str name="facet.query">GB</str>
+       <str name="facet.mincount">1</str>
+       <str name="facet.pivot">cat,inStock</str>
+       <str name="facet.range">price</str>
+       <int name="f.price.facet.range.start">0</int>
+       <int name="f.price.facet.range.end">600</int>
+       <int name="f.price.facet.range.gap">50</int>
+       <str name="f.price.facet.range.other">after</str>
+       <str name="facet.range">manufacturedate_dt</str>
+       <str name="f.manufacturedate_dt.facet.range.start">NOW/YEAR-10YEARS</str>
+       <str name="f.manufacturedate_dt.facet.range.end">NOW</str>
+       <str name="f.manufacturedate_dt.facet.range.gap">+1YEAR</str>
+       <str name="f.manufacturedate_dt.facet.range.other">before</str>
+       <str name="f.manufacturedate_dt.facet.range.other">after</str>
+
+
+       <!-- Highlighting defaults -->
+       <str name="hl">on</str>
+       <str name="hl.fl">text features name</str>
+       <str name="f.name.hl.fragsize">0</str>
+       <str name="f.name.hl.alternateField">name</str>
+     </lst>
+     <arr name="last-components">
+       <str>spellcheck</str>
+     </arr>
+     <!--
+     <str name="url-scheme">httpx</str>
+     -->
+  </requestHandler>
+
+  <!-- XML Update Request Handler.  
+       
+       http://wiki.apache.org/solr/UpdateXmlMessages
+
+       The canonical Request Handler for Modifying the Index through
+       commands specified using XML.
+
+       Note: Since solr1.1 requestHandlers requires a valid content
+       type header if posted in the body. For example, curl now
+       requires: -H 'Content-type:text/xml; charset=utf-8'
+    -->
+  <requestHandler name="/update" 
+                  class="solr.XmlUpdateRequestHandler">
+    <!-- See below for information on defining 
+         updateRequestProcessorChains that can be used by name 
+         on each Update Request
+      -->
+    <!--
+       <lst name="defaults">
+         <str name="update.chain">dedupe</str>
+       </lst>
+       -->
+    </requestHandler>
+  <!-- Binary Update Request Handler
+       http://wiki.apache.org/solr/javabin
+    -->
+  <requestHandler name="/update/javabin" 
+                  class="solr.BinaryUpdateRequestHandler" />
+
+  <!-- CSV Update Request Handler
+       http://wiki.apache.org/solr/UpdateCSV
+    -->
+  <requestHandler name="/update/csv" 
+                  class="solr.CSVRequestHandler" 
+                  startup="lazy" />
+
+  <!-- JSON Update Request Handler
+       http://wiki.apache.org/solr/UpdateJSON
+    -->
+  <requestHandler name="/update/json" 
+                  class="solr.JsonUpdateRequestHandler" 
+                  startup="lazy" />
+
+  <!-- Solr Cell Update Request Handler
+
+       http://wiki.apache.org/solr/ExtractingRequestHandler 
+
+    -->
+  <requestHandler name="/update/extract" 
+                  startup="lazy"
+                  class="solr.extraction.ExtractingRequestHandler" >
+    <lst name="defaults">
+      <!-- All the main content goes into "text"... if you need to return
+           the extracted text or do highlighting, use a stored field. -->
+      <str name="fmap.content">text</str>
+      <str name="lowernames">true</str>
+      <str name="uprefix">ignored_</str>
+
+      <!-- capture link hrefs but ignore div attributes -->
+      <str name="captureAttr">true</str>
+      <str name="fmap.a">links</str>
+      <str name="fmap.div">ignored_</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Field Analysis Request Handler
+
+       RequestHandler that provides much the same functionality as
+       analysis.jsp. Provides the ability to specify multiple field
+       types and field names in the same request and outputs
+       index-time and query-time analysis for each of them.
+
+       Request parameters are:
+       analysis.fieldname - field name whose analyzers are to be used
+
+       analysis.fieldtype - field type whose analyzers are to be used
+       analysis.fieldvalue - text for index-time analysis
+       q (or analysis.q) - text for query time analysis
+       analysis.showmatch (true|false) - When set to true and when
+           query analysis is performed, the produced tokens of the
+           field value analysis will be marked as "matched" for every
+           token that is produces by the query analysis
+   -->
+  <requestHandler name="/analysis/field" 
+                  startup="lazy"
+                  class="solr.FieldAnalysisRequestHandler" />
+
+
+  <!-- Document Analysis Handler
+
+       http://wiki.apache.org/solr/AnalysisRequestHandler
+
+       An analysis handler that provides a breakdown of the analysis
+       process of provided docuemnts. This handler expects a (single)
+       content stream with the following format:
+
+       <docs>
+         <doc>
+           <field name="id">1</field>
+           <field name="name">The Name</field>
+           <field name="text">The Text Value</field>
+         </doc>
+         <doc>...</doc>
+         <doc>...</doc>
+         ...
+       </docs>
+
+    Note: Each document must contain a field which serves as the
+    unique key. This key is used in the returned response to assoicate
+    ananalysis breakdown to the analyzed document.
+
+    Like the FieldAnalysisRequestHandler, this handler also supports
+    query analysis by sending either an "analysis.query" or "q"
+    request paraemter that holds the query text to be analyized. It
+    also supports the "analysis.showmatch" parameter which when set to
+    true, all field tokens that match the query tokens will be marked
+    as a "match". 
+  -->
+  <requestHandler name="/analysis/document" 
+                  class="solr.DocumentAnalysisRequestHandler" 
+                  startup="lazy" />
+
+  <!-- Admin Handlers
+
+       Admin Handlers - This will register all the standard admin
+       RequestHandlers.  
+    -->
+  <requestHandler name="/admin/" 
+                  class="solr.admin.AdminHandlers" />
+  <!-- This single handler is equivilent to the following... -->
+  <!--
+     <requestHandler name="/admin/luke"       class="solr.admin.LukeRequestHandler" />
+     <requestHandler name="/admin/system"     class="solr.admin.SystemInfoHandler" />
+     <requestHandler name="/admin/plugins"    class="solr.admin.PluginInfoHandler" />
+     <requestHandler name="/admin/threads"    class="solr.admin.ThreadDumpHandler" />
+     <requestHandler name="/admin/properties" class="solr.admin.PropertiesRequestHandler" />
+     <requestHandler name="/admin/file"       class="solr.admin.ShowFileRequestHandler" >
+    -->
+  <!-- If you wish to hide files under ${solr.home}/conf, explicitly
+       register the ShowFileRequestHandler using: 
+    -->
+  <!--
+     <requestHandler name="/admin/file" 
+                     class="solr.admin.ShowFileRequestHandler" >
+       <lst name="invariants">
+         <str name="hidden">synonyms.txt</str> 
+         <str name="hidden">anotherfile.txt</str> 
+       </lst>
+     </requestHandler>
+    -->
+
+  <!-- ping/healthcheck -->
+  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
+    <lst name="defaults">
+      <str name="qt">search</str>
+      <str name="q">solrpingquery</str>
+      <str name="echoParams">all</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Echo the request contents back to the client -->
+  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
+    <lst name="defaults">
+     <str name="echoParams">explicit</str> 
+     <str name="echoHandler">true</str>
+    </lst>
+  </requestHandler>
+  
+  <!-- Solr Replication
+
+       The SolrReplicationHandler supports replicating indexes from a
+       "master" used for indexing and "salves" used for queries.
+
+       http://wiki.apache.org/solr/SolrReplication 
+
+       In the example below, remove the <lst name="master"> section if
+       this is just a slave and remove  the <lst name="slave"> section
+       if this is just a master.
+    -->
+  <!--
+     <requestHandler name="/replication" class="solr.ReplicationHandler" >
+       <lst name="master">
+         <str name="replicateAfter">commit</str>
+         <str name="replicateAfter">startup</str>
+         <str name="confFiles">schema.xml,stopwords.txt</str>
+       </lst>
+       <lst name="slave">
+         <str name="masterUrl">http://localhost:8983/solr/replication</str>
+         <str name="pollInterval">00:00:60</str>
+       </lst>
+     </requestHandler>
+    -->
+
+  <!-- Search Components
+
+       Search components are registered to SolrCore and used by 
+       instances of SearchHandler (which can access them by name)
+       
+       By default, the following components are avaliable:
+       
+       <searchComponent name="query"     class="solr.QueryComponent" />
+       <searchComponent name="facet"     class="solr.FacetComponent" />
+       <searchComponent name="mlt"       class="solr.MoreLikeThisComponent" />
+       <searchComponent name="highlight" class="solr.HighlightComponent" />
+       <searchComponent name="stats"     class="solr.StatsComponent" />
+       <searchComponent name="debug"     class="solr.DebugComponent" />
+   
+       Default configuration in a requestHandler would look like:
+
+       <arr name="components">
+         <str>query</str>
+         <str>facet</str>
+         <str>mlt</str>
+         <str>highlight</str>
+         <str>stats</str>
+         <str>debug</str>
+       </arr>
+
+       If you register a searchComponent to one of the standard names, 
+       that will be used instead of the default.
+
+       To insert components before or after the 'standard' components, use:
+    
+       <arr name="first-components">
+         <str>myFirstComponentName</str>
+       </arr>
+    
+       <arr name="last-components">
+         <str>myLastComponentName</str>
+       </arr>
+
+       NOTE: The component registered with the name "debug" will
+       always be executed after the "last-components" 
+       
+     -->
+
+   <!-- Spell Check
+
+        The spell check component can return a list of alternative spelling
+        suggestions.  
+
+        http://wiki.apache.org/solr/SpellCheckComponent
+     -->
+  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
+
+    <str name="queryAnalyzerFieldType">textSpell</str>
+
+    <!-- Multiple "Spell Checkers" can be declared and used by this
+         component
+      -->
+
+    <!-- a spellchecker built from a field of hte main index, and
+         written to disk
+      -->
+    <lst name="spellchecker">
+      <str name="name">default</str>
+      <str name="field">name</str>
+      <str name="spellcheckIndexDir">spellchecker</str>
+    </lst>
+
+    <!-- a spellchecker that uses a different distance measure -->
+    <!--
+       <lst name="spellchecker">
+         <str name="name">jarowinkler</str>
+         <str name="field">spell</str>
+         <str name="distanceMeasure">
+           org.apache.lucene.search.spell.JaroWinklerDistance
+         </str>
+         <str name="spellcheckIndexDir">spellcheckerJaro</str>
+       </lst>
+     -->
+
+    <!-- a spellchecker that use an alternate comparator 
+
+         comparatorClass be one of:
+          1. score (default)
+          2. freq (Frequency first, then score)
+          3. A fully qualified class name
+      -->
+    <!--
+       <lst name="spellchecker">
+         <str name="name">freq</str>
+         <str name="field">lowerfilt</str>
+         <str name="spellcheckIndexDir">spellcheckerFreq</str>
+         <str name="comparatorClass">freq</str>
+         <str name="buildOnCommit">true</str>
+      -->
+
+    <!-- A spellchecker that reads the list of words from a file -->
+    <!--
+       <lst name="spellchecker">
+         <str name="classname">solr.FileBasedSpellChecker</str>
+         <str name="name">file</str>
+         <str name="sourceLocation">spellings.txt</str>
+         <str name="characterEncoding">UTF-8</str>
+         <str name="spellcheckIndexDir">spellcheckerFile</str>
+       </lst>
+      -->
+  </searchComponent>
+
+  <!-- A request handler for demonstrating the spellcheck component.  
+
+       NOTE: This is purely as an example.  The whole purpose of the
+       SpellCheckComponent is to hook it into the request handler that
+       handles your normal user queries so that a separate request is
+       not needed to get suggestions.
+
+       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS
+       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!
+       
+       See http://wiki.apache.org/solr/SpellCheckComponent for details
+       on the request parameters.
+    -->
+  <requestHandler name="/spell" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <str name="spellcheck.onlyMorePopular">false</str>
+      <str name="spellcheck.extendedResults">false</str>
+      <str name="spellcheck.count">1</str>
+    </lst>
+    <arr name="last-components">
+      <str>spellcheck</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Term Vector Component
+
+       http://wiki.apache.org/solr/TermVectorComponent
+    -->
+  <searchComponent name="tvComponent" class="solr.TermVectorComponent"/>
+
+  <!-- A request handler for demonstrating the term vector component
+
+       This is purely as an example.
+
+       In reality you will likely want to add the component to your 
+       already specified request handlers. 
+    -->
+  <requestHandler name="tvrh" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <bool name="tv">true</bool>
+    </lst>
+    <arr name="last-components">
+      <str>tvComponent</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Clustering Component
+
+       http://wiki.apache.org/solr/ClusteringComponent
+
+       This relies on third party jars which are notincluded in the
+       release.  To use this component (and the "/clustering" handler)
+       Those jars will need to be downloaded, and you'll need to set
+       the solr.cluster.enabled system property when running solr...
+
+          java -Dsolr.clustering.enabled=true -jar start.jar
+    -->
+  <searchComponent name="clustering" 
+                   enable="${solr.clustering.enabled:false}"
+                   class="solr.clustering.ClusteringComponent" >
+    <!-- Declare an engine -->
+    <lst name="engine">
+      <!-- The name, only one can be named "default" -->
+      <str name="name">default</str>
+
+      <!-- Class name of Carrot2 clustering algorithm. 
+           
+           Currently available algorithms are:
+           
+           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm
+           * org.carrot2.clustering.stc.STCClusteringAlgorithm
+           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm
+           
+           See http://project.carrot2.org/algorithms.html for the
+           algorithm's characteristics.
+        -->
+      <str name="carrot.algorithm">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>
+
+      <!-- Overriding values for Carrot2 default algorithm attributes.
+
+           For a description of all available attributes, see:
+           http://download.carrot2.org/stable/manual/#chapter.components.
+           Use attribute key as name attribute of str elements
+           below. These can be further overridden for individual
+           requests by specifying attribute key as request parameter
+           name and attribute value as parameter value.
+        -->
+      <str name="LingoClusteringAlgorithm.desiredClusterCountBase">20</str>
+      
+      <!-- Location of Carrot2 lexical resources.
+
+           A directory from which to load Carrot2-specific stop words
+           and stop labels. Absolute or relative to Solr config directory.
+           If a specific resource (e.g. stopwords.en) is present in the
+           specified dir, it will completely override the corresponding
+           default one that ships with Carrot2.
+
+           For an overview of Carrot2 lexical resources, see:
+           http://download.carrot2.org/head/manual/#chapter.lexical-resources
+        -->
+      <str name="carrot.lexicalResourcesDir">clustering/carrot2</str>
+
+      <!-- The language to assume for the documents.
+           
+           For a list of allowed values, see:
+           http://download.carrot2.org/stable/manual/#section.attribute.lingo.MultilingualClustering.defaultLanguage
+       -->
+      <str name="MultilingualClustering.defaultLanguage">ENGLISH</str>
+    </lst>
+    <lst name="engine">
+      <str name="name">stc</str>
+      <str name="carrot.algorithm">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>
+    </lst>
+  </searchComponent>
+
+  <!-- A request handler for demonstrating the clustering component
+
+       This is purely as an example.
+
+       In reality you will likely want to add the component to your 
+       already specified request handlers. 
+    -->
+  <requestHandler name="/clustering"
+                  startup="lazy"
+                  enable="${solr.clustering.enabled:false}"
+                  class="solr.SearchHandler">
+    <lst name="defaults">
+      <bool name="clustering">true</bool>
+      <str name="clustering.engine">default</str>
+      <bool name="clustering.results">true</bool>
+      <!-- The title field -->
+      <str name="carrot.title">name</str>
+      <str name="carrot.url">id</str>
+      <!-- The field to cluster on -->
+       <str name="carrot.snippet">features</str>
+       <!-- produce summaries -->
+       <bool name="carrot.produceSummary">true</bool>
+       <!-- the maximum number of labels per cluster -->
+       <!--<int name="carrot.numDescriptions">5</int>-->
+       <!-- produce sub clusters -->
+       <bool name="carrot.outputSubClusters">false</bool>
+       
+       <str name="defType">edismax</str>
+       <str name="qf">
+          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+       <str name="q.alt">*:*</str>
+       <str name="rows">10</str>
+       <str name="fl">*,score</str>
+    </lst>     
+    <arr name="last-components">
+      <str>clustering</str>
+    </arr>
+  </requestHandler>
+  
+  <!-- Terms Component
+
+       http://wiki.apache.org/solr/TermsComponent
+
+       A component to return terms and document frequency of those
+       terms
+    -->
+  <searchComponent name="terms" class="solr.TermsComponent"/>
+
+  <!-- A request handler for demonstrating the terms component -->
+  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
+     <lst name="defaults">
+      <bool name="terms">true</bool>
+    </lst>     
+    <arr name="components">
+      <str>terms</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Highlighting Component
+
+       http://wiki.apache.org/solr/HighlightingParameters
+    -->
+  <searchComponent class="solr.HighlightComponent" name="highlight">
+    <highlighting>
+      <!-- Configure the standard fragmenter -->
+      <!-- This could most likely be commented out in the "default" case -->
+      <fragmenter name="gap" 
+                  default="true"
+                  class="solr.highlight.GapFragmenter">
+        <lst name="defaults">
+          <int name="hl.fragsize">100</int>
+        </lst>
+      </fragmenter>
+
+      <!-- A regular-expression-based fragmenter 
+           (for sentence extraction) 
+        -->
+      <fragmenter name="regex" 
+                  class="solr.highlight.RegexFragmenter">
+        <lst name="defaults">
+          <!-- slightly smaller fragsizes work better because of slop -->
+          <int name="hl.fragsize">70</int>
+          <!-- allow 50% slop on fragment sizes -->
+          <float name="hl.regex.slop">0.5</float>
+          <!-- a basic sentence pattern -->
+          <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
+        </lst>
+      </fragmenter>
+
+      <!-- Configure the standard formatter -->
+      <formatter name="html" 
+                 default="true"
+                 class="solr.highlight.HtmlFormatter">
+        <lst name="defaults">
+          <str name="hl.simple.pre"><![CDATA[<em>]]></str>
+          <str name="hl.simple.post"><![CDATA[</em>]]></str>
+        </lst>
+      </formatter>
+
+      <!-- Configure the standard encoder -->
+      <encoder name="html" 
+               class="solr.highlight.HtmlEncoder" />
+
+      <!-- Configure the standard fragListBuilder -->
+      <fragListBuilder name="simple" 
+                       default="true"
+                       class="solr.highlight.SimpleFragListBuilder"/>
+
+      <!-- Configure the single fragListBuilder -->
+      <fragListBuilder name="single" 
+                       class="solr.highlight.SingleFragListBuilder"/>
+
+      <!-- default tag FragmentsBuilder -->
+      <fragmentsBuilder name="default" 
+                        default="true"
+                        class="solr.highlight.ScoreOrderFragmentsBuilder">
+        <!-- 
+        <lst name="defaults">
+          <str name="hl.multiValuedSeparatorChar">/</str>
+        </lst>
+        -->
+      </fragmentsBuilder>
+
+      <!-- multi-colored tag FragmentsBuilder -->
+      <fragmentsBuilder name="colored" 
+                        class="solr.highlight.ScoreOrderFragmentsBuilder">
+        <lst name="defaults">
+          <str name="hl.tag.pre"><![CDATA[
+               <b style="background:yellow">,<b style="background:lawgreen">,
+               <b style="background:aquamarine">,<b style="background:magenta">,
+               <b style="background:palegreen">,<b style="background:coral">,
+               <b style="background:wheat">,<b style="background:khaki">,
+               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
+          <str name="hl.tag.post"><![CDATA[</b>]]></str>
+        </lst>
+      </fragmentsBuilder>
+    </highlighting>
+  </searchComponent>
+
+  <!-- Update Processors
+
+       Chains of Update Processor Factories for dealing with Update
+       Requests can be declared, and then used by name in Update
+       Request Processors
+
+       http://wiki.apache.org/solr/UpdateRequestProcessor
+
+    --> 
+  <!-- Deduplication
+
+       An example dedup update processor that creates the "id" field
+       on the fly based on the hash code of some other fields.  This
+       example has overwriteDupes set to false since we are using the
+       id field as the signatureField and Solr will maintain
+       uniqueness based on that anyway.  
+       
+    -->
+  <!--
+     <updateRequestProcessorChain name="dedupe">
+       <processor class="solr.processor.SignatureUpdateProcessorFactory">
+         <bool name="enabled">true</bool>
+         <str name="signatureField">id</str>
+         <bool name="overwriteDupes">false</bool>
+         <str name="fields">name,features,cat</str>
+         <str name="signatureClass">solr.processor.Lookup3Signature</str>
+       </processor>
+       <processor class="solr.LogUpdateProcessorFactory" />
+       <processor class="solr.RunUpdateProcessorFactory" />
+     </updateRequestProcessorChain>
+    -->
+
+  <!-- Response Writers
+
+       http://wiki.apache.org/solr/QueryResponseWriter
+
+       Request responses will be written using the writer specified by
+       the 'wt' request parameter matching the name of a registered
+       writer.
+
+       The "default" writer is the default and will be used if 'wt' is
+       not specified in the request.
+    -->
+  <!-- The following response writers are implicitly configured unless
+       overridden...
+    -->
+  <!--
+     <queryResponseWriter name="xml" 
+                          default="true"
+                          class="solr.XMLResponseWriter" />
+     <queryResponseWriter name="json" class="solr.JSONResponseWriter"/>
+     <queryResponseWriter name="python" class="solr.PythonResponseWriter"/>
+     <queryResponseWriter name="ruby" class="solr.RubyResponseWriter"/>
+     <queryResponseWriter name="php" class="solr.PHPResponseWriter"/>
+     <queryResponseWriter name="phps" class="solr.PHPSerializedResponseWriter"/>
+     <queryResponseWriter name="velocity" class="solr.VelocityResponseWriter"/>
+     <queryResponseWriter name="csv" class="solr.CSVResponseWriter"/>
+    -->
+  <!--
+     Custom response writers can be declared as needed...
+    -->
+  <!--
+     <queryResponseWriter name="custom" class="com.example.MyResponseWriter"/>
+    -->
+
+  <!-- XSLT response writer transforms the XML output by any xslt file found
+       in Solr's conf/xslt directory.  Changes to xslt files are checked for
+       every xsltCacheLifetimeSeconds.  
+    -->
+  <queryResponseWriter name="xslt" class="solr.XSLTResponseWriter">
+    <int name="xsltCacheLifetimeSeconds">5</int>
+  </queryResponseWriter>
+
+  <!-- Query Parsers
+
+       http://wiki.apache.org/solr/SolrQuerySyntax
+
+       Multiple QParserPlugins can be registered by name, and then
+       used in either the "defType" param for the QueryComponent (used
+       by SearchHandler) or in LocalParams
+    -->
+  <!-- example of registering a query parser -->
+  <!--
+     <queryParser name="myparser" class="com.mycompany.MyQParserPlugin"/>
+    -->
+
+  <!-- Function Parsers
+
+       http://wiki.apache.org/solr/FunctionQuery
+
+       Multiple ValueSourceParsers can be registered by name, and then
+       used as function names when using the "func" QParser.
+    -->
+  <!-- example of registering a custom function parser  -->
+  <!--
+     <valueSourceParser name="myfunc" 
+                        class="com.mycompany.MyValueSourceParser" />
+    -->
+
+  <!-- Legacy config for the admin interface -->
+  <admin>
+    <defaultQuery>*:*</defaultQuery>
+
+    <!-- configure a healthcheck file for servers behind a
+         loadbalancer 
+      -->
+    <!--
+       <healthcheck type="file">server-enabled</healthcheck>
+      -->
+  </admin>
+
+</config>
diff --git a/usr-share/solr-data/contexts/solr.xml b/usr-share/solr-data/contexts/solr.xml
new file mode 100644
index 0000000..1ce8d44
--- /dev/null
+++ b/usr-share/solr-data/contexts/solr.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0"  encoding="ISO-8859-1"?>
+<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
+ 
+<Configure class="org.mortbay.jetty.webapp.WebAppContext">
+  <Set name="contextPath">/solr</Set>
+  <Set name="war">/usr/share/java/webapps/apache-solr-3.6.0.war</Set>
+</Configure>
+
diff --git a/usr-share/solr-data/jetty.xml b/usr-share/solr-data/jetty.xml
new file mode 100644
index 0000000..ccd347f
--- /dev/null
+++ b/usr-share/solr-data/jetty.xml
@@ -0,0 +1,227 @@
+<?xml version="1.0"?>
+<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">
+
+<!-- =============================================================== -->
+<!-- Configure the Jetty Server                                      -->
+<!--                                                                 -->
+<!-- Documentation of this file format can be found at:              -->
+<!-- http://docs.codehaus.org/display/JETTY/jetty.xml                -->
+<!--                                                                 -->
+<!-- =============================================================== -->
+
+
+<Configure id="Server" class="org.mortbay.jetty.Server">
+
+    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
+    <Call class="java.lang.System" name="setProperty">
+      <Arg>org.mortbay.jetty.Request.maxFormContentSize</Arg>
+      <Arg>1000000</Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Server Thread Pool                                          -->
+    <!-- =========================================================== -->
+    <Set name="ThreadPool">
+
+      <New class="org.mortbay.thread.QueuedThreadPool">
+        <Set name="minThreads">10</Set>
+        <Set name="maxThreads">10000</Set>
+        <Set name="lowThreads">20</Set>
+      </New>
+
+      <!-- Optional Java 5 bounded threadpool with job queue 
+      <New class="org.mortbay.thread.concurrent.ThreadPool">
+        <Set name="corePoolSize">50</Set>
+        <Set name="maximumPoolSize">50</Set>
+      </New>
+      -->
+    </Set>
+
+
+
+    <!-- =========================================================== -->
+    <!-- Set connectors                                              -->
+    <!-- =========================================================== -->
+    <!-- One of each type!                                           -->
+    <!-- =========================================================== -->
+
+    <!-- Use this connector for many frequently idle connections
+         and for threadless continuations.
+    -->    
+  <!--
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.mortbay.jetty.nio.SelectChannelConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">30000</Set>
+            <Set name="Acceptors">2</Set>
+            <Set name="statsOn">false</Set>
+            <Set name="confidentialPort">8443</Set>
+	    <Set name="lowResourcesConnections">5000</Set>
+	    <Set name="lowResourcesMaxIdleTime">5000</Set>
+          </New>
+      </Arg>
+    </Call>
+  -->
+
+    <!-- This connector is currently being used for Solr because it
+          showed better performance than nio.SelectChannelConnector
+          for typical Solr requests.  -->
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.mortbay.jetty.bio.SocketConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">50000</Set>
+            <Set name="lowResourceMaxIdleTime">1500</Set>
+            <Set name="statsOn">false</Set>
+          </New>
+      </Arg>
+    </Call>
+
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    <!-- To add a HTTPS SSL listener                                     -->
+    <!-- see jetty-ssl.xml to add an ssl connector. use                  -->
+    <!-- java -jar start.jar etc/jetty.xml etc/jetty-ssl.xml             -->
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    <!-- To allow Jetty to be started from xinetd                        -->
+    <!-- mixin jetty-xinetd.xml:                                         -->
+    <!--   java -jar start.jar etc/jetty.xml etc/jetty-xinetd.xml        -->
+    <!--                                                                 -->
+    <!-- See jetty-xinetd.xml for further instructions.                  -->
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    
+    <!-- =========================================================== -->
+    <!-- Set up global session ID manager                            -->
+    <!-- =========================================================== -->
+    <!--
+    <Set name="sessionIdManager">
+      <New class="org.mortbay.jetty.servlet.HashSessionIdManager">
+        <Set name="workerName">node1</Set>
+      </New>
+    </Set>
+    -->
+
+    <!-- =========================================================== -->
+    <!-- Set handler Collection Structure                            --> 
+    <!-- =========================================================== -->
+    <Set name="handler">
+      <New id="Handlers" class="org.mortbay.jetty.handler.HandlerCollection">
+        <Set name="handlers">
+         <Array type="org.mortbay.jetty.Handler">
+           <Item>
+             <New id="Contexts" class="org.mortbay.jetty.handler.ContextHandlerCollection"/>
+           </Item>
+           <Item>
+             <New id="DefaultHandler" class="org.mortbay.jetty.handler.DefaultHandler"/>
+           </Item>
+           <Item>
+             <New id="RequestLog" class="org.mortbay.jetty.handler.RequestLogHandler"/>
+           </Item>
+         </Array>
+        </Set>
+      </New>
+    </Set>
+    
+    <!-- =========================================================== -->
+    <!-- Configure the context deployer                              -->
+    <!-- A context deployer will deploy contexts described in        -->
+    <!-- configuration files discovered in a directory.              -->
+    <!-- The configuration directory can be scanned for hot          -->
+    <!-- deployments at the configured scanInterval.                 -->
+    <!--                                                             -->
+    <!-- This deployer is configured to deploy contexts configured   -->
+    <!-- in the $JETTY_HOME/contexts directory                       -->
+    <!--                                                             -->
+    <!-- =========================================================== -->
+    <Call name="addLifeCycle">
+      <Arg>
+        <New class="org.mortbay.jetty.deployer.ContextDeployer">
+          <Set name="contexts"><Ref id="Contexts"/></Set>
+          <Set name="configurationDir"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
+          <Set name="scanInterval">5</Set>
+        </New>
+      </Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Configure the webapp deployer.                              -->
+    <!-- A webapp  deployer will deploy standard webapps discovered  -->
+    <!-- in a directory at startup, without the need for additional  -->
+    <!-- configuration files.    It does not support hot deploy or   -->
+    <!-- non standard contexts (see ContextDeployer above).          -->
+    <!--                                                             -->
+    <!-- This deployer is configured to deploy webapps from the      -->
+    <!-- $JETTY_HOME/webapps directory                               -->
+    <!--                                                             -->
+    <!-- Normally only one type of deployer need be used.            -->
+    <!--                                                             -->
+    <!-- =========================================================== -->
+    <Call name="addLifeCycle">
+      <Arg>
+        <New class="org.mortbay.jetty.deployer.WebAppDeployer">
+          <Set name="contexts"><Ref id="Contexts"/></Set>
+          <Set name="webAppDir"><SystemProperty name="jetty.webapps" default="."/></Set>
+	  <Set name="parentLoaderPriority">false</Set>
+	  <Set name="extract">true</Set>
+	  <Set name="allowDuplicates">false</Set>
+          <Set name="defaultsDescriptor"><SystemProperty name="jetty.home" default="."/>/webdefault.xml</Set>
+        </New>
+      </Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Configure Authentication Realms                             -->
+    <!-- Realms may be configured for the entire server here, or     -->
+    <!-- they can be configured for a specific web app in a context  -->
+    <!-- configuration (see $(jetty.home)/contexts/test.xml for an   -->
+    <!-- example).                                                   -->
+    <!-- =========================================================== -->
+  <!--
+    <Set name="UserRealms">
+      <Array type="org.mortbay.jetty.security.UserRealm">
+        <Item>
+          <New class="org.mortbay.jetty.security.HashUserRealm">
+            <Set name="name">Test Realm</Set>
+            <Set name="config"><SystemProperty name="jetty.home" default="."/>/etc/realm.properties</Set>
+            <Set name="refreshInterval">0</Set>
+          </New>
+        </Item>
+      </Array>
+    </Set>
+  -->
+
+    <!-- =========================================================== -->
+    <!-- Configure Request Log                                       -->
+    <!-- Request logs  may be configured for the entire server here, -->
+    <!-- or they can be configured for a specific web app in a       -->
+    <!-- contexts configuration (see $(jetty.home)/contexts/test.xml -->
+    <!-- for an example).                                            -->
+    <!-- =========================================================== -->
+  <!--
+    <Ref id="RequestLog">
+      <Set name="requestLog">
+        <New id="RequestLogImpl" class="org.mortbay.jetty.NCSARequestLog">
+          <Set name="filename"><SystemProperty name="jetty.logs" default="./logs"/>/yyyy_mm_dd.request.log</Set>
+          <Set name="filenameDateFormat">yyyy_MM_dd</Set>
+          <Set name="retainDays">90</Set>
+          <Set name="append">true</Set>
+          <Set name="extended">false</Set>
+          <Set name="logCookies">false</Set>
+          <Set name="LogTimeZone">GMT</Set>
+        </New>
+      </Set>
+    </Ref>
+  -->
+    <!-- =========================================================== -->
+    <!-- extra options                                               -->
+    <!-- =========================================================== -->
+    <Set name="stopAtShutdown">true</Set>
+    <Set name="sendServerVersion">false</Set>
+    <Set name="sendDateHeader">false</Set>
+    <Set name="gracefulShutdown">1000</Set>
+
+</Configure>
diff --git a/usr-share/solr-data/solr.xml b/usr-share/solr-data/solr.xml
new file mode 100644
index 0000000..2fed50a
--- /dev/null
+++ b/usr-share/solr-data/solr.xml
@@ -0,0 +1,3 @@
+<solr persistent="true" sharedLib="lib">
+    <cores adminPath="/admin/cores"/>
+</solr>
diff --git a/usr-share/solr-data/start.config b/usr-share/solr-data/start.config
new file mode 100644
index 0000000..26fc367
--- /dev/null
+++ b/usr-share/solr-data/start.config
@@ -0,0 +1,56 @@
+# This file controls what file are to be put on classpath or command line.
+#
+# Format is as follows:
+# Each line contains entry for one JAR file.
+# Format of line:
+#
+#  SUBJECT [ [!] CONDITION [AND|OR] ]*
+# 
+# where SUBJECT: 
+#   ends with ".class" is the Main class to run.
+#   ends with ".xml" is a configuration file for the command line
+#   ends with "/" is a directory from which to add all jar and zip files. 
+#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
+#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
+#   Containing = are used to assign system properties.
+#   all other subjects are treated as files to be added to the classpath.
+#
+# Subjects may include system properties with $(propertyname) syntax. 
+#
+# Files starting with "/" are considered absolute, all others are relative to
+# the home directory.
+#
+# CONDITION is one of:
+#   always
+#   never
+#   available classname        # true if class on classpath
+#   property name              # true of set
+#   java OPERATOR version      # java version compared to literal
+#   nargs OPERATOR number      # number of command line args compared to literal
+#   OPERATOR := one of "<",">","<=",">=","==","!="
+#
+# CONTITIONS can be combined with AND OR or !, with AND being the assume
+# operator for a list of CONDITIONS.
+# Classpath operations are evaluated on the fly, so once a class or jar is
+# added to the classpath, subsequent available conditions will see that class.
+#
+
+$(jetty.class.path).path                         always
+$(jetty.lib)/**                                  exists $(jetty.lib)
+
+
+# Try different settings of jetty.home until the jetty.jar is found.
+jetty.home=/location/of/your/jetty/config/dir
+
+# The main class to run
+org.mortbay.xml.XmlConfiguration.class
+$(start.class).class
+
+# The default configuration files
+$(jetty.home)/jetty.xml                             nargs == 0
+
+# Set the jetty classpath
+/usr/share/java/solr/*                              always
+
+# Set webapps dir
+jetty.webapps=/usr/share/java/webapps
diff --git a/usr-share/solr-data/webdefault.xml b/usr-share/solr-data/webdefault.xml
new file mode 100644
index 0000000..b8d0114
--- /dev/null
+++ b/usr-share/solr-data/webdefault.xml
@@ -0,0 +1,410 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<!-- ===================================================================== -->
+<!-- This file contains the default descriptor for web applications.       -->
+<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+<!-- The intent of this descriptor is to include jetty specific or common  -->
+<!-- configuration for all webapps.   If a context has a webdefault.xml    -->
+<!-- descriptor, it is applied before the contexts own web.xml file        -->
+<!--                                                                       -->
+<!-- A context may be assigned a default descriptor by:                    -->
+<!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
+<!--  + Passed an arg to addWebApplications                                -->
+<!--                                                                       -->
+<!-- This file is used both as the resource within the jetty.jar (which is -->
+<!-- used as the default if no explicit defaults descriptor is set) and it -->
+<!-- is copied to the etc directory of the Jetty distro and explicitly     -->
+<!-- by the jetty.xml file.                                                -->
+<!--                                                                       -->
+<!-- ===================================================================== -->
+<web-app 
+   xmlns="http://java.sun.com/xml/ns/javaee" 
+   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
+   metadata-complete="true"
+   version="2.5"> 
+
+  <description>
+    Default web.xml file.  
+    This file is applied to a Web application before it's own WEB_INF/web.xml file
+  </description>
+
+
+  <!-- ==================================================================== -->
+  <!-- Context params to control Session Cookies                            -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- UNCOMMENT TO ACTIVATE
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.SessionDomain</param-name>
+    <param-value>127.0.0.1</param-value>
+  </context-param>
+
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.SessionPath</param-name>
+    <param-value>/</param-value>
+  </context-param>
+
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.MaxAge</param-name>
+    <param-value>-1</param-value>
+  </context-param>
+  -->
+
+  <context-param>
+    <param-name>org.mortbay.jetty.webapp.NoTLDJarPattern</param-name>
+    <param-value>start.jar|ant-.*\.jar|dojo-.*\.jar|jetty-.*\.jar|jsp-api-.*\.jar|junit-.*\.jar|servlet-api-.*\.jar|dnsns\.jar|rt\.jar|jsse\.jar|tools\.jar|sunpkcs11\.jar|sunjce_provider\.jar|xerces.*\.jar</param-value>
+  </context-param>
+            
+
+
+  <!-- ==================================================================== -->
+  <!-- The default servlet.                                                 -->
+  <!-- This servlet, normally mapped to /, provides the handling for static -->
+  <!-- content, OPTIONS and TRACE methods for the context.                  -->
+  <!-- The following initParameters are supported:                          -->
+  <!--                                                                      -->
+  <!--   acceptRanges     If true, range requests and responses are         -->
+  <!--                    supported                                         -->
+  <!--                                                                      -->
+  <!--   dirAllowed       If true, directory listings are returned if no    -->
+  <!--                    welcome file is found. Else 403 Forbidden.        -->
+  <!--                                                                      -->
+  <!--   welcomeServlets  If true, attempt to dispatch to welcome files     -->
+  <!--                    that are servlets, if no matching static          --> 
+  <!--                    resources can be found.                           -->
+  <!--                                                                      -->
+  <!--   redirectWelcome  If true, redirect welcome file requests           -->
+  <!--                    else use request dispatcher forwards              -->
+  <!--                                                                      -->
+  <!--   gzip             If set to true, then static content will be served--> 
+  <!--                    as gzip content encoded if a matching resource is -->
+  <!--                    found ending with ".gz"                           -->
+  <!--                                                                      -->
+  <!--   resoureBase      Can be set to replace the context resource base   -->
+  <!--                                                                      -->
+  <!--   relativeResourceBase                                               -->
+  <!--                    Set with a pathname relative to the base of the   -->
+  <!--                    servlet context root. Useful for only serving     -->
+  <!--                    static content from only specific subdirectories. -->
+  <!--                                                                      -->
+  <!--   useFileMappedBuffer                                                -->
+  <!--                    If set to true (the default), a  memory mapped    -->
+  <!--                    file buffer will be used to serve static content  -->
+  <!--                    when using an NIO connector. Setting this value   -->
+  <!--                    to false means that a direct buffer will be used  -->
+  <!--                    instead. If you are having trouble with Windows   -->
+  <!--                    file locking, set this to false.                  -->
+  <!--                                                                      -->
+  <!--  cacheControl      If set, all static content will have this value   -->
+  <!--                    set as the cache-control header.                  -->
+  <!--                                                                      -->
+  <!--  maxCacheSize      Maximum size of the static resource cache         -->
+  <!--                                                                      -->
+  <!--  maxCachedFileSize Maximum size of any single file in the cache      -->
+  <!--                                                                      -->
+  <!--  maxCachedFiles    Maximum number of files in the cache              -->
+  <!--                                                                      -->
+  <!--  cacheType         "nio", "bio" or "both" to determine the type(s)   -->
+  <!--                    of resource cache. A bio cached buffer may be used-->
+  <!--                    by nio but is not as efficient as a nio buffer.   -->
+  <!--                    An nio cached buffer may not be used by bio.      -->
+  <!--                                                                      -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet>
+    <servlet-name>default</servlet-name>
+    <servlet-class>org.mortbay.jetty.servlet.DefaultServlet</servlet-class>
+    <init-param>
+      <param-name>acceptRanges</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>dirAllowed</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>welcomeServlets</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>redirectWelcome</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCacheSize</param-name>
+      <param-value>256000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFileSize</param-name>
+      <param-value>10000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFiles</param-name>
+      <param-value>1000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>cacheType</param-name>
+      <param-value>both</param-value>
+    </init-param>
+    <init-param>
+      <param-name>gzip</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>useFileMappedBuffer</param-name>
+      <param-value>true</param-value>
+    </init-param>  
+    <!--
+    <init-param>
+      <param-name>cacheControl</param-name>
+      <param-value>max-age=3600,public</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet> 
+
+  <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping>
+  
+
+  <!-- ==================================================================== -->
+  <!-- JSP Servlet                                                          -->
+  <!-- This is the jasper JSP servlet from the jakarta project              -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
+  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
+  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
+  <!-- following initialization parameters (default values are in square    -->
+  <!-- brackets):                                                           -->
+  <!--                                                                      -->
+  <!--   checkInterval       If development is false and reloading is true, -->
+  <!--                       background compiles are enabled. checkInterval -->
+  <!--                       is the time in seconds between checks to see   -->
+  <!--                       if a JSP page needs to be recompiled. [300]    -->
+  <!--                                                                      -->
+  <!--   compiler            Which compiler Ant should use to compile JSP   -->
+  <!--                       pages.  See the Ant documenation for more      -->
+  <!--                       information. [javac]                           -->
+  <!--                                                                      -->
+  <!--   classdebuginfo      Should the class file be compiled with         -->
+  <!--                       debugging information?  [true]                 -->
+  <!--                                                                      -->
+  <!--   classpath           What class path should I use while compiling   -->
+  <!--                       generated servlets?  [Created dynamically      -->
+  <!--                       based on the current web application]          -->
+  <!--                       Set to ? to make the container explicitly set  -->
+  <!--                       this parameter.                                -->
+  <!--                                                                      -->
+  <!--   development         Is Jasper used in development mode (will check -->
+  <!--                       for JSP modification on every access)?  [true] -->
+  <!--                                                                      -->
+  <!--   enablePooling       Determines whether tag handler pooling is      -->
+  <!--                       enabled  [true]                                -->
+  <!--                                                                      -->
+  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
+  <!--                       a separate JVM is used for JSP page compiles   -->
+  <!--                       from the one Tomcat is running in. [true]      -->
+  <!--                                                                      -->
+  <!--   ieClassId           The class-id value to be sent to Internet      -->
+  <!--                       Explorer when using <jsp:plugin> tags.         -->
+  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
+  <!--                                                                      -->
+  <!--   javaEncoding        Java file encoding to use for generating java  -->
+  <!--                       source files. [UTF-8]                          -->
+  <!--                                                                      -->
+  <!--   keepgenerated       Should we keep the generated Java source code  -->
+  <!--                       for each page instead of deleting it? [true]   -->
+  <!--                                                                      -->
+  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
+  <!--                       by this servlet.  Increasing levels cause the  -->
+  <!--                       generation of more messages.  Valid values are -->
+  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
+  <!--                       [WARNING]                                      -->
+  <!--                                                                      -->
+  <!--   mappedfile          Should we generate static content with one     -->
+  <!--                       print statement per input line, to ease        -->
+  <!--                       debugging?  [false]                            -->
+  <!--                                                                      -->
+  <!--                                                                      -->
+  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
+  <!--                                                                      -->
+  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
+  <!--                       debugging be suppressed?  [false]              -->
+  <!--                                                                      -->
+  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
+  <!--                       dumped to a file? [false]                      -->
+  <!--                       False if suppressSmap is true                  -->
+  <!--                                                                      -->
+  <!--   scratchdir          What scratch directory should we use when      -->
+  <!--                       compiling JSP pages?  [default work directory  -->
+  <!--                       for the current web application]               -->
+  <!--                                                                      -->
+  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
+  <!--                                                                      -->
+  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
+  <!--                       header is added by generated servlet  [false]  -->
+  <!--                                                                      -->
+  <!-- If you wish to use Jikes to compile JSP pages:                       -->
+  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
+  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
+  <!--   to cause Jikes to emit error messages in a format compatible with  -->
+  <!--   Jasper.                                                            -->
+  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
+  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet id="jsp">
+    <servlet-name>jsp</servlet-name>
+    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
+    <init-param>
+        <param-name>logVerbosityLevel</param-name>
+        <param-value>DEBUG</param-value>
+    </init-param>
+    <init-param>
+        <param-name>fork</param-name>
+        <param-value>false</param-value>
+    </init-param>
+    <init-param>
+        <param-name>xpoweredBy</param-name>
+        <param-value>false</param-value>
+    </init-param>
+    <!--  
+    <init-param>
+        <param-name>classpath</param-name>
+        <param-value>?</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping> 
+    <servlet-name>jsp</servlet-name> 
+    <url-pattern>*.jsp</url-pattern> 
+    <url-pattern>*.jspf</url-pattern>
+    <url-pattern>*.jspx</url-pattern>
+    <url-pattern>*.xsp</url-pattern>
+    <url-pattern>*.JSP</url-pattern> 
+    <url-pattern>*.JSPF</url-pattern>
+    <url-pattern>*.JSPX</url-pattern>
+    <url-pattern>*.XSP</url-pattern>
+  </servlet-mapping>
+  
+  <!-- ==================================================================== -->
+  <!-- Dynamic Servlet Invoker.                                             -->
+  <!-- This servlet invokes anonymous servlets that have not been defined   -->
+  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
+  <!-- of a request passed to the envoker is treated as a servlet name for  -->
+  <!-- an existing servlet, or as a class name of a new servlet.            -->
+  <!-- This servlet is normally mapped to /servlet/*                        -->
+  <!-- This servlet support the following initParams:                       -->
+  <!--                                                                      -->
+  <!--  nonContextServlets       If false, the invoker can only load        -->
+  <!--                           servlets from the contexts classloader.    -->
+  <!--                           This is false by default and setting this  -->
+  <!--                           to true may have security implications.    -->
+  <!--                                                                      -->
+  <!--  verbose                  If true, log dynamic loads                 -->
+  <!--                                                                      -->
+  <!--  *                        All other parameters are copied to the     -->
+  <!--                           each dynamic servlet as init parameters    -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- Uncomment for dynamic invocation
+  <servlet>
+    <servlet-name>invoker</servlet-name>
+    <servlet-class>org.mortbay.jetty.servlet.Invoker</servlet-class>
+    <init-param>
+      <param-name>verbose</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>nonContextServlets</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>dynamicParam</param-name>
+      <param-value>anyValue</param-value>
+    </init-param>
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping> <servlet-name>invoker</servlet-name> <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
+  -->
+
+
+
+  <!-- ==================================================================== -->
+  <session-config>
+    <session-timeout>30</session-timeout>
+  </session-config>
+
+  <!-- ==================================================================== -->
+  <!-- Default MIME mappings                                                -->
+  <!-- The default MIME mappings are provided by the mime.properties        -->
+  <!-- resource in the org.mortbay.jetty.jar file.  Additional or modified  -->
+  <!-- mappings may be specified here                                       -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- UNCOMMENT TO ACTIVATE
+  <mime-mapping>
+    <extension>mysuffix</extension>
+    <mime-type>mymime/type</mime-type>
+  </mime-mapping>
+  -->
+
+  <!-- ==================================================================== -->
+  <welcome-file-list>
+    <welcome-file>index.html</welcome-file>
+    <welcome-file>index.htm</welcome-file>
+    <welcome-file>index.jsp</welcome-file>
+  </welcome-file-list>
+
+  <!-- ==================================================================== -->
+  <locale-encoding-mapping-list>
+    <locale-encoding-mapping><locale>ar</locale><encoding>ISO-8859-6</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>be</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>bg</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ca</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>cs</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>da</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>de</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>el</locale><encoding>ISO-8859-7</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>en</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>es</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>et</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>fi</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>fr</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>hr</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>hu</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>is</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>it</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>iw</locale><encoding>ISO-8859-8</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ja</locale><encoding>Shift_JIS</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ko</locale><encoding>EUC-KR</encoding></locale-encoding-mapping>     
+    <locale-encoding-mapping><locale>lt</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>lv</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>mk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>nl</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>no</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>pl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>pt</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ro</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ru</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sh</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sk</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sq</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sr</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sv</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>tr</locale><encoding>ISO-8859-9</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>uk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>zh</locale><encoding>GB2312</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>zh_TW</locale><encoding>Big5</encoding></locale-encoding-mapping>   
+  </locale-encoding-mapping-list>
+  
+  <security-constraint>
+    <web-resource-collection>
+      <web-resource-name>Disable TRACE</web-resource-name>
+      <url-pattern>/</url-pattern>
+      <http-method>TRACE</http-method>
+    </web-resource-collection>
+    <auth-constraint/>
+  </security-constraint>
+  
+</web-app>
+
-- 
1.7.2.5


From 6ca8ca4225833cf0760fc6eba24c88c89e2fbebb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Fri, 7 Sep 2012 15:27:50 +0200
Subject: [PATCH 06/66] TS/HM: Updated to solr 3.6.0 config (iso old 3.2.0 config)

---
 doc/changes.txt                         |   15 +
 doc/original_3.6.0_solrconfig.xml       | 1622 +++++++++++++++++++++++++++++++
 test/_solr-tests.py                     |   10 +-
 usr-share/core-data/conf/solrconfig.xml | 1415 +---------------------------
 usr-share/solr-data/etc/jetty.xml       |  227 +++++
 usr-share/solr-data/etc/webdefault.xml  |  410 ++++++++
 usr-share/solr-data/jetty.xml           |  227 -----
 usr-share/solr-data/start.config        |    2 +-
 usr-share/solr-data/webdefault.xml      |  410 --------
 9 files changed, 2293 insertions(+), 2045 deletions(-)
 create mode 100644 doc/changes.txt
 create mode 100644 doc/original_3.6.0_solrconfig.xml
 create mode 100644 usr-share/solr-data/etc/jetty.xml
 create mode 100644 usr-share/solr-data/etc/webdefault.xml
 delete mode 100644 usr-share/solr-data/jetty.xml
 delete mode 100644 usr-share/solr-data/webdefault.xml

diff --git a/doc/changes.txt b/doc/changes.txt
new file mode 100644
index 0000000..1572377
--- /dev/null
+++ b/doc/changes.txt
@@ -0,0 +1,15 @@
+example/etc/jetty.xml -> solr-data/etc/jetty.xml
+ - Replace: <Set name="webAppDir"><SystemProperty name="jetty.webapps" default="."/></Set>
+
+example/etc/webdefault.xml -> solr-data/etc/webdefault.xml
+
+example-DIH/solr/solr.xml -> solr-data/solr.xml
+ - Remove core elements
+
+example/start.jar:org/mortbay/start/start.config -> solr-data/start.config
+ - Handmatige diff; Keep explaining comments; Add jetty.webapps; Add dummy jetty.home; Fix jetty classpath
+
+zelf verzonnen iets -> solr-data/contexts/solr.xml 
+zelf verzonnen iets (kijk uit voor version) -> core-data/conf/schema.xml
+
+example/solr/conf/solrconfig.xml -> core-data/conf/solrconfig.xml (Copy changes using meld!!! (Too many changes))
diff --git a/doc/original_3.6.0_solrconfig.xml b/doc/original_3.6.0_solrconfig.xml
new file mode 100644
index 0000000..5f50ab5
--- /dev/null
+++ b/doc/original_3.6.0_solrconfig.xml
@@ -0,0 +1,1622 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<!-- 
+     For more details about configurations options that may appear in
+     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
+-->
+<config>
+  <!-- In all configuration below, a prefix of "solr." for class names
+       is an alias that causes solr to search appropriate packages,
+       including org.apache.solr.(search|update|request|core|analysis)
+
+       You may also specify a fully qualified Java classname if you
+       have your own custom plugins.
+    -->
+
+  <!-- Set this to 'false' if you want solr to continue working after
+       it has encountered an severe configuration error.  In a
+       production environment, you may want solr to keep working even
+       if one handler is mis-configured.
+
+       You may also set this to false using by setting the system
+       property:
+
+         -Dsolr.abortOnConfigurationError=false
+    -->
+  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
+  
+  <!-- Controls what version of Lucene various components of Solr
+       adhere to.  Generally, you want to use the latest version to
+       get all bug fixes and improvements. It is highly recommended
+       that you fully re-index after changing this setting as it can
+       affect both how text is indexed and queried.
+    -->
+  <luceneMatchVersion>LUCENE_36</luceneMatchVersion>
+
+  <!-- lib directives can be used to instruct Solr to load an Jars
+       identified and use them to resolve any "plugins" specified in
+       your solrconfig.xml or schema.xml (ie: Analyzers, Request
+       Handlers, etc...).
+
+       All directories and paths are resolved relative to the
+       instanceDir.
+
+       If a "./lib" directory exists in your instanceDir, all files
+       found in it are included as if you had used the following
+       syntax...
+       
+              <lib dir="./lib" />
+    -->
+
+  <!-- A 'dir' option by itself adds any files found in the directory 
+       to the classpath, this is useful for including all jars in a
+       directory.
+    -->
+  <!--
+     <lib dir="../add-everything-found-in-this-dir-to-the-classpath" />
+  -->
+
+  <!-- When a 'regex' is specified in addition to a 'dir', only the
+       files in that directory which completely match the regex
+       (anchored on both ends) will be included.
+    -->
+  <lib dir="../../dist/" regex="apache-solr-cell-\d.*\.jar" />
+  <lib dir="../../contrib/extraction/lib" regex=".*\.jar" />
+
+  <lib dir="../../dist/" regex="apache-solr-clustering-\d.*\.jar" />
+  <lib dir="../../contrib/clustering/lib/" regex=".*\.jar" />
+
+  <lib dir="../../dist/" regex="apache-solr-dataimporthandler-\d.*\.jar" />
+  <lib dir="../../contrib/dataimporthandler/lib/" regex=".*\.jar" />
+  
+  <lib dir="../../dist/" regex="apache-solr-langid-\d.*\.jar" />
+  <lib dir="../../contrib/langid/lib/" regex=".*\.jar" />
+
+  <lib dir="../../dist/" regex="apache-solr-velocity-\d.*\.jar" />
+  <lib dir="../../contrib/velocity/lib" regex=".*\.jar" />
+
+  <!-- If a 'dir' option (with or without a regex) is used and nothing
+       is found that matches, it will be ignored
+    -->
+  <lib dir="/total/crap/dir/ignored" />
+
+  <!-- an exact 'path' can be used instead of a 'dir' to specify a 
+       specific file.  This will cause a serious error to be logged if 
+       it can't be loaded.
+    -->
+  <!--
+     <lib path="../a-jar-that-does-not-exist.jar" /> 
+  -->
+  
+  <!-- Data Directory
+
+       Used to specify an alternate directory to hold all index data
+       other than the default ./data under the Solr home.  If
+       replication is in use, this should match the replication
+       configuration.
+    -->
+  <dataDir>${solr.data.dir:}</dataDir>
+
+
+  <!-- The DirectoryFactory to use for indexes.
+       
+       solr.StandardDirectoryFactory, the default, is filesystem
+       based and tries to pick the best implementation for the current
+       JVM and platform.  One can force a particular implementation
+       via solr.MMapDirectoryFactory, solr.NIOFSDirectoryFactory, or
+       solr.SimpleFSDirectoryFactory.
+
+       solr.RAMDirectoryFactory is memory based, not
+       persistent, and doesn't work with replication.
+    -->
+  <directoryFactory name="DirectoryFactory" 
+                    class="${solr.directoryFactory:solr.StandardDirectoryFactory}"/>
+
+  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+       Index Config - These settings control low-level behavior of indexing
+       Most example settings here show the default value, but are commented
+       out, to more easily see where customizations have been made.
+       
+       Note: As of Solr 3.6, the <indexDefaults> and <mainIndex> sections
+             are deprecated and not shown in the example config. They will 
+             still work, but will go away for good in 4.0
+       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
+  <indexConfig>
+    <!-- maxFieldLength specifies max number of *tokens* indexed per field. Default: 10000 -->
+    <!-- <maxFieldLength>10000</maxFieldLength>  -->
+    <!-- Maximum time to wait for a write lock (ms) for an IndexWriter. Default: 1000 -->
+    <!-- <writeLockTimeout>1000</writeLockTimeout>  -->
+
+    <!-- Expert: Enabling compound file will use less files for the index, 
+         using fewer file descriptors on the expense of performance decrease. 
+         Default in Lucene is "true". Default in Solr is "false" (since 3.6) -->
+    <!-- <useCompoundFile>false</useCompoundFile> -->
+
+    <!-- ramBufferSizeMB sets the amount of RAM that may be used by Lucene
+         indexing for buffering added documents and deletions before they are
+         flushed to the Directory.
+         maxBufferedDocs sets a limit on the number of documents buffered
+         before flushing.
+         If both ramBufferSizeMB and maxBufferedDocs is set, then
+         Lucene will flush based on whichever limit is hit first.  -->
+    <!-- <ramBufferSizeMB>32</ramBufferSizeMB> -->
+    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->
+
+    <!-- Expert: Merge Policy 
+         The Merge Policy in Lucene controls how merging of segments is done.
+         The default since Solr/Lucene 3.3 is TieredMergePolicy.
+         The default since Lucene 2.3 was the LogByteSizeMergePolicy,
+         Even older versions of Lucene used LogDocMergePolicy.
+      -->
+    <!--
+        <mergePolicy class="org.apache.lucene.index.TieredMergePolicy">
+          <int name="maxMergeAtOnce">10</int>
+          <int name="segmentsPerTier">10</int>
+        </mergePolicy>
+      -->
+       
+    <!-- Merge Factor
+         The merge factor controls how many segments will get merged at a time.
+         For TieredMergePolicy, mergeFactor is a convenience parameter which
+         will set both MaxMergeAtOnce and SegmentsPerTier at once.
+         For LogByteSizeMergePolicy, mergeFactor decides how many new segments
+         will be allowed before they are merged into one.
+         Default is 10 for both merge policies.
+      -->
+    <!-- 
+    <mergeFactor>10</mergeFactor>
+      -->
+
+    <!-- Expert: Merge Scheduler
+         The Merge Scheduler in Lucene controls how merges are
+         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
+         can perform merges in the background using separate threads.
+         The SerialMergeScheduler (Lucene 2.2 default) does not.
+     -->
+    <!-- 
+       <mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler"/>
+       -->
+
+    <!-- LockFactory 
+
+         This option specifies which Lucene LockFactory implementation
+         to use.
+      
+         single = SingleInstanceLockFactory - suggested for a
+                  read-only index or when there is no possibility of
+                  another process trying to modify the index.
+         native = NativeFSLockFactory - uses OS native file locking.
+                  Do not use when multiple solr webapps in the same
+                  JVM are attempting to share a single index.
+         simple = SimpleFSLockFactory  - uses a plain file for locking
+
+         Defaults: 'native' is default for Solr3.6 and later, otherwise
+                   'simple' is the default
+
+         More details on the nuances of each LockFactory...
+         http://wiki.apache.org/lucene-java/AvailableLockFactories
+    -->
+    <!-- <lockType>native</lockType> -->
+
+    <!-- Unlock On Startup
+
+         If true, unlock any held write or commit locks on startup.
+         This defeats the locking mechanism that allows multiple
+         processes to safely access a lucene index, and should be used
+         with care. Default is "false".
+
+         This is not needed if lock type is 'none' or 'single'
+     -->
+    <!--
+    <unlockOnStartup>false</unlockOnStartup>
+      -->
+    
+    <!-- Expert: Controls how often Lucene loads terms into memory
+         Default is 128 and is likely good for most everyone.
+      -->
+    <!-- <termIndexInterval>128</termIndexInterval> -->
+
+    <!-- If true, IndexReaders will be reopened (often more efficient)
+         instead of closed and then opened. Default: true
+      -->
+    <!-- 
+    <reopenReaders>true</reopenReaders>
+      -->
+
+    <!-- Commit Deletion Policy
+
+         Custom deletion policies can be specified here. The class must
+         implement org.apache.lucene.index.IndexDeletionPolicy.
+
+         http://lucene.apache.org/java/3_5_0/api/core/org/apache/lucene/index/IndexDeletionPolicy.html
+
+         The default Solr IndexDeletionPolicy implementation supports
+         deleting index commit points on number of commits, age of
+         commit point and optimized status.
+         
+         The latest commit point should always be preserved regardless
+         of the criteria.
+    -->
+    <!-- 
+    <deletionPolicy class="solr.SolrDeletionPolicy">
+    -->
+      <!-- The number of commit points to be kept -->
+      <!-- <str name="maxCommitsToKeep">1</str> -->
+      <!-- The number of optimized commit points to be kept -->
+      <!-- <str name="maxOptimizedCommitsToKeep">0</str> -->
+      <!--
+          Delete all commit points once they have reached the given age.
+          Supports DateMathParser syntax e.g.
+        -->
+      <!--
+         <str name="maxCommitAge">30MINUTES</str>
+         <str name="maxCommitAge">1DAY</str>
+      -->
+    <!-- 
+    </deletionPolicy>
+    -->
+
+    <!-- Lucene Infostream
+       
+         To aid in advanced debugging, Lucene provides an "InfoStream"
+         of detailed information when indexing.
+
+         Setting The value to true will instruct the underlying Lucene
+         IndexWriter to write its debugging info the specified file
+      -->
+     <!-- <infoStream file="INFOSTREAM.txt">false</infoStream> --> 
+  </indexConfig>
+
+
+  <!-- JMX
+       
+       This example enables JMX if and only if an existing MBeanServer
+       is found, use this if you want to configure JMX through JVM
+       parameters. Remove this to disable exposing Solr configuration
+       and statistics to JMX.
+
+       For more details see http://wiki.apache.org/solr/SolrJmx
+    -->
+  <jmx />
+  <!-- If you want to connect to a particular server, specify the
+       agentId 
+    -->
+  <!-- <jmx agentId="myAgent" /> -->
+  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->
+  <!-- <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr"/>
+    -->
+
+  <!-- The default high-performance update handler -->
+  <updateHandler class="solr.DirectUpdateHandler2">
+
+    <!-- AutoCommit
+
+         Perform a <commit/> automatically under certain conditions.
+         Instead of enabling autoCommit, consider using "commitWithin"
+         when adding documents. 
+
+         http://wiki.apache.org/solr/UpdateXmlMessages
+
+         maxDocs - Maximum number of documents to add since the last
+                   commit before automatically triggering a new commit.
+
+         maxTime - Maximum amount of time that is allowed to pass
+                   since a document was added before automaticly
+                   triggering a new commit. 
+      -->
+    <!--
+       <autoCommit> 
+         <maxDocs>10000</maxDocs>
+         <maxTime>1000</maxTime> 
+       </autoCommit>
+      -->
+
+    <!-- Update Related Event Listeners
+         
+         Various IndexWriter related events can trigger Listeners to
+         take actions.
+
+         postCommit - fired after every commit or optimize command
+         postOptimize - fired after every optimize command
+      -->
+    <!-- The RunExecutableListener executes an external command from a
+         hook such as postCommit or postOptimize.
+         
+         exe - the name of the executable to run
+         dir - dir to use as the current working directory. (default=".")
+         wait - the calling thread waits until the executable returns. 
+                (default="true")
+         args - the arguments to pass to the program.  (default is none)
+         env - environment variables to set.  (default is none)
+      -->
+    <!-- This example shows how RunExecutableListener could be used
+         with the script based replication...
+         http://wiki.apache.org/solr/CollectionDistribution
+      -->
+    <!--
+       <listener event="postCommit" class="solr.RunExecutableListener">
+         <str name="exe">solr/bin/snapshooter</str>
+         <str name="dir">.</str>
+         <bool name="wait">true</bool>
+         <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
+         <arr name="env"> <str>MYVAR=val1</str> </arr>
+       </listener>
+      -->
+  </updateHandler>
+  
+  <!-- IndexReaderFactory
+
+       Use the following format to specify a custom IndexReaderFactory,
+       which allows for alternate IndexReader implementations.
+
+       ** Experimental Feature **
+
+       Please note - Using a custom IndexReaderFactory may prevent
+       certain other features from working. The API to
+       IndexReaderFactory may change without warning or may even be
+       removed from future releases if the problems cannot be
+       resolved.
+
+
+       ** Features that may not work with custom IndexReaderFactory **
+
+       The ReplicationHandler assumes a disk-resident index. Using a
+       custom IndexReader implementation may cause incompatibility
+       with ReplicationHandler and may cause replication to not work
+       correctly. See SOLR-1366 for details.
+
+    -->
+  <!--
+  <indexReaderFactory name="IndexReaderFactory" class="package.class">
+    <str name="someArg">Some Value</str>
+  </indexReaderFactory >
+  -->
+  <!-- By explicitly declaring the Factory, the termIndexDivisor can
+       be specified.
+    -->
+  <!--
+     <indexReaderFactory name="IndexReaderFactory" 
+                         class="solr.StandardIndexReaderFactory">
+       <int name="setTermIndexDivisor">12</int>
+     </indexReaderFactory >
+    -->
+
+  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+       Query section - these settings control query time things like caches
+       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
+  <query>
+    <!-- Max Boolean Clauses
+
+         Maximum number of clauses in each BooleanQuery,  an exception
+         is thrown if exceeded.
+
+         ** WARNING **
+         
+         This option actually modifies a global Lucene property that
+         will affect all SolrCores.  If multiple solrconfig.xml files
+         disagree on this property, the value at any given moment will
+         be based on the last SolrCore to be initialized.
+         
+      -->
+    <maxBooleanClauses>1024</maxBooleanClauses>
+
+
+    <!-- Solr Internal Query Caches
+
+         There are two implementations of cache available for Solr,
+         LRUCache, based on a synchronized LinkedHashMap, and
+         FastLRUCache, based on a ConcurrentHashMap.  
+
+         FastLRUCache has faster gets and slower puts in single
+         threaded operation and thus is generally faster than LRUCache
+         when the hit ratio of the cache is high (> 75%), and may be
+         faster under other scenarios on multi-cpu systems.
+    -->
+
+    <!-- Filter Cache
+
+         Cache used by SolrIndexSearcher for filters (DocSets),
+         unordered sets of *all* documents that match a query.  When a
+         new searcher is opened, its caches may be prepopulated or
+         "autowarmed" using data from caches in the old searcher.
+         autowarmCount is the number of items to prepopulate.  For
+         LRUCache, the autowarmed items will be the most recently
+         accessed items.
+
+         Parameters:
+           class - the SolrCache implementation LRUCache or
+               (LRUCache or FastLRUCache)
+           size - the maximum number of entries in the cache
+           initialSize - the initial capacity (number of entries) of
+               the cache.  (see java.util.HashMap)
+           autowarmCount - the number of entries to prepopulate from
+               and old cache.  
+      -->
+    <filterCache class="solr.FastLRUCache"
+                 size="512"
+                 initialSize="512"
+                 autowarmCount="0"/>
+
+    <!-- Query Result Cache
+         
+         Caches results of searches - ordered lists of document ids
+         (DocList) based on a query, a sort, and the range of documents 
+         requested.  
+      -->
+    <queryResultCache class="solr.LRUCache"
+                     size="512"
+                     initialSize="512"
+                     autowarmCount="0"/>
+   
+    <!-- Document Cache
+
+         Caches Lucene Document objects (the stored fields for each
+         document).  Since Lucene internal document ids are transient,
+         this cache will not be autowarmed.  
+      -->
+    <documentCache class="solr.LRUCache"
+                   size="512"
+                   initialSize="512"
+                   autowarmCount="0"/>
+    
+    <!-- Field Value Cache
+         
+         Cache used to hold field values that are quickly accessible
+         by document id.  The fieldValueCache is created by default
+         even if not configured here.
+      -->
+    <!--
+       <fieldValueCache class="solr.FastLRUCache"
+                        size="512"
+                        autowarmCount="128"
+                        showItems="32" />
+      -->
+
+    <!-- Custom Cache
+
+         Example of a generic cache.  These caches may be accessed by
+         name through SolrIndexSearcher.getCache(),cacheLookup(), and
+         cacheInsert().  The purpose is to enable easy caching of
+         user/application level data.  The regenerator argument should
+         be specified as an implementation of solr.CacheRegenerator 
+         if autowarming is desired.  
+      -->
+    <!--
+       <cache name="myUserCache"
+              class="solr.LRUCache"
+              size="4096"
+              initialSize="1024"
+              autowarmCount="1024"
+              regenerator="com.mycompany.MyRegenerator"
+              />
+      -->
+
+
+    <!-- Lazy Field Loading
+
+         If true, stored fields that are not requested will be loaded
+         lazily.  This can result in a significant speed improvement
+         if the usual case is to not load all stored fields,
+         especially if the skipped fields are large compressed text
+         fields.
+    -->
+    <enableLazyFieldLoading>true</enableLazyFieldLoading>
+
+   <!-- Use Filter For Sorted Query
+
+        A possible optimization that attempts to use a filter to
+        satisfy a search.  If the requested sort does not include
+        score, then the filterCache will be checked for a filter
+        matching the query. If found, the filter will be used as the
+        source of document ids, and then the sort will be applied to
+        that.
+
+        For most situations, this will not be useful unless you
+        frequently get the same search repeatedly with different sort
+        options, and none of them ever use "score"
+     -->
+   <!--
+      <useFilterForSortedQuery>true</useFilterForSortedQuery>
+     -->
+
+   <!-- Result Window Size
+
+        An optimization for use with the queryResultCache.  When a search
+        is requested, a superset of the requested number of document ids
+        are collected.  For example, if a search for a particular query
+        requests matching documents 10 through 19, and queryWindowSize 
+        is 50, then documents 0 through 49 will be collected and cached.  
+        Any further requests in that range can be satisfied via the cache.  
+     -->
+   <queryResultWindowSize>20</queryResultWindowSize>
+
+   <!-- Maximum number of documents to cache for any entry in the
+        queryResultCache. 
+     -->
+   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
+
+   <!-- Query Related Event Listeners
+
+        Various IndexSearcher related events can trigger Listeners to
+        take actions.
+
+        newSearcher - fired whenever a new searcher is being prepared
+        and there is a current searcher handling requests (aka
+        registered).  It can be used to prime certain caches to
+        prevent long request times for certain requests.
+
+        firstSearcher - fired whenever a new searcher is being
+        prepared but there is no current registered searcher to handle
+        requests or to gain autowarming data from.
+
+        
+     -->
+    <!-- QuerySenderListener takes an array of NamedList and executes a
+         local query request for each NamedList in sequence. 
+      -->
+    <listener event="newSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <!--
+           <lst><str name="q">solr</str><str name="sort">price asc</str></lst>
+           <lst><str name="q">rocks</str><str name="sort">weight asc</str></lst>
+          -->
+      </arr>
+    </listener>
+    <listener event="firstSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <lst>
+          <str name="q">static firstSearcher warming in solrconfig.xml</str>
+        </lst>
+      </arr>
+    </listener>
+
+    <!-- Use Cold Searcher
+
+         If a search request comes in and there is no current
+         registered searcher, then immediately register the still
+         warming searcher and use it.  If "false" then all requests
+         will block until the first searcher is done warming.
+      -->
+    <useColdSearcher>false</useColdSearcher>
+
+    <!-- Max Warming Searchers
+         
+         Maximum number of searchers that may be warming in the
+         background concurrently.  An error is returned if this limit
+         is exceeded.
+
+         Recommend values of 1-2 for read-only slaves, higher for
+         masters w/o cache warming.
+      -->
+    <maxWarmingSearchers>2</maxWarmingSearchers>
+
+  </query>
+
+
+  <!-- Request Dispatcher
+
+       This section contains instructions for how the SolrDispatchFilter
+       should behave when processing requests for this SolrCore.
+
+       If you wish to regain use of /select?qt=... style request handler
+       dispatching, then first add handleSelect="true" to
+       <requestDispatcher>. Then change the name of the request handler
+       named "/select" to something else without a leading "/", such as
+       simply "select" and add default="true" to it.
+   -->
+  <requestDispatcher>
+    <!-- Request Parsing
+
+         These settings indicate how Solr Requests may be parsed, and
+         what restrictions may be placed on the ContentStreams from
+         those requests
+
+         enableRemoteStreaming - enables use of the stream.file
+         and stream.url parameters for specifying remote streams.
+         SearchRequestHandler won't fetch it, but some others do.
+
+         multipartUploadLimitInKB - specifies the max size of
+         Multipart File Uploads that Solr will allow in a Request.
+         
+         *** WARNING ***
+         The settings below authorize Solr to fetch remote files, You
+         should make sure your system has some authentication before
+         using enableRemoteStreaming="true"
+
+      --> 
+    <requestParsers enableRemoteStreaming="true" 
+                    multipartUploadLimitInKB="2048000" />
+
+    <!-- HTTP Caching
+
+         Set HTTP caching related parameters (for proxy caches and clients).
+
+         The options below instruct Solr not to output any HTTP Caching
+         related headers
+      -->
+    <httpCaching never304="true" />
+    <!-- If you include a <cacheControl> directive, it will be used to
+         generate a Cache-Control header (as well as an Expires header
+         if the value contains "max-age=")
+         
+         By default, no Cache-Control header is generated.
+         
+         You can use the <cacheControl> option even if you have set
+         never304="true"
+      -->
+    <!--
+       <httpCaching never304="true" >
+         <cacheControl>max-age=30, public</cacheControl> 
+       </httpCaching>
+      -->
+    <!-- To enable Solr to respond with automatically generated HTTP
+         Caching headers, and to response to Cache Validation requests
+         correctly, set the value of never304="false"
+         
+         This will cause Solr to generate Last-Modified and ETag
+         headers based on the properties of the Index.
+
+         The following options can also be specified to affect the
+         values of these headers...
+
+         lastModFrom - the default value is "openTime" which means the
+         Last-Modified value (and validation against If-Modified-Since
+         requests) will all be relative to when the current Searcher
+         was opened.  You can change it to lastModFrom="dirLastMod" if
+         you want the value to exactly correspond to when the physical
+         index was last modified.
+
+         etagSeed="..." is an option you can change to force the ETag
+         header (and validation against If-None-Match requests) to be
+         different even if the index has not changed (ie: when making
+         significant changes to your config file)
+
+         (lastModifiedFrom and etagSeed are both ignored if you use
+         the never304="true" option)
+      -->
+    <!--
+       <httpCaching lastModifiedFrom="openTime"
+                    etagSeed="Solr">
+         <cacheControl>max-age=30, public</cacheControl> 
+       </httpCaching>
+      -->
+  </requestDispatcher>
+
+  <!-- Request Handlers 
+
+       http://wiki.apache.org/solr/SolrRequestHandler
+
+       Incoming queries will be dispatched to the correct handler
+       based on the matching request path piece.
+
+       If a Request Handler is declared with startup="lazy", then it will
+       not be initialized until the first request that uses it.
+
+    -->
+  <!-- SearchHandler
+
+       http://wiki.apache.org/solr/SearchHandler
+
+       For processing Search Queries, the primary Request Handler
+       provided with Solr is "SearchHandler" It delegates to a sequent
+       of SearchComponents (see below) and supports distributed
+       queries across multiple shards
+    -->
+  <requestHandler name="/select" class="solr.SearchHandler">
+    <!-- default values for query parameters can be specified, these
+         will be overridden by parameters in the request
+      -->
+     <lst name="defaults">
+       <str name="echoParams">explicit</str>
+       <int name="rows">10</int>
+       <str name="df">text</str>
+     </lst>
+    <!-- In addition to defaults, "appends" params can be specified
+         to identify values which should be appended to the list of
+         multi-val params from the query (or the existing "defaults").
+      -->
+    <!-- In this example, the param "fq=instock:true" would be appended to
+         any query time fq params the user may specify, as a mechanism for
+         partitioning the index, independent of any user selected filtering
+         that may also be desired (perhaps as a result of faceted searching).
+
+         NOTE: there is *absolutely* nothing a client can do to prevent these
+         "appends" values from being used, so don't use this mechanism
+         unless you are sure you always want it.
+      -->
+    <!--
+       <lst name="appends">
+         <str name="fq">inStock:true</str>
+       </lst>
+      -->
+    <!-- "invariants" are a way of letting the Solr maintainer lock down
+         the options available to Solr clients.  Any params values
+         specified here are used regardless of what values may be specified
+         in either the query, the "defaults", or the "appends" params.
+
+         In this example, the facet.field and facet.query params would
+         be fixed, limiting the facets clients can use.  Faceting is
+         not turned on by default - but if the client does specify
+         facet=true in the request, these are the only facets they
+         will be able to see counts for; regardless of what other
+         facet.field or facet.query params they may specify.
+
+         NOTE: there is *absolutely* nothing a client can do to prevent these
+         "invariants" values from being used, so don't use this mechanism
+         unless you are sure you always want it.
+      -->
+    <!--
+       <lst name="invariants">
+         <str name="facet.field">cat</str>
+         <str name="facet.field">manu_exact</str>
+         <str name="facet.query">price:[* TO 500]</str>
+         <str name="facet.query">price:[500 TO *]</str>
+       </lst>
+      -->
+    <!-- If the default list of SearchComponents is not desired, that
+         list can either be overridden completely, or components can be
+         prepended or appended to the default list.  (see below)
+      -->
+    <!--
+       <arr name="components">
+         <str>nameOfCustomComponent1</str>
+         <str>nameOfCustomComponent2</str>
+       </arr>
+      -->
+  </requestHandler>
+
+  <!-- A Robust Example
+
+       This example SearchHandler declaration shows off usage of the
+       SearchHandler with many defaults declared
+
+       Note that multiple instances of the same Request Handler
+       (SearchHandler) can be registered multiple times with different
+       names (and different init parameters)
+    -->
+  <requestHandler name="/browse" class="solr.SearchHandler">
+     <lst name="defaults">
+       <str name="echoParams">explicit</str>
+
+       <!-- VelocityResponseWriter settings -->
+       <str name="wt">velocity</str>
+
+       <str name="v.template">browse</str>
+       <str name="v.layout">layout</str>
+       <str name="title">Solritas</str>
+
+       <str name="df">text</str>
+       <str name="defType">edismax</str>
+       <str name="q.alt">*:*</str>
+       <str name="rows">10</str>
+       <str name="fl">*,score</str>
+       <str name="mlt.qf">
+         text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+       <str name="mlt.fl">text,features,name,sku,id,manu,cat</str>
+       <int name="mlt.count">3</int>
+
+       <str name="qf">
+          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+
+       <str name="facet">on</str>
+       <str name="facet.field">cat</str>
+       <str name="facet.field">manu_exact</str>
+       <str name="facet.query">ipod</str>
+       <str name="facet.query">GB</str>
+       <str name="facet.mincount">1</str>
+       <str name="facet.pivot">cat,inStock</str>
+       <str name="facet.range.other">after</str>
+       <str name="facet.range">price</str>
+       <int name="f.price.facet.range.start">0</int>
+       <int name="f.price.facet.range.end">600</int>
+       <int name="f.price.facet.range.gap">50</int>
+       <str name="facet.range">popularity</str>
+       <int name="f.popularity.facet.range.start">0</int>
+       <int name="f.popularity.facet.range.end">10</int>
+       <int name="f.popularity.facet.range.gap">3</int>
+       <str name="facet.range">manufacturedate_dt</str>
+       <str name="f.manufacturedate_dt.facet.range.start">NOW/YEAR-10YEARS</str>
+       <str name="f.manufacturedate_dt.facet.range.end">NOW</str>
+       <str name="f.manufacturedate_dt.facet.range.gap">+1YEAR</str>
+       <str name="f.manufacturedate_dt.facet.range.other">before</str>
+       <str name="f.manufacturedate_dt.facet.range.other">after</str>
+
+
+       <!-- Highlighting defaults -->
+       <str name="hl">on</str>
+       <str name="hl.fl">text features name</str>
+       <str name="f.name.hl.fragsize">0</str>
+       <str name="f.name.hl.alternateField">name</str>
+     </lst>
+     <arr name="last-components">
+       <str>spellcheck</str>
+     </arr>
+     <!--
+     <str name="url-scheme">httpx</str>
+     -->
+  </requestHandler>
+
+  <!-- XML Update Request Handler.  
+       
+       http://wiki.apache.org/solr/UpdateXmlMessages
+
+       The canonical Request Handler for Modifying the Index through
+       commands specified using XML.
+
+       Note: Since solr1.1 requestHandlers requires a valid content
+       type header if posted in the body. For example, curl now
+       requires: -H 'Content-type:text/xml; charset=utf-8'
+    -->
+  <requestHandler name="/update" 
+                  class="solr.XmlUpdateRequestHandler">
+    <!-- See below for information on defining 
+         updateRequestProcessorChains that can be used by name 
+         on each Update Request
+      -->
+    <!--
+       <lst name="defaults">
+         <str name="update.chain">dedupe</str>
+       </lst>
+       -->
+    </requestHandler>
+  <!-- Binary Update Request Handler
+       http://wiki.apache.org/solr/javabin
+    -->
+  <requestHandler name="/update/javabin" 
+                  class="solr.BinaryUpdateRequestHandler" />
+
+  <!-- CSV Update Request Handler
+       http://wiki.apache.org/solr/UpdateCSV
+    -->
+  <requestHandler name="/update/csv" 
+                  class="solr.CSVRequestHandler" 
+                  startup="lazy" />
+
+  <!-- JSON Update Request Handler
+       http://wiki.apache.org/solr/UpdateJSON
+    -->
+  <requestHandler name="/update/json" 
+                  class="solr.JsonUpdateRequestHandler" 
+                  startup="lazy" />
+
+  <!-- Solr Cell Update Request Handler
+
+       http://wiki.apache.org/solr/ExtractingRequestHandler 
+
+    -->
+  <requestHandler name="/update/extract" 
+                  startup="lazy"
+                  class="solr.extraction.ExtractingRequestHandler" >
+    <lst name="defaults">
+      <!-- All the main content goes into "text"... if you need to return
+           the extracted text or do highlighting, use a stored field. -->
+      <str name="fmap.content">text</str>
+      <str name="lowernames">true</str>
+      <str name="uprefix">ignored_</str>
+
+      <!-- capture link hrefs but ignore div attributes -->
+      <str name="captureAttr">true</str>
+      <str name="fmap.a">links</str>
+      <str name="fmap.div">ignored_</str>
+    </lst>
+  </requestHandler>
+
+  <!-- XSLT Update Request Handler
+       Transforms incoming XML with stylesheet identified by tr=
+  -->
+  <requestHandler name="/update/xslt"
+                   startup="lazy"
+                   class="solr.XsltUpdateRequestHandler"/>
+
+  <!-- Field Analysis Request Handler
+
+       RequestHandler that provides much the same functionality as
+       analysis.jsp. Provides the ability to specify multiple field
+       types and field names in the same request and outputs
+       index-time and query-time analysis for each of them.
+
+       Request parameters are:
+       analysis.fieldname - field name whose analyzers are to be used
+
+       analysis.fieldtype - field type whose analyzers are to be used
+       analysis.fieldvalue - text for index-time analysis
+       q (or analysis.q) - text for query time analysis
+       analysis.showmatch (true|false) - When set to true and when
+           query analysis is performed, the produced tokens of the
+           field value analysis will be marked as "matched" for every
+           token that is produces by the query analysis
+   -->
+  <requestHandler name="/analysis/field" 
+                  startup="lazy"
+                  class="solr.FieldAnalysisRequestHandler" />
+
+
+  <!-- Document Analysis Handler
+
+       http://wiki.apache.org/solr/AnalysisRequestHandler
+
+       An analysis handler that provides a breakdown of the analysis
+       process of provided docuemnts. This handler expects a (single)
+       content stream with the following format:
+
+       <docs>
+         <doc>
+           <field name="id">1</field>
+           <field name="name">The Name</field>
+           <field name="text">The Text Value</field>
+         </doc>
+         <doc>...</doc>
+         <doc>...</doc>
+         ...
+       </docs>
+
+    Note: Each document must contain a field which serves as the
+    unique key. This key is used in the returned response to associate
+    an analysis breakdown to the analyzed document.
+
+    Like the FieldAnalysisRequestHandler, this handler also supports
+    query analysis by sending either an "analysis.query" or "q"
+    request parameter that holds the query text to be analyzed. It
+    also supports the "analysis.showmatch" parameter which when set to
+    true, all field tokens that match the query tokens will be marked
+    as a "match". 
+  -->
+  <requestHandler name="/analysis/document" 
+                  class="solr.DocumentAnalysisRequestHandler" 
+                  startup="lazy" />
+
+  <!-- Admin Handlers
+
+       Admin Handlers - This will register all the standard admin
+       RequestHandlers.  
+    -->
+  <requestHandler name="/admin/" 
+                  class="solr.admin.AdminHandlers" />
+  <!-- This single handler is equivalent to the following... -->
+  <!--
+     <requestHandler name="/admin/luke"       class="solr.admin.LukeRequestHandler" />
+     <requestHandler name="/admin/system"     class="solr.admin.SystemInfoHandler" />
+     <requestHandler name="/admin/plugins"    class="solr.admin.PluginInfoHandler" />
+     <requestHandler name="/admin/threads"    class="solr.admin.ThreadDumpHandler" />
+     <requestHandler name="/admin/properties" class="solr.admin.PropertiesRequestHandler" />
+     <requestHandler name="/admin/file"       class="solr.admin.ShowFileRequestHandler" >
+    -->
+  <!-- If you wish to hide files under ${solr.home}/conf, explicitly
+       register the ShowFileRequestHandler using: 
+    -->
+  <!--
+     <requestHandler name="/admin/file" 
+                     class="solr.admin.ShowFileRequestHandler" >
+       <lst name="invariants">
+         <str name="hidden">synonyms.txt</str> 
+         <str name="hidden">anotherfile.txt</str> 
+       </lst>
+     </requestHandler>
+    -->
+
+  <!-- ping/healthcheck -->
+  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
+    <lst name="invariants">
+      <str name="q">solrpingquery</str>
+    </lst>
+    <lst name="defaults">
+      <str name="echoParams">all</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Echo the request contents back to the client -->
+  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
+    <lst name="defaults">
+     <str name="echoParams">explicit</str> 
+     <str name="echoHandler">true</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Solr Replication
+
+       The SolrReplicationHandler supports replicating indexes from a
+       "master" used for indexing and "slaves" used for queries.
+
+       http://wiki.apache.org/solr/SolrReplication 
+
+       In the example below, remove the <lst name="master"> section if
+       this is just a slave and remove  the <lst name="slave"> section
+       if this is just a master.
+    -->
+  <!--
+     <requestHandler name="/replication" class="solr.ReplicationHandler" >
+       <lst name="master">
+         <str name="replicateAfter">commit</str>
+         <str name="replicateAfter">startup</str>
+         <str name="confFiles">schema.xml,stopwords.txt</str>
+       </lst>
+       <lst name="slave">
+         <str name="masterUrl">http://localhost:8983/solr/replication</str>
+         <str name="pollInterval">00:00:60</str>
+       </lst>
+     </requestHandler>
+    -->
+
+  <!-- Search Components
+
+       Search components are registered to SolrCore and used by 
+       instances of SearchHandler (which can access them by name)
+       
+       By default, the following components are available:
+       
+       <searchComponent name="query"     class="solr.QueryComponent" />
+       <searchComponent name="facet"     class="solr.FacetComponent" />
+       <searchComponent name="mlt"       class="solr.MoreLikeThisComponent" />
+       <searchComponent name="highlight" class="solr.HighlightComponent" />
+       <searchComponent name="stats"     class="solr.StatsComponent" />
+       <searchComponent name="debug"     class="solr.DebugComponent" />
+   
+       Default configuration in a requestHandler would look like:
+
+       <arr name="components">
+         <str>query</str>
+         <str>facet</str>
+         <str>mlt</str>
+         <str>highlight</str>
+         <str>stats</str>
+         <str>debug</str>
+       </arr>
+
+       If you register a searchComponent to one of the standard names, 
+       that will be used instead of the default.
+
+       To insert components before or after the 'standard' components, use:
+    
+       <arr name="first-components">
+         <str>myFirstComponentName</str>
+       </arr>
+    
+       <arr name="last-components">
+         <str>myLastComponentName</str>
+       </arr>
+
+       NOTE: The component registered with the name "debug" will
+       always be executed after the "last-components" 
+       
+     -->
+
+   <!-- Spell Check
+
+        The spell check component can return a list of alternative spelling
+        suggestions.  
+
+        http://wiki.apache.org/solr/SpellCheckComponent
+     -->
+  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
+
+    <str name="queryAnalyzerFieldType">textSpell</str>
+
+    <!-- Multiple "Spell Checkers" can be declared and used by this
+         component
+      -->
+
+    <!-- a spellchecker built from a field of the main index, and
+         written to disk
+      -->
+    <lst name="spellchecker">
+      <str name="name">default</str>
+      <str name="field">name</str>
+      <str name="spellcheckIndexDir">spellchecker</str>
+      <!-- uncomment this to require terms to occur in 1% of the documents 
+           in order to be included in the dictionary
+        -->
+      <!--
+      	<float name="thresholdTokenFrequency">.01</float>
+      -->
+    </lst>
+
+    <!-- a spellchecker that uses a different distance measure -->
+    <!--
+       <lst name="spellchecker">
+         <str name="name">jarowinkler</str>
+         <str name="field">spell</str>
+         <str name="distanceMeasure">
+           org.apache.lucene.search.spell.JaroWinklerDistance
+         </str>
+         <str name="spellcheckIndexDir">spellcheckerJaro</str>
+       </lst>
+     -->
+
+    <!-- a spellchecker that use an alternate comparator 
+
+         comparatorClass be one of:
+          1. score (default)
+          2. freq (Frequency first, then score)
+          3. A fully qualified class name
+      -->
+    <!--
+       <lst name="spellchecker">
+         <str name="name">freq</str>
+         <str name="field">lowerfilt</str>
+         <str name="spellcheckIndexDir">spellcheckerFreq</str>
+         <str name="comparatorClass">freq</str>
+         <str name="buildOnCommit">true</str>
+      -->
+
+    <!-- A spellchecker that reads the list of words from a file -->
+    <!--
+       <lst name="spellchecker">
+         <str name="classname">solr.FileBasedSpellChecker</str>
+         <str name="name">file</str>
+         <str name="sourceLocation">spellings.txt</str>
+         <str name="characterEncoding">UTF-8</str>
+         <str name="spellcheckIndexDir">spellcheckerFile</str>
+       </lst>
+      -->
+  </searchComponent>
+
+  <!-- A request handler for demonstrating the spellcheck component.  
+
+       NOTE: This is purely as an example.  The whole purpose of the
+       SpellCheckComponent is to hook it into the request handler that
+       handles your normal user queries so that a separate request is
+       not needed to get suggestions.
+
+       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS
+       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!
+       
+       See http://wiki.apache.org/solr/SpellCheckComponent for details
+       on the request parameters.
+    -->
+  <requestHandler name="/spell" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <str name="df">text</str>
+      <str name="spellcheck.onlyMorePopular">false</str>
+      <str name="spellcheck.extendedResults">false</str>
+      <str name="spellcheck.count">1</str>
+    </lst>
+    <arr name="last-components">
+      <str>spellcheck</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Term Vector Component
+
+       http://wiki.apache.org/solr/TermVectorComponent
+    -->
+  <searchComponent name="tvComponent" class="solr.TermVectorComponent"/>
+
+  <!-- A request handler for demonstrating the term vector component
+
+       This is purely as an example.
+
+       In reality you will likely want to add the component to your 
+       already specified request handlers. 
+    -->
+  <requestHandler name="/tvrh" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <str name="df">text</str>
+      <bool name="tv">true</bool>
+    </lst>
+    <arr name="last-components">
+      <str>tvComponent</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Clustering Component
+
+       http://wiki.apache.org/solr/ClusteringComponent
+
+       This relies on third party jars which are notincluded in the
+       release.  To use this component (and the "/clustering" handler)
+       Those jars will need to be downloaded, and you'll need to set
+       the solr.cluster.enabled system property when running solr...
+
+          java -Dsolr.clustering.enabled=true -jar start.jar
+    -->
+  <searchComponent name="clustering" 
+                   enable="${solr.clustering.enabled:false}"
+                   class="solr.clustering.ClusteringComponent" >
+    <!-- Declare an engine -->
+    <lst name="engine">
+      <!-- The name, only one can be named "default" -->
+      <str name="name">default</str>
+
+      <!-- Class name of Carrot2 clustering algorithm. 
+           
+           Currently available algorithms are:
+           
+           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm
+           * org.carrot2.clustering.stc.STCClusteringAlgorithm
+           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm
+           
+           See http://project.carrot2.org/algorithms.html for the
+           algorithm's characteristics.
+        -->
+      <str name="carrot.algorithm">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>
+
+      <!-- Overriding values for Carrot2 default algorithm attributes.
+
+           For a description of all available attributes, see:
+           http://download.carrot2.org/stable/manual/#chapter.components.
+           Use attribute key as name attribute of str elements
+           below. These can be further overridden for individual
+           requests by specifying attribute key as request parameter
+           name and attribute value as parameter value.
+        -->
+      <str name="LingoClusteringAlgorithm.desiredClusterCountBase">20</str>
+      
+      <!-- Location of Carrot2 lexical resources.
+
+           A directory from which to load Carrot2-specific stop words
+           and stop labels. Absolute or relative to Solr config directory.
+           If a specific resource (e.g. stopwords.en) is present in the
+           specified dir, it will completely override the corresponding
+           default one that ships with Carrot2.
+
+           For an overview of Carrot2 lexical resources, see:
+           http://download.carrot2.org/head/manual/#chapter.lexical-resources
+        -->
+      <str name="carrot.lexicalResourcesDir">clustering/carrot2</str>
+
+      <!-- The language to assume for the documents.
+           
+           For a list of allowed values, see:
+           http://download.carrot2.org/stable/manual/#section.attribute.lingo.MultilingualClustering.defaultLanguage
+       -->
+      <str name="MultilingualClustering.defaultLanguage">ENGLISH</str>
+    </lst>
+    <lst name="engine">
+      <str name="name">stc</str>
+      <str name="carrot.algorithm">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>
+    </lst>
+  </searchComponent>
+
+  <!-- A request handler for demonstrating the clustering component
+
+       This is purely as an example.
+
+       In reality you will likely want to add the component to your 
+       already specified request handlers. 
+    -->
+  <requestHandler name="/clustering"
+                  startup="lazy"
+                  enable="${solr.clustering.enabled:false}"
+                  class="solr.SearchHandler">
+    <lst name="defaults">
+      <bool name="clustering">true</bool>
+      <str name="clustering.engine">default</str>
+      <bool name="clustering.results">true</bool>
+      <!-- The title field -->
+      <str name="carrot.title">name</str>
+      <str name="carrot.url">id</str>
+      <!-- The field to cluster on -->
+       <str name="carrot.snippet">features</str>
+       <!-- produce summaries -->
+       <bool name="carrot.produceSummary">true</bool>
+       <!-- the maximum number of labels per cluster -->
+       <!--<int name="carrot.numDescriptions">5</int>-->
+       <!-- produce sub clusters -->
+       <bool name="carrot.outputSubClusters">false</bool>
+       
+       <str name="df">text</str>
+       <str name="defType">edismax</str>
+       <str name="qf">
+          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
+       </str>
+       <str name="q.alt">*:*</str>
+       <str name="rows">10</str>
+       <str name="fl">*,score</str>
+    </lst>     
+    <arr name="last-components">
+      <str>clustering</str>
+    </arr>
+  </requestHandler>
+  
+  <!-- Terms Component
+
+       http://wiki.apache.org/solr/TermsComponent
+
+       A component to return terms and document frequency of those
+       terms
+    -->
+  <searchComponent name="terms" class="solr.TermsComponent"/>
+
+  <!-- A request handler for demonstrating the terms component -->
+  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
+     <lst name="defaults">
+      <bool name="terms">true</bool>
+    </lst>     
+    <arr name="components">
+      <str>terms</str>
+    </arr>
+  </requestHandler>
+
+
+  <!-- Query Elevation Component
+
+       http://wiki.apache.org/solr/QueryElevationComponent
+
+       a search component that enables you to configure the top
+       results for a given query regardless of the normal lucene
+       scoring.
+    -->
+  <searchComponent name="elevator" class="solr.QueryElevationComponent" >
+    <!-- pick a fieldType to analyze queries -->
+    <str name="queryFieldType">string</str>
+    <str name="config-file">elevate.xml</str>
+  </searchComponent>
+
+  <!-- A request handler for demonstrating the elevator component -->
+  <requestHandler name="/elevate" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <str name="echoParams">explicit</str>
+      <str name="df">text</str>
+    </lst>
+    <arr name="last-components">
+      <str>elevator</str>
+    </arr>
+  </requestHandler>
+
+  <!-- Highlighting Component
+
+       http://wiki.apache.org/solr/HighlightingParameters
+    -->
+  <searchComponent class="solr.HighlightComponent" name="highlight">
+    <highlighting>
+      <!-- Configure the standard fragmenter -->
+      <!-- This could most likely be commented out in the "default" case -->
+      <fragmenter name="gap" 
+                  default="true"
+                  class="solr.highlight.GapFragmenter">
+        <lst name="defaults">
+          <int name="hl.fragsize">100</int>
+        </lst>
+      </fragmenter>
+
+      <!-- A regular-expression-based fragmenter 
+           (for sentence extraction) 
+        -->
+      <fragmenter name="regex" 
+                  class="solr.highlight.RegexFragmenter">
+        <lst name="defaults">
+          <!-- slightly smaller fragsizes work better because of slop -->
+          <int name="hl.fragsize">70</int>
+          <!-- allow 50% slop on fragment sizes -->
+          <float name="hl.regex.slop">0.5</float>
+          <!-- a basic sentence pattern -->
+          <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
+        </lst>
+      </fragmenter>
+
+      <!-- Configure the standard formatter -->
+      <formatter name="html" 
+                 default="true"
+                 class="solr.highlight.HtmlFormatter">
+        <lst name="defaults">
+          <str name="hl.simple.pre"><![CDATA[<em>]]></str>
+          <str name="hl.simple.post"><![CDATA[</em>]]></str>
+        </lst>
+      </formatter>
+
+      <!-- Configure the standard encoder -->
+      <encoder name="html" 
+               class="solr.highlight.HtmlEncoder" />
+
+      <!-- Configure the standard fragListBuilder -->
+      <fragListBuilder name="simple" 
+                       default="true"
+                       class="solr.highlight.SimpleFragListBuilder"/>
+
+      <!-- Configure the single fragListBuilder -->
+      <fragListBuilder name="single" 
+                       class="solr.highlight.SingleFragListBuilder"/>
+
+      <!-- default tag FragmentsBuilder -->
+      <fragmentsBuilder name="default" 
+                        default="true"
+                        class="solr.highlight.ScoreOrderFragmentsBuilder">
+        <!-- 
+        <lst name="defaults">
+          <str name="hl.multiValuedSeparatorChar">/</str>
+        </lst>
+        -->
+      </fragmentsBuilder>
+
+      <!-- multi-colored tag FragmentsBuilder -->
+      <fragmentsBuilder name="colored" 
+                        class="solr.highlight.ScoreOrderFragmentsBuilder">
+        <lst name="defaults">
+          <str name="hl.tag.pre"><![CDATA[
+               <b style="background:yellow">,<b style="background:lawgreen">,
+               <b style="background:aquamarine">,<b style="background:magenta">,
+               <b style="background:palegreen">,<b style="background:coral">,
+               <b style="background:wheat">,<b style="background:khaki">,
+               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
+          <str name="hl.tag.post"><![CDATA[</b>]]></str>
+        </lst>
+      </fragmentsBuilder>
+      
+      <boundaryScanner name="default" 
+                       default="true"
+                       class="solr.highlight.SimpleBoundaryScanner">
+        <lst name="defaults">
+          <str name="hl.bs.maxScan">10</str>
+          <str name="hl.bs.chars">.,!? &#9;&#10;&#13;</str>
+        </lst>
+      </boundaryScanner>
+      
+      <boundaryScanner name="breakIterator" 
+                       class="solr.highlight.BreakIteratorBoundaryScanner">
+        <lst name="defaults">
+          <!-- type should be one of:
+               * CHARACTER 
+               * WORD (default)
+               * LINE
+               * SENTENCE 
+            -->
+          <str name="hl.bs.type">WORD</str>
+          <!-- language and country are used when constructing Locale 
+               object which will be used when getting instance of 
+               BreakIterator 
+            -->
+          <str name="hl.bs.language">en</str>
+          <str name="hl.bs.country">US</str>
+        </lst>
+      </boundaryScanner>
+    </highlighting>
+  </searchComponent>
+
+  <!-- Update Processors
+
+       Chains of Update Processor Factories for dealing with Update
+       Requests can be declared, and then used by name in Update
+       Request Processors
+
+       http://wiki.apache.org/solr/UpdateRequestProcessor
+
+    --> 
+  <!-- Deduplication
+
+       An example dedup update processor that creates the "id" field
+       on the fly based on the hash code of some other fields.  This
+       example has overwriteDupes set to false since we are using the
+       id field as the signatureField and Solr will maintain
+       uniqueness based on that anyway.  
+       
+    -->
+  <!--
+     <updateRequestProcessorChain name="dedupe">
+       <processor class="solr.processor.SignatureUpdateProcessorFactory">
+         <bool name="enabled">true</bool>
+         <str name="signatureField">id</str>
+         <bool name="overwriteDupes">false</bool>
+         <str name="fields">name,features,cat</str>
+         <str name="signatureClass">solr.processor.Lookup3Signature</str>
+       </processor>
+       <processor class="solr.LogUpdateProcessorFactory" />
+       <processor class="solr.RunUpdateProcessorFactory" />
+     </updateRequestProcessorChain>
+    -->
+
+    <!--
+       This example update chain identifies the language of the incoming
+       documents using the langid contrib. The detected language is
+       written to field language_s. No field name mapping is done.
+       The fields used for detection are text, title, subject and description,
+       making this example suitable for detecting languages form full-text
+       rich documents injected via ExtractingRequestHandler.
+       See more about langId at http://wiki.apache.org/solr/LanguageDetection
+    -->
+    <!--
+     <updateRequestProcessorChain name="langid">
+       <processor class="org.apache.solr.update.processor.TikaLanguageIdentifierUpdateProcessorFactory">
+         <str name="langid.fl">text,title,subject,description</str>
+         <str name="langid.langField">language_s</str>
+         <str name="langid.fallback">en</str>
+       </processor>
+       <processor class="solr.LogUpdateProcessorFactory" />
+       <processor class="solr.RunUpdateProcessorFactory" />
+     </updateRequestProcessorChain>
+    -->
+ 
+  <!-- Response Writers
+
+       http://wiki.apache.org/solr/QueryResponseWriter
+
+       Request responses will be written using the writer specified by
+       the 'wt' request parameter matching the name of a registered
+       writer.
+
+       The "default" writer is the default and will be used if 'wt' is
+       not specified in the request.
+    -->
+  <!-- The following response writers are implicitly configured unless
+       overridden...
+    -->
+  <!--
+     <queryResponseWriter name="xml" 
+                          default="true"
+                          class="solr.XMLResponseWriter" />
+     <queryResponseWriter name="json" class="solr.JSONResponseWriter"/>
+     <queryResponseWriter name="python" class="solr.PythonResponseWriter"/>
+     <queryResponseWriter name="ruby" class="solr.RubyResponseWriter"/>
+     <queryResponseWriter name="php" class="solr.PHPResponseWriter"/>
+     <queryResponseWriter name="phps" class="solr.PHPSerializedResponseWriter"/>
+     <queryResponseWriter name="csv" class="solr.CSVResponseWriter"/>
+    -->
+
+  <queryResponseWriter name="json" class="solr.JSONResponseWriter">
+     <!-- For the purposes of the tutorial, JSON responses are written as
+      plain text so that they are easy to read in *any* browser.
+      If you expect a MIME type of "application/json" just remove this override.
+     -->
+    <str name="content-type">text/plain; charset=UTF-8</str>
+  </queryResponseWriter>
+  
+  <!--
+     Custom response writers can be declared as needed...
+    -->
+    <queryResponseWriter name="velocity" class="solr.VelocityResponseWriter" startup="lazy"/>
+  
+
+  <!-- XSLT response writer transforms the XML output by any xslt file found
+       in Solr's conf/xslt directory.  Changes to xslt files are checked for
+       every xsltCacheLifetimeSeconds.  
+    -->
+  <queryResponseWriter name="xslt" class="solr.XSLTResponseWriter">
+    <int name="xsltCacheLifetimeSeconds">5</int>
+  </queryResponseWriter>
+
+  <!-- Query Parsers
+
+       http://wiki.apache.org/solr/SolrQuerySyntax
+
+       Multiple QParserPlugins can be registered by name, and then
+       used in either the "defType" param for the QueryComponent (used
+       by SearchHandler) or in LocalParams
+    -->
+  <!-- example of registering a query parser -->
+  <!--
+     <queryParser name="myparser" class="com.mycompany.MyQParserPlugin"/>
+    -->
+
+  <!-- Function Parsers
+
+       http://wiki.apache.org/solr/FunctionQuery
+
+       Multiple ValueSourceParsers can be registered by name, and then
+       used as function names when using the "func" QParser.
+    -->
+  <!-- example of registering a custom function parser  -->
+  <!--
+     <valueSourceParser name="myfunc" 
+                        class="com.mycompany.MyValueSourceParser" />
+    -->
+
+  <!-- Legacy config for the admin interface -->
+  <admin>
+    <defaultQuery>*:*</defaultQuery>
+
+    <!-- configure a healthcheck file for servers behind a
+         loadbalancer 
+      -->
+    <!--
+       <healthcheck type="file">server-enabled</healthcheck>
+      -->
+  </admin>
+
+</config>
diff --git a/test/_solr-tests.py b/test/_solr-tests.py
index 5234201..a1469e0 100644
--- a/test/_solr-tests.py
+++ b/test/_solr-tests.py
@@ -2,7 +2,7 @@
 from unittest import main, TestCase
 from StringIO import StringIO
 from os import mkdir, listdir, system
-from os.path import join, dirname, abspath, basename
+from os.path import join, dirname, abspath, basename, isdir
 from shutil import rmtree
 from lxml.etree import parse
 import sys
@@ -131,5 +131,13 @@ class SolrRunTest(TestCase):
         finally:
             start_solr._execvp = _original_execvp
 
+    def testStartSolrReally(self):
+        tempdir = "/tmp/testSetupSolrConfig"
+        isdir(tempdir) and rmtree(tempdir)
+        mkdir(tempdir)
+        solrDataDir = join(tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8000, cores=["test"])
+        start_solr.startSolr(stateDir=solrDataDir, port=8000, javaMX="1024M")
+
 if __name__ == '__main__':
     main()
diff --git a/usr-share/core-data/conf/solrconfig.xml b/usr-share/core-data/conf/solrconfig.xml
index 3c5d73a..0a36218 100644
--- a/usr-share/core-data/conf/solrconfig.xml
+++ b/usr-share/core-data/conf/solrconfig.xml
@@ -21,1276 +21,66 @@
      this file, see http://wiki.apache.org/solr/SolrConfigXml. 
 -->
 <config>
-  <!-- In all configuration below, a prefix of "solr." for class names
-       is an alias that causes solr to search appropriate packages,
-       including org.apache.solr.(search|update|request|core|analysis)
-
-       You may also specify a fully qualified Java classname if you
-       have your own custom plugins.
-    -->
-
-  <!-- Set this to 'false' if you want solr to continue working after
-       it has encountered an severe configuration error.  In a
-       production environment, you may want solr to keep working even
-       if one handler is mis-configured.
-
-       You may also set this to false using by setting the system
-       property:
-
-         -Dsolr.abortOnConfigurationError=false
-    -->
   <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
-  
-  <!-- Controls what version of Lucene various components of Solr
-       adhere to.  Generally, you want to use the latest version to
-       get all bug fixes and improvements. It is highly recommended
-       that you fully re-index after changing this setting as it can
-       affect both how text is indexed and queried.
-    -->
   <luceneMatchVersion>LUCENE_36</luceneMatchVersion>
 
-  <!-- lib directives can be used to instruct Solr to load an Jars
-       identified and use them to resolve any "plugins" specified in
-       your solrconfig.xml or schema.xml (ie: Analyzers, Request
-       Handlers, etc...).
-
-       All directories and paths are resolved relative to the
-       instanceDir.
-
-       If a "./lib" directory exists in your instanceDir, all files
-       found in it are included as if you had used the following
-       syntax...
-       
-              <lib dir="./lib" />
-    -->
-  <!-- A dir option by itself adds any files found in the directory to
-       the classpath, this is useful for including all jars in a
-       directory.
-    -->
-  <lib dir="../../contrib/extraction/lib" />
-  <!-- When a regex is specified in addition to a directory, only the
-       files in that directory which completely match the regex
-       (anchored on both ends) will be included.
-    -->
-  <lib dir="../../dist/" regex="apache-solr-cell-\d.*\.jar" />
-  <lib dir="../../dist/" regex="apache-solr-clustering-\d.*\.jar" />
-  <lib dir="../../dist/" regex="apache-solr-dataimporthandler-\d.*\.jar" />
-
-  <!-- If a dir option (with or without a regex) is used and nothing
-       is found that matches, it will be ignored
-    -->
-  <lib dir="../../contrib/clustering/lib/" />
-  <lib dir="/total/crap/dir/ignored" /> 
-  <!-- an exact path can be used to specify a specific file.  This
-       will cause a serious error to be logged if it can't be loaded.
-    -->
-  <!--
-  <lib path="../a-jar-that-does-not-exist.jar" /> 
-  -->
-  
-  <!-- Data Directory
-
-       Used to specify an alternate directory to hold all index data
-       other than the default ./data under the Solr home.  If
-       replication is in use, this should match the replication
-       configuration.
-  <dataDir>${solr.data.dir:}</dataDir>
-    -->
-
-
-  <!-- The DirectoryFactory to use for indexes.
-       
-       solr.StandardDirectoryFactory, the default, is filesystem
-       based.  solr.RAMDirectoryFactory is memory based, not
-       persistent, and doesn't work with replication.
-    -->
-  <directoryFactory name="DirectoryFactory" 
-                    class="${solr.directoryFactory:solr.StandardDirectoryFactory}"/>
-
-
-  <!-- Index Defaults
-
-       Values here affect all index writers and act as a default
-       unless overridden.
-
-       WARNING: See also the <mainIndex> section below for parameters
-       that overfor Solr's main Lucene index.
-    -->
-  <indexDefaults>
-
-    <useCompoundFile>true</useCompoundFile>
-
-    <mergeFactor>10</mergeFactor>
-    <!-- Sets the amount of RAM that may be used by Lucene indexing
-         for buffering added documents and deletions before they are
-         flushed to the Directory.  -->
-    <ramBufferSizeMB>32</ramBufferSizeMB>
-    <!-- If both ramBufferSizeMB and maxBufferedDocs is set, then
-         Lucene will flush based on whichever limit is hit first.  
-      -->
-    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->
-
-    <maxFieldLength>10000</maxFieldLength>
-    <writeLockTimeout>1000</writeLockTimeout>
-    <commitLockTimeout>10000</commitLockTimeout>
-
-    <!-- Expert: Merge Policy 
-
-         The Merge Policy in Lucene controls how merging is handled by
-         Lucene.  The default in 2.3 is the LogByteSizeMergePolicy,
-         previous versions used LogDocMergePolicy.
-         
-         LogByteSizeMergePolicy chooses segments to merge based on
-         their size.  The Lucene 2.2 default, LogDocMergePolicy chose
-         when to merge based on number of documents
-         
-         Other implementations of MergePolicy must have a no-argument
-         constructor
-      -->
-    <!--
-       <mergePolicy class="org.apache.lucene.index.LogByteSizeMergePolicy"/>
-       -->
-
-    <!-- Expert: Merge Scheduler
-
-         The Merge Scheduler in Lucene controls how merges are
-         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
-         can perform merges in the background using separate threads.
-         The SerialMergeScheduler (Lucene 2.2 default) does not.
-     -->
-    <!-- 
-       <mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler"/>
-       -->
-	  
-    <!-- LockFactory 
-
-         This option specifies which Lucene LockFactory implementation
-         to use.
-      
-         single = SingleInstanceLockFactory - suggested for a
-                  read-only index or when there is no possibility of
-                  another process trying to modify the index.
-         native = NativeFSLockFactory - uses OS native file locking.
-                  Do not use when multiple solr webapps in the same
-                  JVM are attempting to share a single index.
-         simple = SimpleFSLockFactory  - uses a plain file for locking
-
-         (For backwards compatibility with Solr 1.2, 'simple' is the
-         default if not specified.)
-
-         More details on the nuances of each LockFactory...
-         http://wiki.apache.org/lucene-java/AvailableLockFactories
-    -->
-    <lockType>native</lockType>
-
-    <!-- Expert: Controls how often Lucene loads terms into memory
-         Default is 128 and is likely good for most everyone.
-      -->
-    <!-- <termIndexInterval>256</termIndexInterval> -->
-  </indexDefaults>
-
-  <!-- Main Index
-
-       Values here override the values in the <indexDefaults> section
-       for the main on disk index.
-    -->
-  <mainIndex>
-
-    <useCompoundFile>true</useCompoundFile>
-    <ramBufferSizeMB>32</ramBufferSizeMB>
-    <mergeFactor>10</mergeFactor>
-
-    <!-- Unlock On Startup
-
-         If true, unlock any held write or commit locks on startup.
-         This defeats the locking mechanism that allows multiple
-         processes to safely access a lucene index, and should be used
-         with care.
-
-         This is not needed if lock type is 'none' or 'single'
-     -->
-    <unlockOnStartup>false</unlockOnStartup>
-    
-    <!-- If true, IndexReaders will be reopened (often more efficient)
-         instead of closed and then opened.
-      -->
-    <reopenReaders>true</reopenReaders>
-
-    <!-- Commit Deletion Policy
-
-         Custom deletion policies can specified here. The class must
-         implement org.apache.lucene.index.IndexDeletionPolicy.
-
-         http://lucene.apache.org/java/2_9_1/api/all/org/apache/lucene/index/IndexDeletionPolicy.html
-
-         The standard Solr IndexDeletionPolicy implementation supports
-         deleting index commit points on number of commits, age of
-         commit point and optimized status.
-         
-         The latest commit point should always be preserved regardless
-         of the criteria.
-    -->
-    <deletionPolicy class="solr.SolrDeletionPolicy">
-      <!-- The number of commit points to be kept -->
-      <str name="maxCommitsToKeep">1</str>
-      <!-- The number of optimized commit points to be kept -->
-      <str name="maxOptimizedCommitsToKeep">0</str>
-      <!--
-          Delete all commit points once they have reached the given age.
-          Supports DateMathParser syntax e.g.
-        -->
-      <!--
-         <str name="maxCommitAge">30MINUTES</str>
-         <str name="maxCommitAge">1DAY</str>
-      -->
-    </deletionPolicy>
-
-    <!-- Lucene Infostream
-       
-         To aid in advanced debugging, Lucene provides an "InfoStream"
-         of detailed information when indexing.
-
-         Setting The value to true will instruct the underlying Lucene
-         IndexWriter to write it's debugging info the specified file
-      -->
-     <infoStream file="INFOSTREAM.txt">false</infoStream> 
-
-  </mainIndex>
-
-  <!-- JMX
-       
-       This example enables JMX if and only if an existing MBeanServer
-       is found, use this if you want to configure JMX through JVM
-       parameters. Remove this to disable exposing Solr configuration
-       and statistics to JMX.
-
-       For more details see http://wiki.apache.org/solr/SolrJmx
-    -->
-  <jmx />
-  <!-- If you want to connect to a particular server, specify the
-       agentId 
-    -->
-  <!-- <jmx agentId="myAgent" /> -->
-  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->
-  <!-- <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr"/>
-    -->
-
-  <!-- The default high-performance update handler -->
-  <updateHandler class="solr.DirectUpdateHandler2">
-
-    <!-- AutoCommit
-
-         Perform a <commit/> automatically under certain conditions.
-         Instead of enabling autoCommit, consider using "commitWithin"
-         when adding documents. 
-
-         http://wiki.apache.org/solr/UpdateXmlMessages
-
-         maxDocs - Maximum number of documents to add since the last
-                   commit before automaticly triggering a new commit.
-
-         maxTime - Maximum amount of time that is allowed to pass
-                   since a document was added before automaticly
-                   triggering a new commit. 
-      -->
-    <!--
-       <autoCommit> 
-         <maxDocs>10000</maxDocs>
-         <maxTime>1000</maxTime> 
-       </autoCommit>
-      -->
-
-    <!-- Update Related Event Listeners
-         
-         Various IndexWriter realted events can trigger Listeners to
-         take actions.
-
-         postCommit - fired after every commit or optimize command
-         postOptimize - fired after every optimize command
-      -->
-    <!-- The RunExecutableListener executes an external command from a
-         hook such as postCommit or postOptimize.
-         
-         exe - the name of the executable to run
-         dir - dir to use as the current working directory. (default=".")
-         wait - the calling thread waits until the executable returns. 
-                (default="true")
-         args - the arguments to pass to the program.  (default is none)
-         env - environment variables to set.  (default is none)
-      -->
-    <!-- This example shows how RunExecutableListener could be used
-         with the script based replication...
-         http://wiki.apache.org/solr/CollectionDistribution
-      -->
-    <!--
-       <listener event="postCommit" class="solr.RunExecutableListener">
-         <str name="exe">solr/bin/snapshooter</str>
-         <str name="dir">.</str>
-         <bool name="wait">true</bool>
-         <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
-         <arr name="env"> <str>MYVAR=val1</str> </arr>
-       </listener>
-      -->
-  </updateHandler>
-  
-  <!-- IndexReaderFactory
-
-       Use the following format to specify a custom IndexReaderFactory,
-       which allows for alternate IndexReader implementations.
-
-       ** Experimental Feature **
-
-       Please note - Using a custom IndexReaderFactory may prevent
-       certain other features from working. The API to
-       IndexReaderFactory may change without warning or may even be
-       removed from future releases if the problems cannot be
-       resolved.
-
-
-       ** Features that may not work with custom IndexReaderFactory **
-
-       The ReplicationHandler assumes a disk-resident index. Using a
-       custom IndexReader implementation may cause incompatibility
-       with ReplicationHandler and may cause replication to not work
-       correctly. See SOLR-1366 for details.
-
-    -->
-  <!--
-  <indexReaderFactory name="IndexReaderFactory" class="package.class">
-    <str name="someArg">Some Value</str>
-  </indexReaderFactory >
-  -->
-  <!-- By explicitly declaring the Factory, the termIndexDivisor can
-       be specified.
-    -->
-  <!--
-     <indexReaderFactory name="IndexReaderFactory" 
-                         class="solr.StandardIndexReaderFactory">
-       <int name="setTermIndexDivisor">12</int>
-     </indexReaderFactory >
-    -->
-
-
   <query>
-    <!-- Max Boolean Clauses
-
-         Maximum number of clauses in each BooleanQuery,  an exception
-         is thrown if exceeded.
-
-         ** WARNING **
-         
-         This option actually modifies a global Lucene property that
-         will affect all SolrCores.  If multiple solrconfig.xml files
-         disagree on this property, the value at any given moment will
-         be based on the last SolrCore to be initialized.
-         
-      -->
     <maxBooleanClauses>1024</maxBooleanClauses>
 
-
-    <!-- Solr Internal Query Caches
-
-         There are two implementations of cache available for Solr,
-         LRUCache, based on a synchronized LinkedHashMap, and
-         FastLRUCache, based on a ConcurrentHashMap.  
-
-         FastLRUCache has faster gets and slower puts in single
-         threaded operation and thus is generally faster than LRUCache
-         when the hit ratio of the cache is high (> 75%), and may be
-         faster under other scenarios on multi-cpu systems.
-    -->
-
-    <!-- Filter Cache
-
-         Cache used by SolrIndexSearcher for filters (DocSets),
-         unordered sets of *all* documents that match a query.  When a
-         new searcher is opened, its caches may be prepopulated or
-         "autowarmed" using data from caches in the old searcher.
-         autowarmCount is the number of items to prepopulate.  For
-         LRUCache, the autowarmed items will be the most recently
-         accessed items.
-
-         Parameters:
-           class - the SolrCache implementation LRUCache or
-               (LRUCache or FastLRUCache)
-           size - the maximum number of entries in the cache
-           initialSize - the initial capacity (number of entries) of
-               the cache.  (see java.util.HashMap)
-           autowarmCount - the number of entries to prepopulate from
-               and old cache.  
-      -->
     <filterCache class="solr.FastLRUCache"
                  size="512"
                  initialSize="512"
                  autowarmCount="0"/>
-
-    <!-- Query Result Cache
-         
-         Caches results of searches - ordered lists of document ids
-         (DocList) based on a query, a sort, and the range of documents requested.  
-      -->
     <queryResultCache class="solr.LRUCache"
                      size="512"
                      initialSize="512"
                      autowarmCount="0"/>
-   
-    <!-- Document Cache
-
-         Caches Lucene Document objects (the stored fields for each
-         document).  Since Lucene internal document ids are transient,
-         this cache will not be autowarmed.  
-      -->
     <documentCache class="solr.LRUCache"
                    size="512"
                    initialSize="512"
                    autowarmCount="0"/>
-    
-    <!-- Field Value Cache
-         
-         Cache used to hold field values that are quickly accessible
-         by document id.  The fieldValueCache is created by default
-         even if not configured here.
-      -->
-    <!--
-       <fieldValueCache class="solr.FastLRUCache"
-                        size="512"
-                        autowarmCount="128"
-                        showItems="32" />
-      -->
 
-    <!-- Custom Cache
-
-         Example of a generic cache.  These caches may be accessed by
-         name through SolrIndexSearcher.getCache(),cacheLookup(), and
-         cacheInsert().  The purpose is to enable easy caching of
-         user/application level data.  The regenerator argument should
-         be specified as an implementation of solr.CacheRegenerator 
-         if autowarming is desired.  
-      -->
-    <!--
-       <cache name="myUserCache"
-              class="solr.LRUCache"
-              size="4096"
-              initialSize="1024"
-              autowarmCount="1024"
-              regenerator="com.mycompany.MyRegenerator"
-              />
-      -->
-
-
-    <!-- Lazy Field Loading
-
-         If true, stored fields that are not requested will be loaded
-         lazily.  This can result in a significant speed improvement
-         if the usual case is to not load all stored fields,
-         especially if the skipped fields are large compressed text
-         fields.
-    -->
     <enableLazyFieldLoading>true</enableLazyFieldLoading>
 
-   <!-- Use Filter For Sorted Query
-
-        A possible optimization that attempts to use a filter to
-        satisfy a search.  If the requested sort does not include
-        score, then the filterCache will be checked for a filter
-        matching the query. If found, the filter will be used as the
-        source of document ids, and then the sort will be applied to
-        that.
-
-        For most situations, this will not be useful unless you
-        frequently get the same search repeatedly with differnet sort
-        options, and none of them ever use "score"
-     -->
-   <!--
-      <useFilterForSortedQuery>true</useFilterForSortedQuery>
-     -->
-
-   <!-- Result Window Size
+    <queryResultWindowSize>20</queryResultWindowSize>
 
-        An optimization for use with the queryResultCache.  When a search
-        is requested, a superset of the requested number of document ids
-        are collected.  For example, if a search for a particular query
-        requests matching documents 10 through 19, and queryWindowSize is 50,
-        then documents 0 through 49 will be collected and cached.  Any further
-        requests in that range can be satisfied via the cache.  
-     -->
-   <queryResultWindowSize>20</queryResultWindowSize>
-
-   <!-- Maximum number of documents to cache for any entry in the
-        queryResultCache. 
-     -->
-   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
-
-   <!-- Query Related Event Listeners
-
-        Various IndexSearcher related events can trigger Listeners to
-        take actions.
-
-        newSearcher - fired whenever a new searcher is being prepared
-        and there is a current searcher handling requests (aka
-        registered).  It can be used to prime certain caches to
-        prevent long request times for certain requests.
-
-        firstSearcher - fired whenever a new searcher is being
-        prepared but there is no current registered searcher to handle
-        requests or to gain autowarming data from.
-
-        
-     -->
-    <!-- QuerySenderListener takes an array of NamedList and executes a
-         local query request for each NamedList in sequence. 
-      -->
-    <listener event="newSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <!--
-           <lst><str name="q">solr</str><str name="sort">price asc</str></lst>
-           <lst><str name="q">rocks</str><str name="sort">weight asc</str></lst>
-          -->
-      </arr>
-    </listener>
-    <listener event="firstSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <lst>
-          <str name="q">static firstSearcher warming in solrconfig.xml</str>
-        </lst>
-      </arr>
-    </listener>
-
-    <!-- Use Cold Searcher
-
-         If a search request comes in and there is no current
-         registered searcher, then immediately register the still
-         warming searcher and use it.  If "false" then all requests
-         will block until the first searcher is done warming.
-      -->
-    <useColdSearcher>false</useColdSearcher>
-
-    <!-- Max Warming Searchers
-         
-         Maximum number of searchers that may be warming in the
-         background concurrently.  An error is returned if this limit
-         is exceeded.
-
-         Recommend values of 1-2 for read-only slaves, higher for
-         masters w/o cache warming.
-      -->
-    <maxWarmingSearchers>2</maxWarmingSearchers>
+    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
 
   </query>
 
-
-  <!-- Request Dispatcher
-
-       This section contains instructions for how the SolrDispatchFilter
-       should behave when processing requests for this SolrCore.
-
-       handleSelect affects the behavior of requests such as /select?qt=XXX
-
-       handleSelect="true" will cause the SolrDispatchFilter to process
-       the request and will result in consistent error handling and
-       formating for all types of requests.
-
-       handleSelect="false" will cause the SolrDispatchFilter to
-       ignore "/select" requests and fallback to using the legacy
-       SolrServlet and it's Solr 1.1 style error formatting
-    -->
-  <requestDispatcher handleSelect="true" >
-    <!-- Request Parsing
-
-         These settings indicate how Solr Requests may be parsed, and
-         what restrictions may be placed on the ContentStreams from
-         those requests
-
-         enableRemoteStreaming - enables use of the stream.file
-         and stream.url paramaters for specifying remote streams.
-
-         multipartUploadLimitInKB - specifies the max size of
-         Multipart File Uploads that Solr will alow in a Request.
-         
-         *** WARNING ***
-         The settings below authorize Solr to fetch remote files, You
-         should make sure your system has some authentication before
-         using enableRemoteStreaming="true"
-
-      --> 
-    <requestParsers enableRemoteStreaming="true" 
-                    multipartUploadLimitInKB="2048000" />
-
-    <!-- HTTP Caching
-
-         Set HTTP caching related parameters (for proxy caches and clients).
-
-         The options below instruct Solr not to output any HTTP Caching
-         related headers
-      -->
+  <requestDispatcher>
     <httpCaching never304="true" />
-    <!-- If you include a <cacheControl> directive, it will be used to
-         generate a Cache-Control header (as well as an Expires header
-         if the value contains "max-age=")
-         
-         By default, no Cache-Control header is generated.
-         
-         You can use the <cacheControl> option even if you have set
-         never304="true"
-      -->
-    <!--
-       <httpCaching never304="true" >
-         <cacheControl>max-age=30, public</cacheControl> 
-       </httpCaching>
-      -->
-    <!-- To enable Solr to responde with automaticly generated HTTP
-         Caching headers, and to response to Cache Validation requests
-         correctly, set the value of never304="false"
-         
-         This will cause Solr to generate Last-Modified and ETag
-         headers based on the properties of the Index.
-
-         The following options can also be specified to affect the
-         values of these headers...
-
-         lastModFrom - the default value is "openTime" which means the
-         Last-Modified value (and validation against If-Modified-Since
-         requests) will all be relative to when the current Searcher
-         was opened.  You can change it to lastModFrom="dirLastMod" if
-         you want the value to exactly corrispond to when the physical
-         index was last modified.
-
-         etagSeed="..." is an option you can change to force the ETag
-         header (and validation against If-None-Match requests) to be
-         differnet even if the index has not changed (ie: when making
-         significant changes to your config file)
-
-         (lastModifiedFrom and etagSeed are both ignored if you use
-         the never304="true" option)
-      -->
-    <!--
-       <httpCaching lastModifiedFrom="openTime"
-                    etagSeed="Solr">
-         <cacheControl>max-age=30, public</cacheControl> 
-       </httpCaching>
-      -->
   </requestDispatcher>
 
-  <!-- Request Handlers 
-
-       http://wiki.apache.org/solr/SolrRequestHandler
-
-       incoming queries will be dispatched to the correct handler
-       based on the path or the qt (query type) param.
-
-       Names starting with a '/' are accessed with the a path equal to
-       the registered name.  Names without a leading '/' are accessed
-       with: http://host/app/[core/]select?qt=name
-
-       If a /select request is processed with out a qt param
-       specified, the requestHandler that declares default="true" will
-       be used.
-       
-       If a Request Handler is declared with startup="lazy", then it will
-       not be initialized until the first request that uses it.
-
-    -->
-  <!-- SearchHandler
-
-       http://wiki.apache.org/solr/SearchHandler
-
-       For processing Search Queries, the primary Request Handler
-       provided with Solr is "SearchHandler" It delegates to a sequent
-       of SearchComponents (see below) and supports distributed
-       queries across multiple shards
-    -->
-  <requestHandler name="search" class="solr.SearchHandler" default="true">
-    <!-- default values for query parameters can be specified, these
-         will be overridden by parameters in the request
-      -->
-     <lst name="defaults">
-       <str name="echoParams">explicit</str>
-       <int name="rows">10</int>
-     </lst>
-    <!-- In addition to defaults, "appends" params can be specified
-         to identify values which should be appended to the list of
-         multi-val params from the query (or the existing "defaults").
-      -->
-    <!-- In this example, the param "fq=instock:true" would be appended to
-         any query time fq params the user may specify, as a mechanism for
-         partitioning the index, independent of any user selected filtering
-         that may also be desired (perhaps as a result of faceted searching).
-
-         NOTE: there is *absolutely* nothing a client can do to prevent these
-         "appends" values from being used, so don't use this mechanism
-         unless you are sure you always want it.
-      -->
-    <!--
-       <lst name="appends">
-         <str name="fq">inStock:true</str>
-       </lst>
-      -->
-    <!-- "invariants" are a way of letting the Solr maintainer lock down
-         the options available to Solr clients.  Any params values
-         specified here are used regardless of what values may be specified
-         in either the query, the "defaults", or the "appends" params.
-
-         In this example, the facet.field and facet.query params would
-         be fixed, limiting the facets clients can use.  Faceting is
-         not turned on by default - but if the client does specify
-         facet=true in the request, these are the only facets they
-         will be able to see counts for; regardless of what other
-         facet.field or facet.query params they may specify.
-
-         NOTE: there is *absolutely* nothing a client can do to prevent these
-         "invariants" values from being used, so don't use this mechanism
-         unless you are sure you always want it.
-      -->
-    <!--
-       <lst name="invariants">
-         <str name="facet.field">cat</str>
-         <str name="facet.field">manu_exact</str>
-         <str name="facet.query">price:[* TO 500]</str>
-         <str name="facet.query">price:[500 TO *]</str>
-       </lst>
-      -->
-    <!-- If the default list of SearchComponents is not desired, that
-         list can either be overridden completely, or components can be
-         prepended or appended to the default list.  (see below)
-      -->
-    <!--
-       <arr name="components">
-         <str>nameOfCustomComponent1</str>
-         <str>nameOfCustomComponent2</str>
-       </arr>
-      -->
-    </requestHandler>
-
-  <!-- A Robust Example
-
-       This example SearchHandler declaration shows off usage of the
-       SearchHandler with many defaults declared
-
-       Note that multiple instances of hte same Request Handler
-       (SearchHandler) can be registered multiple times with different
-       names (and different init parameters)
-    -->
-  <requestHandler name="/browse" class="solr.SearchHandler">
-     <lst name="defaults">
-       <str name="echoParams">explicit</str>
-
-       <!-- VelocityResponseWriter settings -->
-       <str name="wt">velocity</str>
-
-       <str name="v.template">browse</str>
-       <str name="v.layout">layout</str>
-       <str name="title">Solritas</str>
+  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler"/>
 
-       <str name="defType">edismax</str>
-       <str name="q.alt">*:*</str>
-       <str name="rows">10</str>
-       <str name="fl">*,score</str>
-       <str name="mlt.qf">
-         text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-       <str name="mlt.fl">text,features,name,sku,id,manu,cat</str>
-       <int name="mlt.count">3</int>
+  <requestHandler name="/admin/" class="solr.admin.AdminHandlers" />
 
-       <str name="qf">
-          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-
-       <str name="facet">on</str>
-       <str name="facet.field">cat</str>
-       <str name="facet.field">manu_exact</str>
-       <str name="facet.query">ipod</str>
-       <str name="facet.query">GB</str>
-       <str name="facet.mincount">1</str>
-       <str name="facet.pivot">cat,inStock</str>
-       <str name="facet.range">price</str>
-       <int name="f.price.facet.range.start">0</int>
-       <int name="f.price.facet.range.end">600</int>
-       <int name="f.price.facet.range.gap">50</int>
-       <str name="f.price.facet.range.other">after</str>
-       <str name="facet.range">manufacturedate_dt</str>
-       <str name="f.manufacturedate_dt.facet.range.start">NOW/YEAR-10YEARS</str>
-       <str name="f.manufacturedate_dt.facet.range.end">NOW</str>
-       <str name="f.manufacturedate_dt.facet.range.gap">+1YEAR</str>
-       <str name="f.manufacturedate_dt.facet.range.other">before</str>
-       <str name="f.manufacturedate_dt.facet.range.other">after</str>
-
-
-       <!-- Highlighting defaults -->
-       <str name="hl">on</str>
-       <str name="hl.fl">text features name</str>
-       <str name="f.name.hl.fragsize">0</str>
-       <str name="f.name.hl.alternateField">name</str>
-     </lst>
-     <arr name="last-components">
-       <str>spellcheck</str>
-     </arr>
-     <!--
-     <str name="url-scheme">httpx</str>
-     -->
-  </requestHandler>
-
-  <!-- XML Update Request Handler.  
-       
-       http://wiki.apache.org/solr/UpdateXmlMessages
-
-       The canonical Request Handler for Modifying the Index through
-       commands specified using XML.
-
-       Note: Since solr1.1 requestHandlers requires a valid content
-       type header if posted in the body. For example, curl now
-       requires: -H 'Content-type:text/xml; charset=utf-8'
-    -->
-  <requestHandler name="/update" 
-                  class="solr.XmlUpdateRequestHandler">
-    <!-- See below for information on defining 
-         updateRequestProcessorChains that can be used by name 
-         on each Update Request
-      -->
-    <!--
-       <lst name="defaults">
-         <str name="update.chain">dedupe</str>
-       </lst>
-       -->
-    </requestHandler>
-  <!-- Binary Update Request Handler
-       http://wiki.apache.org/solr/javabin
-    -->
-  <requestHandler name="/update/javabin" 
-                  class="solr.BinaryUpdateRequestHandler" />
-
-  <!-- CSV Update Request Handler
-       http://wiki.apache.org/solr/UpdateCSV
-    -->
-  <requestHandler name="/update/csv" 
-                  class="solr.CSVRequestHandler" 
-                  startup="lazy" />
-
-  <!-- JSON Update Request Handler
-       http://wiki.apache.org/solr/UpdateJSON
-    -->
-  <requestHandler name="/update/json" 
-                  class="solr.JsonUpdateRequestHandler" 
-                  startup="lazy" />
-
-  <!-- Solr Cell Update Request Handler
-
-       http://wiki.apache.org/solr/ExtractingRequestHandler 
-
-    -->
-  <requestHandler name="/update/extract" 
-                  startup="lazy"
-                  class="solr.extraction.ExtractingRequestHandler" >
-    <lst name="defaults">
-      <!-- All the main content goes into "text"... if you need to return
-           the extracted text or do highlighting, use a stored field. -->
-      <str name="fmap.content">text</str>
-      <str name="lowernames">true</str>
-      <str name="uprefix">ignored_</str>
-
-      <!-- capture link hrefs but ignore div attributes -->
-      <str name="captureAttr">true</str>
-      <str name="fmap.a">links</str>
-      <str name="fmap.div">ignored_</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Field Analysis Request Handler
-
-       RequestHandler that provides much the same functionality as
-       analysis.jsp. Provides the ability to specify multiple field
-       types and field names in the same request and outputs
-       index-time and query-time analysis for each of them.
-
-       Request parameters are:
-       analysis.fieldname - field name whose analyzers are to be used
-
-       analysis.fieldtype - field type whose analyzers are to be used
-       analysis.fieldvalue - text for index-time analysis
-       q (or analysis.q) - text for query time analysis
-       analysis.showmatch (true|false) - When set to true and when
-           query analysis is performed, the produced tokens of the
-           field value analysis will be marked as "matched" for every
-           token that is produces by the query analysis
-   -->
-  <requestHandler name="/analysis/field" 
-                  startup="lazy"
-                  class="solr.FieldAnalysisRequestHandler" />
-
-
-  <!-- Document Analysis Handler
-
-       http://wiki.apache.org/solr/AnalysisRequestHandler
-
-       An analysis handler that provides a breakdown of the analysis
-       process of provided docuemnts. This handler expects a (single)
-       content stream with the following format:
-
-       <docs>
-         <doc>
-           <field name="id">1</field>
-           <field name="name">The Name</field>
-           <field name="text">The Text Value</field>
-         </doc>
-         <doc>...</doc>
-         <doc>...</doc>
-         ...
-       </docs>
-
-    Note: Each document must contain a field which serves as the
-    unique key. This key is used in the returned response to assoicate
-    ananalysis breakdown to the analyzed document.
-
-    Like the FieldAnalysisRequestHandler, this handler also supports
-    query analysis by sending either an "analysis.query" or "q"
-    request paraemter that holds the query text to be analyized. It
-    also supports the "analysis.showmatch" parameter which when set to
-    true, all field tokens that match the query tokens will be marked
-    as a "match". 
-  -->
-  <requestHandler name="/analysis/document" 
-                  class="solr.DocumentAnalysisRequestHandler" 
-                  startup="lazy" />
-
-  <!-- Admin Handlers
-
-       Admin Handlers - This will register all the standard admin
-       RequestHandlers.  
-    -->
-  <requestHandler name="/admin/" 
-                  class="solr.admin.AdminHandlers" />
-  <!-- This single handler is equivilent to the following... -->
-  <!--
-     <requestHandler name="/admin/luke"       class="solr.admin.LukeRequestHandler" />
-     <requestHandler name="/admin/system"     class="solr.admin.SystemInfoHandler" />
-     <requestHandler name="/admin/plugins"    class="solr.admin.PluginInfoHandler" />
-     <requestHandler name="/admin/threads"    class="solr.admin.ThreadDumpHandler" />
-     <requestHandler name="/admin/properties" class="solr.admin.PropertiesRequestHandler" />
-     <requestHandler name="/admin/file"       class="solr.admin.ShowFileRequestHandler" >
-    -->
-  <!-- If you wish to hide files under ${solr.home}/conf, explicitly
-       register the ShowFileRequestHandler using: 
-    -->
-  <!--
-     <requestHandler name="/admin/file" 
-                     class="solr.admin.ShowFileRequestHandler" >
-       <lst name="invariants">
-         <str name="hidden">synonyms.txt</str> 
-         <str name="hidden">anotherfile.txt</str> 
-       </lst>
-     </requestHandler>
-    -->
-
-  <!-- ping/healthcheck -->
   <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
-    <lst name="defaults">
-      <str name="qt">search</str>
+    <lst name="invariants">
       <str name="q">solrpingquery</str>
-      <str name="echoParams">all</str>
     </lst>
-  </requestHandler>
-
-  <!-- Echo the request contents back to the client -->
-  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
     <lst name="defaults">
-     <str name="echoParams">explicit</str> 
-     <str name="echoHandler">true</str>
+      <str name="echoParams">all</str>
     </lst>
   </requestHandler>
-  
-  <!-- Solr Replication
-
-       The SolrReplicationHandler supports replicating indexes from a
-       "master" used for indexing and "salves" used for queries.
-
-       http://wiki.apache.org/solr/SolrReplication 
-
-       In the example below, remove the <lst name="master"> section if
-       this is just a slave and remove  the <lst name="slave"> section
-       if this is just a master.
-    -->
-  <!--
-     <requestHandler name="/replication" class="solr.ReplicationHandler" >
-       <lst name="master">
-         <str name="replicateAfter">commit</str>
-         <str name="replicateAfter">startup</str>
-         <str name="confFiles">schema.xml,stopwords.txt</str>
-       </lst>
-       <lst name="slave">
-         <str name="masterUrl">http://localhost:8983/solr/replication</str>
-         <str name="pollInterval">00:00:60</str>
-       </lst>
-     </requestHandler>
-    -->
-
-  <!-- Search Components
-
-       Search components are registered to SolrCore and used by 
-       instances of SearchHandler (which can access them by name)
-       
-       By default, the following components are avaliable:
-       
-       <searchComponent name="query"     class="solr.QueryComponent" />
-       <searchComponent name="facet"     class="solr.FacetComponent" />
-       <searchComponent name="mlt"       class="solr.MoreLikeThisComponent" />
-       <searchComponent name="highlight" class="solr.HighlightComponent" />
-       <searchComponent name="stats"     class="solr.StatsComponent" />
-       <searchComponent name="debug"     class="solr.DebugComponent" />
-   
-       Default configuration in a requestHandler would look like:
-
-       <arr name="components">
-         <str>query</str>
-         <str>facet</str>
-         <str>mlt</str>
-         <str>highlight</str>
-         <str>stats</str>
-         <str>debug</str>
-       </arr>
-
-       If you register a searchComponent to one of the standard names, 
-       that will be used instead of the default.
-
-       To insert components before or after the 'standard' components, use:
-    
-       <arr name="first-components">
-         <str>myFirstComponentName</str>
-       </arr>
-    
-       <arr name="last-components">
-         <str>myLastComponentName</str>
-       </arr>
-
-       NOTE: The component registered with the name "debug" will
-       always be executed after the "last-components" 
-       
-     -->
-
-   <!-- Spell Check
 
-        The spell check component can return a list of alternative spelling
-        suggestions.  
-
-        http://wiki.apache.org/solr/SpellCheckComponent
-     -->
   <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
-
     <str name="queryAnalyzerFieldType">textSpell</str>
-
-    <!-- Multiple "Spell Checkers" can be declared and used by this
-         component
-      -->
-
-    <!-- a spellchecker built from a field of hte main index, and
-         written to disk
-      -->
     <lst name="spellchecker">
       <str name="name">default</str>
       <str name="field">name</str>
       <str name="spellcheckIndexDir">spellchecker</str>
+      <str name="buildOnCommit">true</str>
     </lst>
-
-    <!-- a spellchecker that uses a different distance measure -->
-    <!--
-       <lst name="spellchecker">
-         <str name="name">jarowinkler</str>
-         <str name="field">spell</str>
-         <str name="distanceMeasure">
-           org.apache.lucene.search.spell.JaroWinklerDistance
-         </str>
-         <str name="spellcheckIndexDir">spellcheckerJaro</str>
-       </lst>
-     -->
-
-    <!-- a spellchecker that use an alternate comparator 
-
-         comparatorClass be one of:
-          1. score (default)
-          2. freq (Frequency first, then score)
-          3. A fully qualified class name
-      -->
-    <!--
-       <lst name="spellchecker">
-         <str name="name">freq</str>
-         <str name="field">lowerfilt</str>
-         <str name="spellcheckIndexDir">spellcheckerFreq</str>
-         <str name="comparatorClass">freq</str>
-         <str name="buildOnCommit">true</str>
-      -->
-
-    <!-- A spellchecker that reads the list of words from a file -->
-    <!--
-       <lst name="spellchecker">
-         <str name="classname">solr.FileBasedSpellChecker</str>
-         <str name="name">file</str>
-         <str name="sourceLocation">spellings.txt</str>
-         <str name="characterEncoding">UTF-8</str>
-         <str name="spellcheckIndexDir">spellcheckerFile</str>
-       </lst>
-      -->
   </searchComponent>
 
-  <!-- A request handler for demonstrating the spellcheck component.  
-
-       NOTE: This is purely as an example.  The whole purpose of the
-       SpellCheckComponent is to hook it into the request handler that
-       handles your normal user queries so that a separate request is
-       not needed to get suggestions.
-
-       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS
-       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!
-       
-       See http://wiki.apache.org/solr/SpellCheckComponent for details
-       on the request parameters.
-    -->
-  <requestHandler name="/spell" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <str name="spellcheck.onlyMorePopular">false</str>
-      <str name="spellcheck.extendedResults">false</str>
-      <str name="spellcheck.count">1</str>
-    </lst>
+  <requestHandler name="/select" class="solr.SearchHandler" startup="lazy">
     <arr name="last-components">
       <str>spellcheck</str>
     </arr>
   </requestHandler>
 
-  <!-- Term Vector Component
-
-       http://wiki.apache.org/solr/TermVectorComponent
-    -->
-  <searchComponent name="tvComponent" class="solr.TermVectorComponent"/>
-
-  <!-- A request handler for demonstrating the term vector component
-
-       This is purely as an example.
-
-       In reality you will likely want to add the component to your 
-       already specified request handlers. 
-    -->
-  <requestHandler name="tvrh" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <bool name="tv">true</bool>
-    </lst>
-    <arr name="last-components">
-      <str>tvComponent</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Clustering Component
-
-       http://wiki.apache.org/solr/ClusteringComponent
-
-       This relies on third party jars which are notincluded in the
-       release.  To use this component (and the "/clustering" handler)
-       Those jars will need to be downloaded, and you'll need to set
-       the solr.cluster.enabled system property when running solr...
-
-          java -Dsolr.clustering.enabled=true -jar start.jar
-    -->
-  <searchComponent name="clustering" 
-                   enable="${solr.clustering.enabled:false}"
-                   class="solr.clustering.ClusteringComponent" >
-    <!-- Declare an engine -->
-    <lst name="engine">
-      <!-- The name, only one can be named "default" -->
-      <str name="name">default</str>
-
-      <!-- Class name of Carrot2 clustering algorithm. 
-           
-           Currently available algorithms are:
-           
-           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm
-           * org.carrot2.clustering.stc.STCClusteringAlgorithm
-           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm
-           
-           See http://project.carrot2.org/algorithms.html for the
-           algorithm's characteristics.
-        -->
-      <str name="carrot.algorithm">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>
-
-      <!-- Overriding values for Carrot2 default algorithm attributes.
-
-           For a description of all available attributes, see:
-           http://download.carrot2.org/stable/manual/#chapter.components.
-           Use attribute key as name attribute of str elements
-           below. These can be further overridden for individual
-           requests by specifying attribute key as request parameter
-           name and attribute value as parameter value.
-        -->
-      <str name="LingoClusteringAlgorithm.desiredClusterCountBase">20</str>
-      
-      <!-- Location of Carrot2 lexical resources.
-
-           A directory from which to load Carrot2-specific stop words
-           and stop labels. Absolute or relative to Solr config directory.
-           If a specific resource (e.g. stopwords.en) is present in the
-           specified dir, it will completely override the corresponding
-           default one that ships with Carrot2.
-
-           For an overview of Carrot2 lexical resources, see:
-           http://download.carrot2.org/head/manual/#chapter.lexical-resources
-        -->
-      <str name="carrot.lexicalResourcesDir">clustering/carrot2</str>
-
-      <!-- The language to assume for the documents.
-           
-           For a list of allowed values, see:
-           http://download.carrot2.org/stable/manual/#section.attribute.lingo.MultilingualClustering.defaultLanguage
-       -->
-      <str name="MultilingualClustering.defaultLanguage">ENGLISH</str>
-    </lst>
-    <lst name="engine">
-      <str name="name">stc</str>
-      <str name="carrot.algorithm">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>
-    </lst>
-  </searchComponent>
-
-  <!-- A request handler for demonstrating the clustering component
-
-       This is purely as an example.
-
-       In reality you will likely want to add the component to your 
-       already specified request handlers. 
-    -->
-  <requestHandler name="/clustering"
-                  startup="lazy"
-                  enable="${solr.clustering.enabled:false}"
-                  class="solr.SearchHandler">
-    <lst name="defaults">
-      <bool name="clustering">true</bool>
-      <str name="clustering.engine">default</str>
-      <bool name="clustering.results">true</bool>
-      <!-- The title field -->
-      <str name="carrot.title">name</str>
-      <str name="carrot.url">id</str>
-      <!-- The field to cluster on -->
-       <str name="carrot.snippet">features</str>
-       <!-- produce summaries -->
-       <bool name="carrot.produceSummary">true</bool>
-       <!-- the maximum number of labels per cluster -->
-       <!--<int name="carrot.numDescriptions">5</int>-->
-       <!-- produce sub clusters -->
-       <bool name="carrot.outputSubClusters">false</bool>
-       
-       <str name="defType">edismax</str>
-       <str name="qf">
-          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-       <str name="q.alt">*:*</str>
-       <str name="rows">10</str>
-       <str name="fl">*,score</str>
-    </lst>     
-    <arr name="last-components">
-      <str>clustering</str>
-    </arr>
-  </requestHandler>
-  
-  <!-- Terms Component
-
-       http://wiki.apache.org/solr/TermsComponent
-
-       A component to return terms and document frequency of those
-       terms
-    -->
   <searchComponent name="terms" class="solr.TermsComponent"/>
 
   <!-- A request handler for demonstrating the terms component -->
@@ -1303,196 +93,9 @@
     </arr>
   </requestHandler>
 
-  <!-- Highlighting Component
-
-       http://wiki.apache.org/solr/HighlightingParameters
-    -->
-  <searchComponent class="solr.HighlightComponent" name="highlight">
-    <highlighting>
-      <!-- Configure the standard fragmenter -->
-      <!-- This could most likely be commented out in the "default" case -->
-      <fragmenter name="gap" 
-                  default="true"
-                  class="solr.highlight.GapFragmenter">
-        <lst name="defaults">
-          <int name="hl.fragsize">100</int>
-        </lst>
-      </fragmenter>
-
-      <!-- A regular-expression-based fragmenter 
-           (for sentence extraction) 
-        -->
-      <fragmenter name="regex" 
-                  class="solr.highlight.RegexFragmenter">
-        <lst name="defaults">
-          <!-- slightly smaller fragsizes work better because of slop -->
-          <int name="hl.fragsize">70</int>
-          <!-- allow 50% slop on fragment sizes -->
-          <float name="hl.regex.slop">0.5</float>
-          <!-- a basic sentence pattern -->
-          <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
-        </lst>
-      </fragmenter>
-
-      <!-- Configure the standard formatter -->
-      <formatter name="html" 
-                 default="true"
-                 class="solr.highlight.HtmlFormatter">
-        <lst name="defaults">
-          <str name="hl.simple.pre"><![CDATA[<em>]]></str>
-          <str name="hl.simple.post"><![CDATA[</em>]]></str>
-        </lst>
-      </formatter>
-
-      <!-- Configure the standard encoder -->
-      <encoder name="html" 
-               class="solr.highlight.HtmlEncoder" />
-
-      <!-- Configure the standard fragListBuilder -->
-      <fragListBuilder name="simple" 
-                       default="true"
-                       class="solr.highlight.SimpleFragListBuilder"/>
-
-      <!-- Configure the single fragListBuilder -->
-      <fragListBuilder name="single" 
-                       class="solr.highlight.SingleFragListBuilder"/>
-
-      <!-- default tag FragmentsBuilder -->
-      <fragmentsBuilder name="default" 
-                        default="true"
-                        class="solr.highlight.ScoreOrderFragmentsBuilder">
-        <!-- 
-        <lst name="defaults">
-          <str name="hl.multiValuedSeparatorChar">/</str>
-        </lst>
-        -->
-      </fragmentsBuilder>
-
-      <!-- multi-colored tag FragmentsBuilder -->
-      <fragmentsBuilder name="colored" 
-                        class="solr.highlight.ScoreOrderFragmentsBuilder">
-        <lst name="defaults">
-          <str name="hl.tag.pre"><![CDATA[
-               <b style="background:yellow">,<b style="background:lawgreen">,
-               <b style="background:aquamarine">,<b style="background:magenta">,
-               <b style="background:palegreen">,<b style="background:coral">,
-               <b style="background:wheat">,<b style="background:khaki">,
-               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
-          <str name="hl.tag.post"><![CDATA[</b>]]></str>
-        </lst>
-      </fragmentsBuilder>
-    </highlighting>
-  </searchComponent>
-
-  <!-- Update Processors
-
-       Chains of Update Processor Factories for dealing with Update
-       Requests can be declared, and then used by name in Update
-       Request Processors
-
-       http://wiki.apache.org/solr/UpdateRequestProcessor
-
-    --> 
-  <!-- Deduplication
-
-       An example dedup update processor that creates the "id" field
-       on the fly based on the hash code of some other fields.  This
-       example has overwriteDupes set to false since we are using the
-       id field as the signatureField and Solr will maintain
-       uniqueness based on that anyway.  
-       
-    -->
-  <!--
-     <updateRequestProcessorChain name="dedupe">
-       <processor class="solr.processor.SignatureUpdateProcessorFactory">
-         <bool name="enabled">true</bool>
-         <str name="signatureField">id</str>
-         <bool name="overwriteDupes">false</bool>
-         <str name="fields">name,features,cat</str>
-         <str name="signatureClass">solr.processor.Lookup3Signature</str>
-       </processor>
-       <processor class="solr.LogUpdateProcessorFactory" />
-       <processor class="solr.RunUpdateProcessorFactory" />
-     </updateRequestProcessorChain>
-    -->
-
-  <!-- Response Writers
-
-       http://wiki.apache.org/solr/QueryResponseWriter
-
-       Request responses will be written using the writer specified by
-       the 'wt' request parameter matching the name of a registered
-       writer.
-
-       The "default" writer is the default and will be used if 'wt' is
-       not specified in the request.
-    -->
-  <!-- The following response writers are implicitly configured unless
-       overridden...
-    -->
-  <!--
-     <queryResponseWriter name="xml" 
-                          default="true"
-                          class="solr.XMLResponseWriter" />
-     <queryResponseWriter name="json" class="solr.JSONResponseWriter"/>
-     <queryResponseWriter name="python" class="solr.PythonResponseWriter"/>
-     <queryResponseWriter name="ruby" class="solr.RubyResponseWriter"/>
-     <queryResponseWriter name="php" class="solr.PHPResponseWriter"/>
-     <queryResponseWriter name="phps" class="solr.PHPSerializedResponseWriter"/>
-     <queryResponseWriter name="velocity" class="solr.VelocityResponseWriter"/>
-     <queryResponseWriter name="csv" class="solr.CSVResponseWriter"/>
-    -->
-  <!--
-     Custom response writers can be declared as needed...
-    -->
-  <!--
-     <queryResponseWriter name="custom" class="com.example.MyResponseWriter"/>
-    -->
-
-  <!-- XSLT response writer transforms the XML output by any xslt file found
-       in Solr's conf/xslt directory.  Changes to xslt files are checked for
-       every xsltCacheLifetimeSeconds.  
-    -->
-  <queryResponseWriter name="xslt" class="solr.XSLTResponseWriter">
-    <int name="xsltCacheLifetimeSeconds">5</int>
-  </queryResponseWriter>
-
-  <!-- Query Parsers
-
-       http://wiki.apache.org/solr/SolrQuerySyntax
-
-       Multiple QParserPlugins can be registered by name, and then
-       used in either the "defType" param for the QueryComponent (used
-       by SearchHandler) or in LocalParams
-    -->
-  <!-- example of registering a query parser -->
-  <!--
-     <queryParser name="myparser" class="com.mycompany.MyQParserPlugin"/>
-    -->
-
-  <!-- Function Parsers
-
-       http://wiki.apache.org/solr/FunctionQuery
-
-       Multiple ValueSourceParsers can be registered by name, and then
-       used as function names when using the "func" QParser.
-    -->
-  <!-- example of registering a custom function parser  -->
-  <!--
-     <valueSourceParser name="myfunc" 
-                        class="com.mycompany.MyValueSourceParser" />
-    -->
-
   <!-- Legacy config for the admin interface -->
   <admin>
     <defaultQuery>*:*</defaultQuery>
-
-    <!-- configure a healthcheck file for servers behind a
-         loadbalancer 
-      -->
-    <!--
-       <healthcheck type="file">server-enabled</healthcheck>
-      -->
   </admin>
 
 </config>
diff --git a/usr-share/solr-data/etc/jetty.xml b/usr-share/solr-data/etc/jetty.xml
new file mode 100644
index 0000000..aa71704
--- /dev/null
+++ b/usr-share/solr-data/etc/jetty.xml
@@ -0,0 +1,227 @@
+<?xml version="1.0"?>
+<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">
+
+<!-- =============================================================== -->
+<!-- Configure the Jetty Server                                      -->
+<!--                                                                 -->
+<!-- Documentation of this file format can be found at:              -->
+<!-- http://docs.codehaus.org/display/JETTY/jetty.xml                -->
+<!--                                                                 -->
+<!-- =============================================================== -->
+
+
+<Configure id="Server" class="org.mortbay.jetty.Server">
+
+    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
+    <Call class="java.lang.System" name="setProperty">
+      <Arg>org.mortbay.jetty.Request.maxFormContentSize</Arg>
+      <Arg>1000000</Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Server Thread Pool                                          -->
+    <!-- =========================================================== -->
+    <Set name="ThreadPool">
+
+      <New class="org.mortbay.thread.QueuedThreadPool">
+        <Set name="minThreads">10</Set>
+        <Set name="maxThreads">10000</Set>
+        <Set name="lowThreads">20</Set>
+      </New>
+
+      <!-- Optional Java 5 bounded threadpool with job queue 
+      <New class="org.mortbay.thread.concurrent.ThreadPool">
+        <Set name="corePoolSize">50</Set>
+        <Set name="maximumPoolSize">50</Set>
+      </New>
+      -->
+    </Set>
+
+
+
+    <!-- =========================================================== -->
+    <!-- Set connectors                                              -->
+    <!-- =========================================================== -->
+    <!-- One of each type!                                           -->
+    <!-- =========================================================== -->
+
+    <!-- Use this connector for many frequently idle connections
+         and for threadless continuations.
+    -->    
+  <!--
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.mortbay.jetty.nio.SelectChannelConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">30000</Set>
+            <Set name="Acceptors">2</Set>
+            <Set name="statsOn">false</Set>
+            <Set name="confidentialPort">8443</Set>
+	    <Set name="lowResourcesConnections">5000</Set>
+	    <Set name="lowResourcesMaxIdleTime">5000</Set>
+          </New>
+      </Arg>
+    </Call>
+  -->
+
+    <!-- This connector is currently being used for Solr because it
+          showed better performance than nio.SelectChannelConnector
+          for typical Solr requests.  -->
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.mortbay.jetty.bio.SocketConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">50000</Set>
+            <Set name="lowResourceMaxIdleTime">1500</Set>
+            <Set name="statsOn">false</Set>
+          </New>
+      </Arg>
+    </Call>
+
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    <!-- To add a HTTPS SSL listener                                     -->
+    <!-- see jetty-ssl.xml to add an ssl connector. use                  -->
+    <!-- java -jar start.jar etc/jetty.xml etc/jetty-ssl.xml             -->
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    <!-- To allow Jetty to be started from xinetd                        -->
+    <!-- mixin jetty-xinetd.xml:                                         -->
+    <!--   java -jar start.jar etc/jetty.xml etc/jetty-xinetd.xml        -->
+    <!--                                                                 -->
+    <!-- See jetty-xinetd.xml for further instructions.                  -->
+    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+    
+    <!-- =========================================================== -->
+    <!-- Set up global session ID manager                            -->
+    <!-- =========================================================== -->
+    <!--
+    <Set name="sessionIdManager">
+      <New class="org.mortbay.jetty.servlet.HashSessionIdManager">
+        <Set name="workerName">node1</Set>
+      </New>
+    </Set>
+    -->
+
+    <!-- =========================================================== -->
+    <!-- Set handler Collection Structure                            --> 
+    <!-- =========================================================== -->
+    <Set name="handler">
+      <New id="Handlers" class="org.mortbay.jetty.handler.HandlerCollection">
+        <Set name="handlers">
+         <Array type="org.mortbay.jetty.Handler">
+           <Item>
+             <New id="Contexts" class="org.mortbay.jetty.handler.ContextHandlerCollection"/>
+           </Item>
+           <Item>
+             <New id="DefaultHandler" class="org.mortbay.jetty.handler.DefaultHandler"/>
+           </Item>
+           <Item>
+             <New id="RequestLog" class="org.mortbay.jetty.handler.RequestLogHandler"/>
+           </Item>
+         </Array>
+        </Set>
+      </New>
+    </Set>
+    
+    <!-- =========================================================== -->
+    <!-- Configure the context deployer                              -->
+    <!-- A context deployer will deploy contexts described in        -->
+    <!-- configuration files discovered in a directory.              -->
+    <!-- The configuration directory can be scanned for hot          -->
+    <!-- deployments at the configured scanInterval.                 -->
+    <!--                                                             -->
+    <!-- This deployer is configured to deploy contexts configured   -->
+    <!-- in the $JETTY_HOME/contexts directory                       -->
+    <!--                                                             -->
+    <!-- =========================================================== -->
+    <Call name="addLifeCycle">
+      <Arg>
+        <New class="org.mortbay.jetty.deployer.ContextDeployer">
+          <Set name="contexts"><Ref id="Contexts"/></Set>
+          <Set name="configurationDir"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
+          <Set name="scanInterval">5</Set>
+        </New>
+      </Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Configure the webapp deployer.                              -->
+    <!-- A webapp  deployer will deploy standard webapps discovered  -->
+    <!-- in a directory at startup, without the need for additional  -->
+    <!-- configuration files.    It does not support hot deploy or   -->
+    <!-- non standard contexts (see ContextDeployer above).          -->
+    <!--                                                             -->
+    <!-- This deployer is configured to deploy webapps from the      -->
+    <!-- $JETTY_HOME/webapps directory                               -->
+    <!--                                                             -->
+    <!-- Normally only one type of deployer need be used.            -->
+    <!--                                                             -->
+    <!-- =========================================================== -->
+    <Call name="addLifeCycle">
+      <Arg>
+        <New class="org.mortbay.jetty.deployer.WebAppDeployer">
+          <Set name="contexts"><Ref id="Contexts"/></Set>
+          <Set name="webAppDir"><SystemProperty name="jetty.webapps" default="."/></Set>
+	  <Set name="parentLoaderPriority">false</Set>
+	  <Set name="extract">true</Set>
+	  <Set name="allowDuplicates">false</Set>
+          <Set name="defaultsDescriptor"><SystemProperty name="jetty.home" default="."/>/etc/webdefault.xml</Set>
+        </New>
+      </Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Configure Authentication Realms                             -->
+    <!-- Realms may be configured for the entire server here, or     -->
+    <!-- they can be configured for a specific web app in a context  -->
+    <!-- configuration (see $(jetty.home)/contexts/test.xml for an   -->
+    <!-- example).                                                   -->
+    <!-- =========================================================== -->
+  <!--
+    <Set name="UserRealms">
+      <Array type="org.mortbay.jetty.security.UserRealm">
+        <Item>
+          <New class="org.mortbay.jetty.security.HashUserRealm">
+            <Set name="name">Test Realm</Set>
+            <Set name="config"><SystemProperty name="jetty.home" default="."/>/etc/realm.properties</Set>
+            <Set name="refreshInterval">0</Set>
+          </New>
+        </Item>
+      </Array>
+    </Set>
+  -->
+
+    <!-- =========================================================== -->
+    <!-- Configure Request Log                                       -->
+    <!-- Request logs  may be configured for the entire server here, -->
+    <!-- or they can be configured for a specific web app in a       -->
+    <!-- contexts configuration (see $(jetty.home)/contexts/test.xml -->
+    <!-- for an example).                                            -->
+    <!-- =========================================================== -->
+  <!--
+    <Ref id="RequestLog">
+      <Set name="requestLog">
+        <New id="RequestLogImpl" class="org.mortbay.jetty.NCSARequestLog">
+          <Set name="filename"><SystemProperty name="jetty.logs" default="./logs"/>/yyyy_mm_dd.request.log</Set>
+          <Set name="filenameDateFormat">yyyy_MM_dd</Set>
+          <Set name="retainDays">90</Set>
+          <Set name="append">true</Set>
+          <Set name="extended">false</Set>
+          <Set name="logCookies">false</Set>
+          <Set name="LogTimeZone">GMT</Set>
+        </New>
+      </Set>
+    </Ref>
+  -->
+    <!-- =========================================================== -->
+    <!-- extra options                                               -->
+    <!-- =========================================================== -->
+    <Set name="stopAtShutdown">true</Set>
+    <Set name="sendServerVersion">false</Set>
+    <Set name="sendDateHeader">false</Set>
+    <Set name="gracefulShutdown">1000</Set>
+
+</Configure>
diff --git a/usr-share/solr-data/etc/webdefault.xml b/usr-share/solr-data/etc/webdefault.xml
new file mode 100644
index 0000000..b8d0114
--- /dev/null
+++ b/usr-share/solr-data/etc/webdefault.xml
@@ -0,0 +1,410 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<!-- ===================================================================== -->
+<!-- This file contains the default descriptor for web applications.       -->
+<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+<!-- The intent of this descriptor is to include jetty specific or common  -->
+<!-- configuration for all webapps.   If a context has a webdefault.xml    -->
+<!-- descriptor, it is applied before the contexts own web.xml file        -->
+<!--                                                                       -->
+<!-- A context may be assigned a default descriptor by:                    -->
+<!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
+<!--  + Passed an arg to addWebApplications                                -->
+<!--                                                                       -->
+<!-- This file is used both as the resource within the jetty.jar (which is -->
+<!-- used as the default if no explicit defaults descriptor is set) and it -->
+<!-- is copied to the etc directory of the Jetty distro and explicitly     -->
+<!-- by the jetty.xml file.                                                -->
+<!--                                                                       -->
+<!-- ===================================================================== -->
+<web-app 
+   xmlns="http://java.sun.com/xml/ns/javaee" 
+   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
+   metadata-complete="true"
+   version="2.5"> 
+
+  <description>
+    Default web.xml file.  
+    This file is applied to a Web application before it's own WEB_INF/web.xml file
+  </description>
+
+
+  <!-- ==================================================================== -->
+  <!-- Context params to control Session Cookies                            -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- UNCOMMENT TO ACTIVATE
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.SessionDomain</param-name>
+    <param-value>127.0.0.1</param-value>
+  </context-param>
+
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.SessionPath</param-name>
+    <param-value>/</param-value>
+  </context-param>
+
+  <context-param>
+    <param-name>org.mortbay.jetty.servlet.MaxAge</param-name>
+    <param-value>-1</param-value>
+  </context-param>
+  -->
+
+  <context-param>
+    <param-name>org.mortbay.jetty.webapp.NoTLDJarPattern</param-name>
+    <param-value>start.jar|ant-.*\.jar|dojo-.*\.jar|jetty-.*\.jar|jsp-api-.*\.jar|junit-.*\.jar|servlet-api-.*\.jar|dnsns\.jar|rt\.jar|jsse\.jar|tools\.jar|sunpkcs11\.jar|sunjce_provider\.jar|xerces.*\.jar</param-value>
+  </context-param>
+            
+
+
+  <!-- ==================================================================== -->
+  <!-- The default servlet.                                                 -->
+  <!-- This servlet, normally mapped to /, provides the handling for static -->
+  <!-- content, OPTIONS and TRACE methods for the context.                  -->
+  <!-- The following initParameters are supported:                          -->
+  <!--                                                                      -->
+  <!--   acceptRanges     If true, range requests and responses are         -->
+  <!--                    supported                                         -->
+  <!--                                                                      -->
+  <!--   dirAllowed       If true, directory listings are returned if no    -->
+  <!--                    welcome file is found. Else 403 Forbidden.        -->
+  <!--                                                                      -->
+  <!--   welcomeServlets  If true, attempt to dispatch to welcome files     -->
+  <!--                    that are servlets, if no matching static          --> 
+  <!--                    resources can be found.                           -->
+  <!--                                                                      -->
+  <!--   redirectWelcome  If true, redirect welcome file requests           -->
+  <!--                    else use request dispatcher forwards              -->
+  <!--                                                                      -->
+  <!--   gzip             If set to true, then static content will be served--> 
+  <!--                    as gzip content encoded if a matching resource is -->
+  <!--                    found ending with ".gz"                           -->
+  <!--                                                                      -->
+  <!--   resoureBase      Can be set to replace the context resource base   -->
+  <!--                                                                      -->
+  <!--   relativeResourceBase                                               -->
+  <!--                    Set with a pathname relative to the base of the   -->
+  <!--                    servlet context root. Useful for only serving     -->
+  <!--                    static content from only specific subdirectories. -->
+  <!--                                                                      -->
+  <!--   useFileMappedBuffer                                                -->
+  <!--                    If set to true (the default), a  memory mapped    -->
+  <!--                    file buffer will be used to serve static content  -->
+  <!--                    when using an NIO connector. Setting this value   -->
+  <!--                    to false means that a direct buffer will be used  -->
+  <!--                    instead. If you are having trouble with Windows   -->
+  <!--                    file locking, set this to false.                  -->
+  <!--                                                                      -->
+  <!--  cacheControl      If set, all static content will have this value   -->
+  <!--                    set as the cache-control header.                  -->
+  <!--                                                                      -->
+  <!--  maxCacheSize      Maximum size of the static resource cache         -->
+  <!--                                                                      -->
+  <!--  maxCachedFileSize Maximum size of any single file in the cache      -->
+  <!--                                                                      -->
+  <!--  maxCachedFiles    Maximum number of files in the cache              -->
+  <!--                                                                      -->
+  <!--  cacheType         "nio", "bio" or "both" to determine the type(s)   -->
+  <!--                    of resource cache. A bio cached buffer may be used-->
+  <!--                    by nio but is not as efficient as a nio buffer.   -->
+  <!--                    An nio cached buffer may not be used by bio.      -->
+  <!--                                                                      -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet>
+    <servlet-name>default</servlet-name>
+    <servlet-class>org.mortbay.jetty.servlet.DefaultServlet</servlet-class>
+    <init-param>
+      <param-name>acceptRanges</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>dirAllowed</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>welcomeServlets</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>redirectWelcome</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCacheSize</param-name>
+      <param-value>256000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFileSize</param-name>
+      <param-value>10000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFiles</param-name>
+      <param-value>1000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>cacheType</param-name>
+      <param-value>both</param-value>
+    </init-param>
+    <init-param>
+      <param-name>gzip</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>useFileMappedBuffer</param-name>
+      <param-value>true</param-value>
+    </init-param>  
+    <!--
+    <init-param>
+      <param-name>cacheControl</param-name>
+      <param-value>max-age=3600,public</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet> 
+
+  <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping>
+  
+
+  <!-- ==================================================================== -->
+  <!-- JSP Servlet                                                          -->
+  <!-- This is the jasper JSP servlet from the jakarta project              -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
+  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
+  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
+  <!-- following initialization parameters (default values are in square    -->
+  <!-- brackets):                                                           -->
+  <!--                                                                      -->
+  <!--   checkInterval       If development is false and reloading is true, -->
+  <!--                       background compiles are enabled. checkInterval -->
+  <!--                       is the time in seconds between checks to see   -->
+  <!--                       if a JSP page needs to be recompiled. [300]    -->
+  <!--                                                                      -->
+  <!--   compiler            Which compiler Ant should use to compile JSP   -->
+  <!--                       pages.  See the Ant documenation for more      -->
+  <!--                       information. [javac]                           -->
+  <!--                                                                      -->
+  <!--   classdebuginfo      Should the class file be compiled with         -->
+  <!--                       debugging information?  [true]                 -->
+  <!--                                                                      -->
+  <!--   classpath           What class path should I use while compiling   -->
+  <!--                       generated servlets?  [Created dynamically      -->
+  <!--                       based on the current web application]          -->
+  <!--                       Set to ? to make the container explicitly set  -->
+  <!--                       this parameter.                                -->
+  <!--                                                                      -->
+  <!--   development         Is Jasper used in development mode (will check -->
+  <!--                       for JSP modification on every access)?  [true] -->
+  <!--                                                                      -->
+  <!--   enablePooling       Determines whether tag handler pooling is      -->
+  <!--                       enabled  [true]                                -->
+  <!--                                                                      -->
+  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
+  <!--                       a separate JVM is used for JSP page compiles   -->
+  <!--                       from the one Tomcat is running in. [true]      -->
+  <!--                                                                      -->
+  <!--   ieClassId           The class-id value to be sent to Internet      -->
+  <!--                       Explorer when using <jsp:plugin> tags.         -->
+  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
+  <!--                                                                      -->
+  <!--   javaEncoding        Java file encoding to use for generating java  -->
+  <!--                       source files. [UTF-8]                          -->
+  <!--                                                                      -->
+  <!--   keepgenerated       Should we keep the generated Java source code  -->
+  <!--                       for each page instead of deleting it? [true]   -->
+  <!--                                                                      -->
+  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
+  <!--                       by this servlet.  Increasing levels cause the  -->
+  <!--                       generation of more messages.  Valid values are -->
+  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
+  <!--                       [WARNING]                                      -->
+  <!--                                                                      -->
+  <!--   mappedfile          Should we generate static content with one     -->
+  <!--                       print statement per input line, to ease        -->
+  <!--                       debugging?  [false]                            -->
+  <!--                                                                      -->
+  <!--                                                                      -->
+  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
+  <!--                                                                      -->
+  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
+  <!--                       debugging be suppressed?  [false]              -->
+  <!--                                                                      -->
+  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
+  <!--                       dumped to a file? [false]                      -->
+  <!--                       False if suppressSmap is true                  -->
+  <!--                                                                      -->
+  <!--   scratchdir          What scratch directory should we use when      -->
+  <!--                       compiling JSP pages?  [default work directory  -->
+  <!--                       for the current web application]               -->
+  <!--                                                                      -->
+  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
+  <!--                                                                      -->
+  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
+  <!--                       header is added by generated servlet  [false]  -->
+  <!--                                                                      -->
+  <!-- If you wish to use Jikes to compile JSP pages:                       -->
+  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
+  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
+  <!--   to cause Jikes to emit error messages in a format compatible with  -->
+  <!--   Jasper.                                                            -->
+  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
+  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet id="jsp">
+    <servlet-name>jsp</servlet-name>
+    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
+    <init-param>
+        <param-name>logVerbosityLevel</param-name>
+        <param-value>DEBUG</param-value>
+    </init-param>
+    <init-param>
+        <param-name>fork</param-name>
+        <param-value>false</param-value>
+    </init-param>
+    <init-param>
+        <param-name>xpoweredBy</param-name>
+        <param-value>false</param-value>
+    </init-param>
+    <!--  
+    <init-param>
+        <param-name>classpath</param-name>
+        <param-value>?</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping> 
+    <servlet-name>jsp</servlet-name> 
+    <url-pattern>*.jsp</url-pattern> 
+    <url-pattern>*.jspf</url-pattern>
+    <url-pattern>*.jspx</url-pattern>
+    <url-pattern>*.xsp</url-pattern>
+    <url-pattern>*.JSP</url-pattern> 
+    <url-pattern>*.JSPF</url-pattern>
+    <url-pattern>*.JSPX</url-pattern>
+    <url-pattern>*.XSP</url-pattern>
+  </servlet-mapping>
+  
+  <!-- ==================================================================== -->
+  <!-- Dynamic Servlet Invoker.                                             -->
+  <!-- This servlet invokes anonymous servlets that have not been defined   -->
+  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
+  <!-- of a request passed to the envoker is treated as a servlet name for  -->
+  <!-- an existing servlet, or as a class name of a new servlet.            -->
+  <!-- This servlet is normally mapped to /servlet/*                        -->
+  <!-- This servlet support the following initParams:                       -->
+  <!--                                                                      -->
+  <!--  nonContextServlets       If false, the invoker can only load        -->
+  <!--                           servlets from the contexts classloader.    -->
+  <!--                           This is false by default and setting this  -->
+  <!--                           to true may have security implications.    -->
+  <!--                                                                      -->
+  <!--  verbose                  If true, log dynamic loads                 -->
+  <!--                                                                      -->
+  <!--  *                        All other parameters are copied to the     -->
+  <!--                           each dynamic servlet as init parameters    -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- Uncomment for dynamic invocation
+  <servlet>
+    <servlet-name>invoker</servlet-name>
+    <servlet-class>org.mortbay.jetty.servlet.Invoker</servlet-class>
+    <init-param>
+      <param-name>verbose</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>nonContextServlets</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>dynamicParam</param-name>
+      <param-value>anyValue</param-value>
+    </init-param>
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping> <servlet-name>invoker</servlet-name> <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
+  -->
+
+
+
+  <!-- ==================================================================== -->
+  <session-config>
+    <session-timeout>30</session-timeout>
+  </session-config>
+
+  <!-- ==================================================================== -->
+  <!-- Default MIME mappings                                                -->
+  <!-- The default MIME mappings are provided by the mime.properties        -->
+  <!-- resource in the org.mortbay.jetty.jar file.  Additional or modified  -->
+  <!-- mappings may be specified here                                       -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- UNCOMMENT TO ACTIVATE
+  <mime-mapping>
+    <extension>mysuffix</extension>
+    <mime-type>mymime/type</mime-type>
+  </mime-mapping>
+  -->
+
+  <!-- ==================================================================== -->
+  <welcome-file-list>
+    <welcome-file>index.html</welcome-file>
+    <welcome-file>index.htm</welcome-file>
+    <welcome-file>index.jsp</welcome-file>
+  </welcome-file-list>
+
+  <!-- ==================================================================== -->
+  <locale-encoding-mapping-list>
+    <locale-encoding-mapping><locale>ar</locale><encoding>ISO-8859-6</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>be</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>bg</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ca</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>cs</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>da</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>de</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>el</locale><encoding>ISO-8859-7</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>en</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>es</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>et</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>fi</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>fr</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>hr</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>hu</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>is</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>it</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>iw</locale><encoding>ISO-8859-8</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ja</locale><encoding>Shift_JIS</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ko</locale><encoding>EUC-KR</encoding></locale-encoding-mapping>     
+    <locale-encoding-mapping><locale>lt</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>lv</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>mk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>nl</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>no</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>pl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>pt</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ro</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>ru</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sh</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sk</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sq</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sr</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>sv</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>tr</locale><encoding>ISO-8859-9</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>uk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>zh</locale><encoding>GB2312</encoding></locale-encoding-mapping>
+    <locale-encoding-mapping><locale>zh_TW</locale><encoding>Big5</encoding></locale-encoding-mapping>   
+  </locale-encoding-mapping-list>
+  
+  <security-constraint>
+    <web-resource-collection>
+      <web-resource-name>Disable TRACE</web-resource-name>
+      <url-pattern>/</url-pattern>
+      <http-method>TRACE</http-method>
+    </web-resource-collection>
+    <auth-constraint/>
+  </security-constraint>
+  
+</web-app>
+
diff --git a/usr-share/solr-data/jetty.xml b/usr-share/solr-data/jetty.xml
deleted file mode 100644
index ccd347f..0000000
--- a/usr-share/solr-data/jetty.xml
+++ /dev/null
@@ -1,227 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">
-
-<!-- =============================================================== -->
-<!-- Configure the Jetty Server                                      -->
-<!--                                                                 -->
-<!-- Documentation of this file format can be found at:              -->
-<!-- http://docs.codehaus.org/display/JETTY/jetty.xml                -->
-<!--                                                                 -->
-<!-- =============================================================== -->
-
-
-<Configure id="Server" class="org.mortbay.jetty.Server">
-
-    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
-    <Call class="java.lang.System" name="setProperty">
-      <Arg>org.mortbay.jetty.Request.maxFormContentSize</Arg>
-      <Arg>1000000</Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Server Thread Pool                                          -->
-    <!-- =========================================================== -->
-    <Set name="ThreadPool">
-
-      <New class="org.mortbay.thread.QueuedThreadPool">
-        <Set name="minThreads">10</Set>
-        <Set name="maxThreads">10000</Set>
-        <Set name="lowThreads">20</Set>
-      </New>
-
-      <!-- Optional Java 5 bounded threadpool with job queue 
-      <New class="org.mortbay.thread.concurrent.ThreadPool">
-        <Set name="corePoolSize">50</Set>
-        <Set name="maximumPoolSize">50</Set>
-      </New>
-      -->
-    </Set>
-
-
-
-    <!-- =========================================================== -->
-    <!-- Set connectors                                              -->
-    <!-- =========================================================== -->
-    <!-- One of each type!                                           -->
-    <!-- =========================================================== -->
-
-    <!-- Use this connector for many frequently idle connections
-         and for threadless continuations.
-    -->    
-  <!--
-    <Call name="addConnector">
-      <Arg>
-          <New class="org.mortbay.jetty.nio.SelectChannelConnector">
-            <Set name="host"><SystemProperty name="jetty.host" /></Set>
-            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">30000</Set>
-            <Set name="Acceptors">2</Set>
-            <Set name="statsOn">false</Set>
-            <Set name="confidentialPort">8443</Set>
-	    <Set name="lowResourcesConnections">5000</Set>
-	    <Set name="lowResourcesMaxIdleTime">5000</Set>
-          </New>
-      </Arg>
-    </Call>
-  -->
-
-    <!-- This connector is currently being used for Solr because it
-          showed better performance than nio.SelectChannelConnector
-          for typical Solr requests.  -->
-    <Call name="addConnector">
-      <Arg>
-          <New class="org.mortbay.jetty.bio.SocketConnector">
-            <Set name="host"><SystemProperty name="jetty.host" /></Set>
-            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">50000</Set>
-            <Set name="lowResourceMaxIdleTime">1500</Set>
-            <Set name="statsOn">false</Set>
-          </New>
-      </Arg>
-    </Call>
-
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    <!-- To add a HTTPS SSL listener                                     -->
-    <!-- see jetty-ssl.xml to add an ssl connector. use                  -->
-    <!-- java -jar start.jar etc/jetty.xml etc/jetty-ssl.xml             -->
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    <!-- To allow Jetty to be started from xinetd                        -->
-    <!-- mixin jetty-xinetd.xml:                                         -->
-    <!--   java -jar start.jar etc/jetty.xml etc/jetty-xinetd.xml        -->
-    <!--                                                                 -->
-    <!-- See jetty-xinetd.xml for further instructions.                  -->
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    
-    <!-- =========================================================== -->
-    <!-- Set up global session ID manager                            -->
-    <!-- =========================================================== -->
-    <!--
-    <Set name="sessionIdManager">
-      <New class="org.mortbay.jetty.servlet.HashSessionIdManager">
-        <Set name="workerName">node1</Set>
-      </New>
-    </Set>
-    -->
-
-    <!-- =========================================================== -->
-    <!-- Set handler Collection Structure                            --> 
-    <!-- =========================================================== -->
-    <Set name="handler">
-      <New id="Handlers" class="org.mortbay.jetty.handler.HandlerCollection">
-        <Set name="handlers">
-         <Array type="org.mortbay.jetty.Handler">
-           <Item>
-             <New id="Contexts" class="org.mortbay.jetty.handler.ContextHandlerCollection"/>
-           </Item>
-           <Item>
-             <New id="DefaultHandler" class="org.mortbay.jetty.handler.DefaultHandler"/>
-           </Item>
-           <Item>
-             <New id="RequestLog" class="org.mortbay.jetty.handler.RequestLogHandler"/>
-           </Item>
-         </Array>
-        </Set>
-      </New>
-    </Set>
-    
-    <!-- =========================================================== -->
-    <!-- Configure the context deployer                              -->
-    <!-- A context deployer will deploy contexts described in        -->
-    <!-- configuration files discovered in a directory.              -->
-    <!-- The configuration directory can be scanned for hot          -->
-    <!-- deployments at the configured scanInterval.                 -->
-    <!--                                                             -->
-    <!-- This deployer is configured to deploy contexts configured   -->
-    <!-- in the $JETTY_HOME/contexts directory                       -->
-    <!--                                                             -->
-    <!-- =========================================================== -->
-    <Call name="addLifeCycle">
-      <Arg>
-        <New class="org.mortbay.jetty.deployer.ContextDeployer">
-          <Set name="contexts"><Ref id="Contexts"/></Set>
-          <Set name="configurationDir"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
-          <Set name="scanInterval">5</Set>
-        </New>
-      </Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Configure the webapp deployer.                              -->
-    <!-- A webapp  deployer will deploy standard webapps discovered  -->
-    <!-- in a directory at startup, without the need for additional  -->
-    <!-- configuration files.    It does not support hot deploy or   -->
-    <!-- non standard contexts (see ContextDeployer above).          -->
-    <!--                                                             -->
-    <!-- This deployer is configured to deploy webapps from the      -->
-    <!-- $JETTY_HOME/webapps directory                               -->
-    <!--                                                             -->
-    <!-- Normally only one type of deployer need be used.            -->
-    <!--                                                             -->
-    <!-- =========================================================== -->
-    <Call name="addLifeCycle">
-      <Arg>
-        <New class="org.mortbay.jetty.deployer.WebAppDeployer">
-          <Set name="contexts"><Ref id="Contexts"/></Set>
-          <Set name="webAppDir"><SystemProperty name="jetty.webapps" default="."/></Set>
-	  <Set name="parentLoaderPriority">false</Set>
-	  <Set name="extract">true</Set>
-	  <Set name="allowDuplicates">false</Set>
-          <Set name="defaultsDescriptor"><SystemProperty name="jetty.home" default="."/>/webdefault.xml</Set>
-        </New>
-      </Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Configure Authentication Realms                             -->
-    <!-- Realms may be configured for the entire server here, or     -->
-    <!-- they can be configured for a specific web app in a context  -->
-    <!-- configuration (see $(jetty.home)/contexts/test.xml for an   -->
-    <!-- example).                                                   -->
-    <!-- =========================================================== -->
-  <!--
-    <Set name="UserRealms">
-      <Array type="org.mortbay.jetty.security.UserRealm">
-        <Item>
-          <New class="org.mortbay.jetty.security.HashUserRealm">
-            <Set name="name">Test Realm</Set>
-            <Set name="config"><SystemProperty name="jetty.home" default="."/>/etc/realm.properties</Set>
-            <Set name="refreshInterval">0</Set>
-          </New>
-        </Item>
-      </Array>
-    </Set>
-  -->
-
-    <!-- =========================================================== -->
-    <!-- Configure Request Log                                       -->
-    <!-- Request logs  may be configured for the entire server here, -->
-    <!-- or they can be configured for a specific web app in a       -->
-    <!-- contexts configuration (see $(jetty.home)/contexts/test.xml -->
-    <!-- for an example).                                            -->
-    <!-- =========================================================== -->
-  <!--
-    <Ref id="RequestLog">
-      <Set name="requestLog">
-        <New id="RequestLogImpl" class="org.mortbay.jetty.NCSARequestLog">
-          <Set name="filename"><SystemProperty name="jetty.logs" default="./logs"/>/yyyy_mm_dd.request.log</Set>
-          <Set name="filenameDateFormat">yyyy_MM_dd</Set>
-          <Set name="retainDays">90</Set>
-          <Set name="append">true</Set>
-          <Set name="extended">false</Set>
-          <Set name="logCookies">false</Set>
-          <Set name="LogTimeZone">GMT</Set>
-        </New>
-      </Set>
-    </Ref>
-  -->
-    <!-- =========================================================== -->
-    <!-- extra options                                               -->
-    <!-- =========================================================== -->
-    <Set name="stopAtShutdown">true</Set>
-    <Set name="sendServerVersion">false</Set>
-    <Set name="sendDateHeader">false</Set>
-    <Set name="gracefulShutdown">1000</Set>
-
-</Configure>
diff --git a/usr-share/solr-data/start.config b/usr-share/solr-data/start.config
index 26fc367..4200ad5 100644
--- a/usr-share/solr-data/start.config
+++ b/usr-share/solr-data/start.config
@@ -47,7 +47,7 @@ org.mortbay.xml.XmlConfiguration.class
 $(start.class).class
 
 # The default configuration files
-$(jetty.home)/jetty.xml                             nargs == 0
+$(jetty.home)/etc/jetty.xml                      nargs == 0
 
 # Set the jetty classpath
 /usr/share/java/solr/*                              always
diff --git a/usr-share/solr-data/webdefault.xml b/usr-share/solr-data/webdefault.xml
deleted file mode 100644
index b8d0114..0000000
--- a/usr-share/solr-data/webdefault.xml
+++ /dev/null
@@ -1,410 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<!-- ===================================================================== -->
-<!-- This file contains the default descriptor for web applications.       -->
-<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-<!-- The intent of this descriptor is to include jetty specific or common  -->
-<!-- configuration for all webapps.   If a context has a webdefault.xml    -->
-<!-- descriptor, it is applied before the contexts own web.xml file        -->
-<!--                                                                       -->
-<!-- A context may be assigned a default descriptor by:                    -->
-<!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
-<!--  + Passed an arg to addWebApplications                                -->
-<!--                                                                       -->
-<!-- This file is used both as the resource within the jetty.jar (which is -->
-<!-- used as the default if no explicit defaults descriptor is set) and it -->
-<!-- is copied to the etc directory of the Jetty distro and explicitly     -->
-<!-- by the jetty.xml file.                                                -->
-<!--                                                                       -->
-<!-- ===================================================================== -->
-<web-app 
-   xmlns="http://java.sun.com/xml/ns/javaee" 
-   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
-   metadata-complete="true"
-   version="2.5"> 
-
-  <description>
-    Default web.xml file.  
-    This file is applied to a Web application before it's own WEB_INF/web.xml file
-  </description>
-
-
-  <!-- ==================================================================== -->
-  <!-- Context params to control Session Cookies                            -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- UNCOMMENT TO ACTIVATE
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.SessionDomain</param-name>
-    <param-value>127.0.0.1</param-value>
-  </context-param>
-
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.SessionPath</param-name>
-    <param-value>/</param-value>
-  </context-param>
-
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.MaxAge</param-name>
-    <param-value>-1</param-value>
-  </context-param>
-  -->
-
-  <context-param>
-    <param-name>org.mortbay.jetty.webapp.NoTLDJarPattern</param-name>
-    <param-value>start.jar|ant-.*\.jar|dojo-.*\.jar|jetty-.*\.jar|jsp-api-.*\.jar|junit-.*\.jar|servlet-api-.*\.jar|dnsns\.jar|rt\.jar|jsse\.jar|tools\.jar|sunpkcs11\.jar|sunjce_provider\.jar|xerces.*\.jar</param-value>
-  </context-param>
-            
-
-
-  <!-- ==================================================================== -->
-  <!-- The default servlet.                                                 -->
-  <!-- This servlet, normally mapped to /, provides the handling for static -->
-  <!-- content, OPTIONS and TRACE methods for the context.                  -->
-  <!-- The following initParameters are supported:                          -->
-  <!--                                                                      -->
-  <!--   acceptRanges     If true, range requests and responses are         -->
-  <!--                    supported                                         -->
-  <!--                                                                      -->
-  <!--   dirAllowed       If true, directory listings are returned if no    -->
-  <!--                    welcome file is found. Else 403 Forbidden.        -->
-  <!--                                                                      -->
-  <!--   welcomeServlets  If true, attempt to dispatch to welcome files     -->
-  <!--                    that are servlets, if no matching static          --> 
-  <!--                    resources can be found.                           -->
-  <!--                                                                      -->
-  <!--   redirectWelcome  If true, redirect welcome file requests           -->
-  <!--                    else use request dispatcher forwards              -->
-  <!--                                                                      -->
-  <!--   gzip             If set to true, then static content will be served--> 
-  <!--                    as gzip content encoded if a matching resource is -->
-  <!--                    found ending with ".gz"                           -->
-  <!--                                                                      -->
-  <!--   resoureBase      Can be set to replace the context resource base   -->
-  <!--                                                                      -->
-  <!--   relativeResourceBase                                               -->
-  <!--                    Set with a pathname relative to the base of the   -->
-  <!--                    servlet context root. Useful for only serving     -->
-  <!--                    static content from only specific subdirectories. -->
-  <!--                                                                      -->
-  <!--   useFileMappedBuffer                                                -->
-  <!--                    If set to true (the default), a  memory mapped    -->
-  <!--                    file buffer will be used to serve static content  -->
-  <!--                    when using an NIO connector. Setting this value   -->
-  <!--                    to false means that a direct buffer will be used  -->
-  <!--                    instead. If you are having trouble with Windows   -->
-  <!--                    file locking, set this to false.                  -->
-  <!--                                                                      -->
-  <!--  cacheControl      If set, all static content will have this value   -->
-  <!--                    set as the cache-control header.                  -->
-  <!--                                                                      -->
-  <!--  maxCacheSize      Maximum size of the static resource cache         -->
-  <!--                                                                      -->
-  <!--  maxCachedFileSize Maximum size of any single file in the cache      -->
-  <!--                                                                      -->
-  <!--  maxCachedFiles    Maximum number of files in the cache              -->
-  <!--                                                                      -->
-  <!--  cacheType         "nio", "bio" or "both" to determine the type(s)   -->
-  <!--                    of resource cache. A bio cached buffer may be used-->
-  <!--                    by nio but is not as efficient as a nio buffer.   -->
-  <!--                    An nio cached buffer may not be used by bio.      -->
-  <!--                                                                      -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet>
-    <servlet-name>default</servlet-name>
-    <servlet-class>org.mortbay.jetty.servlet.DefaultServlet</servlet-class>
-    <init-param>
-      <param-name>acceptRanges</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>dirAllowed</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>welcomeServlets</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>redirectWelcome</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCacheSize</param-name>
-      <param-value>256000000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCachedFileSize</param-name>
-      <param-value>10000000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCachedFiles</param-name>
-      <param-value>1000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>cacheType</param-name>
-      <param-value>both</param-value>
-    </init-param>
-    <init-param>
-      <param-name>gzip</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>useFileMappedBuffer</param-name>
-      <param-value>true</param-value>
-    </init-param>  
-    <!--
-    <init-param>
-      <param-name>cacheControl</param-name>
-      <param-value>max-age=3600,public</param-value>
-    </init-param>
-    -->
-    <load-on-startup>0</load-on-startup>
-  </servlet> 
-
-  <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping>
-  
-
-  <!-- ==================================================================== -->
-  <!-- JSP Servlet                                                          -->
-  <!-- This is the jasper JSP servlet from the jakarta project              -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
-  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
-  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
-  <!-- following initialization parameters (default values are in square    -->
-  <!-- brackets):                                                           -->
-  <!--                                                                      -->
-  <!--   checkInterval       If development is false and reloading is true, -->
-  <!--                       background compiles are enabled. checkInterval -->
-  <!--                       is the time in seconds between checks to see   -->
-  <!--                       if a JSP page needs to be recompiled. [300]    -->
-  <!--                                                                      -->
-  <!--   compiler            Which compiler Ant should use to compile JSP   -->
-  <!--                       pages.  See the Ant documenation for more      -->
-  <!--                       information. [javac]                           -->
-  <!--                                                                      -->
-  <!--   classdebuginfo      Should the class file be compiled with         -->
-  <!--                       debugging information?  [true]                 -->
-  <!--                                                                      -->
-  <!--   classpath           What class path should I use while compiling   -->
-  <!--                       generated servlets?  [Created dynamically      -->
-  <!--                       based on the current web application]          -->
-  <!--                       Set to ? to make the container explicitly set  -->
-  <!--                       this parameter.                                -->
-  <!--                                                                      -->
-  <!--   development         Is Jasper used in development mode (will check -->
-  <!--                       for JSP modification on every access)?  [true] -->
-  <!--                                                                      -->
-  <!--   enablePooling       Determines whether tag handler pooling is      -->
-  <!--                       enabled  [true]                                -->
-  <!--                                                                      -->
-  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
-  <!--                       a separate JVM is used for JSP page compiles   -->
-  <!--                       from the one Tomcat is running in. [true]      -->
-  <!--                                                                      -->
-  <!--   ieClassId           The class-id value to be sent to Internet      -->
-  <!--                       Explorer when using <jsp:plugin> tags.         -->
-  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
-  <!--                                                                      -->
-  <!--   javaEncoding        Java file encoding to use for generating java  -->
-  <!--                       source files. [UTF-8]                          -->
-  <!--                                                                      -->
-  <!--   keepgenerated       Should we keep the generated Java source code  -->
-  <!--                       for each page instead of deleting it? [true]   -->
-  <!--                                                                      -->
-  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
-  <!--                       by this servlet.  Increasing levels cause the  -->
-  <!--                       generation of more messages.  Valid values are -->
-  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
-  <!--                       [WARNING]                                      -->
-  <!--                                                                      -->
-  <!--   mappedfile          Should we generate static content with one     -->
-  <!--                       print statement per input line, to ease        -->
-  <!--                       debugging?  [false]                            -->
-  <!--                                                                      -->
-  <!--                                                                      -->
-  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
-  <!--                                                                      -->
-  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
-  <!--                       debugging be suppressed?  [false]              -->
-  <!--                                                                      -->
-  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
-  <!--                       dumped to a file? [false]                      -->
-  <!--                       False if suppressSmap is true                  -->
-  <!--                                                                      -->
-  <!--   scratchdir          What scratch directory should we use when      -->
-  <!--                       compiling JSP pages?  [default work directory  -->
-  <!--                       for the current web application]               -->
-  <!--                                                                      -->
-  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
-  <!--                                                                      -->
-  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
-  <!--                       header is added by generated servlet  [false]  -->
-  <!--                                                                      -->
-  <!-- If you wish to use Jikes to compile JSP pages:                       -->
-  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
-  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
-  <!--   to cause Jikes to emit error messages in a format compatible with  -->
-  <!--   Jasper.                                                            -->
-  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
-  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet id="jsp">
-    <servlet-name>jsp</servlet-name>
-    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
-    <init-param>
-        <param-name>logVerbosityLevel</param-name>
-        <param-value>DEBUG</param-value>
-    </init-param>
-    <init-param>
-        <param-name>fork</param-name>
-        <param-value>false</param-value>
-    </init-param>
-    <init-param>
-        <param-name>xpoweredBy</param-name>
-        <param-value>false</param-value>
-    </init-param>
-    <!--  
-    <init-param>
-        <param-name>classpath</param-name>
-        <param-value>?</param-value>
-    </init-param>
-    -->
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping> 
-    <servlet-name>jsp</servlet-name> 
-    <url-pattern>*.jsp</url-pattern> 
-    <url-pattern>*.jspf</url-pattern>
-    <url-pattern>*.jspx</url-pattern>
-    <url-pattern>*.xsp</url-pattern>
-    <url-pattern>*.JSP</url-pattern> 
-    <url-pattern>*.JSPF</url-pattern>
-    <url-pattern>*.JSPX</url-pattern>
-    <url-pattern>*.XSP</url-pattern>
-  </servlet-mapping>
-  
-  <!-- ==================================================================== -->
-  <!-- Dynamic Servlet Invoker.                                             -->
-  <!-- This servlet invokes anonymous servlets that have not been defined   -->
-  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
-  <!-- of a request passed to the envoker is treated as a servlet name for  -->
-  <!-- an existing servlet, or as a class name of a new servlet.            -->
-  <!-- This servlet is normally mapped to /servlet/*                        -->
-  <!-- This servlet support the following initParams:                       -->
-  <!--                                                                      -->
-  <!--  nonContextServlets       If false, the invoker can only load        -->
-  <!--                           servlets from the contexts classloader.    -->
-  <!--                           This is false by default and setting this  -->
-  <!--                           to true may have security implications.    -->
-  <!--                                                                      -->
-  <!--  verbose                  If true, log dynamic loads                 -->
-  <!--                                                                      -->
-  <!--  *                        All other parameters are copied to the     -->
-  <!--                           each dynamic servlet as init parameters    -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- Uncomment for dynamic invocation
-  <servlet>
-    <servlet-name>invoker</servlet-name>
-    <servlet-class>org.mortbay.jetty.servlet.Invoker</servlet-class>
-    <init-param>
-      <param-name>verbose</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>nonContextServlets</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>dynamicParam</param-name>
-      <param-value>anyValue</param-value>
-    </init-param>
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping> <servlet-name>invoker</servlet-name> <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
-  -->
-
-
-
-  <!-- ==================================================================== -->
-  <session-config>
-    <session-timeout>30</session-timeout>
-  </session-config>
-
-  <!-- ==================================================================== -->
-  <!-- Default MIME mappings                                                -->
-  <!-- The default MIME mappings are provided by the mime.properties        -->
-  <!-- resource in the org.mortbay.jetty.jar file.  Additional or modified  -->
-  <!-- mappings may be specified here                                       -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- UNCOMMENT TO ACTIVATE
-  <mime-mapping>
-    <extension>mysuffix</extension>
-    <mime-type>mymime/type</mime-type>
-  </mime-mapping>
-  -->
-
-  <!-- ==================================================================== -->
-  <welcome-file-list>
-    <welcome-file>index.html</welcome-file>
-    <welcome-file>index.htm</welcome-file>
-    <welcome-file>index.jsp</welcome-file>
-  </welcome-file-list>
-
-  <!-- ==================================================================== -->
-  <locale-encoding-mapping-list>
-    <locale-encoding-mapping><locale>ar</locale><encoding>ISO-8859-6</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>be</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>bg</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ca</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>cs</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>da</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>de</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>el</locale><encoding>ISO-8859-7</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>en</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>es</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>et</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>fi</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>fr</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>hr</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>hu</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>is</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>it</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>iw</locale><encoding>ISO-8859-8</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ja</locale><encoding>Shift_JIS</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ko</locale><encoding>EUC-KR</encoding></locale-encoding-mapping>     
-    <locale-encoding-mapping><locale>lt</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>lv</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>mk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>nl</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>no</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>pl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>pt</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ro</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ru</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sh</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sk</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sq</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sr</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sv</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>tr</locale><encoding>ISO-8859-9</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>uk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>zh</locale><encoding>GB2312</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>zh_TW</locale><encoding>Big5</encoding></locale-encoding-mapping>   
-  </locale-encoding-mapping-list>
-  
-  <security-constraint>
-    <web-resource-collection>
-      <web-resource-name>Disable TRACE</web-resource-name>
-      <url-pattern>/</url-pattern>
-      <http-method>TRACE</http-method>
-    </web-resource-collection>
-    <auth-constraint/>
-  </security-constraint>
-  
-</web-app>
-
-- 
1.7.2.5


From 9e283fd0154ca6929002d8fa2ab5f5f0b8484af6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Fri, 7 Sep 2012 15:56:00 +0200
Subject: [PATCH 07/66] TS/HM: Extracted admin/spellchecker/terms to solrconfig.d

---
 usr-share/core-data/conf/solrconfig.xml |   47 +-----------------------------
 usr-share/solrconfig.d/admin.xml        |   18 ++++++++++++
 usr-share/solrconfig.d/drilldown.xml    |   13 ++++++++
 usr-share/solrconfig.d/suggestions.xml  |   17 +++++++++++
 4 files changed, 50 insertions(+), 45 deletions(-)
 create mode 100644 usr-share/solrconfig.d/admin.xml
 create mode 100644 usr-share/solrconfig.d/drilldown.xml
 create mode 100644 usr-share/solrconfig.d/suggestions.xml

diff --git a/usr-share/core-data/conf/solrconfig.xml b/usr-share/core-data/conf/solrconfig.xml
index 0a36218..8d57909 100644
--- a/usr-share/core-data/conf/solrconfig.xml
+++ b/usr-share/core-data/conf/solrconfig.xml
@@ -52,50 +52,7 @@
     <httpCaching never304="true" />
   </requestDispatcher>
 
-  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler"/>
-
-  <requestHandler name="/admin/" class="solr.admin.AdminHandlers" />
-
-  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
-    <lst name="invariants">
-      <str name="q">solrpingquery</str>
-    </lst>
-    <lst name="defaults">
-      <str name="echoParams">all</str>
-    </lst>
-  </requestHandler>
-
-  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
-    <str name="queryAnalyzerFieldType">textSpell</str>
-    <lst name="spellchecker">
-      <str name="name">default</str>
-      <str name="field">name</str>
-      <str name="spellcheckIndexDir">spellchecker</str>
-      <str name="buildOnCommit">true</str>
-    </lst>
-  </searchComponent>
-
-  <requestHandler name="/select" class="solr.SearchHandler" startup="lazy">
-    <arr name="last-components">
-      <str>spellcheck</str>
-    </arr>
-  </requestHandler>
-
-  <searchComponent name="terms" class="solr.TermsComponent"/>
-
-  <!-- A request handler for demonstrating the terms component -->
-  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
-     <lst name="defaults">
-      <bool name="terms">true</bool>
-    </lst>     
-    <arr name="components">
-      <str>terms</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Legacy config for the admin interface -->
-  <admin>
-    <defaultQuery>*:*</defaultQuery>
-  </admin>
+  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />
+  <requestHandler name="/select" class="solr.SearchHandler" />
 
 </config>
diff --git a/usr-share/solrconfig.d/admin.xml b/usr-share/solrconfig.d/admin.xml
new file mode 100644
index 0000000..f887414
--- /dev/null
+++ b/usr-share/solrconfig.d/admin.xml
@@ -0,0 +1,18 @@
+<config>
+  <requestHandler name="/admin/" class="solr.admin.AdminHandlers" />
+
+  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
+    <lst name="invariants">
+      <str name="q">solrpingquery</str>
+    </lst>
+    <lst name="defaults">
+      <str name="echoParams">all</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Legacy config for the admin interface -->
+  <admin>
+    <defaultQuery>*:*</defaultQuery>
+  </admin>
+</config>
+
diff --git a/usr-share/solrconfig.d/drilldown.xml b/usr-share/solrconfig.d/drilldown.xml
new file mode 100644
index 0000000..ac9f732
--- /dev/null
+++ b/usr-share/solrconfig.d/drilldown.xml
@@ -0,0 +1,13 @@
+<config>
+  <searchComponent name="terms" class="solr.TermsComponent"/>
+
+  <!-- A request handler for demonstrating the terms component -->
+  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
+     <lst name="defaults">
+      <bool name="terms">true</bool>
+    </lst>     
+    <arr name="components">
+      <str>terms</str>
+    </arr>
+  </requestHandler>
+</config>
diff --git a/usr-share/solrconfig.d/suggestions.xml b/usr-share/solrconfig.d/suggestions.xml
new file mode 100644
index 0000000..b1316c2
--- /dev/null
+++ b/usr-share/solrconfig.d/suggestions.xml
@@ -0,0 +1,17 @@
+<config>
+  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
+    <str name="queryAnalyzerFieldType">textSpell</str>
+    <lst name="spellchecker">
+      <str name="name">default</str>
+      <str name="field">name</str>
+      <str name="spellcheckIndexDir">spellchecker</str>
+      <str name="buildOnCommit">true</str>
+    </lst>
+  </searchComponent>
+
+  <requestHandler name="/select" class="solr.SearchHandler" startup="lazy">
+    <arr name="last-components">
+      <str>spellcheck</str>
+    </arr>
+  </requestHandler>
+</config>
-- 
1.7.2.5


From c5dfbb40d25a76398b181917e3c65bf4c51fcea3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Fri, 7 Sep 2012 16:12:44 +0200
Subject: [PATCH 08/66] TS/HM: Use jetty.xml from etc directory

---
 bin/start-solr.py   |    2 +-
 test/_solr-tests.py |   12 +++++++-----
 2 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/bin/start-solr.py b/bin/start-solr.py
index 07567ff..e5bdec0 100755
--- a/bin/start-solr.py
+++ b/bin/start-solr.py
@@ -39,7 +39,7 @@ def setupSolrConfig(stateDir, port, cores):
 
     system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
             port,
-            join(stateDir, 'jetty.xml')
+            join(stateDir, 'etc', 'jetty.xml')
         ))
 
     system(r"""sed 's,^jetty\.home=.*$,jetty.home=%s,' -i %s""" % (
diff --git a/test/_solr-tests.py b/test/_solr-tests.py
index a1469e0..674214a 100644
--- a/test/_solr-tests.py
+++ b/test/_solr-tests.py
@@ -33,8 +33,9 @@ class SolrRunTest(TestCase):
         try:
             solrDataDir = join(tempdir, 'solr-data')
             start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'córë2'])
-            self.assertEquals(set(['contexts', 'cores', 'webdefault.xml', 'jetty.xml', 'start.config', 'solr.xml']), set(listdir(solrDataDir)))
-            jetty_xml = parse(open(join(solrDataDir, 'jetty.xml')))
+            self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+            self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+            jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
             self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
 
             f = open(join(solrDataDir, 'start.config'))
@@ -70,8 +71,9 @@ class SolrRunTest(TestCase):
             solrDataDir = join(tempdir, 'solr-data')
             start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1'])
             start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'córë2'])
-            self.assertEquals(set(['contexts', 'cores', 'webdefault.xml', 'jetty.xml', 'start.config', 'solr.xml']), set(listdir(solrDataDir)))
-            jetty_xml = parse(open(join(solrDataDir, 'jetty.xml')))
+            self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+            self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+            jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
             self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
 
             f = open(join(solrDataDir, 'start.config'))
@@ -131,7 +133,7 @@ class SolrRunTest(TestCase):
         finally:
             start_solr._execvp = _original_execvp
 
-    def testStartSolrReally(self):
+    def xxtestStartSolrReally(self):
         tempdir = "/tmp/testSetupSolrConfig"
         isdir(tempdir) and rmtree(tempdir)
         mkdir(tempdir)
-- 
1.7.2.5


From f1db017ab16ef1dbef3e1f014942e70d886b2daa Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Fri, 7 Sep 2012 16:56:33 +0200
Subject: [PATCH 09/66] TS/HM: Split up setup in different functions; Added include of drilldown and admin

---
 bin/start-solr.py                |   61 ++++++++++----
 test/_solr-tests.py              |  175 ++++++++++++++++++++------------------
 usr-share/solrconfig.d/admin.xml |    2 +-
 3 files changed, 138 insertions(+), 100 deletions(-)

diff --git a/bin/start-solr.py b/bin/start-solr.py
index e5bdec0..c08b5d9 100755
--- a/bin/start-solr.py
+++ b/bin/start-solr.py
@@ -26,7 +26,7 @@ def copyDir(src, dst):
     system('cp -r %s/* %s/' % (src, dst))
     system('find %s -name ".svn" | xargs rm -rf' % dst) # DO_NOT_DISTRIBUTE
 
-def setupSolrConfig(stateDir, port, cores):
+def setupSolrConfig(stateDir, port, cores, drilldown=None, admin=None):
     if not isdir(stateDir):
         makedirs(stateDir)
         copyDir(join(configdir, 'solr-data'), stateDir)
@@ -37,11 +37,54 @@ def setupSolrConfig(stateDir, port, cores):
             if currentMatchVersion != newMatchVersion:
                 raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
 
+    _setupJettyXml(port, stateDir)
+    _setupStartConfig(stateDir)
+    _setupSolrXml(stateDir)
+    _setupCoreData(stateDir, cores)
+    if drilldown:
+        _setupDrilldown(stateDir, drilldown)
+    if admin:
+        _setupAdmin(stateDir, admin)
+
+def _setupDrilldown(stateDir, cores):
+    drilldown_xml = parse(open(join(configdir, 'solrconfig.d', 'drilldown.xml')))
+    for core in cores:
+        solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+        core_sorlconfig = parse(open(solrconfig_file))
+        core_sorlconfig.getroot().extend(drilldown_xml.xpath('/config/*'))
+        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
+def _setupAdmin(stateDir, cores):
+    admin_xml = parse(open(join(configdir, 'solrconfig.d', 'admin.xml')))
+    for core in cores:
+        solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+        core_sorlconfig = parse(open(solrconfig_file))
+        core_sorlconfig.getroot().extend(admin_xml.xpath('/config/*'))
+        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
+def _setupCoreData(stateDir, cores):
+    solr_xml = parse(open(join(stateDir, 'solr.xml')))
+    for core in cores:
+        coreDir = join(stateDir, 'cores', core)
+        if not isdir(coreDir):
+            makedirs(coreDir)
+            coresElement = solr_xml.xpath("/solr/cores")[0]
+            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
+            copyDir(join(configdir, 'core-data'), coreDir)
+            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
+            schema_xml = parse(open(schema_xml_path))
+            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
+            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
+
+    open(join(stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
+
+def _setupJettyXml(port, stateDir):
     system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
             port,
             join(stateDir, 'etc', 'jetty.xml')
         ))
 
+def _setupStartConfig(stateDir):
     system(r"""sed 's,^jetty\.home=.*$,jetty.home=%s,' -i %s""" % (
             stateDir,
             join(stateDir, 'start.config')
@@ -52,23 +95,9 @@ def setupSolrConfig(stateDir, port, cores):
             join(stateDir, 'start.config')
         ))
 
+def _setupSolrXml(stateDir):
     system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, stateDir))
 
-    solr_xml = parse(open(join(stateDir, 'solr.xml')))
-    for core in cores:
-        coreDir = join(stateDir, 'cores', core)
-        if not isdir(coreDir):
-            makedirs(coreDir)
-            coresElement = solr_xml.xpath("/solr/cores")[0]
-            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
-            copyDir(join(configdir, 'core-data'), coreDir)
-            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
-            schema_xml = parse(open(schema_xml_path))
-            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
-            open(schema_xml_path, 'w').write(tostring(schema_xml))
-
-    open(join(stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True))
-
 def startSolr(stateDir, port, javaMX):
     _execvp('java', [
         'java',
diff --git a/test/_solr-tests.py b/test/_solr-tests.py
index 674214a..3a64f7a 100644
--- a/test/_solr-tests.py
+++ b/test/_solr-tests.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
-from unittest import main, TestCase
+from unittest import main
+from seecr.test import SeecrTestCase
 from StringIO import StringIO
 from os import mkdir, listdir, system
 from os.path import join, dirname, abspath, basename, isdir
@@ -11,7 +12,7 @@ start_solr = __import__('start-solr')
 mydir = dirname(abspath(__file__))
 version = "3.6.0"
 
-class SolrRunTest(TestCase):
+class SolrRunTest(SeecrTestCase):
 
     def testParseArguments(self):
         options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--core=core1', '--core=core2'])
@@ -28,92 +29,100 @@ class SolrRunTest(TestCase):
             sys.stdout = sys.__stdout__
 
     def testSetupSolrConfig(self):
-        tempdir = "/tmp/testSetupSolrConfig"
-        mkdir(tempdir)
-        try:
-            solrDataDir = join(tempdir, 'solr-data')
-            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'córë2'])
-            self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
-            self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
-            jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
-            self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
-
-            f = open(join(solrDataDir, 'start.config'))
-            for line in f:
-                if line.startswith('jetty.home'):
-                    break
-            else:
-                self.fail("No jetty.home line found")
-            f.close()
-            self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-            self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
-
-            context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
-            self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
-
-            self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
-            solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-            self.assertEquals(['core1', 'córë2'], solr_xml.xpath("//core/@name"))
-            self.assertEquals(['cores/core1', 'cores/córë2'], solr_xml.xpath("//core/@instanceDir"))
-
-            schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-            self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
-
-            schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
-            self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
-        finally:
-            rmtree(tempdir)
+        solrDataDir = join(self.tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'córë2'])
+        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
+        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+        f = open(join(solrDataDir, 'start.config'))
+        for line in f:
+            if line.startswith('jetty.home'):
+                break
+        else:
+            self.fail("No jetty.home line found")
+        f.close()
+        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+        self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
+
+        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+        self.assertEquals(['core1', 'córë2'], solr_xml.xpath("//core/@name"))
+        self.assertEquals(['cores/core1', 'cores/córë2'], solr_xml.xpath("//core/@instanceDir"))
+
+        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
 
     def testSetupSolrTwiceConfig(self):
-        tempdir = "/tmp/testSetupSolrConfig"
-        mkdir(tempdir)
-        try:
-            solrDataDir = join(tempdir, 'solr-data')
-            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1'])
-            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'córë2'])
-            self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
-            self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
-            jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
-            self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
-
-            f = open(join(solrDataDir, 'start.config'))
-            for line in f:
-                if line.startswith('jetty.home'):
-                    break
-            else:
-                self.fail("No jetty.home line found")
-            f.close()
-            self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-            self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
-
-            context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
-            self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
-
-            self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
-            solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-            self.assertEquals(['core1', 'córë2'], solr_xml.xpath("//core/@name"))
-            self.assertEquals(['cores/core1', 'cores/córë2'], solr_xml.xpath("//core/@instanceDir"))
-
-            schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-            self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
-
-            schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
-            self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
-        finally:
-            rmtree(tempdir)
+        solrDataDir = join(self.tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1'])
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'córë2'])
+        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
+        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+        f = open(join(solrDataDir, 'start.config'))
+        for line in f:
+            if line.startswith('jetty.home'):
+                break
+        else:
+            self.fail("No jetty.home line found")
+        f.close()
+        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+        self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
+
+        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+        self.assertEquals(['core1', 'córë2'], solr_xml.xpath("//core/@name"))
+        self.assertEquals(['cores/core1', 'cores/córë2'], solr_xml.xpath("//core/@instanceDir"))
+
+        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+
+    def testSetupSolrConfigWithDrilldown(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'core2'], drilldown=['core1'])
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertTrue('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertFalse('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+
+    def testSetupSolrConfigWithAdmin(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'core2'], admin=['core1'])
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertTrue('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertTrue('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertTrue('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertFalse('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertFalse('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
 
     def testNotMatchingLuceneMatchVersion(self):
-        tempdir = "/tmp/testSetupSolrConfig"
-        mkdir(tempdir)
-        try:
-            solrDataDir = join(tempdir, 'solr-data')
-            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1'])
-            system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
-
-            self.assertRaises(ValueError, lambda: start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1']))
-        finally:
-            rmtree(tempdir)
+        solrDataDir = join(self.tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1'])
+        system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
 
+        self.assertRaises(ValueError, lambda: start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1']))
 
     def testStartSolr(self):
         execCalled = []
diff --git a/usr-share/solrconfig.d/admin.xml b/usr-share/solrconfig.d/admin.xml
index f887414..0bb6621 100644
--- a/usr-share/solrconfig.d/admin.xml
+++ b/usr-share/solrconfig.d/admin.xml
@@ -1,5 +1,5 @@
 <config>
-  <requestHandler name="/admin/" class="solr.admin.AdminHandlers" />
+  <requestHandler name="/admin" class="solr.admin.AdminHandlers" />
 
   <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
     <lst name="invariants">
-- 
1.7.2.5


From 3918c526921992c2bd5fb877659d59f833d71aa8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Mon, 10 Sep 2012 09:27:41 +0200
Subject: [PATCH 10/66] TS/HM: Add (optional) suggestions to solrconfig.xml

---
 bin/start-solr.py                      |   16 +++++++++++++++-
 test/_solr-tests.py                    |   13 +++++++++++++
 usr-share/solrconfig.d/suggestions.xml |   10 +++++-----
 3 files changed, 33 insertions(+), 6 deletions(-)

diff --git a/bin/start-solr.py b/bin/start-solr.py
index c08b5d9..cba109b 100755
--- a/bin/start-solr.py
+++ b/bin/start-solr.py
@@ -4,6 +4,7 @@ from os import execvp, system, makedirs, listdir
 from os.path import dirname, abspath, isdir, join
 from optparse import OptionParser, Option
 from lxml.etree import parse, SubElement, tostring
+from StringIO import StringIO
 from subprocess import Popen
 
 mydir = dirname(abspath(__file__))
@@ -26,7 +27,7 @@ def copyDir(src, dst):
     system('cp -r %s/* %s/' % (src, dst))
     system('find %s -name ".svn" | xargs rm -rf' % dst) # DO_NOT_DISTRIBUTE
 
-def setupSolrConfig(stateDir, port, cores, drilldown=None, admin=None):
+def setupSolrConfig(stateDir, port, cores, drilldown=None, admin=None, suggestions=None, config=None):
     if not isdir(stateDir):
         makedirs(stateDir)
         copyDir(join(configdir, 'solr-data'), stateDir)
@@ -45,6 +46,8 @@ def setupSolrConfig(stateDir, port, cores, drilldown=None, admin=None):
         _setupDrilldown(stateDir, drilldown)
     if admin:
         _setupAdmin(stateDir, admin)
+    if suggestions:
+        _setupSuggestions(stateDir, suggestions, config=config)
 
 def _setupDrilldown(stateDir, cores):
     drilldown_xml = parse(open(join(configdir, 'solrconfig.d', 'drilldown.xml')))
@@ -62,6 +65,17 @@ def _setupAdmin(stateDir, cores):
         core_sorlconfig.getroot().extend(admin_xml.xpath('/config/*'))
         open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
 
+def _setupSuggestions(stateDir, cores, config):
+    for core in cores:
+        if core not in config['suggestions']:
+            continue
+        suggestions = open(join(configdir, 'solrconfig.d', 'suggestions.xml')).read() % config['suggestions'][core]
+        suggestions_xml = parse(StringIO(suggestions))
+        solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+        core_sorlconfig = parse(open(solrconfig_file))
+        core_sorlconfig.getroot().extend(suggestions_xml.xpath('/config/*'))
+        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
 def _setupCoreData(stateDir, cores):
     solr_xml = parse(open(join(stateDir, 'solr.xml')))
     for core in cores:
diff --git a/test/_solr-tests.py b/test/_solr-tests.py
index 3a64f7a..86ca5da 100644
--- a/test/_solr-tests.py
+++ b/test/_solr-tests.py
@@ -117,6 +117,19 @@ class SolrRunTest(SeecrTestCase):
         self.assertFalse('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
         self.assertFalse('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
 
+    def testSetupSolrConfigWithSuggestions(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'suggestions': {'core2': {'field': 'afieldname'}}}
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'core2'], suggestions=['core2'], config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertEquals(['afieldname'], solrconfig_xml.xpath('/config/searchComponent[@name="suggestions"]/lst/str[@name="field"]/text()'))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
     def testNotMatchingLuceneMatchVersion(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1'])
diff --git a/usr-share/solrconfig.d/suggestions.xml b/usr-share/solrconfig.d/suggestions.xml
index b1316c2..e851e47 100644
--- a/usr-share/solrconfig.d/suggestions.xml
+++ b/usr-share/solrconfig.d/suggestions.xml
@@ -1,17 +1,17 @@
 <config>
-  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
+  <searchComponent name="suggestions" class="solr.SpellCheckComponent">
     <str name="queryAnalyzerFieldType">textSpell</str>
     <lst name="spellchecker">
-      <str name="name">default</str>
-      <str name="field">name</str>
-      <str name="spellcheckIndexDir">spellchecker</str>
+      <str name="name">suggestions</str>
+      <str name="field">%(field)s</str>
+      <str name="spellcheckIndexDir">suggestions</str>
       <str name="buildOnCommit">true</str>
     </lst>
   </searchComponent>
 
   <requestHandler name="/select" class="solr.SearchHandler" startup="lazy">
     <arr name="last-components">
-      <str>spellcheck</str>
+      <str>suggestions</str>
     </arr>
   </requestHandler>
 </config>
-- 
1.7.2.5


From 5aaaa6c71ba43d89237fa04975db33d22ff86c57 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Mon, 10 Sep 2012 10:52:38 +0200
Subject: [PATCH 11/66] TS/HM: Add any feature from suggestions.d directory

Configuration of cores and features with json
---
 bin/start-solr.py   |   51 +++++---------
 test/_alltests.py   |   24 +++++++
 test/_solr-tests.py |  167 --------------------------------------------
 test/alltest.sh     |    8 --
 test/alltests.sh    |   13 ++++
 test/solrruntest.py |  191 +++++++++++++++++++++++++++++++++++++++++++++++++++
 6 files changed, 246 insertions(+), 208 deletions(-)
 create mode 100644 test/_alltests.py
 delete mode 100644 test/_solr-tests.py
 delete mode 100755 test/alltest.sh
 create mode 100755 test/alltests.sh
 create mode 100644 test/solrruntest.py

diff --git a/bin/start-solr.py b/bin/start-solr.py
index cba109b..5487bb8 100755
--- a/bin/start-solr.py
+++ b/bin/start-solr.py
@@ -27,7 +27,9 @@ def copyDir(src, dst):
     system('cp -r %s/* %s/' % (src, dst))
     system('find %s -name ".svn" | xargs rm -rf' % dst) # DO_NOT_DISTRIBUTE
 
-def setupSolrConfig(stateDir, port, cores, drilldown=None, admin=None, suggestions=None, config=None):
+def setupSolrConfig(stateDir, port, config):
+    assert all(type(v) == dict for v in config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
+
     if not isdir(stateDir):
         makedirs(stateDir)
         copyDir(join(configdir, 'solr-data'), stateDir)
@@ -41,40 +43,23 @@ def setupSolrConfig(stateDir, port, cores, drilldown=None, admin=None, suggestio
     _setupJettyXml(port, stateDir)
     _setupStartConfig(stateDir)
     _setupSolrXml(stateDir)
-    _setupCoreData(stateDir, cores)
-    if drilldown:
-        _setupDrilldown(stateDir, drilldown)
-    if admin:
-        _setupAdmin(stateDir, admin)
-    if suggestions:
-        _setupSuggestions(stateDir, suggestions, config=config)
-
-def _setupDrilldown(stateDir, cores):
-    drilldown_xml = parse(open(join(configdir, 'solrconfig.d', 'drilldown.xml')))
-    for core in cores:
-        solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
-        core_sorlconfig = parse(open(solrconfig_file))
-        core_sorlconfig.getroot().extend(drilldown_xml.xpath('/config/*'))
-        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
-
-def _setupAdmin(stateDir, cores):
-    admin_xml = parse(open(join(configdir, 'solrconfig.d', 'admin.xml')))
-    for core in cores:
-        solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
-        core_sorlconfig = parse(open(solrconfig_file))
-        core_sorlconfig.getroot().extend(admin_xml.xpath('/config/*'))
-        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
-
-def _setupSuggestions(stateDir, cores, config):
-    for core in cores:
-        if core not in config['suggestions']:
-            continue
-        suggestions = open(join(configdir, 'solrconfig.d', 'suggestions.xml')).read() % config['suggestions'][core]
-        suggestions_xml = parse(StringIO(suggestions))
-        solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
-        core_sorlconfig = parse(open(solrconfig_file))
-        core_sorlconfig.getroot().extend(suggestions_xml.xpath('/config/*'))
-        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+    _setupCoreData(stateDir, config.keys())
+
+    for core, features in config.items():
+        for feature, options in features.items():
+            _setupFeature(name=feature, stateDir=stateDir, core=core, options=options)
+
+def _setupFeature(name, stateDir, core, options):
+    if options == False:
+        return
+    feature = open(join(configdir, 'solrconfig.d', '%s.xml' % name)).read()
+    if type(options) is dict:
+        feature = feature % options
+    feature_xml = parse(StringIO(feature))
+    solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+    core_sorlconfig = parse(open(solrconfig_file))
+    core_sorlconfig.getroot().extend(feature_xml.xpath('/config/*'))
+    open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
 
 def _setupCoreData(stateDir, cores):
     solr_xml = parse(open(join(stateDir, 'solr.xml')))
diff --git a/test/_alltests.py b/test/_alltests.py
new file mode 100644
index 0000000..b1b95ce
--- /dev/null
+++ b/test/_alltests.py
@@ -0,0 +1,24 @@
+## begin license ##
+# 
+# All rights reserved.
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+## end license ##
+
+import os, sys
+os.system('find .. -name "*.pyc" | xargs rm -f')
+
+from glob import glob
+for path in glob('../deps.d/*'):
+    sys.path.insert(0, path)
+
+sys.path.insert(0, '../bin')
+
+from unittest import main
+
+from solrruntest import SolrRunTest
+
+if __name__ == '__main__':
+    main()
+
diff --git a/test/_solr-tests.py b/test/_solr-tests.py
deleted file mode 100644
index 86ca5da..0000000
--- a/test/_solr-tests.py
+++ /dev/null
@@ -1,167 +0,0 @@
-# -*- coding: utf-8 -*-
-from unittest import main
-from seecr.test import SeecrTestCase
-from StringIO import StringIO
-from os import mkdir, listdir, system
-from os.path import join, dirname, abspath, basename, isdir
-from shutil import rmtree
-from lxml.etree import parse
-import sys
-
-start_solr = __import__('start-solr')
-mydir = dirname(abspath(__file__))
-version = "3.6.0"
-
-class SolrRunTest(SeecrTestCase):
-
-    def testParseArguments(self):
-        options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--core=core1', '--core=core2'])
-        self.assertEquals(8042, options.port)
-        self.assertEquals('/tmp', options.stateDir)
-        self.assertEquals(['core1', 'core2'], options.core)
-
-    def testIncompleteArguments(self):
-        stdout_mock = StringIO()
-        sys.stdout = stdout_mock
-        try:
-            self.assertRaises(ValueError, lambda: start_solr.parseArguments(['--port=8042', '--stateDir=/tmp']))
-        finally:
-            sys.stdout = sys.__stdout__
-
-    def testSetupSolrConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'córë2'])
-        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
-        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
-        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
-        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
-
-        f = open(join(solrDataDir, 'start.config'))
-        for line in f:
-            if line.startswith('jetty.home'):
-                break
-        else:
-            self.fail("No jetty.home line found")
-        f.close()
-        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
-
-        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
-        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
-
-        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
-        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-        self.assertEquals(['core1', 'córë2'], solr_xml.xpath("//core/@name"))
-        self.assertEquals(['cores/core1', 'cores/córë2'], solr_xml.xpath("//core/@instanceDir"))
-
-        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
-
-        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
-
-    def testSetupSolrTwiceConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1'])
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'córë2'])
-        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
-        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
-        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
-        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
-
-        f = open(join(solrDataDir, 'start.config'))
-        for line in f:
-            if line.startswith('jetty.home'):
-                break
-        else:
-            self.fail("No jetty.home line found")
-        f.close()
-        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
-
-        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
-        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
-
-        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
-        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-        self.assertEquals(['core1', 'córë2'], solr_xml.xpath("//core/@name"))
-        self.assertEquals(['cores/core1', 'cores/córë2'], solr_xml.xpath("//core/@instanceDir"))
-
-        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
-
-        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
-
-    def testSetupSolrConfigWithDrilldown(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'core2'], drilldown=['core1'])
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertTrue('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertFalse('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertFalse('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-
-    def testSetupSolrConfigWithAdmin(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'core2'], admin=['core1'])
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertTrue('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertTrue('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertTrue('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertFalse('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertFalse('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertFalse('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
-
-    def testSetupSolrConfigWithSuggestions(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'suggestions': {'core2': {'field': 'afieldname'}}}
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1', 'core2'], suggestions=['core2'], config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertEquals(['afieldname'], solrconfig_xml.xpath('/config/searchComponent[@name="suggestions"]/lst/str[@name="field"]/text()'))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-
-    def testNotMatchingLuceneMatchVersion(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1'])
-        system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
-
-        self.assertRaises(ValueError, lambda: start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, cores=['core1']))
-
-    def testStartSolr(self):
-        execCalled = []
-        def execvpMock(*args, **kwargs):
-            execCalled.append((args, kwargs))
-
-        try:
-            _original_execvp = start_solr._execvp
-            start_solr._execvp = execvpMock
-            start_solr.startSolr(stateDir='/the/state/dir', port=1423, javaMX="1234M")
-            self.assertEquals(1, len(execCalled))
-            self.assertEquals((
-                'java', 
-                ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=/the/state/dir/start.config', '-Dsolr.solr.home=/the/state/dir', '-jar', '/usr/share/java/solr3.6.0/start.jar'],
-            ), execCalled[0][0])
-            self.assertEquals({}, execCalled[0][1])
-        finally:
-            start_solr._execvp = _original_execvp
-
-    def xxtestStartSolrReally(self):
-        tempdir = "/tmp/testSetupSolrConfig"
-        isdir(tempdir) and rmtree(tempdir)
-        mkdir(tempdir)
-        solrDataDir = join(tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8000, cores=["test"])
-        start_solr.startSolr(stateDir=solrDataDir, port=8000, javaMX="1024M")
-
-if __name__ == '__main__':
-    main()
diff --git a/test/alltest.sh b/test/alltest.sh
deleted file mode 100755
index 54c3e56..0000000
--- a/test/alltest.sh
+++ /dev/null
@@ -1,8 +0,0 @@
-#!/bin/bash
-mydir=$(cd $(dirname $0); pwd)
-export PYTHONPATH=$(dirname $mydir)/bin:$PYTHONPATH
-if [ "$(python -V 2>&1 | awk '{print $2}' | cut -c -3)" == "2.4" ]; then
-    python2.5 ${mydir}/_solr-tests.py
-else
-    python ${mydir}/_solr-tests.py
-fi
diff --git a/test/alltests.sh b/test/alltests.sh
new file mode 100755
index 0000000..139c7f8
--- /dev/null
+++ b/test/alltests.sh
@@ -0,0 +1,13 @@
+#!/bin/bash
+## begin license ##
+# 
+# All rights reserved.
+# 
+# Copyright (C) 2005-2010 Seek You Too B.V. (CQ2) http://www.cq2.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+## end license ##
+
+export LANG=en_US.UTF-8
+export PYTHONPATH=.:$PYTHONPATH
+python _alltests.py "$@"
diff --git a/test/solrruntest.py b/test/solrruntest.py
new file mode 100644
index 0000000..8b60d51
--- /dev/null
+++ b/test/solrruntest.py
@@ -0,0 +1,191 @@
+# -*- coding: utf-8 -*-
+from unittest import main
+from seecr.test import SeecrTestCase
+from StringIO import StringIO
+from os import mkdir, listdir, system
+from os.path import join, dirname, abspath, basename, isdir
+from shutil import rmtree
+from lxml.etree import parse
+import sys
+
+start_solr = __import__('start-solr')
+mydir = dirname(abspath(__file__))
+version = "3.6.0"
+
+class SolrRunTest(SeecrTestCase):
+
+    def testParseArguments(self):
+        options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--core=core1', '--core=core2'])
+        self.assertEquals(8042, options.port)
+        self.assertEquals('/tmp', options.stateDir)
+        self.assertEquals(['core1', 'core2'], options.core)
+
+    def testIncompleteArguments(self):
+        stdout_mock = StringIO()
+        sys.stdout = stdout_mock
+        try:
+            self.assertRaises(ValueError, lambda: start_solr.parseArguments(['--port=8042', '--stateDir=/tmp']))
+        finally:
+            sys.stdout = sys.__stdout__
+
+    def testSetupSolrConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
+        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
+        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+        f = open(join(solrDataDir, 'start.config'))
+        for line in f:
+            if line.startswith('jetty.home'):
+                break
+        else:
+            self.fail("No jetty.home line found")
+        f.close()
+        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+        self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
+
+        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+        self.assertEquals(set([u'córë2', 'core1']), set(solr_xml.xpath("//core/@name")))
+        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
+
+        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+
+    def testSetupSolrTwiceConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
+        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
+        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+        f = open(join(solrDataDir, 'start.config'))
+        for line in f:
+            if line.startswith('jetty.home'):
+                break
+        else:
+            self.fail("No jetty.home line found")
+        f.close()
+        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+        self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
+
+        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+        self.assertEquals(['core1', 'córë2'], solr_xml.xpath("//core/@name"))
+        self.assertEquals(['cores/core1', 'cores/córë2'], solr_xml.xpath("//core/@instanceDir"))
+
+        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+
+    def testSetupSolrConfigWithDrilldown(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'drilldown': {}}, 'core2': {}}
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertTrue('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertFalse('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+
+    def testSetupSolrConfigWithAdmin(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'admin': {}}, 'core2': {}}
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertTrue('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertTrue('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertTrue('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertFalse('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertFalse('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
+
+    def testSetupSolrConfigWithSuggestions(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core2': {'suggestions': {'field': 'afieldname'}}, 'core1': {}}
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertEquals(['afieldname'], solrconfig_xml.xpath('/config/searchComponent[@name="suggestions"]/lst/str[@name="field"]/text()'))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+    def testSetupWithNoFeatures(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'suggestions': False}, 'core2': {}}
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+    def testInvalidCoreConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'suggestions': False}, 'core2': False}
+        try:
+            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+            self.fail()
+        except AssertionError, e:
+            self.assertEquals("Core feature descriptions must be a dictionary (empty for no additional features).", str(e))
+            self.assertFalse(isdir(solrDataDir))
+
+    def testNotMatchingLuceneMatchVersion(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
+
+        self.assertRaises(ValueError, lambda: start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}}))
+
+    def testStartSolr(self):
+        execCalled = []
+        def execvpMock(*args, **kwargs):
+            execCalled.append((args, kwargs))
+
+        try:
+            _original_execvp = start_solr._execvp
+            start_solr._execvp = execvpMock
+            start_solr.startSolr(stateDir='/the/state/dir', port=1423, javaMX="1234M")
+            self.assertEquals(1, len(execCalled))
+            self.assertEquals((
+                'java', 
+                ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=/the/state/dir/start.config', '-Dsolr.solr.home=/the/state/dir', '-jar', '/usr/share/java/solr3.6.0/start.jar'],
+            ), execCalled[0][0])
+            self.assertEquals({}, execCalled[0][1])
+        finally:
+            start_solr._execvp = _original_execvp
+
+    def xxtestStartSolrReally(self):
+        tempdir = "/tmp/testSetupSolrConfig"
+        isdir(tempdir) and rmtree(tempdir)
+        mkdir(tempdir)
+        solrDataDir = join(tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8000, cores=["test"])
+        start_solr.startSolr(stateDir=solrDataDir, port=8000, javaMX="1024M")
+
+if __name__ == '__main__':
+    main()
-- 
1.7.2.5


From 6bdfbead38d6954c2df50e40ebabd18241644075 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Mon, 10 Sep 2012 10:57:32 +0200
Subject: [PATCH 12/66] TS/HM: Raise ValueError on unknown feature

---
 bin/start-solr.py   |    8 ++++++--
 test/solrruntest.py |    9 +++++++++
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/bin/start-solr.py b/bin/start-solr.py
index 5487bb8..6b1eeec 100755
--- a/bin/start-solr.py
+++ b/bin/start-solr.py
@@ -1,7 +1,7 @@
 #!/usr/bin/env python2.6
 from sys import argv, exit
 from os import execvp, system, makedirs, listdir
-from os.path import dirname, abspath, isdir, join
+from os.path import dirname, abspath, isdir, join, isfile
 from optparse import OptionParser, Option
 from lxml.etree import parse, SubElement, tostring
 from StringIO import StringIO
@@ -52,7 +52,11 @@ def setupSolrConfig(stateDir, port, config):
 def _setupFeature(name, stateDir, core, options):
     if options == False:
         return
-    feature = open(join(configdir, 'solrconfig.d', '%s.xml' % name)).read()
+    featureFilename = join(configdir, 'solrconfig.d', '%s.xml' % name)
+    if not isfile(featureFilename):
+        raise ValueError("Unknown feature '%s'" % name)
+
+    feature = open(featureFilename).read()
     if type(options) is dict:
         feature = feature % options
     feature_xml = parse(StringIO(feature))
diff --git a/test/solrruntest.py b/test/solrruntest.py
index 8b60d51..b4db85e 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -154,6 +154,15 @@ class SolrRunTest(SeecrTestCase):
             self.assertEquals("Core feature descriptions must be a dictionary (empty for no additional features).", str(e))
             self.assertFalse(isdir(solrDataDir))
 
+    def testUnknownFeatureInConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'unknown-feature': True}}
+        try:
+            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+            self.fail()
+        except ValueError, e:
+            self.assertEquals("Unknown feature 'unknown-feature'", str(e))
+
     def testNotMatchingLuceneMatchVersion(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
-- 
1.7.2.5


From cb9a222fc27059b0c069863774d6449da2f67298 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Mon, 10 Sep 2012 11:31:41 +0200
Subject: [PATCH 13/66] TS/HM: Added example config in help message

---
 bin/start-solr.py |   17 +++++++++++++----
 1 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/bin/start-solr.py b/bin/start-solr.py
index 6b1eeec..d00ffc6 100755
--- a/bin/start-solr.py
+++ b/bin/start-solr.py
@@ -12,13 +12,22 @@ configdir = join(dirname(mydir), 'usr-share') # is replaced by makeDeb.sh
 SOLR_VERSION = "3.6.0"
 
 def parseArguments(args):
-    parser = OptionParser()
+    features = [f.rsplit('.', 1)[0] for f in listdir(join(configdir, 'solrconfig.d'))]
+    parser = OptionParser(description="""Available features: %s.""" % ', '.join(features), epilog="""
+Example config: 
+{
+    "core1": {},
+    "core2": {"feature": {"option": "value"}},
+    "core3": {"booleanFeature": true}
+}
+""")
+    parser.format_epilog = lambda formatter: parser.epilog
     parser.add_option(Option('', '--port', type='int', help='Solr port number', dest='port'))
     parser.add_option(Option('', '--stateDir', type='string', help='Solr state directory', dest='stateDir'))
-    parser.add_option(Option('', '--core', type='string', action='append', help='Solr cores', dest='core'))
+    parser.add_option(Option('', '--config', type='string', help="Filename with json configuration file for solr", dest="config"))
     parser.add_option(Option('', '--javaMX', type='string', help="Value for -Xmx setting for java", dest="javaMX", default="1024M"))
     options, arguments = parser.parse_args(args)
-    if not all([options.port, options.stateDir, options.core]):
+    if not all([options.port, options.stateDir, options.config]):
         parser.print_help()
         raise ValueError("Missing required option (all except javaMX are required)")
     return options, arguments
@@ -123,6 +132,6 @@ if __name__ == '__main__':
         print "Don't use GCJ as the default java JRE."
         exit(1)
 
-    setupSolrConfig(stateDir=options.stateDir, port=options.port, cores=options.core)
+    setupSolrConfig(stateDir=options.stateDir, port=options.port, config=options.config)
     startSolr(stateDir=options.stateDir, port=options.port, javaMX=options.javaMX)
 
-- 
1.7.2.5


From 24bfea275080cf0aa4c5aa626efba9606d9615e0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Mon, 10 Sep 2012 11:41:07 +0200
Subject: [PATCH 14/66] TS/HM: Parse json config; Symlinked start-solr.py for development

---
 bin/start-solr      |  138 +++++++++++++++++++++++++++++++++++++++++++++++++++
 bin/start-solr.py   |  138 +--------------------------------------------------
 test/solrruntest.py |    4 +-
 3 files changed, 141 insertions(+), 139 deletions(-)
 create mode 100755 bin/start-solr
 mode change 100755 => 120000 bin/start-solr.py

diff --git a/bin/start-solr b/bin/start-solr
new file mode 100755
index 0000000..f386cae
--- /dev/null
+++ b/bin/start-solr
@@ -0,0 +1,138 @@
+#!/usr/bin/env python2.6
+from sys import argv, exit
+from os import execvp, system, makedirs, listdir
+from os.path import dirname, abspath, isdir, join, isfile
+from optparse import OptionParser, Option
+from lxml.etree import parse, SubElement, tostring
+from simplejson import load
+from StringIO import StringIO
+from subprocess import Popen
+
+mydir = dirname(abspath(__file__))
+configdir = join(dirname(mydir), 'usr-share') # is replaced by makeDeb.sh
+SOLR_VERSION = "3.6.0"
+
+def parseArguments(args):
+    features = [f.rsplit('.', 1)[0] for f in listdir(join(configdir, 'solrconfig.d'))]
+    parser = OptionParser(description="""Available features: %s.""" % ', '.join(features), epilog="""
+Example config: 
+{
+    "core1": {},
+    "core2": {"feature": {"option": "value"}},
+    "core3": {"booleanFeature": true}
+}
+""")
+    parser.format_epilog = lambda formatter: parser.epilog
+    parser.add_option(Option('', '--port', type='int', help='Solr port number', dest='port'))
+    parser.add_option(Option('', '--stateDir', type='string', help='Solr state directory', dest='stateDir'))
+    parser.add_option(Option('', '--config', type='string', help="Filename with json configuration file for solr", dest="config"))
+    parser.add_option(Option('', '--javaMX', type='string', help="Value for -Xmx setting for java", dest="javaMX", default="1024M"))
+    options, arguments = parser.parse_args(args)
+    if not all([options.port, options.stateDir, options.config]):
+        parser.print_help()
+        raise ValueError("Missing required option (all except javaMX are required)")
+    return options, arguments
+
+def copyDir(src, dst):
+    system('cp -r %s/* %s/' % (src, dst))
+    system('find %s -name ".svn" | xargs rm -rf' % dst) # DO_NOT_DISTRIBUTE
+
+def setupSolrConfig(stateDir, port, config):
+    assert all(type(v) == dict for v in config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
+
+    if not isdir(stateDir):
+        makedirs(stateDir)
+        copyDir(join(configdir, 'solr-data'), stateDir)
+    else:
+        newMatchVersion = parse(open(join(configdir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+        for coreDir in listdir(join(stateDir, 'cores')):
+            currentMatchVersion = parse(open(join(stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+            if currentMatchVersion != newMatchVersion:
+                raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
+
+    _setupJettyXml(port, stateDir)
+    _setupStartConfig(stateDir)
+    _setupSolrXml(stateDir)
+    _setupCoreData(stateDir, config.keys())
+
+    for core, features in config.items():
+        for feature, options in features.items():
+            _setupFeature(name=feature, stateDir=stateDir, core=core, options=options)
+
+def _setupFeature(name, stateDir, core, options):
+    if options == False:
+        return
+    featureFilename = join(configdir, 'solrconfig.d', '%s.xml' % name)
+    if not isfile(featureFilename):
+        raise ValueError("Unknown feature '%s'" % name)
+
+    feature = open(featureFilename).read()
+    if type(options) is dict:
+        feature = feature % options
+    feature_xml = parse(StringIO(feature))
+    solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+    core_sorlconfig = parse(open(solrconfig_file))
+    core_sorlconfig.getroot().extend(feature_xml.xpath('/config/*'))
+    open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
+def _setupCoreData(stateDir, cores):
+    solr_xml = parse(open(join(stateDir, 'solr.xml')))
+    for core in cores:
+        coreDir = join(stateDir, 'cores', core)
+        if not isdir(coreDir):
+            makedirs(coreDir)
+            coresElement = solr_xml.xpath("/solr/cores")[0]
+            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
+            copyDir(join(configdir, 'core-data'), coreDir)
+            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
+            schema_xml = parse(open(schema_xml_path))
+            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
+            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
+
+    open(join(stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
+
+def _setupJettyXml(port, stateDir):
+    system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
+            port,
+            join(stateDir, 'etc', 'jetty.xml')
+        ))
+
+def _setupStartConfig(stateDir):
+    system(r"""sed 's,^jetty\.home=.*$,jetty.home=%s,' -i %s""" % (
+            stateDir,
+            join(stateDir, 'start.config')
+        ))
+
+    system(r"""sed 's,^/.*$,/usr/share/java/solr%s/*,' -i %s""" % (
+            SOLR_VERSION,
+            join(stateDir, 'start.config')
+        ))
+
+def _setupSolrXml(stateDir):
+    system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, stateDir))
+
+def startSolr(stateDir, port, javaMX):
+    _execvp('java', [
+        'java',
+        '-Xmx%s' % javaMX, 
+        '-Djetty.port=%s' % port,
+        '-DSTART=%s/start.config' % stateDir,
+        '-Dsolr.solr.home=%s' % stateDir, 
+        '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
+        ])
+
+def _execvp(*args, **kwargs):
+    execvp(*args, **kwargs)
+
+
+if __name__ == '__main__':
+    args = argv[1:]
+    options, arguments = parseArguments(args)
+
+    if Popen(["java -version 2>&1 | grep 'libgcj' > /dev/null 2>&1"], shell=True).wait() == 0:
+        print "Don't use GCJ as the default java JRE."
+        exit(1)
+
+    setupSolrConfig(stateDir=options.stateDir, port=options.port, config=load(options.config))
+    startSolr(stateDir=options.stateDir, port=options.port, javaMX=options.javaMX)
+
diff --git a/bin/start-solr.py b/bin/start-solr.py
deleted file mode 100755
index d00ffc6..0000000
--- a/bin/start-solr.py
+++ /dev/null
@@ -1,137 +0,0 @@
-#!/usr/bin/env python2.6
-from sys import argv, exit
-from os import execvp, system, makedirs, listdir
-from os.path import dirname, abspath, isdir, join, isfile
-from optparse import OptionParser, Option
-from lxml.etree import parse, SubElement, tostring
-from StringIO import StringIO
-from subprocess import Popen
-
-mydir = dirname(abspath(__file__))
-configdir = join(dirname(mydir), 'usr-share') # is replaced by makeDeb.sh
-SOLR_VERSION = "3.6.0"
-
-def parseArguments(args):
-    features = [f.rsplit('.', 1)[0] for f in listdir(join(configdir, 'solrconfig.d'))]
-    parser = OptionParser(description="""Available features: %s.""" % ', '.join(features), epilog="""
-Example config: 
-{
-    "core1": {},
-    "core2": {"feature": {"option": "value"}},
-    "core3": {"booleanFeature": true}
-}
-""")
-    parser.format_epilog = lambda formatter: parser.epilog
-    parser.add_option(Option('', '--port', type='int', help='Solr port number', dest='port'))
-    parser.add_option(Option('', '--stateDir', type='string', help='Solr state directory', dest='stateDir'))
-    parser.add_option(Option('', '--config', type='string', help="Filename with json configuration file for solr", dest="config"))
-    parser.add_option(Option('', '--javaMX', type='string', help="Value for -Xmx setting for java", dest="javaMX", default="1024M"))
-    options, arguments = parser.parse_args(args)
-    if not all([options.port, options.stateDir, options.config]):
-        parser.print_help()
-        raise ValueError("Missing required option (all except javaMX are required)")
-    return options, arguments
-
-def copyDir(src, dst):
-    system('cp -r %s/* %s/' % (src, dst))
-    system('find %s -name ".svn" | xargs rm -rf' % dst) # DO_NOT_DISTRIBUTE
-
-def setupSolrConfig(stateDir, port, config):
-    assert all(type(v) == dict for v in config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
-
-    if not isdir(stateDir):
-        makedirs(stateDir)
-        copyDir(join(configdir, 'solr-data'), stateDir)
-    else:
-        newMatchVersion = parse(open(join(configdir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-        for coreDir in listdir(join(stateDir, 'cores')):
-            currentMatchVersion = parse(open(join(stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-            if currentMatchVersion != newMatchVersion:
-                raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
-
-    _setupJettyXml(port, stateDir)
-    _setupStartConfig(stateDir)
-    _setupSolrXml(stateDir)
-    _setupCoreData(stateDir, config.keys())
-
-    for core, features in config.items():
-        for feature, options in features.items():
-            _setupFeature(name=feature, stateDir=stateDir, core=core, options=options)
-
-def _setupFeature(name, stateDir, core, options):
-    if options == False:
-        return
-    featureFilename = join(configdir, 'solrconfig.d', '%s.xml' % name)
-    if not isfile(featureFilename):
-        raise ValueError("Unknown feature '%s'" % name)
-
-    feature = open(featureFilename).read()
-    if type(options) is dict:
-        feature = feature % options
-    feature_xml = parse(StringIO(feature))
-    solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
-    core_sorlconfig = parse(open(solrconfig_file))
-    core_sorlconfig.getroot().extend(feature_xml.xpath('/config/*'))
-    open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
-
-def _setupCoreData(stateDir, cores):
-    solr_xml = parse(open(join(stateDir, 'solr.xml')))
-    for core in cores:
-        coreDir = join(stateDir, 'cores', core)
-        if not isdir(coreDir):
-            makedirs(coreDir)
-            coresElement = solr_xml.xpath("/solr/cores")[0]
-            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
-            copyDir(join(configdir, 'core-data'), coreDir)
-            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
-            schema_xml = parse(open(schema_xml_path))
-            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
-            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
-
-    open(join(stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
-
-def _setupJettyXml(port, stateDir):
-    system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
-            port,
-            join(stateDir, 'etc', 'jetty.xml')
-        ))
-
-def _setupStartConfig(stateDir):
-    system(r"""sed 's,^jetty\.home=.*$,jetty.home=%s,' -i %s""" % (
-            stateDir,
-            join(stateDir, 'start.config')
-        ))
-
-    system(r"""sed 's,^/.*$,/usr/share/java/solr%s/*,' -i %s""" % (
-            SOLR_VERSION,
-            join(stateDir, 'start.config')
-        ))
-
-def _setupSolrXml(stateDir):
-    system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, stateDir))
-
-def startSolr(stateDir, port, javaMX):
-    _execvp('java', [
-        'java',
-        '-Xmx%s' % javaMX, 
-        '-Djetty.port=%s' % port,
-        '-DSTART=%s/start.config' % stateDir,
-        '-Dsolr.solr.home=%s' % stateDir, 
-        '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
-        ])
-
-def _execvp(*args, **kwargs):
-    execvp(*args, **kwargs)
-
-
-if __name__ == '__main__':
-    args = argv[1:]
-    options, arguments = parseArguments(args)
-
-    if Popen(["java -version 2>&1 | grep 'libgcj' > /dev/null 2>&1"], shell=True).wait() == 0:
-        print "Don't use GCJ as the default java JRE."
-        exit(1)
-
-    setupSolrConfig(stateDir=options.stateDir, port=options.port, config=options.config)
-    startSolr(stateDir=options.stateDir, port=options.port, javaMX=options.javaMX)
-
diff --git a/bin/start-solr.py b/bin/start-solr.py
new file mode 120000
index 0000000..67f9338
--- /dev/null
+++ b/bin/start-solr.py
@@ -0,0 +1 @@
+start-solr
\ No newline at end of file
diff --git a/test/solrruntest.py b/test/solrruntest.py
index b4db85e..2fd2201 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -15,10 +15,10 @@ version = "3.6.0"
 class SolrRunTest(SeecrTestCase):
 
     def testParseArguments(self):
-        options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--core=core1', '--core=core2'])
+        options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--config=/tmp/config.json'])
         self.assertEquals(8042, options.port)
         self.assertEquals('/tmp', options.stateDir)
-        self.assertEquals(['core1', 'core2'], options.core)
+        self.assertEquals('/tmp/config.json', options.config)
 
     def testIncompleteArguments(self):
         stdout_mock = StringIO()
-- 
1.7.2.5


From 549ed3f3e10d76284674ad3e8930a00d01968c5b Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Mon, 10 Sep 2012 13:22:11 +0100
Subject: [PATCH 15/66] TS/HM: json.load needs an open file object

---
 bin/start-solr                          |    2 +-
 usr-share/solrconfig.d/autocomplete.xml |   13 +++++++++++++
 usr-share/solrconfig.d/drilldown.xml    |   13 -------------
 3 files changed, 14 insertions(+), 14 deletions(-)
 create mode 100644 usr-share/solrconfig.d/autocomplete.xml
 delete mode 100644 usr-share/solrconfig.d/drilldown.xml

diff --git a/bin/start-solr b/bin/start-solr
index f386cae..0aeb3fe 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -133,6 +133,6 @@ if __name__ == '__main__':
         print "Don't use GCJ as the default java JRE."
         exit(1)
 
-    setupSolrConfig(stateDir=options.stateDir, port=options.port, config=load(options.config))
+    setupSolrConfig(stateDir=options.stateDir, port=options.port, config=load(open(options.config)))
     startSolr(stateDir=options.stateDir, port=options.port, javaMX=options.javaMX)
 
diff --git a/usr-share/solrconfig.d/autocomplete.xml b/usr-share/solrconfig.d/autocomplete.xml
new file mode 100644
index 0000000..ac9f732
--- /dev/null
+++ b/usr-share/solrconfig.d/autocomplete.xml
@@ -0,0 +1,13 @@
+<config>
+  <searchComponent name="terms" class="solr.TermsComponent"/>
+
+  <!-- A request handler for demonstrating the terms component -->
+  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
+     <lst name="defaults">
+      <bool name="terms">true</bool>
+    </lst>     
+    <arr name="components">
+      <str>terms</str>
+    </arr>
+  </requestHandler>
+</config>
diff --git a/usr-share/solrconfig.d/drilldown.xml b/usr-share/solrconfig.d/drilldown.xml
deleted file mode 100644
index ac9f732..0000000
--- a/usr-share/solrconfig.d/drilldown.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<config>
-  <searchComponent name="terms" class="solr.TermsComponent"/>
-
-  <!-- A request handler for demonstrating the terms component -->
-  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
-     <lst name="defaults">
-      <bool name="terms">true</bool>
-    </lst>     
-    <arr name="components">
-      <str>terms</str>
-    </arr>
-  </requestHandler>
-</config>
-- 
1.7.2.5


From 60861df8bc06b7dfa584af1cdbd63634936e14de Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 11 Sep 2012 08:20:04 +0100
Subject: [PATCH 16/66] JJ/HM: name must be default

---
 usr-share/solrconfig.d/suggestions.xml |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/usr-share/solrconfig.d/suggestions.xml b/usr-share/solrconfig.d/suggestions.xml
index e851e47..26f6dd0 100644
--- a/usr-share/solrconfig.d/suggestions.xml
+++ b/usr-share/solrconfig.d/suggestions.xml
@@ -2,7 +2,7 @@
   <searchComponent name="suggestions" class="solr.SpellCheckComponent">
     <str name="queryAnalyzerFieldType">textSpell</str>
     <lst name="spellchecker">
-      <str name="name">suggestions</str>
+      <str name="name">default</str>
       <str name="field">%(field)s</str>
       <str name="spellcheckIndexDir">suggestions</str>
       <str name="buildOnCommit">true</str>
-- 
1.7.2.5


From 65d66a87da460af4a09b9220225ef3d0a11e4002 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Tue, 11 Sep 2012 11:07:40 +0200
Subject: [PATCH 17/66] JJ/HM: Always re-write core data

---
 bin/start-solr      |   15 ++++++++-------
 test/solrruntest.py |    8 ++++----
 2 files changed, 12 insertions(+), 11 deletions(-)

diff --git a/bin/start-solr b/bin/start-solr
index 0aeb3fe..4e53968 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -77,17 +77,18 @@ def _setupFeature(name, stateDir, core, options):
 
 def _setupCoreData(stateDir, cores):
     solr_xml = parse(open(join(stateDir, 'solr.xml')))
+    coresElement = solr_xml.xpath("/solr/cores")[0]
+    [coresElement.remove(child) for child in coresElement.getchildren()]
     for core in cores:
         coreDir = join(stateDir, 'cores', core)
         if not isdir(coreDir):
             makedirs(coreDir)
-            coresElement = solr_xml.xpath("/solr/cores")[0]
-            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
-            copyDir(join(configdir, 'core-data'), coreDir)
-            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
-            schema_xml = parse(open(schema_xml_path))
-            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
-            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
+        SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
+        copyDir(join(configdir, 'core-data'), coreDir)
+        schema_xml_path = join(coreDir, 'conf', 'schema.xml')
+        schema_xml = parse(open(schema_xml_path))
+        schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
+        open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
 
     open(join(stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
 
diff --git a/test/solrruntest.py b/test/solrruntest.py
index 2fd2201..b56fa29 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -84,8 +84,8 @@ class SolrRunTest(SeecrTestCase):
 
         self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
         solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-        self.assertEquals(['core1', 'córë2'], solr_xml.xpath("//core/@name"))
-        self.assertEquals(['cores/core1', 'cores/córë2'], solr_xml.xpath("//core/@instanceDir"))
+        self.assertEquals(set(['core1', u'córë2']), set(solr_xml.xpath("//core/@name")))
+        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
 
         schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
         self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
@@ -93,9 +93,9 @@ class SolrRunTest(SeecrTestCase):
         schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
         self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
 
-    def testSetupSolrConfigWithDrilldown(self):
+    def testSetupSolrConfigWithAutocomplete(self):
         solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'drilldown': {}}, 'core2': {}}
+        config = {'core1': {'autocomplete': {}}, 'core2': {}}
         start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
         solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
         self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-- 
1.7.2.5


From 7393eae606c7d2ec29e9cf1cf825db0dc206b37d Mon Sep 17 00:00:00 2001
From: Jurjan-Paul Medema <jurjanpaul@cq2.nl>
Date: Tue, 18 Sep 2012 13:36:38 +0200
Subject: [PATCH 18/66] EG/JPM: added __timestamp__ field that gets the current datetime

---
 test/solrruntest.py                 |    4 ++--
 usr-share/core-data/conf/schema.xml |    7 ++++++-
 2 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/test/solrruntest.py b/test/solrruntest.py
index b56fa29..1a99201 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -188,12 +188,12 @@ class SolrRunTest(SeecrTestCase):
         finally:
             start_solr._execvp = _original_execvp
 
-    def xxtestStartSolrReally(self):
+    def testStartSolrReally(self):
         tempdir = "/tmp/testSetupSolrConfig"
         isdir(tempdir) and rmtree(tempdir)
         mkdir(tempdir)
         solrDataDir = join(tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8000, cores=["test"])
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8000, config={"test": {}})
         start_solr.startSolr(stateDir=solrDataDir, port=8000, javaMX="1024M")
 
 if __name__ == '__main__':
diff --git a/usr-share/core-data/conf/schema.xml b/usr-share/core-data/conf/schema.xml
index 13e9782..f107e5c 100644
--- a/usr-share/core-data/conf/schema.xml
+++ b/usr-share/core-data/conf/schema.xml
@@ -17,23 +17,28 @@
 -->
 
 <schema name="meresco-corename" version="1.5">
-
   <types>
     <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
+
     <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100" omitNorms="false" multiValued="true" indexed="true" stored="false">
       <analyzer>
         <tokenizer class="solr.ClassicTokenizerFactory"/>
         <filter class="solr.LowerCaseFilterFactory"/>
       </analyzer>
     </fieldType>
+
     <fieldType name="untokenized_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="true" indexed="true" stored="false" />
+
     <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
+
+    <fieldType name="datetime" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/> 
  </types>
 
 
  <fields>
    <field name="__id__" type="string" stored="true" required="true" /> 
    <field name="__all__" type="text_ws" /> 
+   <field name="__timestamp__" type="datetime" indexed="true" stored="false" default="NOW" sortMissingLast="true" omitNorms="true" multiValued="false" />
    <dynamicField name="sorted.*" type="sorted_string" />
    <dynamicField name="untokenized.*" type="untokenized_string" />
    <dynamicField name="meta.*" type="untokenized_string" />
-- 
1.7.2.5


From dada261e31af1cbcb4c3498f087a0d94622d11fc Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Fri, 12 Oct 2012 13:31:48 +0100
Subject: [PATCH 19/66] HM/TJ: added start-solr feature for schemaExtension

In the json config file an extra filter class can be configured for a
certain fieldType.
---
 bin/start-solr                      |   22 +++++++++++++++++++++-
 test/solrruntest.py                 |   15 ++++++++++++++-
 usr-share/core-data/conf/schema.xml |    1 -
 3 files changed, 35 insertions(+), 3 deletions(-)

diff --git a/bin/start-solr b/bin/start-solr
index 4e53968..298e64d 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -19,7 +19,10 @@ Example config:
 {
     "core1": {},
     "core2": {"feature": {"option": "value"}},
-    "core3": {"booleanFeature": true}
+    "core3": {"booleanFeature": true},
+    "core4": {"schemaExtension": [
+        {"extensionType":"fieldTypeFilter", "fieldTypeName":"text_ws", "filterClass":"solr.ASCIIFoldingFilterFactory"}
+    ]}
 }
 """)
     parser.format_epilog = lambda formatter: parser.epilog
@@ -59,7 +62,24 @@ def setupSolrConfig(stateDir, port, config):
         for feature, options in features.items():
             _setupFeature(name=feature, stateDir=stateDir, core=core, options=options)
 
+def _setupFeatureSchemaExtension(stateDir, core, options):
+    schemaXmlFile = join(stateDir, 'cores', core, 'conf', 'schema.xml')
+    schemaXml = parse(open(schemaXmlFile))
+    for option in options:
+        if option.get('extensionType') == 'fieldTypeFilter':
+            fieldTypeName = option['fieldTypeName']
+            fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
+            assert len(fieldTypes) == 1
+            analyzer = fieldTypes[0].xpath('analyzer')[0]
+            SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
+
+    with open(schemaXmlFile, 'w') as f:
+        f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
+
 def _setupFeature(name, stateDir, core, options):
+    if name == 'schemaExtension':
+        _setupFeatureSchemaExtension(stateDir=stateDir, core=core, options=options)
+        return
     if options == False:
         return
     featureFilename = join(configdir, 'solrconfig.d', '%s.xml' % name)
diff --git a/test/solrruntest.py b/test/solrruntest.py
index 1a99201..e454402 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -188,7 +188,20 @@ class SolrRunTest(SeecrTestCase):
         finally:
             start_solr._execvp = _original_execvp
 
-    def testStartSolrReally(self):
+    def testSetupSolrCoreWithExtraFilters(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {'schemaExtension':[
+            { 
+                'extensionType': 'fieldTypeFilter',
+                'fieldTypeName': 'text_ws',
+                'filterClass': 'solr.ASCIIFoldingFilterFactory',
+            }
+        ]}})
+        schemaXml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['solr.LowerCaseFilterFactory', 'solr.ASCIIFoldingFilterFactory'], schemaXml.xpath('/schema/types/fieldType[@name="text_ws"]/analyzer/filter/@class'))
+        print open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')).read()
+
+    def xtestStartSolrReally(self):
         tempdir = "/tmp/testSetupSolrConfig"
         isdir(tempdir) and rmtree(tempdir)
         mkdir(tempdir)
diff --git a/usr-share/core-data/conf/schema.xml b/usr-share/core-data/conf/schema.xml
index f107e5c..e2db7ed 100644
--- a/usr-share/core-data/conf/schema.xml
+++ b/usr-share/core-data/conf/schema.xml
@@ -15,7 +15,6 @@
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
-
 <schema name="meresco-corename" version="1.5">
   <types>
     <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
-- 
1.7.2.5


From dbb8528fe9db098f2b5987aaa9f82cee06ce9d36 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Fri, 12 Oct 2012 13:35:38 +0100
Subject: [PATCH 20/66] HM/TJ: added license.

---
 COPYING             |  339 +++++++++++++++++++++++++++++++++++++++++++++++++++
 bin/start-solr      |   25 ++++
 doc/license.conf    |    9 ++
 test/_alltests.py   |   19 +++-
 test/alltests.sh    |   19 +++-
 test/solrruntest.py |   25 ++++
 6 files changed, 434 insertions(+), 2 deletions(-)
 create mode 100644 COPYING
 create mode 100644 doc/license.conf

diff --git a/COPYING b/COPYING
new file mode 100644
index 0000000..d511905
--- /dev/null
+++ b/COPYING
@@ -0,0 +1,339 @@
+		    GNU GENERAL PUBLIC LICENSE
+		       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+		    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+			    NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+	    How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.
diff --git a/bin/start-solr b/bin/start-solr
index 298e64d..ee298aa 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -1,4 +1,29 @@
 #!/usr/bin/env python2.6
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
 from sys import argv, exit
 from os import execvp, system, makedirs, listdir
 from os.path import dirname, abspath, isdir, join, isfile
diff --git a/doc/license.conf b/doc/license.conf
new file mode 100644
index 0000000..dcb1705
--- /dev/null
+++ b/doc/license.conf
@@ -0,0 +1,9 @@
+{
+    "project": "Solr Run",
+    "description": "\"Solr Run\" starts Solr with correct parameters etc.",
+    "license": "GPLv2",
+    "copyrights": [
+        {"name": "Seecr (Seek You Too B.V.)", "url": "http://seecr.nl", "years": [2012]}, 
+        {"name": "Stichting Bibliotheek.nl (BNL)", "url": "http://www.bibliotheek.nl", "years": [2012]} 
+    ]   
+}
diff --git a/test/_alltests.py b/test/_alltests.py
index b1b95ce..451f9d2 100644
--- a/test/_alltests.py
+++ b/test/_alltests.py
@@ -1,8 +1,25 @@
 ## begin license ##
 # 
-# All rights reserved.
+# "Solr Run" starts Solr with correct parameters etc. 
 # 
 # Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 # 
 ## end license ##
 
diff --git a/test/alltests.sh b/test/alltests.sh
index 139c7f8..178c3c8 100755
--- a/test/alltests.sh
+++ b/test/alltests.sh
@@ -1,10 +1,27 @@
 #!/bin/bash
 ## begin license ##
 # 
-# All rights reserved.
+# "Solr Run" starts Solr with correct parameters etc. 
 # 
 # Copyright (C) 2005-2010 Seek You Too B.V. (CQ2) http://www.cq2.nl
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 # 
 ## end license ##
 
diff --git a/test/solrruntest.py b/test/solrruntest.py
index e454402..e6528fb 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -1,4 +1,29 @@
 # -*- coding: utf-8 -*-
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
 from unittest import main
 from seecr.test import SeecrTestCase
 from StringIO import StringIO
-- 
1.7.2.5


From 89c963106c01c79e8ad56fed9d1a48efd39ba111 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Fri, 2 Nov 2012 10:50:13 +0000
Subject: [PATCH 21/66] TS/HM: Configure additionalSolrConfig solrconfig.xml

---
 bin/start-solr                          |   14 ++++++++++++--
 test/solrruntest.py                     |   11 +++++++++--
 usr-share/core-data/conf/solrconfig.xml |    6 +++---
 3 files changed, 24 insertions(+), 7 deletions(-)

diff --git a/bin/start-solr b/bin/start-solr
index ee298aa..7d45de5 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -47,7 +47,8 @@ Example config:
     "core3": {"booleanFeature": true},
     "core4": {"schemaExtension": [
         {"extensionType":"fieldTypeFilter", "fieldTypeName":"text_ws", "filterClass":"solr.ASCIIFoldingFilterFactory"}
-    ]}
+    ]},
+    "core5": {"additionalSolrConfig": "full path to additional solrconfig.xml"}
 }
 """)
     parser.format_epilog = lambda formatter: parser.epilog
@@ -65,7 +66,7 @@ def copyDir(src, dst):
     system('cp -r %s/* %s/' % (src, dst))
     system('find %s -name ".svn" | xargs rm -rf' % dst) # DO_NOT_DISTRIBUTE
 
-def setupSolrConfig(stateDir, port, config):
+def setupSolrConfig(stateDir, port, config, additionalSolrConfig=None):
     assert all(type(v) == dict for v in config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
 
     if not isdir(stateDir):
@@ -101,10 +102,19 @@ def _setupFeatureSchemaExtension(stateDir, core, options):
     with open(schemaXmlFile, 'w') as f:
         f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
 
+def _setupAdditionalSolrConfig(stateDir, core, filename):
+    solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+    core_sorlconfig = parse(open(solrconfig_file))
+    core_sorlconfig.getroot().extend(parse(open(filename)).xpath('/config/*'))
+    open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
 def _setupFeature(name, stateDir, core, options):
     if name == 'schemaExtension':
         _setupFeatureSchemaExtension(stateDir=stateDir, core=core, options=options)
         return
+    if name == 'additionalSolrConfig':
+        _setupAdditionalSolrConfig(stateDir=stateDir, core=core, filename=options)
+        return
     if options == False:
         return
     featureFilename = join(configdir, 'solrconfig.d', '%s.xml' % name)
diff --git a/test/solrruntest.py b/test/solrruntest.py
index e6528fb..76279e3 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -30,7 +30,7 @@ from StringIO import StringIO
 from os import mkdir, listdir, system
 from os.path import join, dirname, abspath, basename, isdir
 from shutil import rmtree
-from lxml.etree import parse
+from lxml.etree import parse, tostring
 import sys
 
 start_solr = __import__('start-solr')
@@ -157,6 +157,14 @@ class SolrRunTest(SeecrTestCase):
         self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
         self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
 
+    def testSetupSolrConfigWithAdditionalSolrConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<config><extra>option</extra></config>""")
+        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core', 'conf', 'solrconfig.xml')))
+
+        self.assertEquals(['option'], solrconfig_xml.xpath("/config/extra/text()"))
+
     def testSetupWithNoFeatures(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         config = {'core1': {'suggestions': False}, 'core2': {}}
@@ -224,7 +232,6 @@ class SolrRunTest(SeecrTestCase):
         ]}})
         schemaXml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
         self.assertEquals(['solr.LowerCaseFilterFactory', 'solr.ASCIIFoldingFilterFactory'], schemaXml.xpath('/schema/types/fieldType[@name="text_ws"]/analyzer/filter/@class'))
-        print open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')).read()
 
     def xtestStartSolrReally(self):
         tempdir = "/tmp/testSetupSolrConfig"
diff --git a/usr-share/core-data/conf/solrconfig.xml b/usr-share/core-data/conf/solrconfig.xml
index 8d57909..25d9905 100644
--- a/usr-share/core-data/conf/solrconfig.xml
+++ b/usr-share/core-data/conf/solrconfig.xml
@@ -30,15 +30,15 @@
     <filterCache class="solr.FastLRUCache"
                  size="512"
                  initialSize="512"
-                 autowarmCount="0"/>
+                 autowarmCount="256"/>
     <queryResultCache class="solr.LRUCache"
                      size="512"
                      initialSize="512"
-                     autowarmCount="0"/>
+                     autowarmCount="256"/>
     <documentCache class="solr.LRUCache"
                    size="512"
                    initialSize="512"
-                   autowarmCount="0"/>
+                   autowarmCount="256"/>
 
     <enableLazyFieldLoading>true</enableLazyFieldLoading>
 
-- 
1.7.2.5


From ea51447e3e2c2014f0c66b68b52020719a1673e1 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Fri, 2 Nov 2012 11:01:24 +0000
Subject: [PATCH 22/66] TS/HM: Extracted extending to solrconfig.xml; Raise error if no <config> element found

---
 bin/start-solr      |   13 ++++++++-----
 test/solrruntest.py |    9 +++++++++
 2 files changed, 17 insertions(+), 5 deletions(-)

diff --git a/bin/start-solr b/bin/start-solr
index 7d45de5..2689787 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -103,10 +103,7 @@ def _setupFeatureSchemaExtension(stateDir, core, options):
         f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
 
 def _setupAdditionalSolrConfig(stateDir, core, filename):
-    solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
-    core_sorlconfig = parse(open(solrconfig_file))
-    core_sorlconfig.getroot().extend(parse(open(filename)).xpath('/config/*'))
-    open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+    _extendSolrConfig(stateDir=stateDir, core=core, lxmlElementList=parse(open(filename)).xpath('/config/*'))
 
 def _setupFeature(name, stateDir, core, options):
     if name == 'schemaExtension':
@@ -125,11 +122,17 @@ def _setupFeature(name, stateDir, core, options):
     if type(options) is dict:
         feature = feature % options
     feature_xml = parse(StringIO(feature))
+    _extendSolrConfig(stateDir=stateDir, core=core, lxmlElementList=feature_xml.xpath('/config/*'))
+
+def _extendSolrConfig(stateDir, core, lxmlElementList):
+    if not lxmlElementList:
+        raise ValueError("No elements found with which to extend the solrconfig.xml")
     solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
     core_sorlconfig = parse(open(solrconfig_file))
-    core_sorlconfig.getroot().extend(feature_xml.xpath('/config/*'))
+    core_sorlconfig.getroot().extend(lxmlElementList)
     open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
 
+
 def _setupCoreData(stateDir, cores):
     solr_xml = parse(open(join(stateDir, 'solr.xml')))
     coresElement = solr_xml.xpath("/solr/cores")[0]
diff --git a/test/solrruntest.py b/test/solrruntest.py
index 76279e3..62f4505 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -165,6 +165,15 @@ class SolrRunTest(SeecrTestCase):
 
         self.assertEquals(['option'], solrconfig_xml.xpath("/config/extra/text()"))
 
+    def testSetupSolrConfigWithAdditionalInvalidSolrConfigShouldRaiseAnError(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<extra>option</extra>""")
+        try:
+            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
+            self.fail()
+        except ValueError, e:
+            self.assertEquals("No elements found with which to extend the solrconfig.xml", str(e))
+
     def testSetupWithNoFeatures(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         config = {'core1': {'suggestions': False}, 'core2': {}}
-- 
1.7.2.5


From ad0a2bc4b9a187bc93b6b456d740a58b5f851137 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 6 Nov 2012 10:33:36 +0000
Subject: [PATCH 23/66] TJ: Setup changed to use relative paths

---
 bin/start-solr |  240 +++++++++++++++++++++++++++++---------------------------
 1 files changed, 123 insertions(+), 117 deletions(-)

diff --git a/bin/start-solr b/bin/start-solr
index 2689787..f7be55c 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -34,11 +34,12 @@ from StringIO import StringIO
 from subprocess import Popen
 
 mydir = dirname(abspath(__file__))
-configdir = join(dirname(mydir), 'usr-share') # is replaced by makeDeb.sh
+solrUsrShareDir = '/usr/share/solr3.6.0-run'
+solrUsrShareDir = join(dirname(mydir), 'usr-share') # DO_NOT_DISTRIBUTE
 SOLR_VERSION = "3.6.0"
 
 def parseArguments(args):
-    features = [f.rsplit('.', 1)[0] for f in listdir(join(configdir, 'solrconfig.d'))]
+    features = [f.rsplit('.', 1)[0] for f in listdir(join(solrUsrShareDir, 'solrconfig.d'))]
     parser = OptionParser(description="""Available features: %s.""" % ', '.join(features), epilog="""
 Example config: 
 {
@@ -66,119 +67,123 @@ def copyDir(src, dst):
     system('cp -r %s/* %s/' % (src, dst))
     system('find %s -name ".svn" | xargs rm -rf' % dst) # DO_NOT_DISTRIBUTE
 
-def setupSolrConfig(stateDir, port, config, additionalSolrConfig=None):
-    assert all(type(v) == dict for v in config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
-
-    if not isdir(stateDir):
-        makedirs(stateDir)
-        copyDir(join(configdir, 'solr-data'), stateDir)
-    else:
-        newMatchVersion = parse(open(join(configdir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-        for coreDir in listdir(join(stateDir, 'cores')):
-            currentMatchVersion = parse(open(join(stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-            if currentMatchVersion != newMatchVersion:
-                raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
-
-    _setupJettyXml(port, stateDir)
-    _setupStartConfig(stateDir)
-    _setupSolrXml(stateDir)
-    _setupCoreData(stateDir, config.keys())
-
-    for core, features in config.items():
-        for feature, options in features.items():
-            _setupFeature(name=feature, stateDir=stateDir, core=core, options=options)
-
-def _setupFeatureSchemaExtension(stateDir, core, options):
-    schemaXmlFile = join(stateDir, 'cores', core, 'conf', 'schema.xml')
-    schemaXml = parse(open(schemaXmlFile))
-    for option in options:
-        if option.get('extensionType') == 'fieldTypeFilter':
-            fieldTypeName = option['fieldTypeName']
-            fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
-            assert len(fieldTypes) == 1
-            analyzer = fieldTypes[0].xpath('analyzer')[0]
-            SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
-
-    with open(schemaXmlFile, 'w') as f:
-        f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
-
-def _setupAdditionalSolrConfig(stateDir, core, filename):
-    _extendSolrConfig(stateDir=stateDir, core=core, lxmlElementList=parse(open(filename)).xpath('/config/*'))
-
-def _setupFeature(name, stateDir, core, options):
-    if name == 'schemaExtension':
-        _setupFeatureSchemaExtension(stateDir=stateDir, core=core, options=options)
-        return
-    if name == 'additionalSolrConfig':
-        _setupAdditionalSolrConfig(stateDir=stateDir, core=core, filename=options)
-        return
-    if options == False:
-        return
-    featureFilename = join(configdir, 'solrconfig.d', '%s.xml' % name)
-    if not isfile(featureFilename):
-        raise ValueError("Unknown feature '%s'" % name)
-
-    feature = open(featureFilename).read()
-    if type(options) is dict:
-        feature = feature % options
-    feature_xml = parse(StringIO(feature))
-    _extendSolrConfig(stateDir=stateDir, core=core, lxmlElementList=feature_xml.xpath('/config/*'))
-
-def _extendSolrConfig(stateDir, core, lxmlElementList):
-    if not lxmlElementList:
-        raise ValueError("No elements found with which to extend the solrconfig.xml")
-    solrconfig_file = join(stateDir, 'cores', core, 'conf', 'solrconfig.xml')
-    core_sorlconfig = parse(open(solrconfig_file))
-    core_sorlconfig.getroot().extend(lxmlElementList)
-    open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
-
-
-def _setupCoreData(stateDir, cores):
-    solr_xml = parse(open(join(stateDir, 'solr.xml')))
-    coresElement = solr_xml.xpath("/solr/cores")[0]
-    [coresElement.remove(child) for child in coresElement.getchildren()]
-    for core in cores:
-        coreDir = join(stateDir, 'cores', core)
-        if not isdir(coreDir):
-            makedirs(coreDir)
-        SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
-        copyDir(join(configdir, 'core-data'), coreDir)
-        schema_xml_path = join(coreDir, 'conf', 'schema.xml')
-        schema_xml = parse(open(schema_xml_path))
-        schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
-        open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
-
-    open(join(stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
-
-def _setupJettyXml(port, stateDir):
-    system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
-            port,
-            join(stateDir, 'etc', 'jetty.xml')
-        ))
-
-def _setupStartConfig(stateDir):
-    system(r"""sed 's,^jetty\.home=.*$,jetty.home=%s,' -i %s""" % (
-            stateDir,
-            join(stateDir, 'start.config')
-        ))
-
-    system(r"""sed 's,^/.*$,/usr/share/java/solr%s/*,' -i %s""" % (
-            SOLR_VERSION,
-            join(stateDir, 'start.config')
-        ))
-
-def _setupSolrXml(stateDir):
-    system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, stateDir))
-
-def startSolr(stateDir, port, javaMX):
-    _execvp('java', [
-        'java',
-        '-Xmx%s' % javaMX, 
-        '-Djetty.port=%s' % port,
-        '-DSTART=%s/start.config' % stateDir,
-        '-Dsolr.solr.home=%s' % stateDir, 
-        '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
-        ])
+class SolrConfig(object):
+    def __init__(self, stateDir, port, configFile):
+        self.config=load(open(configFile))
+        self.stateDir = stateDir
+        self.port = port
+        self.configBasedir = dirname(abspath(configFile))
+        assert all(type(v) == dict for v in self.config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
+
+        if not isdir(self.stateDir):
+            makedirs(self.stateDir)
+            copyDir(join(solrUsrShareDir, 'solr-data'), self.stateDir)
+        else:
+            newMatchVersion = parse(open(join(solrUsrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+            for coreDir in listdir(join(self.stateDir, 'cores')):
+                currentMatchVersion = parse(open(join(self.stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+                if currentMatchVersion != newMatchVersion:
+                    raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
+
+        self._setupJettyXml()
+        self._setupStartConfig()
+        self._setupSolrXml()
+        self._setupCoreData()
+
+        for core, features in self.config.items():
+            for feature, options in features.items():
+                self._setupFeature(name=feature, core=core, options=options)
+
+    def _setupFeatureSchemaExtension(self, core, options):
+        schemaXmlFile = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
+        schemaXml = parse(open(schemaXmlFile))
+        for option in options:
+            if option.get('extensionType') == 'fieldTypeFilter':
+                fieldTypeName = option['fieldTypeName']
+                fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
+                assert len(fieldTypes) == 1
+                analyzer = fieldTypes[0].xpath('analyzer')[0]
+                SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
+
+        with open(schemaXmlFile, 'w') as f:
+            f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
+
+    def _setupFeature(self, name, core, options):
+        if name == 'schemaExtension':
+            self._setupFeatureSchemaExtension(core=core, options=options)
+            return
+        if name == 'additionalSolrConfig':
+            filepath = options if options.startswith('/') else join(self.configBasedir, options)
+            self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
+            return
+        if options == False:
+            return
+        featureFilename = join(solrUsrShareDir, 'solrconfig.d', '%s.xml' % name)
+        if not isfile(featureFilename):
+            raise ValueError("Unknown feature '%s'" % name)
+
+        feature = open(featureFilename).read()
+        if type(options) is dict:
+            feature = feature % options
+        feature_xml = parse(StringIO(feature))
+        self._extendSolrConfig(core=core, lxmlElementList=feature_xml.xpath('/config/*'))
+
+    def _extendSolrConfig(self, core, lxmlElementList):
+        if not lxmlElementList:
+            raise ValueError("No elements found with which to extend the solrconfig.xml")
+        solrconfig_file = join(self.stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+        core_sorlconfig = parse(open(solrconfig_file))
+        core_sorlconfig.getroot().extend(lxmlElementList)
+        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
+
+    def _setupCoreData(self):
+        cores = self.config.keys()
+        solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
+        coresElement = solr_xml.xpath("/solr/cores")[0]
+        [coresElement.remove(child) for child in coresElement.getchildren()]
+        for core in cores:
+            coreDir = join(self.stateDir, 'cores', core)
+            if not isdir(coreDir):
+                makedirs(coreDir)
+            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
+            copyDir(join(solrUsrShareDir, 'core-data'), coreDir)
+            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
+            schema_xml = parse(open(schema_xml_path))
+            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
+            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
+
+        open(join(self.stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
+
+    def _setupJettyXml(self):
+        system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
+                self.port,
+                join(self.stateDir, 'etc', 'jetty.xml')
+            ))
+
+    def _setupStartConfig(self):
+        system(r"""sed 's,^jetty\.home=.*$,jetty.home=%s,' -i %s""" % (
+                self.stateDir,
+                join(self.stateDir, 'start.config')
+            ))
+
+        system(r"""sed 's,^/.*$,/usr/share/java/solr%s/*,' -i %s""" % (
+                SOLR_VERSION,
+                join(self.stateDir, 'start.config')
+            ))
+
+    def _setupSolrXml(self):
+        system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, self.stateDir))
+
+    def start(self, javaMX):
+        _execvp('java', [
+                'java',
+                '-Xmx%s' % javaMX, 
+                '-Djetty.port=%s' % self.port,
+                '-DSTART=%s/start.config' % self.stateDir,
+                '-Dsolr.solr.home=%s' % self.stateDir, 
+                '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
+            ])
 
 def _execvp(*args, **kwargs):
     execvp(*args, **kwargs)
@@ -192,6 +197,7 @@ if __name__ == '__main__':
         print "Don't use GCJ as the default java JRE."
         exit(1)
 
-    setupSolrConfig(stateDir=options.stateDir, port=options.port, config=load(open(options.config)))
-    startSolr(stateDir=options.stateDir, port=options.port, javaMX=options.javaMX)
+    solr = SolrConfig(stateDir=options.stateDir, port=options.port, configFile=options.config)
+    solr.start(javaMX=options.javaMX)
+
 
-- 
1.7.2.5


From 06baffaad72ac4477492808411e05de69c8a4a6f Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 6 Nov 2012 16:18:55 +0000
Subject: [PATCH 24/66] TJ: temporary fix to allow larger queries.

---
 usr-share/solr-data/etc/jetty.xml |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/usr-share/solr-data/etc/jetty.xml b/usr-share/solr-data/etc/jetty.xml
index aa71704..8726545 100644
--- a/usr-share/solr-data/etc/jetty.xml
+++ b/usr-share/solr-data/etc/jetty.xml
@@ -76,6 +76,7 @@
             <Set name="maxIdleTime">50000</Set>
             <Set name="lowResourceMaxIdleTime">1500</Set>
             <Set name="statsOn">false</Set>
+            <Set name="headerBufferSize">65535</Set>
           </New>
       </Arg>
     </Call>
-- 
1.7.2.5


From 5d6a1f3e5debda17c4b9322a2a0063dd305ed134 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Wed, 14 Nov 2012 13:45:52 +0000
Subject: [PATCH 25/66] HM/JPM: reading deps.txt i.s.o. depending on fixed solr version

---
 deps.txt |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)
 create mode 100644 deps.txt

diff --git a/deps.txt b/deps.txt
new file mode 100644
index 0000000..ea6f165
--- /dev/null
+++ b/deps.txt
@@ -0,0 +1,3 @@
+solr (>= 3.6.0)
+solr (<< 3.7)
+python-lxml
-- 
1.7.2.5


From e3e9a35a68b66ce36a4d259abea5f6e2841620a1 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Wed, 14 Nov 2012 14:00:04 +0000
Subject: [PATCH 26/66] HM/JPM: adapted back to solr package name(s) including version number

---
 deps.txt |    3 +--
 1 files changed, 1 insertions(+), 2 deletions(-)

diff --git a/deps.txt b/deps.txt
index ea6f165..a5187ee 100644
--- a/deps.txt
+++ b/deps.txt
@@ -1,3 +1,2 @@
-solr (>= 3.6.0)
-solr (<< 3.7)
+solr3.6.0 | solr3.6.1
 python-lxml
-- 
1.7.2.5


From 9d1e3b8d455b82f92c69955a1e5f9afae5523ccd Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Wed, 14 Nov 2012 14:18:21 +0000
Subject: [PATCH 27/66] HM/JPM: code can't work with solr3.6.1 at all (because of path)

---
 deps.txt |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/deps.txt b/deps.txt
index a5187ee..f3263e5 100644
--- a/deps.txt
+++ b/deps.txt
@@ -1,2 +1,2 @@
-solr3.6.0 | solr3.6.1
+solr3.6.0
 python-lxml
-- 
1.7.2.5


From 400eb88281df09810916c63840130abcd1ac9ade Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Wed, 14 Nov 2012 15:41:11 +0000
Subject: [PATCH 28/66] HM/JPM: got alltests to succeed again before major refactoring

---
 bin/start-solr      |    7 ++++---
 test/_alltests.py   |    4 +---
 test/solrruntest.py |   51 ++++++++++++++++++++++++++++++---------------------
 3 files changed, 35 insertions(+), 27 deletions(-)

diff --git a/bin/start-solr b/bin/start-solr
index f7be55c..0c2a08d 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -33,6 +33,7 @@ from simplejson import load
 from StringIO import StringIO
 from subprocess import Popen
 
+
 mydir = dirname(abspath(__file__))
 solrUsrShareDir = '/usr/share/solr3.6.0-run'
 solrUsrShareDir = join(dirname(mydir), 'usr-share') # DO_NOT_DISTRIBUTE
@@ -67,6 +68,7 @@ def copyDir(src, dst):
     system('cp -r %s/* %s/' % (src, dst))
     system('find %s -name ".svn" | xargs rm -rf' % dst) # DO_NOT_DISTRIBUTE
 
+
 class SolrConfig(object):
     def __init__(self, stateDir, port, configFile):
         self.config=load(open(configFile))
@@ -136,7 +138,6 @@ class SolrConfig(object):
         core_sorlconfig.getroot().extend(lxmlElementList)
         open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
 
-
     def _setupCoreData(self):
         cores = self.config.keys()
         solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
@@ -197,7 +198,7 @@ if __name__ == '__main__':
         print "Don't use GCJ as the default java JRE."
         exit(1)
 
-    solr = SolrConfig(stateDir=options.stateDir, port=options.port, configFile=options.config)
-    solr.start(javaMX=options.javaMX)
+    solrConfig = SolrConfig(stateDir=options.stateDir, port=options.port, configFile=options.config)
+    solrConfig.start(javaMX=options.javaMX)
 
 
diff --git a/test/_alltests.py b/test/_alltests.py
index 451f9d2..fe173da 100644
--- a/test/_alltests.py
+++ b/test/_alltests.py
@@ -29,13 +29,11 @@ os.system('find .. -name "*.pyc" | xargs rm -f')
 from glob import glob
 for path in glob('../deps.d/*'):
     sys.path.insert(0, path)
-
 sys.path.insert(0, '../bin')
 
-from unittest import main
-
 from solrruntest import SolrRunTest
 
 if __name__ == '__main__':
+    from unittest import main
     main()
 
diff --git a/test/solrruntest.py b/test/solrruntest.py
index 62f4505..64c5965 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -24,21 +24,23 @@
 # 
 ## end license ##
 
+import sys
 from unittest import main
-from seecr.test import SeecrTestCase
 from StringIO import StringIO
 from os import mkdir, listdir, system
 from os.path import join, dirname, abspath, basename, isdir
 from shutil import rmtree
+from simplejson import dump as jsonDump
 from lxml.etree import parse, tostring
-import sys
 
+from seecr.test import SeecrTestCase
 start_solr = __import__('start-solr')
+
+
 mydir = dirname(abspath(__file__))
 version = "3.6.0"
 
 class SolrRunTest(SeecrTestCase):
-
     def testParseArguments(self):
         options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--config=/tmp/config.json'])
         self.assertEquals(8042, options.port)
@@ -55,7 +57,7 @@ class SolrRunTest(SeecrTestCase):
 
     def testSetupSolrConfig(self):
         solrDataDir = join(self.tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
         self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
         self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
         jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
@@ -87,8 +89,8 @@ class SolrRunTest(SeecrTestCase):
 
     def testSetupSolrTwiceConfig(self):
         solrDataDir = join(self.tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
         self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
         self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
         jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
@@ -121,7 +123,7 @@ class SolrRunTest(SeecrTestCase):
     def testSetupSolrConfigWithAutocomplete(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         config = {'core1': {'autocomplete': {}}, 'core2': {}}
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
         solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
         self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
         self.assertTrue('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
@@ -133,7 +135,7 @@ class SolrRunTest(SeecrTestCase):
     def testSetupSolrConfigWithAdmin(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         config = {'core1': {'admin': {}}, 'core2': {}}
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
         solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
         self.assertTrue('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
         self.assertTrue('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
@@ -147,7 +149,7 @@ class SolrRunTest(SeecrTestCase):
     def testSetupSolrConfigWithSuggestions(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         config = {'core2': {'suggestions': {'field': 'afieldname'}}, 'core1': {}}
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
         solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
         self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
         self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
@@ -160,7 +162,7 @@ class SolrRunTest(SeecrTestCase):
     def testSetupSolrConfigWithAdditionalSolrConfig(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<config><extra>option</extra></config>""")
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
         solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core', 'conf', 'solrconfig.xml')))
 
         self.assertEquals(['option'], solrconfig_xml.xpath("/config/extra/text()"))
@@ -169,7 +171,7 @@ class SolrRunTest(SeecrTestCase):
         solrDataDir = join(self.tempdir, 'solr-data')
         open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<extra>option</extra>""")
         try:
-            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
+            self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
             self.fail()
         except ValueError, e:
             self.assertEquals("No elements found with which to extend the solrconfig.xml", str(e))
@@ -177,7 +179,7 @@ class SolrRunTest(SeecrTestCase):
     def testSetupWithNoFeatures(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         config = {'core1': {'suggestions': False}, 'core2': {}}
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
         solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
         self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
         self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
@@ -190,7 +192,7 @@ class SolrRunTest(SeecrTestCase):
         solrDataDir = join(self.tempdir, 'solr-data')
         config = {'core1': {'suggestions': False}, 'core2': False}
         try:
-            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
             self.fail()
         except AssertionError, e:
             self.assertEquals("Core feature descriptions must be a dictionary (empty for no additional features).", str(e))
@@ -200,17 +202,17 @@ class SolrRunTest(SeecrTestCase):
         solrDataDir = join(self.tempdir, 'solr-data')
         config = {'core1': {'unknown-feature': True}}
         try:
-            start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
             self.fail()
         except ValueError, e:
             self.assertEquals("Unknown feature 'unknown-feature'", str(e))
 
     def testNotMatchingLuceneMatchVersion(self):
         solrDataDir = join(self.tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
         system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
 
-        self.assertRaises(ValueError, lambda: start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}}))
+        self.assertRaises(ValueError, lambda: self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}}))
 
     def testStartSolr(self):
         execCalled = []
@@ -220,11 +222,12 @@ class SolrRunTest(SeecrTestCase):
         try:
             _original_execvp = start_solr._execvp
             start_solr._execvp = execvpMock
-            start_solr.startSolr(stateDir='/the/state/dir', port=1423, javaMX="1234M")
+            solrConfig = self._createSolrConfig(stateDir=join(self.tempdir, 'the/state/dir'), port=1423, config={})
+            solrConfig.start(javaMX="1234M")
             self.assertEquals(1, len(execCalled))
             self.assertEquals((
                 'java', 
-                ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=/the/state/dir/start.config', '-Dsolr.solr.home=/the/state/dir', '-jar', '/usr/share/java/solr3.6.0/start.jar'],
+                ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr3.6.0/start.jar'],
             ), execCalled[0][0])
             self.assertEquals({}, execCalled[0][1])
         finally:
@@ -232,7 +235,7 @@ class SolrRunTest(SeecrTestCase):
 
     def testSetupSolrCoreWithExtraFilters(self):
         solrDataDir = join(self.tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {'schemaExtension':[
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {'schemaExtension':[
             { 
                 'extensionType': 'fieldTypeFilter',
                 'fieldTypeName': 'text_ws',
@@ -247,8 +250,14 @@ class SolrRunTest(SeecrTestCase):
         isdir(tempdir) and rmtree(tempdir)
         mkdir(tempdir)
         solrDataDir = join(tempdir, 'solr-data')
-        start_solr.setupSolrConfig(stateDir=solrDataDir, port=8000, config={"test": {}})
-        start_solr.startSolr(stateDir=solrDataDir, port=8000, javaMX="1024M")
+        solrConfig = self._createSolrConfig(stateDir=solrDataDir, port=8000, config={"test": {}})
+        solrConfig.start(javaMX="1024M")
+
+    def _createSolrConfig(self, stateDir, port, config):
+        solrConfFile = join(self.tempdir, 'solr.conf')
+        jsonDump(config, open(solrConfFile, 'w'))
+        return start_solr.SolrConfig(stateDir, port, solrConfFile)
+        
 
 if __name__ == '__main__':
     main()
-- 
1.7.2.5


From 31467132437e2ee0c4569bb363f6dd19c4287faf Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Wed, 14 Nov 2012 16:13:28 +0000
Subject: [PATCH 29/66] HM/JPM: factored out SolrConfig

---
 bin/start-solr        |  140 ++-----------------------------------------
 solrrun/__init__.py   |   24 ++++++++
 solrrun/solrconfig.py |  158 +++++++++++++++++++++++++++++++++++++++++++++++++
 test/solrruntest.py   |   25 +++-----
 4 files changed, 197 insertions(+), 150 deletions(-)
 create mode 100644 solrrun/__init__.py
 create mode 100644 solrrun/solrconfig.py

diff --git a/bin/start-solr b/bin/start-solr
index 0c2a08d..85948c2 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -24,20 +24,17 @@
 # 
 ## end license ##
 
+import sys                # DO_NOT_DISTRIBUTE
+sys.path.insert(0, '..')  # DO_NOT_DISTRIBUTE
+
 from sys import argv, exit
-from os import execvp, system, makedirs, listdir
-from os.path import dirname, abspath, isdir, join, isfile
+from os import listdir
+from os.path import join
 from optparse import OptionParser, Option
-from lxml.etree import parse, SubElement, tostring
-from simplejson import load
-from StringIO import StringIO
 from subprocess import Popen
 
+from solrrun.solrconfig import SolrConfig, solrUsrShareDir
 
-mydir = dirname(abspath(__file__))
-solrUsrShareDir = '/usr/share/solr3.6.0-run'
-solrUsrShareDir = join(dirname(mydir), 'usr-share') # DO_NOT_DISTRIBUTE
-SOLR_VERSION = "3.6.0"
 
 def parseArguments(args):
     features = [f.rsplit('.', 1)[0] for f in listdir(join(solrUsrShareDir, 'solrconfig.d'))]
@@ -64,131 +61,6 @@ Example config:
         raise ValueError("Missing required option (all except javaMX are required)")
     return options, arguments
 
-def copyDir(src, dst):
-    system('cp -r %s/* %s/' % (src, dst))
-    system('find %s -name ".svn" | xargs rm -rf' % dst) # DO_NOT_DISTRIBUTE
-
-
-class SolrConfig(object):
-    def __init__(self, stateDir, port, configFile):
-        self.config=load(open(configFile))
-        self.stateDir = stateDir
-        self.port = port
-        self.configBasedir = dirname(abspath(configFile))
-        assert all(type(v) == dict for v in self.config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
-
-        if not isdir(self.stateDir):
-            makedirs(self.stateDir)
-            copyDir(join(solrUsrShareDir, 'solr-data'), self.stateDir)
-        else:
-            newMatchVersion = parse(open(join(solrUsrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-            for coreDir in listdir(join(self.stateDir, 'cores')):
-                currentMatchVersion = parse(open(join(self.stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-                if currentMatchVersion != newMatchVersion:
-                    raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
-
-        self._setupJettyXml()
-        self._setupStartConfig()
-        self._setupSolrXml()
-        self._setupCoreData()
-
-        for core, features in self.config.items():
-            for feature, options in features.items():
-                self._setupFeature(name=feature, core=core, options=options)
-
-    def _setupFeatureSchemaExtension(self, core, options):
-        schemaXmlFile = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
-        schemaXml = parse(open(schemaXmlFile))
-        for option in options:
-            if option.get('extensionType') == 'fieldTypeFilter':
-                fieldTypeName = option['fieldTypeName']
-                fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
-                assert len(fieldTypes) == 1
-                analyzer = fieldTypes[0].xpath('analyzer')[0]
-                SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
-
-        with open(schemaXmlFile, 'w') as f:
-            f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
-
-    def _setupFeature(self, name, core, options):
-        if name == 'schemaExtension':
-            self._setupFeatureSchemaExtension(core=core, options=options)
-            return
-        if name == 'additionalSolrConfig':
-            filepath = options if options.startswith('/') else join(self.configBasedir, options)
-            self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
-            return
-        if options == False:
-            return
-        featureFilename = join(solrUsrShareDir, 'solrconfig.d', '%s.xml' % name)
-        if not isfile(featureFilename):
-            raise ValueError("Unknown feature '%s'" % name)
-
-        feature = open(featureFilename).read()
-        if type(options) is dict:
-            feature = feature % options
-        feature_xml = parse(StringIO(feature))
-        self._extendSolrConfig(core=core, lxmlElementList=feature_xml.xpath('/config/*'))
-
-    def _extendSolrConfig(self, core, lxmlElementList):
-        if not lxmlElementList:
-            raise ValueError("No elements found with which to extend the solrconfig.xml")
-        solrconfig_file = join(self.stateDir, 'cores', core, 'conf', 'solrconfig.xml')
-        core_sorlconfig = parse(open(solrconfig_file))
-        core_sorlconfig.getroot().extend(lxmlElementList)
-        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
-
-    def _setupCoreData(self):
-        cores = self.config.keys()
-        solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
-        coresElement = solr_xml.xpath("/solr/cores")[0]
-        [coresElement.remove(child) for child in coresElement.getchildren()]
-        for core in cores:
-            coreDir = join(self.stateDir, 'cores', core)
-            if not isdir(coreDir):
-                makedirs(coreDir)
-            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
-            copyDir(join(solrUsrShareDir, 'core-data'), coreDir)
-            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
-            schema_xml = parse(open(schema_xml_path))
-            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
-            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
-
-        open(join(self.stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
-
-    def _setupJettyXml(self):
-        system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
-                self.port,
-                join(self.stateDir, 'etc', 'jetty.xml')
-            ))
-
-    def _setupStartConfig(self):
-        system(r"""sed 's,^jetty\.home=.*$,jetty.home=%s,' -i %s""" % (
-                self.stateDir,
-                join(self.stateDir, 'start.config')
-            ))
-
-        system(r"""sed 's,^/.*$,/usr/share/java/solr%s/*,' -i %s""" % (
-                SOLR_VERSION,
-                join(self.stateDir, 'start.config')
-            ))
-
-    def _setupSolrXml(self):
-        system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, self.stateDir))
-
-    def start(self, javaMX):
-        _execvp('java', [
-                'java',
-                '-Xmx%s' % javaMX, 
-                '-Djetty.port=%s' % self.port,
-                '-DSTART=%s/start.config' % self.stateDir,
-                '-Dsolr.solr.home=%s' % self.stateDir, 
-                '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
-            ])
-
-def _execvp(*args, **kwargs):
-    execvp(*args, **kwargs)
-
 
 if __name__ == '__main__':
     args = argv[1:]
diff --git a/solrrun/__init__.py b/solrrun/__init__.py
new file mode 100644
index 0000000..6c55ee5
--- /dev/null
+++ b/solrrun/__init__.py
@@ -0,0 +1,24 @@
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
diff --git a/solrrun/solrconfig.py b/solrrun/solrconfig.py
new file mode 100644
index 0000000..efb8669
--- /dev/null
+++ b/solrrun/solrconfig.py
@@ -0,0 +1,158 @@
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from os import makedirs, listdir, system, execvp
+from os.path import dirname, abspath, isdir, isfile, join
+from shutil import copytree, rmtree
+from StringIO import StringIO
+from lxml.etree import parse, SubElement, tostring
+from simplejson import load as jsonLoad
+
+
+mydir = dirname(abspath(__file__))
+solrUsrShareDir = '/usr/share/solr3.6.0-run'
+solrUsrShareDir = join(dirname(mydir), 'usr-share') # DO_NOT_DISTRIBUTE
+SOLR_VERSION = "3.6.0"
+
+
+class SolrConfig(object):
+    def __init__(self, stateDir, port, configFile):
+        self.config=jsonLoad(open(configFile))
+        self.stateDir = stateDir
+        self.port = port
+        self.configBasedir = dirname(abspath(configFile))
+        assert all(type(v) == dict for v in self.config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
+
+        if not isdir(self.stateDir):
+            copytree(join(solrUsrShareDir, 'solr-data'), self.stateDir)
+        else:
+            newMatchVersion = parse(open(join(solrUsrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+            for coreDir in listdir(join(self.stateDir, 'cores')):
+                currentMatchVersion = parse(open(join(self.stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+                if currentMatchVersion != newMatchVersion:
+                    raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
+
+        self._setupJettyXml()
+        self._setupStartConfig()
+        self._setupSolrXml()
+        self._setupCoreData()
+
+        for core, features in self.config.items():
+            for feature, options in features.items():
+                self._setupFeature(name=feature, core=core, options=options)
+
+    def _setupFeatureSchemaExtension(self, core, options):
+        schemaXmlFile = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
+        schemaXml = parse(open(schemaXmlFile))
+        for option in options:
+            if option.get('extensionType') == 'fieldTypeFilter':
+                fieldTypeName = option['fieldTypeName']
+                fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
+                assert len(fieldTypes) == 1
+                analyzer = fieldTypes[0].xpath('analyzer')[0]
+                SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
+
+        with open(schemaXmlFile, 'w') as f:
+            f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
+
+    def _setupFeature(self, name, core, options):
+        if name == 'schemaExtension':
+            self._setupFeatureSchemaExtension(core=core, options=options)
+            return
+        if name == 'additionalSolrConfig':
+            filepath = options if options.startswith('/') else join(self.configBasedir, options)
+            self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
+            return
+        if options == False:
+            return
+        featureFilename = join(solrUsrShareDir, 'solrconfig.d', '%s.xml' % name)
+        if not isfile(featureFilename):
+            raise ValueError("Unknown feature '%s'" % name)
+
+        feature = open(featureFilename).read()
+        if type(options) is dict:
+            feature = feature % options
+        feature_xml = parse(StringIO(feature))
+        self._extendSolrConfig(core=core, lxmlElementList=feature_xml.xpath('/config/*'))
+
+    def _extendSolrConfig(self, core, lxmlElementList):
+        if not lxmlElementList:
+            raise ValueError("No elements found with which to extend the solrconfig.xml")
+        solrconfig_file = join(self.stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+        core_sorlconfig = parse(open(solrconfig_file))
+        core_sorlconfig.getroot().extend(lxmlElementList)
+        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
+    def _setupCoreData(self):
+        cores = self.config.keys()
+        solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
+        coresElement = solr_xml.xpath("/solr/cores")[0]
+        [coresElement.remove(child) for child in coresElement.getchildren()]
+        for core in cores:
+            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
+            coreDir = join(self.stateDir, 'cores', core)
+            isdir(coreDir) and rmtree(coreDir)
+            copytree(join(solrUsrShareDir, 'core-data'), coreDir)
+            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
+            schema_xml = parse(open(schema_xml_path))
+            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
+            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
+
+        open(join(self.stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
+
+    def _setupJettyXml(self):
+        system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
+                self.port,
+                join(self.stateDir, 'etc', 'jetty.xml')
+            ))
+
+    def _setupStartConfig(self):
+        system(r"""sed 's,^jetty\.home=.*$,jetty.home=%s,' -i %s""" % (
+                self.stateDir,
+                join(self.stateDir, 'start.config')
+            ))
+
+        system(r"""sed 's,^/.*$,/usr/share/java/solr%s/*,' -i %s""" % (
+                SOLR_VERSION,
+                join(self.stateDir, 'start.config')
+            ))
+
+    def _setupSolrXml(self):
+        system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, self.stateDir))
+
+    def start(self, javaMX):
+        self._execvp(
+            'java', [
+                'java',
+                '-Xmx%s' % javaMX, 
+                '-Djetty.port=%s' % self.port,
+                '-DSTART=%s/start.config' % self.stateDir,
+                '-Dsolr.solr.home=%s' % self.stateDir, 
+                '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
+            ])
+
+    def _execvp(self, args, **kwargs):
+        execvp(*args, **kwargs)
+
diff --git a/test/solrruntest.py b/test/solrruntest.py
index 64c5965..0d30a5f 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -215,23 +215,16 @@ class SolrRunTest(SeecrTestCase):
         self.assertRaises(ValueError, lambda: self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}}))
 
     def testStartSolr(self):
+        solrConfig = self._createSolrConfig(stateDir=join(self.tempdir, 'the/state/dir'), port=1423, config={})
         execCalled = []
-        def execvpMock(*args, **kwargs):
-            execCalled.append((args, kwargs))
-
-        try:
-            _original_execvp = start_solr._execvp
-            start_solr._execvp = execvpMock
-            solrConfig = self._createSolrConfig(stateDir=join(self.tempdir, 'the/state/dir'), port=1423, config={})
-            solrConfig.start(javaMX="1234M")
-            self.assertEquals(1, len(execCalled))
-            self.assertEquals((
-                'java', 
-                ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr3.6.0/start.jar'],
-            ), execCalled[0][0])
-            self.assertEquals({}, execCalled[0][1])
-        finally:
-            start_solr._execvp = _original_execvp
+        solrConfig._execvp = lambda *args, **kwargs: execCalled.append((args, kwargs))
+        solrConfig.start(javaMX="1234M")
+        self.assertEquals(1, len(execCalled))
+        self.assertEquals((
+            'java', 
+            ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr3.6.0/start.jar'],
+        ), execCalled[0][0])
+        self.assertEquals({}, execCalled[0][1])
 
     def testSetupSolrCoreWithExtraFilters(self):
         solrDataDir = join(self.tempdir, 'solr-data')
-- 
1.7.2.5


From f614d5d97700e5f25e8b9f8cae4cb3124e2bc60a Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Thu, 15 Nov 2012 16:11:50 +0000
Subject: [PATCH 30/66] JPM: minor rewrite in python of config line replacements

---
 solrrun/solrconfig.py |   15 ++++++---------
 1 files changed, 6 insertions(+), 9 deletions(-)

diff --git a/solrrun/solrconfig.py b/solrrun/solrconfig.py
index efb8669..fe5c044 100644
--- a/solrrun/solrconfig.py
+++ b/solrrun/solrconfig.py
@@ -26,6 +26,7 @@
 from os import makedirs, listdir, system, execvp
 from os.path import dirname, abspath, isdir, isfile, join
 from shutil import copytree, rmtree
+from re import compile, MULTILINE
 from StringIO import StringIO
 from lxml.etree import parse, SubElement, tostring
 from simplejson import load as jsonLoad
@@ -129,15 +130,11 @@ class SolrConfig(object):
             ))
 
     def _setupStartConfig(self):
-        system(r"""sed 's,^jetty\.home=.*$,jetty.home=%s,' -i %s""" % (
-                self.stateDir,
-                join(self.stateDir, 'start.config')
-            ))
-
-        system(r"""sed 's,^/.*$,/usr/share/java/solr%s/*,' -i %s""" % (
-                SOLR_VERSION,
-                join(self.stateDir, 'start.config')
-            ))
+        startConfigPath = join(self.stateDir, 'start.config')
+        startConfig = oldStartConfig = open(startConfigPath).read()
+        startConfig = compile('^jetty\.home=.*$', flags=MULTILINE).sub('jetty.home=' + self.stateDir, startConfig)
+        startConfig = compile('^/.*$', flags=MULTILINE).sub('/usr/share/java/solr%s/*' % SOLR_VERSION, startConfig)
+        open(startConfigPath, 'w').write(startConfig)
 
     def _setupSolrXml(self):
         system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, self.stateDir))
-- 
1.7.2.5


From 2bf302b42059d6169e6e102043ae10c2ac29f0e4 Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Mon, 10 Dec 2012 13:30:04 +0100
Subject: [PATCH 31/66] TJ: dependencies.

---
 deps.txt |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 deps.txt

diff --git a/deps.txt b/deps.txt
new file mode 100644
index 0000000..bbeacf9
--- /dev/null
+++ b/deps.txt
@@ -0,0 +1 @@
+solr
-- 
1.7.2.5


From 8a0e9d3451e323e3cc6060c8ab9bd320bb102596 Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Mon, 10 Dec 2012 13:37:46 +0100
Subject: [PATCH 32/66] TJ: solr4.0

---
 deps.txt              |    2 +-
 test/sitecustomize.py |    2 ++
 2 files changed, 3 insertions(+), 1 deletions(-)
 create mode 100644 test/sitecustomize.py

diff --git a/deps.txt b/deps.txt
index f3263e5..597641c 100644
--- a/deps.txt
+++ b/deps.txt
@@ -1,2 +1,2 @@
-solr3.6.0
+solr4.0
 python-lxml
diff --git a/test/sitecustomize.py b/test/sitecustomize.py
new file mode 100644
index 0000000..f110c26
--- /dev/null
+++ b/test/sitecustomize.py
@@ -0,0 +1,2 @@
+from sys import setdefaultencoding
+setdefaultencoding('utf-8')
-- 
1.7.2.5


From fcacc017703399cc5d9b4aac5cbf08c8b91abdd2 Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Mon, 10 Dec 2012 16:52:40 +0100
Subject: [PATCH 33/66] HM/TJ: solr4.0 sort of works.

---
 doc/changes.txt                         |    9 +-
 solrrun/solrconfig.py                   |    8 +-
 test/solrruntest.py                     |   10 +-
 usr-share/core-data/conf/solrconfig.xml |    2 +-
 usr-share/solr-data/contexts/solr.xml   |    4 +-
 usr-share/solr-data/etc/jetty.xml       |  231 ++++++----------
 usr-share/solr-data/etc/webdefault.xml  |  471 +++++++++++++++++++------------
 usr-share/solr-data/solr.xml            |    3 +-
 usr-share/solr-data/start.config        |  128 ++++++++-
 9 files changed, 518 insertions(+), 348 deletions(-)

diff --git a/doc/changes.txt b/doc/changes.txt
index 1572377..4771270 100644
--- a/doc/changes.txt
+++ b/doc/changes.txt
@@ -1,13 +1,14 @@
-example/etc/jetty.xml -> solr-data/etc/jetty.xml
- - Replace: <Set name="webAppDir"><SystemProperty name="jetty.webapps" default="."/></Set>
+example/etc/jetty.xml -> usr-share/solr-data/etc/jetty.xml
 
-example/etc/webdefault.xml -> solr-data/etc/webdefault.xml
+example/etc/webdefault.xml -> usr-share/solr-data/etc/webdefault.xml
 
-example-DIH/solr/solr.xml -> solr-data/solr.xml
+example/example-DIH/solr/solr.xml -> usr-share/solr-data/solr.xml
  - Remove core elements
 
 example/start.jar:org/mortbay/start/start.config -> solr-data/start.config
  - Handmatige diff; Keep explaining comments; Add jetty.webapps; Add dummy jetty.home; Fix jetty classpath
+ - replace ('$(jetty.home)/lib', '$(jetty.lib)')
+ - Voeg jetty.lib=/some/location toe (wordt overschreven in solrconfig.py)
 
 zelf verzonnen iets -> solr-data/contexts/solr.xml 
 zelf verzonnen iets (kijk uit voor version) -> core-data/conf/schema.xml
diff --git a/solrrun/solrconfig.py b/solrrun/solrconfig.py
index fe5c044..41bd7da 100644
--- a/solrrun/solrconfig.py
+++ b/solrrun/solrconfig.py
@@ -33,9 +33,9 @@ from simplejson import load as jsonLoad
 
 
 mydir = dirname(abspath(__file__))
-solrUsrShareDir = '/usr/share/solr3.6.0-run'
+solrUsrShareDir = '/usr/share/solr4.0.0-run'
 solrUsrShareDir = join(dirname(mydir), 'usr-share') # DO_NOT_DISTRIBUTE
-SOLR_VERSION = "3.6.0"
+SOLR_VERSION = "4.0.0"
 
 
 class SolrConfig(object):
@@ -133,7 +133,7 @@ class SolrConfig(object):
         startConfigPath = join(self.stateDir, 'start.config')
         startConfig = oldStartConfig = open(startConfigPath).read()
         startConfig = compile('^jetty\.home=.*$', flags=MULTILINE).sub('jetty.home=' + self.stateDir, startConfig)
-        startConfig = compile('^/.*$', flags=MULTILINE).sub('/usr/share/java/solr%s/*' % SOLR_VERSION, startConfig)
+        startConfig = compile('^jetty\.lib=.*$', flags=MULTILINE).sub('jetty.lib=/usr/share/java/solr%s' % SOLR_VERSION, startConfig)
         open(startConfigPath, 'w').write(startConfig)
 
     def _setupSolrXml(self):
@@ -150,6 +150,6 @@ class SolrConfig(object):
                 '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
             ])
 
-    def _execvp(self, args, **kwargs):
+    def _execvp(self, *args, **kwargs):
         execvp(*args, **kwargs)
 
diff --git a/test/solrruntest.py b/test/solrruntest.py
index 0d30a5f..06056b3 100644
--- a/test/solrruntest.py
+++ b/test/solrruntest.py
@@ -38,7 +38,7 @@ start_solr = __import__('start-solr')
 
 
 mydir = dirname(abspath(__file__))
-version = "3.6.0"
+version = "4.0.0"
 
 class SolrRunTest(SeecrTestCase):
     def testParseArguments(self):
@@ -71,7 +71,7 @@ class SolrRunTest(SeecrTestCase):
             self.fail("No jetty.home line found")
         f.close()
         self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
+        self.assertTrue('/usr/share/java/solr4.0.0/*' in open(join(solrDataDir, 'start.config')).read())
 
         context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
         self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
@@ -104,7 +104,7 @@ class SolrRunTest(SeecrTestCase):
             self.fail("No jetty.home line found")
         f.close()
         self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('/usr/share/java/solr3.6.0/*' in open(join(solrDataDir, 'start.config')).read())
+        self.assertTrue('/usr/share/java/solr4.0.0/*' in open(join(solrDataDir, 'start.config')).read())
 
         context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
         self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
@@ -222,7 +222,7 @@ class SolrRunTest(SeecrTestCase):
         self.assertEquals(1, len(execCalled))
         self.assertEquals((
             'java', 
-            ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr3.6.0/start.jar'],
+            ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr4.0.0/start.jar'],
         ), execCalled[0][0])
         self.assertEquals({}, execCalled[0][1])
 
@@ -243,7 +243,7 @@ class SolrRunTest(SeecrTestCase):
         isdir(tempdir) and rmtree(tempdir)
         mkdir(tempdir)
         solrDataDir = join(tempdir, 'solr-data')
-        solrConfig = self._createSolrConfig(stateDir=solrDataDir, port=8000, config={"test": {}})
+        solrConfig = self._createSolrConfig(stateDir=solrDataDir, port=8000, config={"test": {'admin': True}})
         solrConfig.start(javaMX="1024M")
 
     def _createSolrConfig(self, stateDir, port, config):
diff --git a/usr-share/core-data/conf/solrconfig.xml b/usr-share/core-data/conf/solrconfig.xml
index 25d9905..2a3f0a5 100644
--- a/usr-share/core-data/conf/solrconfig.xml
+++ b/usr-share/core-data/conf/solrconfig.xml
@@ -22,7 +22,7 @@
 -->
 <config>
   <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
-  <luceneMatchVersion>LUCENE_36</luceneMatchVersion>
+  <luceneMatchVersion>LUCENE_40</luceneMatchVersion>
 
   <query>
     <maxBooleanClauses>1024</maxBooleanClauses>
diff --git a/usr-share/solr-data/contexts/solr.xml b/usr-share/solr-data/contexts/solr.xml
index 1ce8d44..750392b 100644
--- a/usr-share/solr-data/contexts/solr.xml
+++ b/usr-share/solr-data/contexts/solr.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0"  encoding="ISO-8859-1"?>
 <!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
  
-<Configure class="org.mortbay.jetty.webapp.WebAppContext">
+<Configure class="org.eclipse.jetty.webapp.WebAppContext">
   <Set name="contextPath">/solr</Set>
-  <Set name="war">/usr/share/java/webapps/apache-solr-3.6.0.war</Set>
+  <Set name="war">/usr/share/java/webapps/apache-solr-4.0.0.war</Set>
 </Configure>
 
diff --git a/usr-share/solr-data/etc/jetty.xml b/usr-share/solr-data/etc/jetty.xml
index 8726545..ab84668 100644
--- a/usr-share/solr-data/etc/jetty.xml
+++ b/usr-share/solr-data/etc/jetty.xml
@@ -1,60 +1,46 @@
 <?xml version="1.0"?>
-<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">
+<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
 
 <!-- =============================================================== -->
 <!-- Configure the Jetty Server                                      -->
 <!--                                                                 -->
 <!-- Documentation of this file format can be found at:              -->
-<!-- http://docs.codehaus.org/display/JETTY/jetty.xml                -->
+<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->
 <!--                                                                 -->
 <!-- =============================================================== -->
 
 
-<Configure id="Server" class="org.mortbay.jetty.Server">
+<Configure id="Server" class="org.eclipse.jetty.server.Server">
 
     <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
-    <Call class="java.lang.System" name="setProperty">
-      <Arg>org.mortbay.jetty.Request.maxFormContentSize</Arg>
-      <Arg>1000000</Arg>
+    <Call name="setAttribute">
+      <Arg>org.eclipse.jetty.server.Request.maxFormContentSize</Arg>
+      <Arg>200000</Arg>
     </Call>
 
     <!-- =========================================================== -->
     <!-- Server Thread Pool                                          -->
     <!-- =========================================================== -->
     <Set name="ThreadPool">
-
-      <New class="org.mortbay.thread.QueuedThreadPool">
+      <!-- Default queued blocking threadpool -->
+      <New class="org.eclipse.jetty.util.thread.QueuedThreadPool">
         <Set name="minThreads">10</Set>
         <Set name="maxThreads">10000</Set>
-        <Set name="lowThreads">20</Set>
-      </New>
-
-      <!-- Optional Java 5 bounded threadpool with job queue 
-      <New class="org.mortbay.thread.concurrent.ThreadPool">
-        <Set name="corePoolSize">50</Set>
-        <Set name="maximumPoolSize">50</Set>
+        <Set name="detailedDump">false</Set>
       </New>
-      -->
     </Set>
 
-
-
     <!-- =========================================================== -->
     <!-- Set connectors                                              -->
     <!-- =========================================================== -->
-    <!-- One of each type!                                           -->
-    <!-- =========================================================== -->
 
-    <!-- Use this connector for many frequently idle connections
-         and for threadless continuations.
-    -->    
   <!--
     <Call name="addConnector">
       <Arg>
-          <New class="org.mortbay.jetty.nio.SelectChannelConnector">
+          <New class="org.eclipse.jetty.server.nio.SelectChannelConnector">
             <Set name="host"><SystemProperty name="jetty.host" /></Set>
             <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">30000</Set>
+            <Set name="maxIdleTime">50000</Set>
             <Set name="Acceptors">2</Set>
             <Set name="statsOn">false</Set>
             <Set name="confidentialPort">8443</Set>
@@ -70,57 +56,31 @@
           for typical Solr requests.  -->
     <Call name="addConnector">
       <Arg>
-          <New class="org.mortbay.jetty.bio.SocketConnector">
+          <New class="org.eclipse.jetty.server.bio.SocketConnector">
             <Set name="host"><SystemProperty name="jetty.host" /></Set>
             <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
             <Set name="maxIdleTime">50000</Set>
             <Set name="lowResourceMaxIdleTime">1500</Set>
             <Set name="statsOn">false</Set>
-            <Set name="headerBufferSize">65535</Set>
           </New>
       </Arg>
     </Call>
 
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    <!-- To add a HTTPS SSL listener                                     -->
-    <!-- see jetty-ssl.xml to add an ssl connector. use                  -->
-    <!-- java -jar start.jar etc/jetty.xml etc/jetty-ssl.xml             -->
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    <!-- To allow Jetty to be started from xinetd                        -->
-    <!-- mixin jetty-xinetd.xml:                                         -->
-    <!--   java -jar start.jar etc/jetty.xml etc/jetty-xinetd.xml        -->
-    <!--                                                                 -->
-    <!-- See jetty-xinetd.xml for further instructions.                  -->
-    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-    
-    <!-- =========================================================== -->
-    <!-- Set up global session ID manager                            -->
-    <!-- =========================================================== -->
-    <!--
-    <Set name="sessionIdManager">
-      <New class="org.mortbay.jetty.servlet.HashSessionIdManager">
-        <Set name="workerName">node1</Set>
-      </New>
-    </Set>
-    -->
-
     <!-- =========================================================== -->
     <!-- Set handler Collection Structure                            --> 
     <!-- =========================================================== -->
     <Set name="handler">
-      <New id="Handlers" class="org.mortbay.jetty.handler.HandlerCollection">
+      <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
         <Set name="handlers">
-         <Array type="org.mortbay.jetty.Handler">
+         <Array type="org.eclipse.jetty.server.Handler">
            <Item>
-             <New id="Contexts" class="org.mortbay.jetty.handler.ContextHandlerCollection"/>
+             <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"/>
            </Item>
            <Item>
-             <New id="DefaultHandler" class="org.mortbay.jetty.handler.DefaultHandler"/>
+             <New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler"/>
            </Item>
            <Item>
-             <New id="RequestLog" class="org.mortbay.jetty.handler.RequestLogHandler"/>
+             <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler"/>
            </Item>
          </Array>
         </Set>
@@ -128,95 +88,32 @@
     </Set>
     
     <!-- =========================================================== -->
-    <!-- Configure the context deployer                              -->
-    <!-- A context deployer will deploy contexts described in        -->
-    <!-- configuration files discovered in a directory.              -->
-    <!-- The configuration directory can be scanned for hot          -->
-    <!-- deployments at the configured scanInterval.                 -->
-    <!--                                                             -->
-    <!-- This deployer is configured to deploy contexts configured   -->
-    <!-- in the $JETTY_HOME/contexts directory                       -->
-    <!--                                                             -->
-    <!-- =========================================================== -->
-    <Call name="addLifeCycle">
-      <Arg>
-        <New class="org.mortbay.jetty.deployer.ContextDeployer">
-          <Set name="contexts"><Ref id="Contexts"/></Set>
-          <Set name="configurationDir"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
-          <Set name="scanInterval">5</Set>
-        </New>
-      </Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Configure the webapp deployer.                              -->
-    <!-- A webapp  deployer will deploy standard webapps discovered  -->
-    <!-- in a directory at startup, without the need for additional  -->
-    <!-- configuration files.    It does not support hot deploy or   -->
-    <!-- non standard contexts (see ContextDeployer above).          -->
-    <!--                                                             -->
-    <!-- This deployer is configured to deploy webapps from the      -->
-    <!-- $JETTY_HOME/webapps directory                               -->
-    <!--                                                             -->
-    <!-- Normally only one type of deployer need be used.            -->
-    <!--                                                             -->
-    <!-- =========================================================== -->
-    <Call name="addLifeCycle">
-      <Arg>
-        <New class="org.mortbay.jetty.deployer.WebAppDeployer">
-          <Set name="contexts"><Ref id="Contexts"/></Set>
-          <Set name="webAppDir"><SystemProperty name="jetty.webapps" default="."/></Set>
-	  <Set name="parentLoaderPriority">false</Set>
-	  <Set name="extract">true</Set>
-	  <Set name="allowDuplicates">false</Set>
-          <Set name="defaultsDescriptor"><SystemProperty name="jetty.home" default="."/>/etc/webdefault.xml</Set>
-        </New>
-      </Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Configure Authentication Realms                             -->
-    <!-- Realms may be configured for the entire server here, or     -->
-    <!-- they can be configured for a specific web app in a context  -->
-    <!-- configuration (see $(jetty.home)/contexts/test.xml for an   -->
-    <!-- example).                                                   -->
-    <!-- =========================================================== -->
-  <!--
-    <Set name="UserRealms">
-      <Array type="org.mortbay.jetty.security.UserRealm">
-        <Item>
-          <New class="org.mortbay.jetty.security.HashUserRealm">
-            <Set name="name">Test Realm</Set>
-            <Set name="config"><SystemProperty name="jetty.home" default="."/>/etc/realm.properties</Set>
-            <Set name="refreshInterval">0</Set>
-          </New>
-        </Item>
-      </Array>
-    </Set>
-  -->
-
-    <!-- =========================================================== -->
     <!-- Configure Request Log                                       -->
-    <!-- Request logs  may be configured for the entire server here, -->
-    <!-- or they can be configured for a specific web app in a       -->
-    <!-- contexts configuration (see $(jetty.home)/contexts/test.xml -->
-    <!-- for an example).                                            -->
     <!-- =========================================================== -->
-  <!--
-    <Ref id="RequestLog">
-      <Set name="requestLog">
-        <New id="RequestLogImpl" class="org.mortbay.jetty.NCSARequestLog">
-          <Set name="filename"><SystemProperty name="jetty.logs" default="./logs"/>/yyyy_mm_dd.request.log</Set>
-          <Set name="filenameDateFormat">yyyy_MM_dd</Set>
-          <Set name="retainDays">90</Set>
-          <Set name="append">true</Set>
-          <Set name="extended">false</Set>
-          <Set name="logCookies">false</Set>
-          <Set name="LogTimeZone">GMT</Set>
-        </New>
-      </Set>
+    <!-- 
+    <Ref id="Handlers">
+      <Call name="addHandler">
+        <Arg>
+          <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler">
+            <Set name="requestLog">
+              <New id="RequestLogImpl" class="org.eclipse.jetty.server.NCSARequestLog">
+                <Set name="filename">
+                   logs/request.yyyy_mm_dd.log
+                </Set>
+                <Set name="filenameDateFormat">yyyy_mm_dd</Set>
+                <Set name="retainDays">90</Set>
+                <Set name="append">true</Set>
+                <Set name="extended">false</Set>
+                <Set name="logCookies">false</Set>
+                <Set name="LogTimeZone">UTC</Set>
+              </New>
+            </Set>
+          </New>
+        </Arg>
+      </Call>
     </Ref>
-  -->
+    -->
+
     <!-- =========================================================== -->
     <!-- extra options                                               -->
     <!-- =========================================================== -->
@@ -224,5 +121,53 @@
     <Set name="sendServerVersion">false</Set>
     <Set name="sendDateHeader">false</Set>
     <Set name="gracefulShutdown">1000</Set>
+    <Set name="dumpAfterStart">false</Set>
+    <Set name="dumpBeforeStop">false</Set>
+
+
+
+
+    <Call name="addBean">
+      <Arg>
+        <New id="DeploymentManager" class="org.eclipse.jetty.deploy.DeploymentManager">
+          <Set name="contexts">
+            <Ref id="Contexts" />
+          </Set>
+          <Call name="setContextAttribute">
+            <Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>
+            <Arg>.*/servlet-api-[^/]*\.jar$</Arg>
+          </Call>
+          
+          
+          <!-- Add a customize step to the deployment lifecycle -->
+          <!-- uncomment and replace DebugBinding with your extended AppLifeCycle.Binding class 
+          <Call name="insertLifeCycleNode">
+            <Arg>deployed</Arg>
+            <Arg>starting</Arg>
+            <Arg>customise</Arg>
+          </Call>
+          <Call name="addLifeCycleBinding">
+            <Arg>
+              <New class="org.eclipse.jetty.deploy.bindings.DebugBinding">
+                <Arg>customise</Arg>
+              </New>
+            </Arg>
+          </Call>
+          -->
+          
+        </New>
+      </Arg>
+    </Call>
+    
+    <Ref id="DeploymentManager">
+      <Call name="addAppProvider">
+        <Arg>
+          <New class="org.eclipse.jetty.deploy.providers.ContextProvider">
+            <Set name="monitoredDirName"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
+            <Set name="scanInterval">0</Set>
+          </New>
+        </Arg>
+      </Call>
+    </Ref>
 
 </Configure>
diff --git a/usr-share/solr-data/etc/webdefault.xml b/usr-share/solr-data/etc/webdefault.xml
index b8d0114..213138b 100644
--- a/usr-share/solr-data/etc/webdefault.xml
+++ b/usr-share/solr-data/etc/webdefault.xml
@@ -1,118 +1,126 @@
 <?xml version="1.0" encoding="ISO-8859-1"?>
 
-<!-- ===================================================================== -->
-<!-- This file contains the default descriptor for web applications.       -->
-<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-<!-- The intent of this descriptor is to include jetty specific or common  -->
-<!-- configuration for all webapps.   If a context has a webdefault.xml    -->
-<!-- descriptor, it is applied before the contexts own web.xml file        -->
-<!--                                                                       -->
-<!-- A context may be assigned a default descriptor by:                    -->
-<!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
-<!--  + Passed an arg to addWebApplications                                -->
-<!--                                                                       -->
-<!-- This file is used both as the resource within the jetty.jar (which is -->
-<!-- used as the default if no explicit defaults descriptor is set) and it -->
-<!-- is copied to the etc directory of the Jetty distro and explicitly     -->
-<!-- by the jetty.xml file.                                                -->
-<!--                                                                       -->
-<!-- ===================================================================== -->
-<web-app 
-   xmlns="http://java.sun.com/xml/ns/javaee" 
-   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
-   metadata-complete="true"
-   version="2.5"> 
+  <!-- ===================================================================== -->
+  <!-- This file contains the default descriptor for web applications.       -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+  <!-- The intent of this descriptor is to include jetty specific or common  -->
+  <!-- configuration for all webapps.   If a context has a webdefault.xml    -->
+  <!-- descriptor, it is applied before the contexts own web.xml file        -->
+  <!--                                                                       -->
+  <!-- A context may be assigned a default descriptor by:                    -->
+  <!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
+  <!--  + Passed an arg to addWebApplications                                -->
+  <!--                                                                       -->
+  <!-- This file is used both as the resource within the jetty.jar (which is -->
+  <!-- used as the default if no explicit defaults descriptor is set) and it -->
+  <!-- is copied to the etc directory of the Jetty distro and explicitly     -->
+  <!-- by the jetty.xml file.                                                -->
+  <!--                                                                       -->
+  <!-- ===================================================================== -->
+<web-app
+  xmlns="http://java.sun.com/xml/ns/javaee"
+  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
+  metadata-complete="true"
+  version="2.5"
+>
 
   <description>
     Default web.xml file.  
     This file is applied to a Web application before it's own WEB_INF/web.xml file
   </description>
 
+  <!-- ==================================================================== -->
+  <!-- Removes static references to beans from javax.el.BeanELResolver to   -->
+  <!-- ensure webapp classloader can be released on undeploy                -->
+  <!-- ==================================================================== -->
+  <listener>
+   <listener-class>org.eclipse.jetty.servlet.listener.ELContextCleaner</listener-class>
+  </listener>
+  
+  <!-- ==================================================================== -->
+  <!-- Removes static cache of Methods from java.beans.Introspector to      -->
+  <!-- ensure webapp classloader can be released on undeploy                -->
+  <!-- ==================================================================== -->  
+  <listener>
+   <listener-class>org.eclipse.jetty.servlet.listener.IntrospectorCleaner</listener-class>
+  </listener>
+  
 
   <!-- ==================================================================== -->
   <!-- Context params to control Session Cookies                            -->
   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- UNCOMMENT TO ACTIVATE
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.SessionDomain</param-name>
-    <param-value>127.0.0.1</param-value>
-  </context-param>
-
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.SessionPath</param-name>
-    <param-value>/</param-value>
-  </context-param>
-
-  <context-param>
-    <param-name>org.mortbay.jetty.servlet.MaxAge</param-name>
-    <param-value>-1</param-value>
-  </context-param>
+  <!--
+    UNCOMMENT TO ACTIVATE <context-param> <param-name>org.eclipse.jetty.servlet.SessionDomain</param-name> <param-value>127.0.0.1</param-value> </context-param> <context-param>
+    <param-name>org.eclipse.jetty.servlet.SessionPath</param-name> <param-value>/</param-value> </context-param> <context-param> <param-name>org.eclipse.jetty.servlet.MaxAge</param-name>
+    <param-value>-1</param-value> </context-param>
   -->
 
-  <context-param>
-    <param-name>org.mortbay.jetty.webapp.NoTLDJarPattern</param-name>
-    <param-value>start.jar|ant-.*\.jar|dojo-.*\.jar|jetty-.*\.jar|jsp-api-.*\.jar|junit-.*\.jar|servlet-api-.*\.jar|dnsns\.jar|rt\.jar|jsse\.jar|tools\.jar|sunpkcs11\.jar|sunjce_provider\.jar|xerces.*\.jar</param-value>
-  </context-param>
-            
-
-
   <!-- ==================================================================== -->
   <!-- The default servlet.                                                 -->
   <!-- This servlet, normally mapped to /, provides the handling for static -->
   <!-- content, OPTIONS and TRACE methods for the context.                  -->
   <!-- The following initParameters are supported:                          -->
-  <!--                                                                      -->
-  <!--   acceptRanges     If true, range requests and responses are         -->
-  <!--                    supported                                         -->
-  <!--                                                                      -->
-  <!--   dirAllowed       If true, directory listings are returned if no    -->
-  <!--                    welcome file is found. Else 403 Forbidden.        -->
-  <!--                                                                      -->
-  <!--   welcomeServlets  If true, attempt to dispatch to welcome files     -->
-  <!--                    that are servlets, if no matching static          --> 
-  <!--                    resources can be found.                           -->
-  <!--                                                                      -->
-  <!--   redirectWelcome  If true, redirect welcome file requests           -->
-  <!--                    else use request dispatcher forwards              -->
-  <!--                                                                      -->
-  <!--   gzip             If set to true, then static content will be served--> 
-  <!--                    as gzip content encoded if a matching resource is -->
-  <!--                    found ending with ".gz"                           -->
-  <!--                                                                      -->
-  <!--   resoureBase      Can be set to replace the context resource base   -->
-  <!--                                                                      -->
-  <!--   relativeResourceBase                                               -->
-  <!--                    Set with a pathname relative to the base of the   -->
-  <!--                    servlet context root. Useful for only serving     -->
-  <!--                    static content from only specific subdirectories. -->
-  <!--                                                                      -->
-  <!--   useFileMappedBuffer                                                -->
-  <!--                    If set to true (the default), a  memory mapped    -->
-  <!--                    file buffer will be used to serve static content  -->
-  <!--                    when using an NIO connector. Setting this value   -->
-  <!--                    to false means that a direct buffer will be used  -->
-  <!--                    instead. If you are having trouble with Windows   -->
-  <!--                    file locking, set this to false.                  -->
-  <!--                                                                      -->
-  <!--  cacheControl      If set, all static content will have this value   -->
-  <!--                    set as the cache-control header.                  -->
-  <!--                                                                      -->
-  <!--  maxCacheSize      Maximum size of the static resource cache         -->
-  <!--                                                                      -->
-  <!--  maxCachedFileSize Maximum size of any single file in the cache      -->
-  <!--                                                                      -->
-  <!--  maxCachedFiles    Maximum number of files in the cache              -->
-  <!--                                                                      -->
-  <!--  cacheType         "nio", "bio" or "both" to determine the type(s)   -->
-  <!--                    of resource cache. A bio cached buffer may be used-->
-  <!--                    by nio but is not as efficient as a nio buffer.   -->
-  <!--                    An nio cached buffer may not be used by bio.      -->
-  <!--                                                                      -->
+  <!--  
+ *  acceptRanges      If true, range requests and responses are
+ *                    supported
+ *
+ *  dirAllowed        If true, directory listings are returned if no
+ *                    welcome file is found. Else 403 Forbidden.
+ *
+ *  welcomeServlets   If true, attempt to dispatch to welcome files
+ *                    that are servlets, but only after no matching static
+ *                    resources could be found. If false, then a welcome
+ *                    file must exist on disk. If "exact", then exact
+ *                    servlet matches are supported without an existing file.
+ *                    Default is true.
+ *
+ *                    This must be false if you want directory listings,
+ *                    but have index.jsp in your welcome file list.
+ *
+ *  redirectWelcome   If true, welcome files are redirected rather than
+ *                    forwarded to.
+ *
+ *  gzip              If set to true, then static content will be served as
+ *                    gzip content encoded if a matching resource is
+ *                    found ending with ".gz"
+ *
+ *  resourceBase      Set to replace the context resource base
+ *
+ *  resourceCache     If set, this is a context attribute name, which the servlet 
+ *                    will use to look for a shared ResourceCache instance. 
+ *                        
+ *  relativeResourceBase
+ *                    Set with a pathname relative to the base of the
+ *                    servlet context root. Useful for only serving static content out
+ *                    of only specific subdirectories.
+ *
+ *  aliases           If True, aliases of resources are allowed (eg. symbolic
+ *                    links and caps variations). May bypass security constraints.
+ *
+ *  maxCacheSize      The maximum total size of the cache or 0 for no cache.
+ *  maxCachedFileSize The maximum size of a file to cache
+ *  maxCachedFiles    The maximum number of files to cache
+ *
+ *  useFileMappedBuffer
+ *                    If set to true, it will use mapped file buffer to serve static content
+ *                    when using NIO connector. Setting this value to false means that
+ *                    a direct buffer will be used instead of a mapped file buffer.
+ *                    By default, this is set to true.
+ *
+ *  cacheControl      If set, all static content will have this value set as the cache-control
+ *                    header.
+ -->
+ 
+ 
   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
   <servlet>
     <servlet-name>default</servlet-name>
-    <servlet-class>org.mortbay.jetty.servlet.DefaultServlet</servlet-class>
+    <servlet-class>org.eclipse.jetty.servlet.DefaultServlet</servlet-class>
+    <init-param>
+      <param-name>aliases</param-name>
+      <param-value>false</param-value>
+    </init-param>
     <init-param>
       <param-name>acceptRanges</param-name>
       <param-value>true</param-value>
@@ -135,15 +143,11 @@
     </init-param>
     <init-param>
       <param-name>maxCachedFileSize</param-name>
-      <param-value>10000000</param-value>
+      <param-value>200000000</param-value>
     </init-param>
     <init-param>
       <param-name>maxCachedFiles</param-name>
-      <param-value>1000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>cacheType</param-name>
-      <param-value>both</param-value>
+      <param-value>2048</param-value>
     </init-param>
     <init-param>
       <param-name>gzip</param-name>
@@ -152,7 +156,13 @@
     <init-param>
       <param-name>useFileMappedBuffer</param-name>
       <param-value>true</param-value>
-    </init-param>  
+    </init-param>
+    <!--
+    <init-param>
+      <param-name>resourceCache</param-name>
+      <param-value>resourceCache</param-value>
+    </init-param>
+    -->
     <!--
     <init-param>
       <param-name>cacheControl</param-name>
@@ -160,10 +170,13 @@
     </init-param>
     -->
     <load-on-startup>0</load-on-startup>
-  </servlet> 
+  </servlet>
+
+  <servlet-mapping>
+    <servlet-name>default</servlet-name>
+    <url-pattern>/</url-pattern>
+  </servlet-mapping>
 
-  <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping>
-  
 
   <!-- ==================================================================== -->
   <!-- JSP Servlet                                                          -->
@@ -250,20 +263,22 @@
   <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
   <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet id="jsp">
+  <servlet
+    id="jsp"
+  >
     <servlet-name>jsp</servlet-name>
     <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
     <init-param>
-        <param-name>logVerbosityLevel</param-name>
-        <param-value>DEBUG</param-value>
+      <param-name>logVerbosityLevel</param-name>
+      <param-value>DEBUG</param-value>
     </init-param>
     <init-param>
-        <param-name>fork</param-name>
-        <param-value>false</param-value>
+      <param-name>fork</param-name>
+      <param-value>false</param-value>
     </init-param>
     <init-param>
-        <param-name>xpoweredBy</param-name>
-        <param-value>false</param-value>
+      <param-name>xpoweredBy</param-name>
+      <param-value>false</param-value>
     </init-param>
     <!--  
     <init-param>
@@ -274,18 +289,18 @@
     <load-on-startup>0</load-on-startup>
   </servlet>
 
-  <servlet-mapping> 
-    <servlet-name>jsp</servlet-name> 
-    <url-pattern>*.jsp</url-pattern> 
+  <servlet-mapping>
+    <servlet-name>jsp</servlet-name>
+    <url-pattern>*.jsp</url-pattern>
     <url-pattern>*.jspf</url-pattern>
     <url-pattern>*.jspx</url-pattern>
     <url-pattern>*.xsp</url-pattern>
-    <url-pattern>*.JSP</url-pattern> 
+    <url-pattern>*.JSP</url-pattern>
     <url-pattern>*.JSPF</url-pattern>
     <url-pattern>*.JSPX</url-pattern>
     <url-pattern>*.XSP</url-pattern>
   </servlet-mapping>
-  
+
   <!-- ==================================================================== -->
   <!-- Dynamic Servlet Invoker.                                             -->
   <!-- This servlet invokes anonymous servlets that have not been defined   -->
@@ -305,26 +320,11 @@
   <!--  *                        All other parameters are copied to the     -->
   <!--                           each dynamic servlet as init parameters    -->
   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- Uncomment for dynamic invocation
-  <servlet>
-    <servlet-name>invoker</servlet-name>
-    <servlet-class>org.mortbay.jetty.servlet.Invoker</servlet-class>
-    <init-param>
-      <param-name>verbose</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>nonContextServlets</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>dynamicParam</param-name>
-      <param-value>anyValue</param-value>
-    </init-param>
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping> <servlet-name>invoker</servlet-name> <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
+  <!--
+    Uncomment for dynamic invocation <servlet> <servlet-name>invoker</servlet-name> <servlet-class>org.eclipse.jetty.servlet.Invoker</servlet-class> <init-param> <param-name>verbose</param-name>
+    <param-value>false</param-value> </init-param> <init-param> <param-name>nonContextServlets</param-name> <param-value>false</param-value> </init-param> <init-param>
+    <param-name>dynamicParam</param-name> <param-value>anyValue</param-value> </init-param> <load-on-startup>0</load-on-startup> </servlet> <servlet-mapping> <servlet-name>invoker</servlet-name>
+    <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
   -->
 
 
@@ -337,7 +337,7 @@
   <!-- ==================================================================== -->
   <!-- Default MIME mappings                                                -->
   <!-- The default MIME mappings are provided by the mime.properties        -->
-  <!-- resource in the org.mortbay.jetty.jar file.  Additional or modified  -->
+  <!-- resource in the org.eclipse.jetty.server.jar file.  Additional or modified  -->
   <!-- mappings may be specified here                                       -->
   <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
   <!-- UNCOMMENT TO ACTIVATE
@@ -356,47 +356,164 @@
 
   <!-- ==================================================================== -->
   <locale-encoding-mapping-list>
-    <locale-encoding-mapping><locale>ar</locale><encoding>ISO-8859-6</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>be</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>bg</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ca</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>cs</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>da</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>de</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>el</locale><encoding>ISO-8859-7</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>en</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>es</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>et</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>fi</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>fr</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>hr</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>hu</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>is</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>it</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>iw</locale><encoding>ISO-8859-8</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ja</locale><encoding>Shift_JIS</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ko</locale><encoding>EUC-KR</encoding></locale-encoding-mapping>     
-    <locale-encoding-mapping><locale>lt</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>lv</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>mk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>nl</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>no</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>pl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>pt</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ro</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>ru</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sh</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sk</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sl</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sq</locale><encoding>ISO-8859-2</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sr</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>sv</locale><encoding>ISO-8859-1</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>tr</locale><encoding>ISO-8859-9</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>uk</locale><encoding>ISO-8859-5</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>zh</locale><encoding>GB2312</encoding></locale-encoding-mapping>
-    <locale-encoding-mapping><locale>zh_TW</locale><encoding>Big5</encoding></locale-encoding-mapping>   
+    <locale-encoding-mapping>
+      <locale>ar</locale>
+      <encoding>ISO-8859-6</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>be</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>bg</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ca</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>cs</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>da</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>de</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>el</locale>
+      <encoding>ISO-8859-7</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>en</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>es</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>et</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>fi</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>fr</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>hr</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>hu</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>is</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>it</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>iw</locale>
+      <encoding>ISO-8859-8</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ja</locale>
+      <encoding>Shift_JIS</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ko</locale>
+      <encoding>EUC-KR</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>lt</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>lv</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>mk</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>nl</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>no</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>pl</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>pt</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ro</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ru</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sh</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sk</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sl</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sq</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sr</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sv</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>tr</locale>
+      <encoding>ISO-8859-9</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>uk</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>zh</locale>
+      <encoding>GB2312</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>zh_TW</locale>
+      <encoding>Big5</encoding>
+    </locale-encoding-mapping>
   </locale-encoding-mapping-list>
-  
+
   <security-constraint>
     <web-resource-collection>
       <web-resource-name>Disable TRACE</web-resource-name>
@@ -405,6 +522,6 @@
     </web-resource-collection>
     <auth-constraint/>
   </security-constraint>
-  
+
 </web-app>
 
diff --git a/usr-share/solr-data/solr.xml b/usr-share/solr-data/solr.xml
index 2fed50a..3da55c2 100644
--- a/usr-share/solr-data/solr.xml
+++ b/usr-share/solr-data/solr.xml
@@ -1,3 +1,4 @@
-<solr persistent="true" sharedLib="lib">
+<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
+<solr sharedLib="lib" persistent="true">
     <cores adminPath="/admin/cores"/>
 </solr>
diff --git a/usr-share/solr-data/start.config b/usr-share/solr-data/start.config
index 4200ad5..4828eaa 100644
--- a/usr-share/solr-data/start.config
+++ b/usr-share/solr-data/start.config
@@ -1,8 +1,8 @@
 # This file controls what file are to be put on classpath or command line.
 #
 # Format is as follows:
-# Each line contains entry for one JAR file.
-# Format of line:
+#
+# Each line contains entry in the format:
 #
 #  SUBJECT [ [!] CONDITION [AND|OR] ]*
 # 
@@ -13,9 +13,13 @@
 #   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
 #   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
 #   Containing = are used to assign system properties.
+#   Containing ~= are used to assign start properties.
+#   Containing /= are used to assign a canonical path.
 #   all other subjects are treated as files to be added to the classpath.
 #
-# Subjects may include system properties with $(propertyname) syntax. 
+# ${name} is expanded to a start property
+# $(name) is expanded to either a start property or a system property. 
+# The start property ${version} is defined as the version of the start.jar
 #
 # Files starting with "/" are considered absolute, all others are relative to
 # the home directory.
@@ -24,33 +28,135 @@
 #   always
 #   never
 #   available classname        # true if class on classpath
-#   property name              # true of set
+#   property name              # true if set as start property
+#   system   name              # true if set as system property
+#   exists file                # true if file/dir exists
 #   java OPERATOR version      # java version compared to literal
 #   nargs OPERATOR number      # number of command line args compared to literal
 #   OPERATOR := one of "<",">","<=",">=","==","!="
 #
 # CONTITIONS can be combined with AND OR or !, with AND being the assume
 # operator for a list of CONDITIONS.
+#
 # Classpath operations are evaluated on the fly, so once a class or jar is
 # added to the classpath, subsequent available conditions will see that class.
 #
+# The configuration file may be divided into sections with option names like:
+# [ssl,default]
+#
+# Clauses after a section header will only be included if they match one of the tags in the 
+# options property.  By default options are set to "default,*" or the OPTIONS property may
+# be used to pass in a list of tags, eg. :
+#
+#    java -jar start.jar OPTIONS=jetty,jsp,ssl
+#
+# The tag '*' is always appended to the options, so any section with the * tag is always 
+# applied.
+#
 
-$(jetty.class.path).path                         always
-$(jetty.lib)/**                                  exists $(jetty.lib)
+# add a property defined classpath
+${path}.path                                     property path
 
+# add a property defined library directory
+${lib}/**                                        exists ${lib}
 
-# Try different settings of jetty.home until the jetty.jar is found.
 jetty.home=/location/of/your/jetty/config/dir
+jetty.lib=/location/of/your/lib
 
 # The main class to run
-org.mortbay.xml.XmlConfiguration.class
-$(start.class).class
+org.eclipse.jetty.xml.XmlConfiguration.class
+${start.class}.class                             property start.class
 
 # The default configuration files
 $(jetty.home)/etc/jetty.xml                      nargs == 0
+./jetty-server/src/main/config/etc/jetty.xml     nargs == 0 AND ! exists $(jetty.home)/etc/jetty.xml
+
+# Default OPTIONS if not specified on the command line
+OPTIONS~=default,*                               ! property OPTIONS
+
+# Add a resources directory if it is there
+[All,resources,default]
+$(jetty.home)/resources/
+           
+# Add jetty modules
+[*]
+$(jetty.lib)/jetty-util-$(version).jar                                             ! available org.eclipse.jetty.util.StringUtil
+$(jetty.lib)/jetty-io-$(version).jar                                               ! available org.eclipse.jetty.io.Buffer
 
-# Set the jetty classpath
-/usr/share/java/solr/*                              always
+[Server,All,xml,default]
+$(jetty.lib)/jetty-xml-$(version).jar                                              ! available org.eclipse.jetty.xml.XmlParser
+         
+[Server,All,server,default]
+$(jetty.lib)/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
+$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+$(jetty.lib)/jetty-continuation-$(version).jar                                     ! available org.eclipse.jetty.continuation.Continuation
+$(jetty.lib)/jetty-server-$(version).jar                                           ! available org.eclipse.jetty.server.Server
+                                             
+[Server,All,security,default]
+$(jetty.lib)/jetty-security-$(version).jar                                         ! available org.eclipse.jetty.security.LoginService
+                                                       
+[Server,All,servlet,default]
+$(jetty.lib)/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
+$(jetty.lib)/jetty-servlet-$(version).jar                                          ! available org.eclipse.jetty.servlet.ServletHandler
+                            
+[Server,All,webapp,default]
+$(jetty.lib)/jetty-webapp-$(version).jar                                           ! available org.eclipse.jetty.webapp.WebAppContext
+                                  
+[Server,All,deploy,default]
+$(jetty.lib)/jetty-deploy-$(version).jar                                           ! available org.eclipse.jetty.deploy.ContextDeployer
+           
+[Server,All,servlets,default]
+$(jetty.lib)/jetty-servlets-$(version).jar                                         ! available org.eclipse.jetty.servlets.WelcomeFilter
+
+[All,rewrite]
+$(jetty.lib)/jetty-rewrite-$(version).jar                                          ! available org.eclipse.jetty.rewrite.handler.RewriteHandler
+
+[All,jmx]
+$(jetty.lib)/jetty-jmx-$(version).jar                                              ! available org.eclipse.jetty.jmx.MBeanContainer
+                  
+[All,ajp]
+$(jetty.lib)/jetty-ajp-$(version).jar                                              ! available org.eclipse.jetty.ajp.Ajp13Connection      
+                   
+[All,plus,jndi]
+$(jetty.lib)/jetty-jndi-${version}.jar                                             ! available org.eclipse.jetty.jndi.ContextFactory
+$(jetty.lib)/jetty-plus-${version}.jar                                             ! available org.eclipse.jetty.plus.jndi.NamingEntry
+$(jetty.lib)/jndi/**                                                               exists $(jetty.lib)/jndi 
+
+[All,annotations]
+$(jetty.lib)/jetty-annotations-$(version).jar                                      ! available org.eclipse.jetty.annotations.AnnotationFinder
+$(jetty.lib)/annotations/**                                                        exists $(jetty.lib)/jndi 
+          
+[All,setuid]
+$(jetty.lib)/jetty-setuid-$(version).jar                                           ! available org.eclipse.jetty.setuid.SetUID
+$(jetty.lib)/setuid/**                                                       
+                                    
+[All,policy]
+$(jetty.lib)/jetty-policy-$(version).jar                                           ! available org.eclipse.jetty.policy.JettyPolicy
+                                    
+[All,Client,client]
+$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+$(jetty.lib)/jetty-client-$(version).jar                                           ! available org.eclipse.jetty.client.HttpClient
+
+[All,websocket]
+$(jetty.lib)/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
+       
+[Client]
+$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+
+[All,websocket]
+$(jetty.lib)/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
+       
+[All,overlay,overlays]
+$(jetty.lib)/jetty-overlay-deployer-$(version).jar                                 ! available org.eclipse.jetty.overlay.OverlayedAppProvider
+       
+      
+# Add ext if it exists
+[Server,All,default,ext]        
+$(jetty.lib)/ext/**
+
+# Add all other sub-directories in /lib/ as options in a dynamic way
+[All,=$(jetty.lib)/**]        
 
 # Set webapps dir
 jetty.webapps=/usr/share/java/webapps
+
-- 
1.7.2.5


From 1c1dd03fe23c44b8d12bb4e2b5be39a4bb1926c0 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 11 Dec 2012 14:17:11 +0100
Subject: [PATCH 34/66] JPM/TJ: start client and server side.

---
 CHANGELOG                                      |    3 -
 client/deps.txt                                |    8 +
 client/meresco/__init__.py                     |   27 ++
 client/meresco/solr/__init__.py                |   24 ++
 client/meresco/solr/cql2solrlucenequery.py     |   45 +++
 client/meresco/solr/fields2solrdoc.py          |   69 ++++
 client/meresco/solr/solrinterface.py           |  180 ++++++++++
 client/meresco/solr/solrlucenequerycomposer.py |  114 ++++++
 client/meresco/solr/solrresponse.py            |    6 +
 client/setup.py                                |   41 +++
 client/test/_alltests.py                       |   43 +++
 client/test/alltests.sh                        |   31 ++
 client/test/cql2solrlucenequerytest.py         |   80 +++++
 client/test/fields2solrdoctest.py              |  119 +++++++
 client/test/sitecustomize.py                   |   27 ++
 client/test/solrinterfacetest.py               |  450 ++++++++++++++++++++++++
 client/test/solrlucenequerycomposertest.py     |  113 ++++++
 client/testsetup.sh                            |   59 +++
 deps.txt                                       |    8 -
 meresco/__init__.py                            |   27 --
 meresco/solr/__init__.py                       |   24 --
 meresco/solr/cql2solrlucenequery.py            |   45 ---
 meresco/solr/fields2solrdoc.py                 |   69 ----
 meresco/solr/solrinterface.py                  |  180 ----------
 meresco/solr/solrlucenequerycomposer.py        |  114 ------
 meresco/solr/solrresponse.py                   |    6 -
 setup.py                                       |   41 ---
 test/_alltests.py                              |   43 ---
 test/alltests.sh                               |   31 --
 test/cql2solrlucenequerytest.py                |   80 -----
 test/fields2solrdoctest.py                     |  119 -------
 test/sitecustomize.py                          |   27 --
 test/solrinterfacetest.py                      |  450 ------------------------
 test/solrlucenequerycomposertest.py            |  113 ------
 testsetup.sh                                   |   59 ---
 35 files changed, 1436 insertions(+), 1439 deletions(-)
 delete mode 100644 CHANGELOG
 create mode 100644 client/deps.txt
 create mode 100644 client/meresco/__init__.py
 create mode 100644 client/meresco/solr/__init__.py
 create mode 100644 client/meresco/solr/cql2solrlucenequery.py
 create mode 100644 client/meresco/solr/fields2solrdoc.py
 create mode 100644 client/meresco/solr/solrinterface.py
 create mode 100644 client/meresco/solr/solrlucenequerycomposer.py
 create mode 100644 client/meresco/solr/solrresponse.py
 create mode 100644 client/setup.py
 create mode 100644 client/test/_alltests.py
 create mode 100755 client/test/alltests.sh
 create mode 100644 client/test/cql2solrlucenequerytest.py
 create mode 100644 client/test/fields2solrdoctest.py
 create mode 100644 client/test/sitecustomize.py
 create mode 100644 client/test/solrinterfacetest.py
 create mode 100644 client/test/solrlucenequerycomposertest.py
 create mode 100755 client/testsetup.sh
 delete mode 100644 deps.txt
 delete mode 100644 meresco/__init__.py
 delete mode 100644 meresco/solr/__init__.py
 delete mode 100644 meresco/solr/cql2solrlucenequery.py
 delete mode 100644 meresco/solr/fields2solrdoc.py
 delete mode 100644 meresco/solr/solrinterface.py
 delete mode 100644 meresco/solr/solrlucenequerycomposer.py
 delete mode 100644 meresco/solr/solrresponse.py
 delete mode 100644 setup.py
 delete mode 100644 test/_alltests.py
 delete mode 100755 test/alltests.sh
 delete mode 100644 test/cql2solrlucenequerytest.py
 delete mode 100644 test/fields2solrdoctest.py
 delete mode 100644 test/sitecustomize.py
 delete mode 100644 test/solrinterfacetest.py
 delete mode 100644 test/solrlucenequerycomposertest.py
 delete mode 100755 testsetup.sh

diff --git a/CHANGELOG b/CHANGELOG
deleted file mode 100644
index 0f052ec..0000000
--- a/CHANGELOG
+++ /dev/null
@@ -1,3 +0,0 @@
-CHANGELOG Meresco-Solr
-======================
-
diff --git a/client/deps.txt b/client/deps.txt
new file mode 100644
index 0000000..cc3bafa
--- /dev/null
+++ b/client/deps.txt
@@ -0,0 +1,8 @@
+python-meresco-components (>= 4.0)
+python-meresco-components (<< 4.4)
+python-meresco-core (>= 4.0)
+python-meresco-core (<< 4.1)
+python-cqlparser (>= 1.7)
+python-cqlparser (< 1.8)
+python-weightless-core (>= 0.7)
+python-weightless-core (<< 0.8)
diff --git a/client/meresco/__init__.py b/client/meresco/__init__.py
new file mode 100644
index 0000000..af326b5
--- /dev/null
+++ b/client/meresco/__init__.py
@@ -0,0 +1,27 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from pkgutil import extend_path
+__path__ = extend_path(__path__, __name__)
diff --git a/client/meresco/solr/__init__.py b/client/meresco/solr/__init__.py
new file mode 100644
index 0000000..4dfd28d
--- /dev/null
+++ b/client/meresco/solr/__init__.py
@@ -0,0 +1,24 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
diff --git a/client/meresco/solr/cql2solrlucenequery.py b/client/meresco/solr/cql2solrlucenequery.py
new file mode 100644
index 0000000..4076d97
--- /dev/null
+++ b/client/meresco/solr/cql2solrlucenequery.py
@@ -0,0 +1,45 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from meresco.core import Observable
+
+from meresco.components.statistics import Logger
+from meresco.components.clausecollector import ClauseCollector
+from meresco.solr.solrlucenequerycomposer import SolrLuceneQueryComposer
+
+class CQL2SolrLuceneQuery(Observable, Logger):
+
+    def __init__(self, unqualifiedFields, name=None):
+        Observable.__init__(self, name=name)
+        self._cqlComposer = SolrLuceneQueryComposer(unqualifiedFields)
+
+    def executeQuery(self, cqlAbstractSyntaxTree, *args, **kwargs):
+        response = yield self.any.executeQuery(luceneQueryString=self._convert(cqlAbstractSyntaxTree), *args, **kwargs)
+        raise StopIteration(response)
+
+    def _convert(self, ast):
+        ClauseCollector(ast, self.log).visit()
+        return self._cqlComposer.compose(ast)
+
diff --git a/client/meresco/solr/fields2solrdoc.py b/client/meresco/solr/fields2solrdoc.py
new file mode 100644
index 0000000..6dc9768
--- /dev/null
+++ b/client/meresco/solr/fields2solrdoc.py
@@ -0,0 +1,69 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from meresco.core import Observable
+from xml.sax.saxutils import escape as escapeXml
+from itertools import chain
+
+class Fields2SolrDoc(Observable):
+    def __init__(self, transactionName, partname, singularValueFields=None):
+        Observable.__init__(self)
+        self._transactionName = transactionName
+        self._partname = partname
+        self._singularValueFields = set(singularValueFields) if singularValueFields else set()
+        self.txs = {}
+
+    def begin(self, name):
+        if name != self._transactionName:
+            return
+        tx = self.ctx.tx
+        tx.join(self)
+        self.txs[tx.getId()] = {}
+
+    def addField(self, name, value):
+        tx = self.ctx.tx
+        valueList = self.txs[tx.getId()].setdefault(name, [])
+        if len(valueList) == 1 and name in self._singularValueFields:
+            return
+        valueList.append(value)
+
+    def commit(self, id):
+        fields = self.txs.pop(id)
+        if not fields:
+            return
+
+        tx = self.ctx.tx
+        recordIdentifier = tx.locals["id"]
+        specialFields = [
+            ('__id__', recordIdentifier), 
+        ] 
+        def fieldStatement(key, value):
+            return '<field name="%s">%s</field>' % (escapeXml(key), escapeXml(value))
+        allFields = ((k,v) for k,vs in fields.items() for v in vs)
+
+        xml = "<doc xmlns=''>%s</doc>" % ''.join(fieldStatement(*args) for args in chain(iter(specialFields), allFields))
+        yield self.all.add(identifier=recordIdentifier, partname=self._partname, data=xml)
+
diff --git a/client/meresco/solr/solrinterface.py b/client/meresco/solr/solrinterface.py
new file mode 100644
index 0000000..6f59930
--- /dev/null
+++ b/client/meresco/solr/solrinterface.py
@@ -0,0 +1,180 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from urllib import urlencode
+from socket import socket
+from lxml.etree import parse
+from StringIO import StringIO
+from time import sleep
+from xml.sax.saxutils import escape as escapeXml
+from weightless.http import httpget, httppost
+from meresco.core import Observable
+
+from solrresponse import SolrResponse
+
+CRLF = '\r\n'
+
+class SolrInterface(Observable):
+    def __init__(self, host=None, port=None, core=None, commitTimeout=1):
+        Observable.__init__(self)
+        self._host = host
+        self._port = port
+        self._core = core
+        self._commitWithin = int(commitTimeout * 1000)
+        if self._commitWithin <= 0:
+            raise ValueError("Value commitTimeout should be greater then zero")
+        if core is not None:
+            self.observable_name = lambda: core
+
+    def all_unknown(self, message, *args, **kwargs):
+        print 'Unexpected all.unknown for:', message, args, kwargs
+        return
+        yield
+
+    def do_unknown(self, message, *args, **kwargs):
+        print 'Unexpected do.unknown for:', message, args, kwargs
+
+    def _path(self, action):
+        return '/solr/%s' % action if self._core is None else '/solr/%s/%s' % (self._core, action)
+
+    def add(self, identifier, partname, data):
+        path = self._path('update')
+        path += "?commitWithin=%d" % self._commitWithin
+        yield self._send(path=path, body="<add>%s</add>" % data)
+
+    def delete(self, identifier):
+        path = self._path('update')
+        path += "?commitWithin=%d" % self._commitWithin
+        yield self._send(path=path, body="<delete><id>%s</id></delete>" % escapeXml(identifier))
+
+    def executeQuery(self, luceneQueryString, start=0, stop=10, sortKeys=None, fieldnamesAndMaximums=None, suggestionsCount=0, suggestionsQuery=None, filterQuery=None, **kwargs):
+        if not luceneQueryString:
+            raise ValueError("Empty luceneQueryString not allowed.")
+        arguments = dict(
+                q=luceneQueryString, 
+                start=start, 
+                rows=stop-start, 
+            )
+        if sortKeys:
+            arguments["sort"] = ','.join("%s %s" % (sortKey['sortBy'], 'desc' if sortKey['sortDescending'] else 'asc') for sortKey in sortKeys)
+        if filterQuery:
+            arguments['fq'] = filterQuery
+
+        arguments.update(_drilldownArguments(fieldnamesAndMaximums))
+        if suggestionsCount > 0 and suggestionsQuery:
+            arguments["spellcheck"] = 'true'
+            arguments["spellcheck.count"] = suggestionsCount
+            arguments["spellcheck.q"] = suggestionsQuery
+
+        path = self._path('select')
+        body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
+        xml = parse(StringIO(body))
+        recordCount = int(xml.xpath('/response/result/@numFound')[0])
+        identifiers = xml.xpath('/response/result/doc/str[@name="__id__"]/text()')
+        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
+        response = SolrResponse(total=recordCount, hits=identifiers, queryTime=qtime)
+        if fieldnamesAndMaximums is not None:
+            _updateResponseWithDrilldownData(arguments, xml, response)
+        if suggestionsCount > 0 and suggestionsQuery:
+            _updateResponseWithSuggestionData(arguments, xml, response)
+        raise StopIteration(response)
+
+    def prefixSearch(self, field, prefix, limit=10):
+        arguments = {'terms.fl': field, 'terms.prefix': prefix, 'terms.limit': limit}
+        path = self._path('terms')
+        body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
+        xml = parse(StringIO(body))
+        terms = xml.xpath('/response/lst[@name="terms"]/lst[@name="%s"]/int/@name' % field)
+        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
+        response = SolrResponse(total=len(terms), hits=terms, queryTime=qtime)
+        raise StopIteration(response)
+    
+    def fieldnames(self):
+        path = self._path('admin/luke')
+        body = yield self._read(path)
+        xml = parse(StringIO(body))
+        fieldnames = xml.xpath('/response/lst[@name="fields"]/lst/@name')
+        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
+        response = SolrResponse(total=len(fieldnames), hits=fieldnames, queryTime=qtime)
+        raise StopIteration(response)
+
+    def _send(self, path, body, contentType="text/xml"):
+        headers = None
+        if body:
+            headers={'Content-Type': contentType, 'Content-Length': len(body)}
+        host, port = self._solrServer() # WARNING: can return a different server each time.
+        response = yield self._httppost(host=host, port=port, request=path, body=body, headers=headers)
+        header, body = response.split("\r\n\r\n", 1)
+        self._verify200(header, response)
+        raise StopIteration(body)
+
+    def _read(self, path):
+        host, port = self._solrServer()
+        response = yield self._httpget(host, port, path)
+        header, body = response.split('\r\n\r\n', 1)
+        self._verify200(header, response)
+        raise StopIteration(body)
+
+    def _httpget(self, *args):
+        return httpget(*args)
+
+    def _httppost(self, **kwargs):
+        return httppost(**kwargs)
+
+    def _verify200(self, header, response):
+        if not header.startswith('HTTP/1.1 200'):
+            raise IOError("Expected status '200' from Solr, but got: " + response)
+
+    def _solrServer(self):
+        return (self._host, self._port) if self._host else self.call.solrServer()
+
+
+def _drilldownArguments(fieldnamesAndMaximums):
+    arguments = {}
+    if fieldnamesAndMaximums is not None:
+        arguments['facet'] = "on"
+        arguments['facet.mincount'] = "1"
+        arguments['facet.field'] = []
+        for fieldname, maximumResults, howToSort in fieldnamesAndMaximums:
+            arguments['facet.field'].append(fieldname)
+            arguments.setdefault('f.%s.facet.limit' % fieldname, []).append(-1 if maximumResults == 0 else maximumResults)
+            arguments.setdefault('f.%s.facet.sort' % fieldname, []).append('count' if howToSort else 'index')
+    return arguments
+
+def _updateResponseWithDrilldownData(arguments, xml, response):
+    drilldownData = []
+    for facet_fields in xml.xpath('/response/lst[@name="facet_counts"]/lst[@name="facet_fields"]/lst'):
+        drilldownResult = facet_fields.xpath('int')
+        drilldownData.append((facet_fields.attrib["name"], ((termCount.attrib['name'], int(termCount.text)) for termCount in drilldownResult)))
+    response.drilldownData = drilldownData
+
+def _updateResponseWithSuggestionData(arguments, xml, response):
+    suggestions = {}
+    for suggestion in xml.xpath('/response/lst[@name="spellcheck"]/lst[@name="suggestions"]/lst'):
+        startOffset = int(suggestion.xpath('int[@name="startOffset"]/text()')[0])
+        endOffset = int(suggestion.xpath('int[@name="endOffset"]/text()')[0])
+        suggestions[suggestion.attrib['name']] = (startOffset, endOffset, suggestion.xpath('arr[@name="suggestion"]/str/text()'))
+    response.suggestions = suggestions
diff --git a/client/meresco/solr/solrlucenequerycomposer.py b/client/meresco/solr/solrlucenequerycomposer.py
new file mode 100644
index 0000000..92e6892
--- /dev/null
+++ b/client/meresco/solr/solrlucenequerycomposer.py
@@ -0,0 +1,114 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from cqlparser import CqlVisitor, UnsupportedCQL
+
+
+class SolrLuceneQueryComposer(object):
+    def __init__(self, unqualifiedTermFields):
+        self._unqualifiedTermFields = unqualifiedTermFields
+
+    def compose(self, ast):
+        (result, ) = _Cql2LuceneQueryVisitor(ast, self._unqualifiedTermFields).visit()
+        return result
+
+
+class _Cql2LuceneQueryVisitor(CqlVisitor):
+    def __init__(self, ast, unqualifiedTermFields):
+        CqlVisitor.__init__(self, ast)
+        self._unqualifiedTermFields = unqualifiedTermFields
+
+    def visitSCOPED_CLAUSE(self, node):
+        clause = CqlVisitor.visitSCOPED_CLAUSE(self, node)
+        if len(clause) == 1:
+            return clause[0]
+        return "(%s)" % ' '.join(clause)
+    
+    def visitINDEX(self, node):
+        results = CqlVisitor.visitINDEX(self, node)
+        return results.replace(':', '\\:')
+
+    def visitSEARCH_CLAUSE(self, node):
+        # possible children:
+        # CQL_QUERY
+        # SEARCH_TERM
+        # INDEX, RELATION, SEARCH_TERM
+        firstChild = node.children[0].name
+        results = CqlVisitor.visitSEARCH_CLAUSE(self, node)
+        if firstChild == 'SEARCH_TERM':
+            (unqualifiedRhs,) = results
+            unqualifiedTermFields = [
+                _formatBoost(_formatTerm(fieldname, unqualifiedRhs), boost) 
+                    for fieldname, boost in self._unqualifiedTermFields
+                ]
+            if len(unqualifiedTermFields) == 1:
+                return unqualifiedTermFields[0]
+            return "(%s)" % ' OR '.join(unqualifiedTermFields)
+        elif firstChild == 'INDEX':
+            (index, (relation, boost), term) = results
+            if relation in ['==', 'exact']:
+                query = '%s:"%s"' % (index, term)
+            elif relation == '=':
+                query = _formatTerm(index, term)
+            elif relation in ['>', '<', '>=', '<=']:
+                query = _formatRangeTerm(index, relation, term)
+            else:
+                raise UnsupportedCQL("Only =, ==, exact, <, <=, > and >= are supported.")
+            return _formatBoost(query, boost)
+        else:
+            ((query,),) = results
+            return query
+
+    def visitRELATION(self, node):
+        results = CqlVisitor.visitRELATION(self, node)
+        if len(results) == 1:
+            relation = results[0]
+            boost = 1.0
+        else:
+            (relation, (modifier, comparitor, value)) = results
+            boost = float(value)
+        return relation, boost
+ 
+
+def _formatTerm(index, termString):
+    if termString == '*':
+        return '*:*'
+    if '*' in termString:
+        termString = termString.lower()
+    else:
+        termString = '"%s"' % termString.replace('\\', r'\\').replace('"', r'\"')
+    return '%s:%s' % (index, termString)
+
+def _formatBoost(query, boost):
+    return '%s^%.1f' % (query, boost) if boost != 1 else query
+
+def _formatRangeTerm(index, relation, term):
+    rangeString = {
+        '<': "{* TO %s}",
+        '>': "{%s TO *}",
+        '<=': "[* TO %s]",
+        '>=': "[%s TO *]"}[relation]
+    return '%s:%s' % (index, rangeString % term)
+
diff --git a/client/meresco/solr/solrresponse.py b/client/meresco/solr/solrresponse.py
new file mode 100644
index 0000000..e876691
--- /dev/null
+++ b/client/meresco/solr/solrresponse.py
@@ -0,0 +1,6 @@
+
+class SolrResponse(object):
+    def __init__(self, **kwargs):
+        self.__dict__.update(kwargs)
+
+
diff --git a/client/setup.py b/client/setup.py
new file mode 100644
index 0000000..a0ea169
--- /dev/null
+++ b/client/setup.py
@@ -0,0 +1,41 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from distutils.core import setup
+
+setup(
+    name='meresco-solr',
+    packages=[
+        'meresco.solr',
+    ],
+    version='%VERSION%',
+    url='http://www.meresco.org',
+    author='Seecr (Seek You Too B.V.)',
+    author_email='info@seecr.nl',
+    description='Meresco Solr is a set of components and tools to integrate Solr into Meresco.',
+    long_description='Meresco Solr is a set of components and tools to integrate Solr into Meresco.',
+    license='GNU Public License',
+    platforms='all',
+)
diff --git a/client/test/_alltests.py b/client/test/_alltests.py
new file mode 100644
index 0000000..fdf0d74
--- /dev/null
+++ b/client/test/_alltests.py
@@ -0,0 +1,43 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from os import system
+from sys import path, argv
+from unittest import main
+
+system('find .. -name "*.pyc" | xargs rm -f')
+from glob import glob
+for dir in glob('../deps.d/*'):
+    path.insert(0, dir)
+path.insert(0, "..")
+
+from fields2solrdoctest import Fields2SolrDocTest
+from solrinterfacetest import SolrInterfaceTest
+from solrlucenequerycomposertest import SolrLuceneQueryComposerTest
+from cql2solrlucenequerytest import CQL2SolrLuceneQueryTest
+
+if __name__ == '__main__':
+    main()
+
diff --git a/client/test/alltests.sh b/client/test/alltests.sh
new file mode 100755
index 0000000..be42d6c
--- /dev/null
+++ b/client/test/alltests.sh
@@ -0,0 +1,31 @@
+#!/bin/bash
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+export LANG=en_US.UTF-8
+export PYTHONPATH=.:"$PYTHONPATH"
+
+python2.6 _alltests.py "$@"
+
diff --git a/client/test/cql2solrlucenequerytest.py b/client/test/cql2solrlucenequerytest.py
new file mode 100644
index 0000000..c24c673
--- /dev/null
+++ b/client/test/cql2solrlucenequerytest.py
@@ -0,0 +1,80 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from unittest import TestCase
+from seecr.test import CallTrace
+from cqlparser import parseString
+from meresco.solr.cql2solrlucenequery import CQL2SolrLuceneQuery
+from meresco.core import Observable
+from weightless.core import be, compose
+
+def executeQueryMock(luceneQueryString, *args, **kwargs):
+    return
+    yield
+
+class CQL2SolrLuceneQueryTest(TestCase):
+    def setUp(self):
+        self.convertor = CQL2SolrLuceneQuery([('field', 1.0)])
+        self.observer = CallTrace('Query responder', methods={'executeQuery': executeQueryMock})
+        self.dna = be((Observable(),
+            (self.convertor, 
+                (self.observer,),
+            )
+        ))
+        self.loggedClauses = []
+        def logShunt(clause, **kwargs):
+            self.loggedClauses.append(clause)
+        self.convertor.log = logShunt
+
+    def assertConversion(self, expectedClauses, query):
+        self.loggedClauses = []
+        list(compose(self.dna.any.executeQuery(cqlAbstractSyntaxTree=parseString(query))))
+        self.assertEquals(expectedClauses, self.loggedClauses)
+
+    def testOneTerm(self):
+        self.assertConversion(['term'], 'term')
+        self.assertEquals(1, len(self.observer.calledMethods))
+        self.assertEquals("executeQuery", self.observer.calledMethods[0].name)
+        self.assertEquals('field:"term"', self.observer.calledMethods[0].kwargs['luceneQueryString'])
+
+    def testIndexRelationTerm(self):
+        self.assertConversion(['field = term'], 'field=term')
+
+    def testIndexRelationBoostTerm(self):
+        self.assertConversion(['field =/boost=1.1 term'], "field =/boost=1.1 term")
+
+    def testIndexExactTerm(self):
+        self.assertConversion(['field exact term'], 'field exact term')
+        self.assertConversion(['field exact "term with spaces"'], 'field exact "term with spaces"')
+
+    def testTermAndTerm(self):
+        self.assertConversion(['term1', 'term2'], 'term1 AND term2')
+        self.assertConversion(['term1', 'term2', 'term3'], 'term1 AND term2 OR term3')
+        self.assertConversion(['term1', 'term2', 'term3'], 'term1 AND (term2 OR term3)')
+        self.assertConversion(['term1', 'term2', 'term3'], 'term1 OR term2 AND term3')
+
+    def testBraces(self):
+        self.assertConversion(['term'], '(term)')
+
diff --git a/client/test/fields2solrdoctest.py b/client/test/fields2solrdoctest.py
new file mode 100644
index 0000000..dc9eee5
--- /dev/null
+++ b/client/test/fields2solrdoctest.py
@@ -0,0 +1,119 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from seecr.test import SeecrTestCase, CallTrace
+
+from meresco.core import Observable, TransactionScope, Transaction
+from meresco.solr.fields2solrdoc import Fields2SolrDoc
+from weightless.core import be, compose
+from StringIO import StringIO
+from lxml.etree import parse
+
+def add(identifier, partname, data):
+    return
+    yield
+
+def todict(data):
+    result = {}
+    for field in parse(StringIO(data)).xpath('/doc/field'):
+        result.setdefault(field.attrib['name'], []).append(field.text)
+    return result
+
+class Fields2SolrDocTest(SeecrTestCase):
+
+    def setUp(self):
+        SeecrTestCase.setUp(self)
+
+        ctx = CallTrace('CTX')
+        tx = CallTrace('TX')
+        tx.locals = {'id': 'iden&tifier'}
+        tx.name = "tsName"
+        self.fxf = Fields2SolrDoc("tsName", "fields-partname")
+        self.fxf.ctx = ctx 
+        self.fxf.ctx.tx = tx
+        self.observer = CallTrace(methods={'add': add})
+        self.fxf.addObserver(self.observer)
+
+    def testCreateXml(self):
+        self.fxf.begin(name="tsName")
+        self.fxf.addField("field_one", "valueOne")
+        self.fxf.addField("field_one", "anotherValueOne")
+        self.fxf.addField("field_two", "value<Two>")
+        list(compose(self.fxf.commit(self.fxf.ctx.tx.getId())))
+        self.assertEquals(["add"], [m.name for m in self.observer.calledMethods])
+        kwargs = self.observer.calledMethods[0].kwargs
+        self.assertEquals({'__id__':['iden&tifier'], 'field_one':['valueOne', 'anotherValueOne'], 'field_two': ['value<Two>']}, todict(kwargs['data']))
+
+    def testWorksWithRealTransactionScope(self):
+        intercept = CallTrace('Intercept', ignoredAttributes=['begin', 'commit', 'rollback'], methods={'add': add})
+        class MockVenturi(Observable):
+            def all_unknown(self, message, *args, **kwargs):
+                self.ctx.tx.locals['id'] = 'an:identifier'
+                yield self.all.unknown(message, *args, **kwargs)
+        class MockMultiFielder(Observable):
+            def add(self, *args, **kwargs):
+                self.do.addField('field.name', 'MyName')
+                self.do.addField('field.name', 'AnotherName')
+                self.do.addField('field.title', 'MyDocument')
+                yield 'ok'
+        root = be( 
+            (Observable(),
+                (TransactionScope(transactionName="solrDoc"),
+                    (MockVenturi(),
+                        (MockMultiFielder(),
+                            (Fields2SolrDoc("solrDoc", "fields-partname"),
+                                (intercept,),
+                            )   
+                        )   
+                    )   
+                )   
+            )   
+        )   
+        list(compose(root.all.add('some', 'arguments')))
+        self.assertEquals(['add'], [m.name for m in intercept.calledMethods])
+        method = intercept.calledMethods[0]
+        self.assertEquals((), method.args)
+        self.assertEquals('an:identifier', method.kwargs['identifier'])
+        self.assertEquals('fields-partname', method.kwargs['partname'])
+        self.assertEquals({'__id__': ['an:identifier'], 'field.name':['MyName', 'AnotherName'], 'field.title': ['MyDocument']}, todict(method.kwargs['data']))
+
+        expectedXml = """<doc xmlns=''><field name="__id__">an:identifier</field><field name="field.title">MyDocument</field><field name="field.name">MyName</field><field name="field.name">AnotherName</field></doc>"""
+        self.assertEquals(expectedXml, method.kwargs['data'])
+
+    def testSingularValueFields(self):
+        __callstack_var_tx__ = Transaction('name') 
+        __callstack_var_tx__.locals['id'] = 'identifier'
+        observer = CallTrace('observer', emptyGeneratorMethods=['add'])
+        fxf = Fields2SolrDoc('name', 'partname', singularValueFields=['once'])
+        fxf.addObserver(observer)
+        fxf.begin(name='name')
+        fxf.addField('once', 'one')
+        fxf.addField('once', 'two')
+        fxf.addField('twice', 'one')
+        fxf.addField('twice', 'two')
+        list(compose(fxf.commit(__callstack_var_tx__.getId())))
+        method = observer.calledMethods[0]
+        self.assertEquals({'__id__': ['identifier'], 'once':['one'], 'twice': ['one', 'two']}, todict(method.kwargs['data']))
diff --git a/client/test/sitecustomize.py b/client/test/sitecustomize.py
new file mode 100644
index 0000000..95f0462
--- /dev/null
+++ b/client/test/sitecustomize.py
@@ -0,0 +1,27 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from sys import setdefaultencoding
+setdefaultencoding('utf-8')
diff --git a/client/test/solrinterfacetest.py b/client/test/solrinterfacetest.py
new file mode 100644
index 0000000..023f331
--- /dev/null
+++ b/client/test/solrinterfacetest.py
@@ -0,0 +1,450 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from unittest import TestCase
+
+from cgi import parse_qs
+
+from weightless.core import compose
+from weightless.io import Suspend
+from meresco.core import Observable
+from meresco.solr.solrinterface import SolrInterface
+from seecr.test import CallTrace
+
+
+class SolrInterfaceTest(TestCase):
+    def setUp(self):
+        TestCase.setUp(self)
+        self._solrInterface = SolrInterface("localhost", 8888)
+
+    def testCoreSupport(self):
+        sendData = []
+        interface = SolrInterface("localhost", "8888", core="THE_CORE")
+        interface._send = lambda path, body: sendData.append((path, body))
+        list(interface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        self.assertEquals(1, len(sendData))
+        self.assertEquals(('/solr/THE_CORE/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
+        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True)], response=RESPONSE, solrInterface=interface)
+        self.assertEquals(path, "/solr/THE_CORE/select")
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc", body)
+
+    def testAdd(self):
+        g = compose(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
+
+        g = compose(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        self.assertRaises(
+            IOError,
+            lambda: self._returnValueFromGenerator(g, ["ERROR"], '500'))
+
+        sendData = []
+        self._solrInterface._send = lambda path, body: sendData.append((path, body))
+        list(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        self.assertEquals(1, len(sendData))
+        self.assertEquals(('/solr/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
+
+    def testAddWithTimeOut(self):
+        sent_data = []
+        iSolr = SolrInterface("localhost", "8889", commitTimeout=10)
+        iSolr._send = lambda path, body: sent_data.append((path, body))
+        r = iSolr.add("record1", "part0", "<record><data>data here</data></record>")
+        list(r)
+        self.assertEquals('/solr/update?commitWithin=10000', sent_data[0][0])
+        self.assertEquals(1, len(sent_data))
+
+    def testObservableName(self):
+        sendData = []
+        observable = Observable()
+        solrInterface1 = SolrInterface("localhost", 1234, core="index1")
+        solrInterface2 = SolrInterface("localhost", 1234, core="index2")
+        solrInterface1._send = lambda path, body: sendData.append(("1", path, body))
+        solrInterface2._send = lambda path, body: sendData.append(("2", path, body))
+        observable.addObserver(solrInterface1)
+        observable.addObserver(solrInterface2)
+
+        list(compose(observable.all['index1'].add(identifier="recordId", partname="partname", data="data")))
+
+        self.assertEquals([
+                ('1', '/solr/index1/update?commitWithin=1000', '<add>data</add>'),
+            ], sendData)
+
+    def testDelete(self):
+        g = compose(self._solrInterface.delete("record&:1"))
+        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
+
+        g = compose(self._solrInterface.delete("record&:1"))
+        self.assertRaises(
+            IOError,
+            lambda: self._returnValueFromGenerator(g, "ERROR", '500'))
+
+        sendData = []
+        self._solrInterface._send = lambda path, body: sendData.append((path, body))
+        list(self._solrInterface.delete("record&:1"))
+        self.assertEquals(1, len(sendData))
+        self.assertEquals(('/solr/update?commitWithin=1000', '<delete><id>%s</id></delete>' % "record&amp;:1"), sendData[0])
+
+    def testDeleteWithTimeOut(self):
+        sent_data = []
+        iSolr = SolrInterface("localhost", "8889", commitTimeout=10)
+        iSolr._send = lambda path, body: sent_data.append((path, body))
+        r = iSolr.delete("record1")
+        list(r)
+        self.assertEquals('/solr/update?commitWithin=10000', sent_data[0][0])
+        self.assertEquals(1, len(sent_data))
+
+    def testSolrTimeoutShouldBeGreaterThenZero(self):
+        try:
+            iSolr = SolrInterface("localhost", "8889", commitTimeout=-1)
+            self.fail()
+        except ValueError, e:
+            self.assertEquals('Value commitTimeout should be greater then zero', str(e))
+
+    def testExecuteQuery(self):
+        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=None, response=RESPONSE) 
+        self.assertEquals("/solr/select", path)
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10", body)
+        self.assertEquals(3, total)
+        self.assertEquals(['1','3','5'], hits)
+
+    def testPrefixSearch(self):
+        response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", response=TERMS_PREFIX_RESPONSE) 
+        self.assertEquals(['hoogte', 'holland', 'hoe', 'horticulture', 'houden', 'housing', 'houdt', 'hoge', 'hoofd', 'houten'], response.hits)
+        self.assertEquals(10, response.total)
+        self.assertEquals(76, response.queryTime)
+        self.assertEquals('/solr/terms', path)
+        self.assertQueryArguments('terms.limit=10&terms.prefix=ho&terms.fl=afield', body)
+
+    def testPrefixSearchWithLimit(self):
+        response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", limit=5, response=TERMS_PREFIX_RESPONSE) 
+        self.assertEquals('/solr/terms', path)
+        self.assertQueryArguments('terms.limit=5&terms.prefix=ho&terms.fl=afield', body)
+
+    def testExecuteEmptyQuery(self):
+        self.assertRaises(ValueError, self.executeQuery, '', response=RESPONSE)
+
+    def testExecuteQueryWithStartStopAndSortKeys(self):
+        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True), dict(sortBy="anotherfield", sortDescending=False)], response=RESPONSE)
+        self.assertEquals("/solr/select", path)
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc,anotherfield+asc", body)
+        self.assertEquals(3, total)
+        self.assertEquals(['1','3','5'], hits)
+
+    def testExecuteQuerySortAscending(self):
+        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=[dict(sortBy="field", sortDescending=False)], response=RESPONSE)
+        self.assertEquals("/solr/select", path)
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10&sort=field+asc", body)
+        self.assertEquals(3, total)
+        self.assertEquals(['1','3','5'], hits)
+
+    def testDrilldown(self):
+        total, hits, drilldownData, (path, body) = self.executeQuery("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__other__', 5, False)], response=RESPONSE % FACET_COUNTS)
+        result = dict(drilldownData)
+        self.assertEquals("/solr/select", path)
+        self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
+        self.assertEquals(3, total)
+        self.assertEquals(['1', '3', '5'], hits)
+        self.assertEquals(['__all__', '__other__'], result.keys())
+        self.assertEquals([("term_0", 1), ("term_1", 2)], list(result['__all__']))
+        self.assertEquals([("term_2", 3), ("term_3", 4)], list(result['__other__']))
+
+    def testDrilldownOnSameFieldTwice(self):
+        total, hits, drilldownData, (path, body) = self.executeQuery("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__all__', 5, False)], response=RESPONSE % FACET_COUNTS_SAME_FIELD_TWICE)
+        self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__all__&f.__all__.facet.limit=5&f.__all__.facet.sort=index", body)
+        self.assertEquals(3, total)
+        self.assertEquals(['1', '3', '5'], hits)
+        self.assertEquals(2, len(drilldownData))
+        result = dict(drilldownData)
+        self.assertEquals(['__all__'], result.keys())
+        self.assertEquals([("term_0", 1), ("term_1", 2)], list(result['__all__']))
+
+    def testExecuteQuerySolrHostFromObserver(self):
+        solrInterface = SolrInterface()
+        observer = CallTrace(returnValues={'solrServer': ('localhost', 1234)})
+        solrInterface.addObserver(observer)
+        kwargs = []
+        def httppost(**_kwargs):
+            kwargs.append(_kwargs)
+            s = Suspend()
+            response = yield s
+            result = s.getResult()
+            raise StopIteration(result)
+        solrInterface._httppost = httppost
+
+        g = compose(solrInterface.executeQuery("meresco.exists:true"))
+        self._returnValueFromGenerator(g, [RESPONSE])
+        self.assertEquals(['solrServer'], observer.calledMethodNames())
+        self.assertQueryArguments('q=meresco.exists%3Atrue&start=0&rows=10', kwargs[0]['body'])
+        self.assertEquals('localhost', kwargs[0]['host'])
+        self.assertEquals('/solr/select', kwargs[0]['request'])
+        self.assertEquals(1234, kwargs[0]['port'])
+        self.assertEquals({'Content-Type': 'application/x-www-form-urlencoded', 'Content-Length': len(kwargs[0]['body'])}, kwargs[0]['headers'])
+
+    def testAddWithSolrServerFromObserver(self):
+        solrInterface = SolrInterface()
+        observer = CallTrace(returnValues={'solrServer': ('localhost', 1234)})
+        solrInterface.addObserver(observer)
+        kwargs = []
+        def httppost(**_kwargs):
+            kwargs.append(_kwargs)
+            s = Suspend()
+            response = yield s
+            result = s.getResult()
+            raise StopIteration(result)
+        solrInterface._httppost = httppost
+
+        g = compose(solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
+        self.assertEquals(['solrServer'], observer.calledMethodNames())
+        self.assertEquals('localhost', kwargs[0]['host'])
+        self.assertEquals(1234, kwargs[0]['port'])
+        self.assertEquals({'Content-Type': 'text/xml', 'Content-Length': len(kwargs[0]['body'])}, kwargs[0]['headers'])
+
+    def testQueryResponseTime(self):
+        response, readData = self.executeQueryResponse("meresco.exists:true", response=RESPONSE % "")
+        self.assertEquals(6, response.queryTime)
+
+    def testSolrGivesSpellCheckResults(self):
+        total, hits, suggestions, (path, body) = self.executeQuery(query="__all__:aap AND __all__:bo", response=RESPONSE % SUGGESTIONS, suggestionsCount=2, suggestionsQuery="aap AND bo")
+        self.assertQueryArguments('spellcheck.count=2&rows=10&spellcheck=true&spellcheck.q=aap+AND+bo&q=__all__%3Aaap+AND+__all__%3Abo&start=0', body)
+        self.assertEquals(['1','3','5'], hits)
+        self.assertEquals({'aap': (0, 3, ['aapje', 'raap']), 'bo': (8, 10, ['bio', 'bon'])}, suggestions)
+
+    def testFieldnames(self):
+        readData = []
+        def read(path):
+            readData.append(path)
+        self._solrInterface._read = read
+        gen = self._solrInterface.fieldnames()
+        gen.next()
+        try:
+            gen.send(FIELDNAMES_RESPONSE)
+        except StopIteration, e:
+            (response,) = e.args 
+        self.assertEquals(['/solr/admin/luke'], readData)
+        self.assertEquals(['__all__', '__exists__', '__id__', '__timestamp__', 'field0', 'field1', 'untokenized.field0'], response.hits)
+
+    def testPassFilterQuery(self):
+        total, hits, (path, body) = self.executeQuery("*", filterQuery="field:value", response=RESPONSE) 
+        self.assertQueryArguments("q=*&fq=field:value&start=0&rows=10", body)
+        total, hits, (path, body) = self.executeQuery("*", filterQuery="field:http\://host.nl", response=RESPONSE) 
+        self.assertQueryArguments("q=*&fq=field:http\://host.nl&start=0&rows=10", body)
+
+    def executeQueryResponse(self, query, response, solrInterface=None, **kwargs):
+        if solrInterface is None:
+            solrInterface = self._solrInterface
+        sendData = []
+        def send(path, body, contentType="default"):
+            sendData.append((path, body))
+        solrInterface._send = send
+        gen = solrInterface.executeQuery(luceneQueryString=query, **kwargs)
+        gen.next()
+        try:
+            gen.send(response)
+        except StopIteration, e:
+            (response,) = e.args 
+            return response, sendData
+
+    def executePrefixSearch(self, response, solrInterface=None, **kwargs):
+        if solrInterface is None:
+            solrInterface = self._solrInterface
+        sendData = []
+        def send(path, body, contentType="default"):
+            sendData.append((path, body))
+        solrInterface._send = send
+        gen = solrInterface.prefixSearch(**kwargs)
+        gen.next()
+        try:
+            gen.send(response)
+        except StopIteration, e:
+            (response,) = e.args 
+            return response, sendData[0]
+    
+    def executeQuery(self, query, response, solrInterface=None, **kwargs):
+        response, sendData = self.executeQueryResponse(query, response, solrInterface=solrInterface, **kwargs)
+        result = [response.total, response.hits]
+        if getattr(response, 'drilldownData', None) is not None:
+            result.append(response.drilldownData)
+        if getattr(response, 'suggestions', None) is not None:
+            result.append(response.suggestions)
+        result.append(sendData[0])
+        return result
+
+    def _returnValueFromGenerator(self, g, serverResponses, responseStatus='200'):
+        for response in serverResponses:
+            s = g.next()
+            self.assertEquals(Suspend, type(s))
+            s(CallTrace('reactor'), lambda: None)
+            s.resume('HTTP/1.1 %s\r\n\r\n%s' % (responseStatus, response))
+        try:
+            g.next()
+            self.fail("expected StopIteration")
+        except StopIteration, e:
+            if len(e.args) > 0:
+                return e.args[0]
+    
+    def assertQueryArguments(self, arguments1, arguments2):
+        arguments1 = parse_qs(arguments1, keep_blank_values=True)
+        arguments2 = parse_qs(arguments2, keep_blank_values=True)
+        self.assertEquals(arguments1, arguments2)
+
+RESPONSE = """
+<response>
+    <lst name="responseHeader">
+        <int name="status">0</int>
+        <int name="QTime">6</int>
+        <lst name="params">
+            <str name="indent">on</str>
+            <str name="start">0</str>
+            <str name="q">meresco.exists:true</str>
+            <str name="version">2.2</str>
+            <str name="rows">10</str>
+        </lst>
+    </lst>
+    <result name="response" numFound="3" start="0">
+        <doc>
+            <str name="__id__">1</str>
+        </doc>
+        <doc>
+            <str name="__id__">3</str>
+        </doc>
+        <doc>
+            <str name="__id__">5</str>
+        </doc>
+    </result>
+    %s
+</response>"""
+
+TERMS_PREFIX_RESPONSE = """
+<response>
+    <lst name="responseHeader">
+        <int name="status">0</int>
+        <int name="QTime">76</int>
+    </lst>
+    <lst name="terms">
+        <lst name="afield">
+            <int name="hoogte">221194</int>
+            <int name="holland">162140</int>
+            <int name="hoe">57391</int>
+            <int name="horticulture">30914</int>
+            <int name="houden">15239</int>
+            <int name="housing">14980</int>
+            <int name="houdt">14178</int>
+            <int name="hoge">12870</int>
+            <int name="hoofd">12583</int>
+            <int name="houten">10945</int>
+        </lst>
+    </lst>
+</response>"""
+
+SUGGESTIONS="""
+<lst name="spellcheck">
+    <lst name="suggestions">
+        <lst name="aap">
+            <int name="numFound">2</int>
+            <int name="startOffset">0</int>
+            <int name="endOffset">3</int>
+            <arr name="suggestion">
+                <str>aapje</str>
+                <str>raap</str>
+            </arr>
+        </lst>
+        <lst name="bo">
+            <int name="numFound">2</int>
+            <int name="startOffset">8</int>
+            <int name="endOffset">10</int>
+            <arr name="suggestion">
+                <str>bio</str>
+                <str>bon</str>
+            </arr>
+        </lst>
+    </lst>
+</lst>"""
+
+FACET_COUNTS="""
+<lst name="facet_counts">
+    <lst name="facet_queries"/>
+    <lst name="facet_fields">
+        <lst name="__all__">
+            <int name="term_0">1</int>
+            <int name="term_1">2</int>
+        </lst>
+        <lst name="__other__">
+            <int name="term_2">3</int>
+            <int name="term_3">4</int>
+        </lst>
+    </lst>
+    <lst name="facet_dates"/>
+    <lst name="facet_ranges"/>
+</lst>"""
+
+FACET_COUNTS_SAME_FIELD_TWICE="""
+<lst name="facet_counts">
+    <lst name="facet_queries"/>
+    <lst name="facet_fields">
+        <lst name="__all__">
+            <int name="term_0">1</int>
+            <int name="term_1">2</int>
+        </lst>
+        <lst name="__all__">
+            <int name="term_0">1</int>
+            <int name="term_1">2</int>
+        </lst>
+    </lst>
+    <lst name="facet_dates"/>
+    <lst name="facet_ranges"/>
+</lst>"""
+
+FIELDNAMES_RESPONSE="""
+<response>
+<lst name="responseHeader">
+<int name="status">0</int>
+<int name="QTime">4701</int>
+</lst>
+<lst name="index">
+<int name="numDocs">265054</int>
+<int name="maxDoc">332132</int>
+<int name="numTerms">1972551</int>
+<long name="version">1348587033477</long>
+<int name="segmentCount">11</int>
+<bool name="current">true</bool>
+<bool name="hasDeletions">true</bool>
+<str name="directory">
+org.apache.lucene.store.MMapDirectory:org.apache.lucene.store.MMapDirectory@/data/dev/index-state/14e40aff-9ee8-4b6c-826c-e0fb82232e33-solr/cores/records/data/index lockFactory=org.apache.lucene.store.NativeFSLockFactory@1c851ed
+</str>
+<date name="lastModified">2012-09-26T22:23:31Z</date>
+</lst>
+<lst name="fields">
+<lst name="__all__">...</lst>
+<lst name="__exists__">...</lst>
+<lst name="__id__">...</lst>
+<lst name="__timestamp__">...</lst>
+<lst name="field0">...</lst>
+<lst name="field1">...</lst>
+<lst name="untokenized.field0">...</lst>
+</lst>
+<lst name="info">...</lst>
+</response>
+"""
diff --git a/client/test/solrlucenequerycomposertest.py b/client/test/solrlucenequerycomposertest.py
new file mode 100644
index 0000000..442100f
--- /dev/null
+++ b/client/test/solrlucenequerycomposertest.py
@@ -0,0 +1,113 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from seecr.test import SeecrTestCase
+
+from cqlparser import parseString, UnsupportedCQL
+from meresco.solr.solrlucenequerycomposer import SolrLuceneQueryComposer
+
+class SolrLuceneQueryComposerTest(SeecrTestCase):
+    def testOne(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0)])
+        self.assertEquals('__all__:"term"', self.cql2lucene("term"))
+        self.assertEquals('(__all__:"fiets" AND __all__:"auto")', self.cql2lucene("fiets AND auto"))
+        self.assertEquals('__all__:"fiets auto"', self.cql2lucene('"fiets auto"'))
+        self.assertEquals('__all__:fi*', self.cql2lucene('"fi*"'))
+        self.assertEquals('__all__:fi*', self.cql2lucene('fi*'))
+        self.assertEquals('__all__:f*ts', self.cql2lucene('"f*ts"'))
+        self.assertEquals('__all__:*ts', self.cql2lucene('*ts'))
+        self.assertEquals('(__all__:"fiets" AND (__all__:"auto" OR __all__:"boot"))', self.cql2lucene('fiets AND (auto OR boot)'))
+        self.assertEquals('((__all__:"fiets" AND __all__:"auto") OR __all__:"boot")', self.cql2lucene('fiets AND auto OR boot'))
+        self.assertEquals('(__all__:"fiets" AND (__all__:"auto" OR __all__:"boot"))', self.cql2lucene('fiets AND (auto OR boot)'))
+        self.assertEquals('((__all__:"fiets" AND __all__:"auto") OR (__all__:"boot" AND __all__:"other"))', self.cql2lucene('(fiets AND auto) OR (boot AND other)'))
+        self.assertEquals('(__all__:"fiets" OR (__all__:"auto" AND __all__:"boot"))', self.cql2lucene('fiets OR auto AND boot'))
+
+    def testEscaping(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
+        self.assertEquals('field:"term:term1"', self.cql2lucene('field="term:term1"'))
+        self.assertEquals('field:"term:term1"', self.cql2lucene('field exact "term:term1"'))
+        self.assertEquals('field:"term"', self.cql2lucene('field exact term'))
+        self.assertEquals(r'dc\:title:"term"', self.cql2lucene('dc:title exact term'))
+
+    def testSolrKeywords(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
+        self.assertEquals('field:"NOT"', self.cql2lucene('field="NOT"'))
+        self.assertEquals('field:"AND"', self.cql2lucene('field="AND"'))
+        self.assertEquals('field:"OR"', self.cql2lucene('field="OR"'))
+        # Escaping Special Characters
+        # Lucene supports escaping special characters that are part of the query syntax. The current list special characters are
+        # + - && || ! ( ) { } [ ] ^ " ~ * ? : \
+        # To escape these character use the \ before the character.
+        self.assertEquals('field:"-"', self.cql2lucene('field=-'))
+        self.assertEquals('field:"+"', self.cql2lucene('field=+'))
+        self.assertEquals('field:"!"', self.cql2lucene('field="!"'))
+        self.assertEquals('field:"!"', self.cql2lucene('field=!'))
+        self.assertEquals('field:"&&"', self.cql2lucene('field="&&"'))
+        self.assertEquals(r'field:"\""', self.cql2lucene(r'field="\""'))
+        self.assertEquals(r'field:"fiets!"', self.cql2lucene(r'field="fiets!"'))
+        self.assertEquals(r'field:"fiets!"', self.cql2lucene(r'field=fiets!'))
+
+    def testPrefixQuery(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0)])
+        self.assertEquals('__all__:term*', self.cql2lucene('term*'))
+        self.assertEquals('__all__:term*', self.cql2lucene('TERM*'))
+        self.assertEquals('*:*', self.cql2lucene('*'))
+
+    def testMultipleUnqualifiedTermFields(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0), ("__extra__", 1.0)])
+        self.assertEquals('(__all__:"term" OR __extra__:"term")', self.cql2lucene("term"))
+        self.assertEquals('((__all__:"term" OR __extra__:"term") AND (__all__:"otherterm" OR __extra__:"otherterm"))', self.cql2lucene("term AND otherterm"))
+
+    def testBoost(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 4.0)])
+        self.assertEquals('__all__:"term"^4.0', self.cql2lucene("term"))
+
+        self.assertEquals('field:"term"^3.5', self.cql2lucene("field=/boost=3.5 term"))
+
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 4.0), ("__extra__", 2.0), ("__uri__", 1.0)])
+        self.assertEquals('(__all__:"term"^4.0 OR __extra__:"term"^2.0 OR __uri__:"term")', self.cql2lucene("term"))
+
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("all", 1)])
+        self.assertEquals('field:"term"^2.0', self.cql2lucene("field exact/boost=2 term"))
+
+    def testRangeQuery(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
+        self.assertEquals('field:{* TO 5}', self.cql2lucene("field<5"))
+        self.assertEquals('field:[* TO 5]', self.cql2lucene("field<=5"))
+        self.assertEquals('field:[5 TO *]', self.cql2lucene("field>=5"))
+        self.assertEquals('field:{5 TO *}', self.cql2lucene("field>5"))
+        self.assertEquals('(field:{5 TO *} AND field:[* TO 10])', self.cql2lucene("field>5 AND field<=10"))
+
+    def testUnsupportedCQL(self):
+        printer=SolrLuceneQueryComposer(unqualifiedTermFields=[("all", 1)])
+        ast = parseString("field any term")
+        try:
+            printer.compose(ast)
+            self.fail("must raise UnsupportedCQL")
+        except UnsupportedCQL, e:
+            self.assertEquals("Only =, ==, exact, <, <=, > and >= are supported.", str(e))
+
+    def cql2lucene(self, cql):
+        return self.printer.compose(parseString(cql))
diff --git a/client/testsetup.sh b/client/testsetup.sh
new file mode 100755
index 0000000..bcc3e70
--- /dev/null
+++ b/client/testsetup.sh
@@ -0,0 +1,59 @@
+#!/bin/bash
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+set -o errexit
+
+rm -rf tmp build
+
+fullPythonVersion=python2.6
+${fullPythonVersion} setup.py install --root tmp
+
+
+VERSION="x.y.z"
+
+find tmp -name '*.py' -exec sed -r -e \
+    "/DO_NOT_DISTRIBUTE/ d;
+    s/\\\$Version:[^\\\$]*\\\$/\\\$Version: ${VERSION}\\\$/" -i '{}' \;
+
+if [ -f /etc/debian_version ]; then
+    SITE_PACKAGE_DIR=`pwd`/tmp/usr/local/lib/${fullPythonVersion}/dist-packages
+else
+    SITE_PACKAGE_DIR=`pwd`/tmp/usr/lib/${fullPythonVersion}/site-packages
+fi
+
+cp meresco/__init__.py ${SITE_PACKAGE_DIR}/meresco
+export PYTHONPATH=${SITE_PACKAGE_DIR}:${PYTHONPATH}
+cp -r test tmp/test
+
+set +o errexit
+(
+cd tmp/test
+./alltests.sh
+)
+set -o errexit
+
+rm -rf tmp build
+
diff --git a/deps.txt b/deps.txt
deleted file mode 100644
index cc3bafa..0000000
--- a/deps.txt
+++ /dev/null
@@ -1,8 +0,0 @@
-python-meresco-components (>= 4.0)
-python-meresco-components (<< 4.4)
-python-meresco-core (>= 4.0)
-python-meresco-core (<< 4.1)
-python-cqlparser (>= 1.7)
-python-cqlparser (< 1.8)
-python-weightless-core (>= 0.7)
-python-weightless-core (<< 0.8)
diff --git a/meresco/__init__.py b/meresco/__init__.py
deleted file mode 100644
index af326b5..0000000
--- a/meresco/__init__.py
+++ /dev/null
@@ -1,27 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from pkgutil import extend_path
-__path__ = extend_path(__path__, __name__)
diff --git a/meresco/solr/__init__.py b/meresco/solr/__init__.py
deleted file mode 100644
index 4dfd28d..0000000
--- a/meresco/solr/__init__.py
+++ /dev/null
@@ -1,24 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
diff --git a/meresco/solr/cql2solrlucenequery.py b/meresco/solr/cql2solrlucenequery.py
deleted file mode 100644
index 4076d97..0000000
--- a/meresco/solr/cql2solrlucenequery.py
+++ /dev/null
@@ -1,45 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from meresco.core import Observable
-
-from meresco.components.statistics import Logger
-from meresco.components.clausecollector import ClauseCollector
-from meresco.solr.solrlucenequerycomposer import SolrLuceneQueryComposer
-
-class CQL2SolrLuceneQuery(Observable, Logger):
-
-    def __init__(self, unqualifiedFields, name=None):
-        Observable.__init__(self, name=name)
-        self._cqlComposer = SolrLuceneQueryComposer(unqualifiedFields)
-
-    def executeQuery(self, cqlAbstractSyntaxTree, *args, **kwargs):
-        response = yield self.any.executeQuery(luceneQueryString=self._convert(cqlAbstractSyntaxTree), *args, **kwargs)
-        raise StopIteration(response)
-
-    def _convert(self, ast):
-        ClauseCollector(ast, self.log).visit()
-        return self._cqlComposer.compose(ast)
-
diff --git a/meresco/solr/fields2solrdoc.py b/meresco/solr/fields2solrdoc.py
deleted file mode 100644
index 6dc9768..0000000
--- a/meresco/solr/fields2solrdoc.py
+++ /dev/null
@@ -1,69 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from meresco.core import Observable
-from xml.sax.saxutils import escape as escapeXml
-from itertools import chain
-
-class Fields2SolrDoc(Observable):
-    def __init__(self, transactionName, partname, singularValueFields=None):
-        Observable.__init__(self)
-        self._transactionName = transactionName
-        self._partname = partname
-        self._singularValueFields = set(singularValueFields) if singularValueFields else set()
-        self.txs = {}
-
-    def begin(self, name):
-        if name != self._transactionName:
-            return
-        tx = self.ctx.tx
-        tx.join(self)
-        self.txs[tx.getId()] = {}
-
-    def addField(self, name, value):
-        tx = self.ctx.tx
-        valueList = self.txs[tx.getId()].setdefault(name, [])
-        if len(valueList) == 1 and name in self._singularValueFields:
-            return
-        valueList.append(value)
-
-    def commit(self, id):
-        fields = self.txs.pop(id)
-        if not fields:
-            return
-
-        tx = self.ctx.tx
-        recordIdentifier = tx.locals["id"]
-        specialFields = [
-            ('__id__', recordIdentifier), 
-        ] 
-        def fieldStatement(key, value):
-            return '<field name="%s">%s</field>' % (escapeXml(key), escapeXml(value))
-        allFields = ((k,v) for k,vs in fields.items() for v in vs)
-
-        xml = "<doc xmlns=''>%s</doc>" % ''.join(fieldStatement(*args) for args in chain(iter(specialFields), allFields))
-        yield self.all.add(identifier=recordIdentifier, partname=self._partname, data=xml)
-
diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
deleted file mode 100644
index 6f59930..0000000
--- a/meresco/solr/solrinterface.py
+++ /dev/null
@@ -1,180 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from urllib import urlencode
-from socket import socket
-from lxml.etree import parse
-from StringIO import StringIO
-from time import sleep
-from xml.sax.saxutils import escape as escapeXml
-from weightless.http import httpget, httppost
-from meresco.core import Observable
-
-from solrresponse import SolrResponse
-
-CRLF = '\r\n'
-
-class SolrInterface(Observable):
-    def __init__(self, host=None, port=None, core=None, commitTimeout=1):
-        Observable.__init__(self)
-        self._host = host
-        self._port = port
-        self._core = core
-        self._commitWithin = int(commitTimeout * 1000)
-        if self._commitWithin <= 0:
-            raise ValueError("Value commitTimeout should be greater then zero")
-        if core is not None:
-            self.observable_name = lambda: core
-
-    def all_unknown(self, message, *args, **kwargs):
-        print 'Unexpected all.unknown for:', message, args, kwargs
-        return
-        yield
-
-    def do_unknown(self, message, *args, **kwargs):
-        print 'Unexpected do.unknown for:', message, args, kwargs
-
-    def _path(self, action):
-        return '/solr/%s' % action if self._core is None else '/solr/%s/%s' % (self._core, action)
-
-    def add(self, identifier, partname, data):
-        path = self._path('update')
-        path += "?commitWithin=%d" % self._commitWithin
-        yield self._send(path=path, body="<add>%s</add>" % data)
-
-    def delete(self, identifier):
-        path = self._path('update')
-        path += "?commitWithin=%d" % self._commitWithin
-        yield self._send(path=path, body="<delete><id>%s</id></delete>" % escapeXml(identifier))
-
-    def executeQuery(self, luceneQueryString, start=0, stop=10, sortKeys=None, fieldnamesAndMaximums=None, suggestionsCount=0, suggestionsQuery=None, filterQuery=None, **kwargs):
-        if not luceneQueryString:
-            raise ValueError("Empty luceneQueryString not allowed.")
-        arguments = dict(
-                q=luceneQueryString, 
-                start=start, 
-                rows=stop-start, 
-            )
-        if sortKeys:
-            arguments["sort"] = ','.join("%s %s" % (sortKey['sortBy'], 'desc' if sortKey['sortDescending'] else 'asc') for sortKey in sortKeys)
-        if filterQuery:
-            arguments['fq'] = filterQuery
-
-        arguments.update(_drilldownArguments(fieldnamesAndMaximums))
-        if suggestionsCount > 0 and suggestionsQuery:
-            arguments["spellcheck"] = 'true'
-            arguments["spellcheck.count"] = suggestionsCount
-            arguments["spellcheck.q"] = suggestionsQuery
-
-        path = self._path('select')
-        body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
-        xml = parse(StringIO(body))
-        recordCount = int(xml.xpath('/response/result/@numFound')[0])
-        identifiers = xml.xpath('/response/result/doc/str[@name="__id__"]/text()')
-        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
-        response = SolrResponse(total=recordCount, hits=identifiers, queryTime=qtime)
-        if fieldnamesAndMaximums is not None:
-            _updateResponseWithDrilldownData(arguments, xml, response)
-        if suggestionsCount > 0 and suggestionsQuery:
-            _updateResponseWithSuggestionData(arguments, xml, response)
-        raise StopIteration(response)
-
-    def prefixSearch(self, field, prefix, limit=10):
-        arguments = {'terms.fl': field, 'terms.prefix': prefix, 'terms.limit': limit}
-        path = self._path('terms')
-        body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
-        xml = parse(StringIO(body))
-        terms = xml.xpath('/response/lst[@name="terms"]/lst[@name="%s"]/int/@name' % field)
-        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
-        response = SolrResponse(total=len(terms), hits=terms, queryTime=qtime)
-        raise StopIteration(response)
-    
-    def fieldnames(self):
-        path = self._path('admin/luke')
-        body = yield self._read(path)
-        xml = parse(StringIO(body))
-        fieldnames = xml.xpath('/response/lst[@name="fields"]/lst/@name')
-        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
-        response = SolrResponse(total=len(fieldnames), hits=fieldnames, queryTime=qtime)
-        raise StopIteration(response)
-
-    def _send(self, path, body, contentType="text/xml"):
-        headers = None
-        if body:
-            headers={'Content-Type': contentType, 'Content-Length': len(body)}
-        host, port = self._solrServer() # WARNING: can return a different server each time.
-        response = yield self._httppost(host=host, port=port, request=path, body=body, headers=headers)
-        header, body = response.split("\r\n\r\n", 1)
-        self._verify200(header, response)
-        raise StopIteration(body)
-
-    def _read(self, path):
-        host, port = self._solrServer()
-        response = yield self._httpget(host, port, path)
-        header, body = response.split('\r\n\r\n', 1)
-        self._verify200(header, response)
-        raise StopIteration(body)
-
-    def _httpget(self, *args):
-        return httpget(*args)
-
-    def _httppost(self, **kwargs):
-        return httppost(**kwargs)
-
-    def _verify200(self, header, response):
-        if not header.startswith('HTTP/1.1 200'):
-            raise IOError("Expected status '200' from Solr, but got: " + response)
-
-    def _solrServer(self):
-        return (self._host, self._port) if self._host else self.call.solrServer()
-
-
-def _drilldownArguments(fieldnamesAndMaximums):
-    arguments = {}
-    if fieldnamesAndMaximums is not None:
-        arguments['facet'] = "on"
-        arguments['facet.mincount'] = "1"
-        arguments['facet.field'] = []
-        for fieldname, maximumResults, howToSort in fieldnamesAndMaximums:
-            arguments['facet.field'].append(fieldname)
-            arguments.setdefault('f.%s.facet.limit' % fieldname, []).append(-1 if maximumResults == 0 else maximumResults)
-            arguments.setdefault('f.%s.facet.sort' % fieldname, []).append('count' if howToSort else 'index')
-    return arguments
-
-def _updateResponseWithDrilldownData(arguments, xml, response):
-    drilldownData = []
-    for facet_fields in xml.xpath('/response/lst[@name="facet_counts"]/lst[@name="facet_fields"]/lst'):
-        drilldownResult = facet_fields.xpath('int')
-        drilldownData.append((facet_fields.attrib["name"], ((termCount.attrib['name'], int(termCount.text)) for termCount in drilldownResult)))
-    response.drilldownData = drilldownData
-
-def _updateResponseWithSuggestionData(arguments, xml, response):
-    suggestions = {}
-    for suggestion in xml.xpath('/response/lst[@name="spellcheck"]/lst[@name="suggestions"]/lst'):
-        startOffset = int(suggestion.xpath('int[@name="startOffset"]/text()')[0])
-        endOffset = int(suggestion.xpath('int[@name="endOffset"]/text()')[0])
-        suggestions[suggestion.attrib['name']] = (startOffset, endOffset, suggestion.xpath('arr[@name="suggestion"]/str/text()'))
-    response.suggestions = suggestions
diff --git a/meresco/solr/solrlucenequerycomposer.py b/meresco/solr/solrlucenequerycomposer.py
deleted file mode 100644
index 92e6892..0000000
--- a/meresco/solr/solrlucenequerycomposer.py
+++ /dev/null
@@ -1,114 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from cqlparser import CqlVisitor, UnsupportedCQL
-
-
-class SolrLuceneQueryComposer(object):
-    def __init__(self, unqualifiedTermFields):
-        self._unqualifiedTermFields = unqualifiedTermFields
-
-    def compose(self, ast):
-        (result, ) = _Cql2LuceneQueryVisitor(ast, self._unqualifiedTermFields).visit()
-        return result
-
-
-class _Cql2LuceneQueryVisitor(CqlVisitor):
-    def __init__(self, ast, unqualifiedTermFields):
-        CqlVisitor.__init__(self, ast)
-        self._unqualifiedTermFields = unqualifiedTermFields
-
-    def visitSCOPED_CLAUSE(self, node):
-        clause = CqlVisitor.visitSCOPED_CLAUSE(self, node)
-        if len(clause) == 1:
-            return clause[0]
-        return "(%s)" % ' '.join(clause)
-    
-    def visitINDEX(self, node):
-        results = CqlVisitor.visitINDEX(self, node)
-        return results.replace(':', '\\:')
-
-    def visitSEARCH_CLAUSE(self, node):
-        # possible children:
-        # CQL_QUERY
-        # SEARCH_TERM
-        # INDEX, RELATION, SEARCH_TERM
-        firstChild = node.children[0].name
-        results = CqlVisitor.visitSEARCH_CLAUSE(self, node)
-        if firstChild == 'SEARCH_TERM':
-            (unqualifiedRhs,) = results
-            unqualifiedTermFields = [
-                _formatBoost(_formatTerm(fieldname, unqualifiedRhs), boost) 
-                    for fieldname, boost in self._unqualifiedTermFields
-                ]
-            if len(unqualifiedTermFields) == 1:
-                return unqualifiedTermFields[0]
-            return "(%s)" % ' OR '.join(unqualifiedTermFields)
-        elif firstChild == 'INDEX':
-            (index, (relation, boost), term) = results
-            if relation in ['==', 'exact']:
-                query = '%s:"%s"' % (index, term)
-            elif relation == '=':
-                query = _formatTerm(index, term)
-            elif relation in ['>', '<', '>=', '<=']:
-                query = _formatRangeTerm(index, relation, term)
-            else:
-                raise UnsupportedCQL("Only =, ==, exact, <, <=, > and >= are supported.")
-            return _formatBoost(query, boost)
-        else:
-            ((query,),) = results
-            return query
-
-    def visitRELATION(self, node):
-        results = CqlVisitor.visitRELATION(self, node)
-        if len(results) == 1:
-            relation = results[0]
-            boost = 1.0
-        else:
-            (relation, (modifier, comparitor, value)) = results
-            boost = float(value)
-        return relation, boost
- 
-
-def _formatTerm(index, termString):
-    if termString == '*':
-        return '*:*'
-    if '*' in termString:
-        termString = termString.lower()
-    else:
-        termString = '"%s"' % termString.replace('\\', r'\\').replace('"', r'\"')
-    return '%s:%s' % (index, termString)
-
-def _formatBoost(query, boost):
-    return '%s^%.1f' % (query, boost) if boost != 1 else query
-
-def _formatRangeTerm(index, relation, term):
-    rangeString = {
-        '<': "{* TO %s}",
-        '>': "{%s TO *}",
-        '<=': "[* TO %s]",
-        '>=': "[%s TO *]"}[relation]
-    return '%s:%s' % (index, rangeString % term)
-
diff --git a/meresco/solr/solrresponse.py b/meresco/solr/solrresponse.py
deleted file mode 100644
index e876691..0000000
--- a/meresco/solr/solrresponse.py
+++ /dev/null
@@ -1,6 +0,0 @@
-
-class SolrResponse(object):
-    def __init__(self, **kwargs):
-        self.__dict__.update(kwargs)
-
-
diff --git a/setup.py b/setup.py
deleted file mode 100644
index a0ea169..0000000
--- a/setup.py
+++ /dev/null
@@ -1,41 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from distutils.core import setup
-
-setup(
-    name='meresco-solr',
-    packages=[
-        'meresco.solr',
-    ],
-    version='%VERSION%',
-    url='http://www.meresco.org',
-    author='Seecr (Seek You Too B.V.)',
-    author_email='info@seecr.nl',
-    description='Meresco Solr is a set of components and tools to integrate Solr into Meresco.',
-    long_description='Meresco Solr is a set of components and tools to integrate Solr into Meresco.',
-    license='GNU Public License',
-    platforms='all',
-)
diff --git a/test/_alltests.py b/test/_alltests.py
deleted file mode 100644
index fdf0d74..0000000
--- a/test/_alltests.py
+++ /dev/null
@@ -1,43 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from os import system
-from sys import path, argv
-from unittest import main
-
-system('find .. -name "*.pyc" | xargs rm -f')
-from glob import glob
-for dir in glob('../deps.d/*'):
-    path.insert(0, dir)
-path.insert(0, "..")
-
-from fields2solrdoctest import Fields2SolrDocTest
-from solrinterfacetest import SolrInterfaceTest
-from solrlucenequerycomposertest import SolrLuceneQueryComposerTest
-from cql2solrlucenequerytest import CQL2SolrLuceneQueryTest
-
-if __name__ == '__main__':
-    main()
-
diff --git a/test/alltests.sh b/test/alltests.sh
deleted file mode 100755
index be42d6c..0000000
--- a/test/alltests.sh
+++ /dev/null
@@ -1,31 +0,0 @@
-#!/bin/bash
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-export LANG=en_US.UTF-8
-export PYTHONPATH=.:"$PYTHONPATH"
-
-python2.6 _alltests.py "$@"
-
diff --git a/test/cql2solrlucenequerytest.py b/test/cql2solrlucenequerytest.py
deleted file mode 100644
index c24c673..0000000
--- a/test/cql2solrlucenequerytest.py
+++ /dev/null
@@ -1,80 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from unittest import TestCase
-from seecr.test import CallTrace
-from cqlparser import parseString
-from meresco.solr.cql2solrlucenequery import CQL2SolrLuceneQuery
-from meresco.core import Observable
-from weightless.core import be, compose
-
-def executeQueryMock(luceneQueryString, *args, **kwargs):
-    return
-    yield
-
-class CQL2SolrLuceneQueryTest(TestCase):
-    def setUp(self):
-        self.convertor = CQL2SolrLuceneQuery([('field', 1.0)])
-        self.observer = CallTrace('Query responder', methods={'executeQuery': executeQueryMock})
-        self.dna = be((Observable(),
-            (self.convertor, 
-                (self.observer,),
-            )
-        ))
-        self.loggedClauses = []
-        def logShunt(clause, **kwargs):
-            self.loggedClauses.append(clause)
-        self.convertor.log = logShunt
-
-    def assertConversion(self, expectedClauses, query):
-        self.loggedClauses = []
-        list(compose(self.dna.any.executeQuery(cqlAbstractSyntaxTree=parseString(query))))
-        self.assertEquals(expectedClauses, self.loggedClauses)
-
-    def testOneTerm(self):
-        self.assertConversion(['term'], 'term')
-        self.assertEquals(1, len(self.observer.calledMethods))
-        self.assertEquals("executeQuery", self.observer.calledMethods[0].name)
-        self.assertEquals('field:"term"', self.observer.calledMethods[0].kwargs['luceneQueryString'])
-
-    def testIndexRelationTerm(self):
-        self.assertConversion(['field = term'], 'field=term')
-
-    def testIndexRelationBoostTerm(self):
-        self.assertConversion(['field =/boost=1.1 term'], "field =/boost=1.1 term")
-
-    def testIndexExactTerm(self):
-        self.assertConversion(['field exact term'], 'field exact term')
-        self.assertConversion(['field exact "term with spaces"'], 'field exact "term with spaces"')
-
-    def testTermAndTerm(self):
-        self.assertConversion(['term1', 'term2'], 'term1 AND term2')
-        self.assertConversion(['term1', 'term2', 'term3'], 'term1 AND term2 OR term3')
-        self.assertConversion(['term1', 'term2', 'term3'], 'term1 AND (term2 OR term3)')
-        self.assertConversion(['term1', 'term2', 'term3'], 'term1 OR term2 AND term3')
-
-    def testBraces(self):
-        self.assertConversion(['term'], '(term)')
-
diff --git a/test/fields2solrdoctest.py b/test/fields2solrdoctest.py
deleted file mode 100644
index dc9eee5..0000000
--- a/test/fields2solrdoctest.py
+++ /dev/null
@@ -1,119 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from seecr.test import SeecrTestCase, CallTrace
-
-from meresco.core import Observable, TransactionScope, Transaction
-from meresco.solr.fields2solrdoc import Fields2SolrDoc
-from weightless.core import be, compose
-from StringIO import StringIO
-from lxml.etree import parse
-
-def add(identifier, partname, data):
-    return
-    yield
-
-def todict(data):
-    result = {}
-    for field in parse(StringIO(data)).xpath('/doc/field'):
-        result.setdefault(field.attrib['name'], []).append(field.text)
-    return result
-
-class Fields2SolrDocTest(SeecrTestCase):
-
-    def setUp(self):
-        SeecrTestCase.setUp(self)
-
-        ctx = CallTrace('CTX')
-        tx = CallTrace('TX')
-        tx.locals = {'id': 'iden&tifier'}
-        tx.name = "tsName"
-        self.fxf = Fields2SolrDoc("tsName", "fields-partname")
-        self.fxf.ctx = ctx 
-        self.fxf.ctx.tx = tx
-        self.observer = CallTrace(methods={'add': add})
-        self.fxf.addObserver(self.observer)
-
-    def testCreateXml(self):
-        self.fxf.begin(name="tsName")
-        self.fxf.addField("field_one", "valueOne")
-        self.fxf.addField("field_one", "anotherValueOne")
-        self.fxf.addField("field_two", "value<Two>")
-        list(compose(self.fxf.commit(self.fxf.ctx.tx.getId())))
-        self.assertEquals(["add"], [m.name for m in self.observer.calledMethods])
-        kwargs = self.observer.calledMethods[0].kwargs
-        self.assertEquals({'__id__':['iden&tifier'], 'field_one':['valueOne', 'anotherValueOne'], 'field_two': ['value<Two>']}, todict(kwargs['data']))
-
-    def testWorksWithRealTransactionScope(self):
-        intercept = CallTrace('Intercept', ignoredAttributes=['begin', 'commit', 'rollback'], methods={'add': add})
-        class MockVenturi(Observable):
-            def all_unknown(self, message, *args, **kwargs):
-                self.ctx.tx.locals['id'] = 'an:identifier'
-                yield self.all.unknown(message, *args, **kwargs)
-        class MockMultiFielder(Observable):
-            def add(self, *args, **kwargs):
-                self.do.addField('field.name', 'MyName')
-                self.do.addField('field.name', 'AnotherName')
-                self.do.addField('field.title', 'MyDocument')
-                yield 'ok'
-        root = be( 
-            (Observable(),
-                (TransactionScope(transactionName="solrDoc"),
-                    (MockVenturi(),
-                        (MockMultiFielder(),
-                            (Fields2SolrDoc("solrDoc", "fields-partname"),
-                                (intercept,),
-                            )   
-                        )   
-                    )   
-                )   
-            )   
-        )   
-        list(compose(root.all.add('some', 'arguments')))
-        self.assertEquals(['add'], [m.name for m in intercept.calledMethods])
-        method = intercept.calledMethods[0]
-        self.assertEquals((), method.args)
-        self.assertEquals('an:identifier', method.kwargs['identifier'])
-        self.assertEquals('fields-partname', method.kwargs['partname'])
-        self.assertEquals({'__id__': ['an:identifier'], 'field.name':['MyName', 'AnotherName'], 'field.title': ['MyDocument']}, todict(method.kwargs['data']))
-
-        expectedXml = """<doc xmlns=''><field name="__id__">an:identifier</field><field name="field.title">MyDocument</field><field name="field.name">MyName</field><field name="field.name">AnotherName</field></doc>"""
-        self.assertEquals(expectedXml, method.kwargs['data'])
-
-    def testSingularValueFields(self):
-        __callstack_var_tx__ = Transaction('name') 
-        __callstack_var_tx__.locals['id'] = 'identifier'
-        observer = CallTrace('observer', emptyGeneratorMethods=['add'])
-        fxf = Fields2SolrDoc('name', 'partname', singularValueFields=['once'])
-        fxf.addObserver(observer)
-        fxf.begin(name='name')
-        fxf.addField('once', 'one')
-        fxf.addField('once', 'two')
-        fxf.addField('twice', 'one')
-        fxf.addField('twice', 'two')
-        list(compose(fxf.commit(__callstack_var_tx__.getId())))
-        method = observer.calledMethods[0]
-        self.assertEquals({'__id__': ['identifier'], 'once':['one'], 'twice': ['one', 'two']}, todict(method.kwargs['data']))
diff --git a/test/sitecustomize.py b/test/sitecustomize.py
deleted file mode 100644
index 95f0462..0000000
--- a/test/sitecustomize.py
+++ /dev/null
@@ -1,27 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from sys import setdefaultencoding
-setdefaultencoding('utf-8')
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
deleted file mode 100644
index 023f331..0000000
--- a/test/solrinterfacetest.py
+++ /dev/null
@@ -1,450 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from unittest import TestCase
-
-from cgi import parse_qs
-
-from weightless.core import compose
-from weightless.io import Suspend
-from meresco.core import Observable
-from meresco.solr.solrinterface import SolrInterface
-from seecr.test import CallTrace
-
-
-class SolrInterfaceTest(TestCase):
-    def setUp(self):
-        TestCase.setUp(self)
-        self._solrInterface = SolrInterface("localhost", 8888)
-
-    def testCoreSupport(self):
-        sendData = []
-        interface = SolrInterface("localhost", "8888", core="THE_CORE")
-        interface._send = lambda path, body: sendData.append((path, body))
-        list(interface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
-        self.assertEquals(1, len(sendData))
-        self.assertEquals(('/solr/THE_CORE/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True)], response=RESPONSE, solrInterface=interface)
-        self.assertEquals(path, "/solr/THE_CORE/select")
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc", body)
-
-    def testAdd(self):
-        g = compose(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
-        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
-
-        g = compose(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
-        self.assertRaises(
-            IOError,
-            lambda: self._returnValueFromGenerator(g, ["ERROR"], '500'))
-
-        sendData = []
-        self._solrInterface._send = lambda path, body: sendData.append((path, body))
-        list(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
-        self.assertEquals(1, len(sendData))
-        self.assertEquals(('/solr/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
-
-    def testAddWithTimeOut(self):
-        sent_data = []
-        iSolr = SolrInterface("localhost", "8889", commitTimeout=10)
-        iSolr._send = lambda path, body: sent_data.append((path, body))
-        r = iSolr.add("record1", "part0", "<record><data>data here</data></record>")
-        list(r)
-        self.assertEquals('/solr/update?commitWithin=10000', sent_data[0][0])
-        self.assertEquals(1, len(sent_data))
-
-    def testObservableName(self):
-        sendData = []
-        observable = Observable()
-        solrInterface1 = SolrInterface("localhost", 1234, core="index1")
-        solrInterface2 = SolrInterface("localhost", 1234, core="index2")
-        solrInterface1._send = lambda path, body: sendData.append(("1", path, body))
-        solrInterface2._send = lambda path, body: sendData.append(("2", path, body))
-        observable.addObserver(solrInterface1)
-        observable.addObserver(solrInterface2)
-
-        list(compose(observable.all['index1'].add(identifier="recordId", partname="partname", data="data")))
-
-        self.assertEquals([
-                ('1', '/solr/index1/update?commitWithin=1000', '<add>data</add>'),
-            ], sendData)
-
-    def testDelete(self):
-        g = compose(self._solrInterface.delete("record&:1"))
-        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
-
-        g = compose(self._solrInterface.delete("record&:1"))
-        self.assertRaises(
-            IOError,
-            lambda: self._returnValueFromGenerator(g, "ERROR", '500'))
-
-        sendData = []
-        self._solrInterface._send = lambda path, body: sendData.append((path, body))
-        list(self._solrInterface.delete("record&:1"))
-        self.assertEquals(1, len(sendData))
-        self.assertEquals(('/solr/update?commitWithin=1000', '<delete><id>%s</id></delete>' % "record&amp;:1"), sendData[0])
-
-    def testDeleteWithTimeOut(self):
-        sent_data = []
-        iSolr = SolrInterface("localhost", "8889", commitTimeout=10)
-        iSolr._send = lambda path, body: sent_data.append((path, body))
-        r = iSolr.delete("record1")
-        list(r)
-        self.assertEquals('/solr/update?commitWithin=10000', sent_data[0][0])
-        self.assertEquals(1, len(sent_data))
-
-    def testSolrTimeoutShouldBeGreaterThenZero(self):
-        try:
-            iSolr = SolrInterface("localhost", "8889", commitTimeout=-1)
-            self.fail()
-        except ValueError, e:
-            self.assertEquals('Value commitTimeout should be greater then zero', str(e))
-
-    def testExecuteQuery(self):
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=None, response=RESPONSE) 
-        self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1','3','5'], hits)
-
-    def testPrefixSearch(self):
-        response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", response=TERMS_PREFIX_RESPONSE) 
-        self.assertEquals(['hoogte', 'holland', 'hoe', 'horticulture', 'houden', 'housing', 'houdt', 'hoge', 'hoofd', 'houten'], response.hits)
-        self.assertEquals(10, response.total)
-        self.assertEquals(76, response.queryTime)
-        self.assertEquals('/solr/terms', path)
-        self.assertQueryArguments('terms.limit=10&terms.prefix=ho&terms.fl=afield', body)
-
-    def testPrefixSearchWithLimit(self):
-        response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", limit=5, response=TERMS_PREFIX_RESPONSE) 
-        self.assertEquals('/solr/terms', path)
-        self.assertQueryArguments('terms.limit=5&terms.prefix=ho&terms.fl=afield', body)
-
-    def testExecuteEmptyQuery(self):
-        self.assertRaises(ValueError, self.executeQuery, '', response=RESPONSE)
-
-    def testExecuteQueryWithStartStopAndSortKeys(self):
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True), dict(sortBy="anotherfield", sortDescending=False)], response=RESPONSE)
-        self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc,anotherfield+asc", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1','3','5'], hits)
-
-    def testExecuteQuerySortAscending(self):
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=[dict(sortBy="field", sortDescending=False)], response=RESPONSE)
-        self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10&sort=field+asc", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1','3','5'], hits)
-
-    def testDrilldown(self):
-        total, hits, drilldownData, (path, body) = self.executeQuery("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__other__', 5, False)], response=RESPONSE % FACET_COUNTS)
-        result = dict(drilldownData)
-        self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1', '3', '5'], hits)
-        self.assertEquals(['__all__', '__other__'], result.keys())
-        self.assertEquals([("term_0", 1), ("term_1", 2)], list(result['__all__']))
-        self.assertEquals([("term_2", 3), ("term_3", 4)], list(result['__other__']))
-
-    def testDrilldownOnSameFieldTwice(self):
-        total, hits, drilldownData, (path, body) = self.executeQuery("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__all__', 5, False)], response=RESPONSE % FACET_COUNTS_SAME_FIELD_TWICE)
-        self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__all__&f.__all__.facet.limit=5&f.__all__.facet.sort=index", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1', '3', '5'], hits)
-        self.assertEquals(2, len(drilldownData))
-        result = dict(drilldownData)
-        self.assertEquals(['__all__'], result.keys())
-        self.assertEquals([("term_0", 1), ("term_1", 2)], list(result['__all__']))
-
-    def testExecuteQuerySolrHostFromObserver(self):
-        solrInterface = SolrInterface()
-        observer = CallTrace(returnValues={'solrServer': ('localhost', 1234)})
-        solrInterface.addObserver(observer)
-        kwargs = []
-        def httppost(**_kwargs):
-            kwargs.append(_kwargs)
-            s = Suspend()
-            response = yield s
-            result = s.getResult()
-            raise StopIteration(result)
-        solrInterface._httppost = httppost
-
-        g = compose(solrInterface.executeQuery("meresco.exists:true"))
-        self._returnValueFromGenerator(g, [RESPONSE])
-        self.assertEquals(['solrServer'], observer.calledMethodNames())
-        self.assertQueryArguments('q=meresco.exists%3Atrue&start=0&rows=10', kwargs[0]['body'])
-        self.assertEquals('localhost', kwargs[0]['host'])
-        self.assertEquals('/solr/select', kwargs[0]['request'])
-        self.assertEquals(1234, kwargs[0]['port'])
-        self.assertEquals({'Content-Type': 'application/x-www-form-urlencoded', 'Content-Length': len(kwargs[0]['body'])}, kwargs[0]['headers'])
-
-    def testAddWithSolrServerFromObserver(self):
-        solrInterface = SolrInterface()
-        observer = CallTrace(returnValues={'solrServer': ('localhost', 1234)})
-        solrInterface.addObserver(observer)
-        kwargs = []
-        def httppost(**_kwargs):
-            kwargs.append(_kwargs)
-            s = Suspend()
-            response = yield s
-            result = s.getResult()
-            raise StopIteration(result)
-        solrInterface._httppost = httppost
-
-        g = compose(solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
-        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
-        self.assertEquals(['solrServer'], observer.calledMethodNames())
-        self.assertEquals('localhost', kwargs[0]['host'])
-        self.assertEquals(1234, kwargs[0]['port'])
-        self.assertEquals({'Content-Type': 'text/xml', 'Content-Length': len(kwargs[0]['body'])}, kwargs[0]['headers'])
-
-    def testQueryResponseTime(self):
-        response, readData = self.executeQueryResponse("meresco.exists:true", response=RESPONSE % "")
-        self.assertEquals(6, response.queryTime)
-
-    def testSolrGivesSpellCheckResults(self):
-        total, hits, suggestions, (path, body) = self.executeQuery(query="__all__:aap AND __all__:bo", response=RESPONSE % SUGGESTIONS, suggestionsCount=2, suggestionsQuery="aap AND bo")
-        self.assertQueryArguments('spellcheck.count=2&rows=10&spellcheck=true&spellcheck.q=aap+AND+bo&q=__all__%3Aaap+AND+__all__%3Abo&start=0', body)
-        self.assertEquals(['1','3','5'], hits)
-        self.assertEquals({'aap': (0, 3, ['aapje', 'raap']), 'bo': (8, 10, ['bio', 'bon'])}, suggestions)
-
-    def testFieldnames(self):
-        readData = []
-        def read(path):
-            readData.append(path)
-        self._solrInterface._read = read
-        gen = self._solrInterface.fieldnames()
-        gen.next()
-        try:
-            gen.send(FIELDNAMES_RESPONSE)
-        except StopIteration, e:
-            (response,) = e.args 
-        self.assertEquals(['/solr/admin/luke'], readData)
-        self.assertEquals(['__all__', '__exists__', '__id__', '__timestamp__', 'field0', 'field1', 'untokenized.field0'], response.hits)
-
-    def testPassFilterQuery(self):
-        total, hits, (path, body) = self.executeQuery("*", filterQuery="field:value", response=RESPONSE) 
-        self.assertQueryArguments("q=*&fq=field:value&start=0&rows=10", body)
-        total, hits, (path, body) = self.executeQuery("*", filterQuery="field:http\://host.nl", response=RESPONSE) 
-        self.assertQueryArguments("q=*&fq=field:http\://host.nl&start=0&rows=10", body)
-
-    def executeQueryResponse(self, query, response, solrInterface=None, **kwargs):
-        if solrInterface is None:
-            solrInterface = self._solrInterface
-        sendData = []
-        def send(path, body, contentType="default"):
-            sendData.append((path, body))
-        solrInterface._send = send
-        gen = solrInterface.executeQuery(luceneQueryString=query, **kwargs)
-        gen.next()
-        try:
-            gen.send(response)
-        except StopIteration, e:
-            (response,) = e.args 
-            return response, sendData
-
-    def executePrefixSearch(self, response, solrInterface=None, **kwargs):
-        if solrInterface is None:
-            solrInterface = self._solrInterface
-        sendData = []
-        def send(path, body, contentType="default"):
-            sendData.append((path, body))
-        solrInterface._send = send
-        gen = solrInterface.prefixSearch(**kwargs)
-        gen.next()
-        try:
-            gen.send(response)
-        except StopIteration, e:
-            (response,) = e.args 
-            return response, sendData[0]
-    
-    def executeQuery(self, query, response, solrInterface=None, **kwargs):
-        response, sendData = self.executeQueryResponse(query, response, solrInterface=solrInterface, **kwargs)
-        result = [response.total, response.hits]
-        if getattr(response, 'drilldownData', None) is not None:
-            result.append(response.drilldownData)
-        if getattr(response, 'suggestions', None) is not None:
-            result.append(response.suggestions)
-        result.append(sendData[0])
-        return result
-
-    def _returnValueFromGenerator(self, g, serverResponses, responseStatus='200'):
-        for response in serverResponses:
-            s = g.next()
-            self.assertEquals(Suspend, type(s))
-            s(CallTrace('reactor'), lambda: None)
-            s.resume('HTTP/1.1 %s\r\n\r\n%s' % (responseStatus, response))
-        try:
-            g.next()
-            self.fail("expected StopIteration")
-        except StopIteration, e:
-            if len(e.args) > 0:
-                return e.args[0]
-    
-    def assertQueryArguments(self, arguments1, arguments2):
-        arguments1 = parse_qs(arguments1, keep_blank_values=True)
-        arguments2 = parse_qs(arguments2, keep_blank_values=True)
-        self.assertEquals(arguments1, arguments2)
-
-RESPONSE = """
-<response>
-    <lst name="responseHeader">
-        <int name="status">0</int>
-        <int name="QTime">6</int>
-        <lst name="params">
-            <str name="indent">on</str>
-            <str name="start">0</str>
-            <str name="q">meresco.exists:true</str>
-            <str name="version">2.2</str>
-            <str name="rows">10</str>
-        </lst>
-    </lst>
-    <result name="response" numFound="3" start="0">
-        <doc>
-            <str name="__id__">1</str>
-        </doc>
-        <doc>
-            <str name="__id__">3</str>
-        </doc>
-        <doc>
-            <str name="__id__">5</str>
-        </doc>
-    </result>
-    %s
-</response>"""
-
-TERMS_PREFIX_RESPONSE = """
-<response>
-    <lst name="responseHeader">
-        <int name="status">0</int>
-        <int name="QTime">76</int>
-    </lst>
-    <lst name="terms">
-        <lst name="afield">
-            <int name="hoogte">221194</int>
-            <int name="holland">162140</int>
-            <int name="hoe">57391</int>
-            <int name="horticulture">30914</int>
-            <int name="houden">15239</int>
-            <int name="housing">14980</int>
-            <int name="houdt">14178</int>
-            <int name="hoge">12870</int>
-            <int name="hoofd">12583</int>
-            <int name="houten">10945</int>
-        </lst>
-    </lst>
-</response>"""
-
-SUGGESTIONS="""
-<lst name="spellcheck">
-    <lst name="suggestions">
-        <lst name="aap">
-            <int name="numFound">2</int>
-            <int name="startOffset">0</int>
-            <int name="endOffset">3</int>
-            <arr name="suggestion">
-                <str>aapje</str>
-                <str>raap</str>
-            </arr>
-        </lst>
-        <lst name="bo">
-            <int name="numFound">2</int>
-            <int name="startOffset">8</int>
-            <int name="endOffset">10</int>
-            <arr name="suggestion">
-                <str>bio</str>
-                <str>bon</str>
-            </arr>
-        </lst>
-    </lst>
-</lst>"""
-
-FACET_COUNTS="""
-<lst name="facet_counts">
-    <lst name="facet_queries"/>
-    <lst name="facet_fields">
-        <lst name="__all__">
-            <int name="term_0">1</int>
-            <int name="term_1">2</int>
-        </lst>
-        <lst name="__other__">
-            <int name="term_2">3</int>
-            <int name="term_3">4</int>
-        </lst>
-    </lst>
-    <lst name="facet_dates"/>
-    <lst name="facet_ranges"/>
-</lst>"""
-
-FACET_COUNTS_SAME_FIELD_TWICE="""
-<lst name="facet_counts">
-    <lst name="facet_queries"/>
-    <lst name="facet_fields">
-        <lst name="__all__">
-            <int name="term_0">1</int>
-            <int name="term_1">2</int>
-        </lst>
-        <lst name="__all__">
-            <int name="term_0">1</int>
-            <int name="term_1">2</int>
-        </lst>
-    </lst>
-    <lst name="facet_dates"/>
-    <lst name="facet_ranges"/>
-</lst>"""
-
-FIELDNAMES_RESPONSE="""
-<response>
-<lst name="responseHeader">
-<int name="status">0</int>
-<int name="QTime">4701</int>
-</lst>
-<lst name="index">
-<int name="numDocs">265054</int>
-<int name="maxDoc">332132</int>
-<int name="numTerms">1972551</int>
-<long name="version">1348587033477</long>
-<int name="segmentCount">11</int>
-<bool name="current">true</bool>
-<bool name="hasDeletions">true</bool>
-<str name="directory">
-org.apache.lucene.store.MMapDirectory:org.apache.lucene.store.MMapDirectory@/data/dev/index-state/14e40aff-9ee8-4b6c-826c-e0fb82232e33-solr/cores/records/data/index lockFactory=org.apache.lucene.store.NativeFSLockFactory@1c851ed
-</str>
-<date name="lastModified">2012-09-26T22:23:31Z</date>
-</lst>
-<lst name="fields">
-<lst name="__all__">...</lst>
-<lst name="__exists__">...</lst>
-<lst name="__id__">...</lst>
-<lst name="__timestamp__">...</lst>
-<lst name="field0">...</lst>
-<lst name="field1">...</lst>
-<lst name="untokenized.field0">...</lst>
-</lst>
-<lst name="info">...</lst>
-</response>
-"""
diff --git a/test/solrlucenequerycomposertest.py b/test/solrlucenequerycomposertest.py
deleted file mode 100644
index 442100f..0000000
--- a/test/solrlucenequerycomposertest.py
+++ /dev/null
@@ -1,113 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from seecr.test import SeecrTestCase
-
-from cqlparser import parseString, UnsupportedCQL
-from meresco.solr.solrlucenequerycomposer import SolrLuceneQueryComposer
-
-class SolrLuceneQueryComposerTest(SeecrTestCase):
-    def testOne(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0)])
-        self.assertEquals('__all__:"term"', self.cql2lucene("term"))
-        self.assertEquals('(__all__:"fiets" AND __all__:"auto")', self.cql2lucene("fiets AND auto"))
-        self.assertEquals('__all__:"fiets auto"', self.cql2lucene('"fiets auto"'))
-        self.assertEquals('__all__:fi*', self.cql2lucene('"fi*"'))
-        self.assertEquals('__all__:fi*', self.cql2lucene('fi*'))
-        self.assertEquals('__all__:f*ts', self.cql2lucene('"f*ts"'))
-        self.assertEquals('__all__:*ts', self.cql2lucene('*ts'))
-        self.assertEquals('(__all__:"fiets" AND (__all__:"auto" OR __all__:"boot"))', self.cql2lucene('fiets AND (auto OR boot)'))
-        self.assertEquals('((__all__:"fiets" AND __all__:"auto") OR __all__:"boot")', self.cql2lucene('fiets AND auto OR boot'))
-        self.assertEquals('(__all__:"fiets" AND (__all__:"auto" OR __all__:"boot"))', self.cql2lucene('fiets AND (auto OR boot)'))
-        self.assertEquals('((__all__:"fiets" AND __all__:"auto") OR (__all__:"boot" AND __all__:"other"))', self.cql2lucene('(fiets AND auto) OR (boot AND other)'))
-        self.assertEquals('(__all__:"fiets" OR (__all__:"auto" AND __all__:"boot"))', self.cql2lucene('fiets OR auto AND boot'))
-
-    def testEscaping(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
-        self.assertEquals('field:"term:term1"', self.cql2lucene('field="term:term1"'))
-        self.assertEquals('field:"term:term1"', self.cql2lucene('field exact "term:term1"'))
-        self.assertEquals('field:"term"', self.cql2lucene('field exact term'))
-        self.assertEquals(r'dc\:title:"term"', self.cql2lucene('dc:title exact term'))
-
-    def testSolrKeywords(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
-        self.assertEquals('field:"NOT"', self.cql2lucene('field="NOT"'))
-        self.assertEquals('field:"AND"', self.cql2lucene('field="AND"'))
-        self.assertEquals('field:"OR"', self.cql2lucene('field="OR"'))
-        # Escaping Special Characters
-        # Lucene supports escaping special characters that are part of the query syntax. The current list special characters are
-        # + - && || ! ( ) { } [ ] ^ " ~ * ? : \
-        # To escape these character use the \ before the character.
-        self.assertEquals('field:"-"', self.cql2lucene('field=-'))
-        self.assertEquals('field:"+"', self.cql2lucene('field=+'))
-        self.assertEquals('field:"!"', self.cql2lucene('field="!"'))
-        self.assertEquals('field:"!"', self.cql2lucene('field=!'))
-        self.assertEquals('field:"&&"', self.cql2lucene('field="&&"'))
-        self.assertEquals(r'field:"\""', self.cql2lucene(r'field="\""'))
-        self.assertEquals(r'field:"fiets!"', self.cql2lucene(r'field="fiets!"'))
-        self.assertEquals(r'field:"fiets!"', self.cql2lucene(r'field=fiets!'))
-
-    def testPrefixQuery(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0)])
-        self.assertEquals('__all__:term*', self.cql2lucene('term*'))
-        self.assertEquals('__all__:term*', self.cql2lucene('TERM*'))
-        self.assertEquals('*:*', self.cql2lucene('*'))
-
-    def testMultipleUnqualifiedTermFields(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0), ("__extra__", 1.0)])
-        self.assertEquals('(__all__:"term" OR __extra__:"term")', self.cql2lucene("term"))
-        self.assertEquals('((__all__:"term" OR __extra__:"term") AND (__all__:"otherterm" OR __extra__:"otherterm"))', self.cql2lucene("term AND otherterm"))
-
-    def testBoost(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 4.0)])
-        self.assertEquals('__all__:"term"^4.0', self.cql2lucene("term"))
-
-        self.assertEquals('field:"term"^3.5', self.cql2lucene("field=/boost=3.5 term"))
-
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 4.0), ("__extra__", 2.0), ("__uri__", 1.0)])
-        self.assertEquals('(__all__:"term"^4.0 OR __extra__:"term"^2.0 OR __uri__:"term")', self.cql2lucene("term"))
-
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("all", 1)])
-        self.assertEquals('field:"term"^2.0', self.cql2lucene("field exact/boost=2 term"))
-
-    def testRangeQuery(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
-        self.assertEquals('field:{* TO 5}', self.cql2lucene("field<5"))
-        self.assertEquals('field:[* TO 5]', self.cql2lucene("field<=5"))
-        self.assertEquals('field:[5 TO *]', self.cql2lucene("field>=5"))
-        self.assertEquals('field:{5 TO *}', self.cql2lucene("field>5"))
-        self.assertEquals('(field:{5 TO *} AND field:[* TO 10])', self.cql2lucene("field>5 AND field<=10"))
-
-    def testUnsupportedCQL(self):
-        printer=SolrLuceneQueryComposer(unqualifiedTermFields=[("all", 1)])
-        ast = parseString("field any term")
-        try:
-            printer.compose(ast)
-            self.fail("must raise UnsupportedCQL")
-        except UnsupportedCQL, e:
-            self.assertEquals("Only =, ==, exact, <, <=, > and >= are supported.", str(e))
-
-    def cql2lucene(self, cql):
-        return self.printer.compose(parseString(cql))
diff --git a/testsetup.sh b/testsetup.sh
deleted file mode 100755
index bcc3e70..0000000
--- a/testsetup.sh
+++ /dev/null
@@ -1,59 +0,0 @@
-#!/bin/bash
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-set -o errexit
-
-rm -rf tmp build
-
-fullPythonVersion=python2.6
-${fullPythonVersion} setup.py install --root tmp
-
-
-VERSION="x.y.z"
-
-find tmp -name '*.py' -exec sed -r -e \
-    "/DO_NOT_DISTRIBUTE/ d;
-    s/\\\$Version:[^\\\$]*\\\$/\\\$Version: ${VERSION}\\\$/" -i '{}' \;
-
-if [ -f /etc/debian_version ]; then
-    SITE_PACKAGE_DIR=`pwd`/tmp/usr/local/lib/${fullPythonVersion}/dist-packages
-else
-    SITE_PACKAGE_DIR=`pwd`/tmp/usr/lib/${fullPythonVersion}/site-packages
-fi
-
-cp meresco/__init__.py ${SITE_PACKAGE_DIR}/meresco
-export PYTHONPATH=${SITE_PACKAGE_DIR}:${PYTHONPATH}
-cp -r test tmp/test
-
-set +o errexit
-(
-cd tmp/test
-./alltests.sh
-)
-set -o errexit
-
-rm -rf tmp build
-
-- 
1.7.2.5


From 6127353b520e0ab2cd92c6c41e764bfafaba9a8e Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 11 Dec 2012 14:25:53 +0100
Subject: [PATCH 35/66] JPM/TJ: added highlevel alltest.

---
 test/alltests.sh |   45 +++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 45 insertions(+), 0 deletions(-)
 create mode 100755 test/alltests.sh

diff --git a/test/alltests.sh b/test/alltests.sh
new file mode 100755
index 0000000..99e80c7
--- /dev/null
+++ b/test/alltests.sh
@@ -0,0 +1,45 @@
+#!/bin/bash
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+export LANG=en_US.UTF-8
+export PYTHONPATH=.:$PYTHONPATH
+tests="client server"
+option=$1
+if [ "$option" == "--client" ]; then 
+    tests="client"
+    shift
+elif [ "$option" == "--server" ]; then 
+    tests="server"
+    shift
+fi
+
+for type in $tests; do
+    echo "Meresco Solr $(echo $type | sed -e "s,\(.\)\(.*\),\U\1\L\2,") tests."
+    (
+        cd ../$type/test
+        ./alltests.sh "$@"
+    )
+done
-- 
1.7.2.5


From fd0dabf78be784324638f1277f3a0117122e470a Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 11 Dec 2012 14:32:53 +0100
Subject: [PATCH 36/66] JPM/TJ: prepare to integrate with Meresco Solr (as server).

---
 bin/start-solr                                 |   76 ----
 bin/start-solr.py                              |    1 -
 server/bin/start-solr                          |   76 ++++
 server/bin/start-solr.py                       |    1 +
 server/solrrun/__init__.py                     |   24 ++
 server/solrrun/solrconfig.py                   |  155 +++++++
 server/test/_alltests.py                       |   39 ++
 server/test/alltests.sh                        |   30 ++
 server/test/sitecustomize.py                   |    2 +
 server/test/solrruntest.py                     |  256 ++++++++++++
 server/usr-share/core-data/conf/schema.xml     |   51 +++
 server/usr-share/core-data/conf/solrconfig.xml |   58 +++
 server/usr-share/solr-data/contexts/solr.xml   |    8 +
 server/usr-share/solr-data/etc/jetty.xml       |  173 ++++++++
 server/usr-share/solr-data/etc/webdefault.xml  |  527 ++++++++++++++++++++++++
 server/usr-share/solr-data/solr.xml            |    4 +
 server/usr-share/solr-data/start.config        |  162 ++++++++
 server/usr-share/solrconfig.d/admin.xml        |   18 +
 server/usr-share/solrconfig.d/autocomplete.xml |   13 +
 server/usr-share/solrconfig.d/suggestions.xml  |   17 +
 solrrun/__init__.py                            |   24 --
 solrrun/solrconfig.py                          |  155 -------
 test/_alltests.py                              |   39 --
 test/alltests.sh                               |   30 --
 test/sitecustomize.py                          |    2 -
 test/solrruntest.py                            |  256 ------------
 usr-share/core-data/conf/schema.xml            |   51 ---
 usr-share/core-data/conf/solrconfig.xml        |   58 ---
 usr-share/solr-data/contexts/solr.xml          |    8 -
 usr-share/solr-data/etc/jetty.xml              |  173 --------
 usr-share/solr-data/etc/webdefault.xml         |  527 ------------------------
 usr-share/solr-data/solr.xml                   |    4 -
 usr-share/solr-data/start.config               |  162 --------
 usr-share/solrconfig.d/admin.xml               |   18 -
 usr-share/solrconfig.d/autocomplete.xml        |   13 -
 usr-share/solrconfig.d/suggestions.xml         |   17 -
 36 files changed, 1614 insertions(+), 1614 deletions(-)
 delete mode 100755 bin/start-solr
 delete mode 120000 bin/start-solr.py
 create mode 100755 server/bin/start-solr
 create mode 120000 server/bin/start-solr.py
 create mode 100644 server/solrrun/__init__.py
 create mode 100644 server/solrrun/solrconfig.py
 create mode 100644 server/test/_alltests.py
 create mode 100755 server/test/alltests.sh
 create mode 100644 server/test/sitecustomize.py
 create mode 100644 server/test/solrruntest.py
 create mode 100644 server/usr-share/core-data/conf/schema.xml
 create mode 100644 server/usr-share/core-data/conf/solrconfig.xml
 create mode 100644 server/usr-share/solr-data/contexts/solr.xml
 create mode 100644 server/usr-share/solr-data/etc/jetty.xml
 create mode 100644 server/usr-share/solr-data/etc/webdefault.xml
 create mode 100644 server/usr-share/solr-data/solr.xml
 create mode 100644 server/usr-share/solr-data/start.config
 create mode 100644 server/usr-share/solrconfig.d/admin.xml
 create mode 100644 server/usr-share/solrconfig.d/autocomplete.xml
 create mode 100644 server/usr-share/solrconfig.d/suggestions.xml
 delete mode 100644 solrrun/__init__.py
 delete mode 100644 solrrun/solrconfig.py
 delete mode 100644 test/_alltests.py
 delete mode 100755 test/alltests.sh
 delete mode 100644 test/sitecustomize.py
 delete mode 100644 test/solrruntest.py
 delete mode 100644 usr-share/core-data/conf/schema.xml
 delete mode 100644 usr-share/core-data/conf/solrconfig.xml
 delete mode 100644 usr-share/solr-data/contexts/solr.xml
 delete mode 100644 usr-share/solr-data/etc/jetty.xml
 delete mode 100644 usr-share/solr-data/etc/webdefault.xml
 delete mode 100644 usr-share/solr-data/solr.xml
 delete mode 100644 usr-share/solr-data/start.config
 delete mode 100644 usr-share/solrconfig.d/admin.xml
 delete mode 100644 usr-share/solrconfig.d/autocomplete.xml
 delete mode 100644 usr-share/solrconfig.d/suggestions.xml

diff --git a/bin/start-solr b/bin/start-solr
deleted file mode 100755
index 85948c2..0000000
--- a/bin/start-solr
+++ /dev/null
@@ -1,76 +0,0 @@
-#!/usr/bin/env python2.6
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-import sys                # DO_NOT_DISTRIBUTE
-sys.path.insert(0, '..')  # DO_NOT_DISTRIBUTE
-
-from sys import argv, exit
-from os import listdir
-from os.path import join
-from optparse import OptionParser, Option
-from subprocess import Popen
-
-from solrrun.solrconfig import SolrConfig, solrUsrShareDir
-
-
-def parseArguments(args):
-    features = [f.rsplit('.', 1)[0] for f in listdir(join(solrUsrShareDir, 'solrconfig.d'))]
-    parser = OptionParser(description="""Available features: %s.""" % ', '.join(features), epilog="""
-Example config: 
-{
-    "core1": {},
-    "core2": {"feature": {"option": "value"}},
-    "core3": {"booleanFeature": true},
-    "core4": {"schemaExtension": [
-        {"extensionType":"fieldTypeFilter", "fieldTypeName":"text_ws", "filterClass":"solr.ASCIIFoldingFilterFactory"}
-    ]},
-    "core5": {"additionalSolrConfig": "full path to additional solrconfig.xml"}
-}
-""")
-    parser.format_epilog = lambda formatter: parser.epilog
-    parser.add_option(Option('', '--port', type='int', help='Solr port number', dest='port'))
-    parser.add_option(Option('', '--stateDir', type='string', help='Solr state directory', dest='stateDir'))
-    parser.add_option(Option('', '--config', type='string', help="Filename with json configuration file for solr", dest="config"))
-    parser.add_option(Option('', '--javaMX', type='string', help="Value for -Xmx setting for java", dest="javaMX", default="1024M"))
-    options, arguments = parser.parse_args(args)
-    if not all([options.port, options.stateDir, options.config]):
-        parser.print_help()
-        raise ValueError("Missing required option (all except javaMX are required)")
-    return options, arguments
-
-
-if __name__ == '__main__':
-    args = argv[1:]
-    options, arguments = parseArguments(args)
-
-    if Popen(["java -version 2>&1 | grep 'libgcj' > /dev/null 2>&1"], shell=True).wait() == 0:
-        print "Don't use GCJ as the default java JRE."
-        exit(1)
-
-    solrConfig = SolrConfig(stateDir=options.stateDir, port=options.port, configFile=options.config)
-    solrConfig.start(javaMX=options.javaMX)
-
-
diff --git a/bin/start-solr.py b/bin/start-solr.py
deleted file mode 120000
index 67f9338..0000000
--- a/bin/start-solr.py
+++ /dev/null
@@ -1 +0,0 @@
-start-solr
\ No newline at end of file
diff --git a/server/bin/start-solr b/server/bin/start-solr
new file mode 100755
index 0000000..85948c2
--- /dev/null
+++ b/server/bin/start-solr
@@ -0,0 +1,76 @@
+#!/usr/bin/env python2.6
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+import sys                # DO_NOT_DISTRIBUTE
+sys.path.insert(0, '..')  # DO_NOT_DISTRIBUTE
+
+from sys import argv, exit
+from os import listdir
+from os.path import join
+from optparse import OptionParser, Option
+from subprocess import Popen
+
+from solrrun.solrconfig import SolrConfig, solrUsrShareDir
+
+
+def parseArguments(args):
+    features = [f.rsplit('.', 1)[0] for f in listdir(join(solrUsrShareDir, 'solrconfig.d'))]
+    parser = OptionParser(description="""Available features: %s.""" % ', '.join(features), epilog="""
+Example config: 
+{
+    "core1": {},
+    "core2": {"feature": {"option": "value"}},
+    "core3": {"booleanFeature": true},
+    "core4": {"schemaExtension": [
+        {"extensionType":"fieldTypeFilter", "fieldTypeName":"text_ws", "filterClass":"solr.ASCIIFoldingFilterFactory"}
+    ]},
+    "core5": {"additionalSolrConfig": "full path to additional solrconfig.xml"}
+}
+""")
+    parser.format_epilog = lambda formatter: parser.epilog
+    parser.add_option(Option('', '--port', type='int', help='Solr port number', dest='port'))
+    parser.add_option(Option('', '--stateDir', type='string', help='Solr state directory', dest='stateDir'))
+    parser.add_option(Option('', '--config', type='string', help="Filename with json configuration file for solr", dest="config"))
+    parser.add_option(Option('', '--javaMX', type='string', help="Value for -Xmx setting for java", dest="javaMX", default="1024M"))
+    options, arguments = parser.parse_args(args)
+    if not all([options.port, options.stateDir, options.config]):
+        parser.print_help()
+        raise ValueError("Missing required option (all except javaMX are required)")
+    return options, arguments
+
+
+if __name__ == '__main__':
+    args = argv[1:]
+    options, arguments = parseArguments(args)
+
+    if Popen(["java -version 2>&1 | grep 'libgcj' > /dev/null 2>&1"], shell=True).wait() == 0:
+        print "Don't use GCJ as the default java JRE."
+        exit(1)
+
+    solrConfig = SolrConfig(stateDir=options.stateDir, port=options.port, configFile=options.config)
+    solrConfig.start(javaMX=options.javaMX)
+
+
diff --git a/server/bin/start-solr.py b/server/bin/start-solr.py
new file mode 120000
index 0000000..67f9338
--- /dev/null
+++ b/server/bin/start-solr.py
@@ -0,0 +1 @@
+start-solr
\ No newline at end of file
diff --git a/server/solrrun/__init__.py b/server/solrrun/__init__.py
new file mode 100644
index 0000000..6c55ee5
--- /dev/null
+++ b/server/solrrun/__init__.py
@@ -0,0 +1,24 @@
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
diff --git a/server/solrrun/solrconfig.py b/server/solrrun/solrconfig.py
new file mode 100644
index 0000000..41bd7da
--- /dev/null
+++ b/server/solrrun/solrconfig.py
@@ -0,0 +1,155 @@
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from os import makedirs, listdir, system, execvp
+from os.path import dirname, abspath, isdir, isfile, join
+from shutil import copytree, rmtree
+from re import compile, MULTILINE
+from StringIO import StringIO
+from lxml.etree import parse, SubElement, tostring
+from simplejson import load as jsonLoad
+
+
+mydir = dirname(abspath(__file__))
+solrUsrShareDir = '/usr/share/solr4.0.0-run'
+solrUsrShareDir = join(dirname(mydir), 'usr-share') # DO_NOT_DISTRIBUTE
+SOLR_VERSION = "4.0.0"
+
+
+class SolrConfig(object):
+    def __init__(self, stateDir, port, configFile):
+        self.config=jsonLoad(open(configFile))
+        self.stateDir = stateDir
+        self.port = port
+        self.configBasedir = dirname(abspath(configFile))
+        assert all(type(v) == dict for v in self.config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
+
+        if not isdir(self.stateDir):
+            copytree(join(solrUsrShareDir, 'solr-data'), self.stateDir)
+        else:
+            newMatchVersion = parse(open(join(solrUsrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+            for coreDir in listdir(join(self.stateDir, 'cores')):
+                currentMatchVersion = parse(open(join(self.stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+                if currentMatchVersion != newMatchVersion:
+                    raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
+
+        self._setupJettyXml()
+        self._setupStartConfig()
+        self._setupSolrXml()
+        self._setupCoreData()
+
+        for core, features in self.config.items():
+            for feature, options in features.items():
+                self._setupFeature(name=feature, core=core, options=options)
+
+    def _setupFeatureSchemaExtension(self, core, options):
+        schemaXmlFile = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
+        schemaXml = parse(open(schemaXmlFile))
+        for option in options:
+            if option.get('extensionType') == 'fieldTypeFilter':
+                fieldTypeName = option['fieldTypeName']
+                fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
+                assert len(fieldTypes) == 1
+                analyzer = fieldTypes[0].xpath('analyzer')[0]
+                SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
+
+        with open(schemaXmlFile, 'w') as f:
+            f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
+
+    def _setupFeature(self, name, core, options):
+        if name == 'schemaExtension':
+            self._setupFeatureSchemaExtension(core=core, options=options)
+            return
+        if name == 'additionalSolrConfig':
+            filepath = options if options.startswith('/') else join(self.configBasedir, options)
+            self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
+            return
+        if options == False:
+            return
+        featureFilename = join(solrUsrShareDir, 'solrconfig.d', '%s.xml' % name)
+        if not isfile(featureFilename):
+            raise ValueError("Unknown feature '%s'" % name)
+
+        feature = open(featureFilename).read()
+        if type(options) is dict:
+            feature = feature % options
+        feature_xml = parse(StringIO(feature))
+        self._extendSolrConfig(core=core, lxmlElementList=feature_xml.xpath('/config/*'))
+
+    def _extendSolrConfig(self, core, lxmlElementList):
+        if not lxmlElementList:
+            raise ValueError("No elements found with which to extend the solrconfig.xml")
+        solrconfig_file = join(self.stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+        core_sorlconfig = parse(open(solrconfig_file))
+        core_sorlconfig.getroot().extend(lxmlElementList)
+        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
+    def _setupCoreData(self):
+        cores = self.config.keys()
+        solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
+        coresElement = solr_xml.xpath("/solr/cores")[0]
+        [coresElement.remove(child) for child in coresElement.getchildren()]
+        for core in cores:
+            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
+            coreDir = join(self.stateDir, 'cores', core)
+            isdir(coreDir) and rmtree(coreDir)
+            copytree(join(solrUsrShareDir, 'core-data'), coreDir)
+            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
+            schema_xml = parse(open(schema_xml_path))
+            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
+            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
+
+        open(join(self.stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
+
+    def _setupJettyXml(self):
+        system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
+                self.port,
+                join(self.stateDir, 'etc', 'jetty.xml')
+            ))
+
+    def _setupStartConfig(self):
+        startConfigPath = join(self.stateDir, 'start.config')
+        startConfig = oldStartConfig = open(startConfigPath).read()
+        startConfig = compile('^jetty\.home=.*$', flags=MULTILINE).sub('jetty.home=' + self.stateDir, startConfig)
+        startConfig = compile('^jetty\.lib=.*$', flags=MULTILINE).sub('jetty.lib=/usr/share/java/solr%s' % SOLR_VERSION, startConfig)
+        open(startConfigPath, 'w').write(startConfig)
+
+    def _setupSolrXml(self):
+        system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, self.stateDir))
+
+    def start(self, javaMX):
+        self._execvp(
+            'java', [
+                'java',
+                '-Xmx%s' % javaMX, 
+                '-Djetty.port=%s' % self.port,
+                '-DSTART=%s/start.config' % self.stateDir,
+                '-Dsolr.solr.home=%s' % self.stateDir, 
+                '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
+            ])
+
+    def _execvp(self, *args, **kwargs):
+        execvp(*args, **kwargs)
+
diff --git a/server/test/_alltests.py b/server/test/_alltests.py
new file mode 100644
index 0000000..fe173da
--- /dev/null
+++ b/server/test/_alltests.py
@@ -0,0 +1,39 @@
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+import os, sys
+os.system('find .. -name "*.pyc" | xargs rm -f')
+
+from glob import glob
+for path in glob('../deps.d/*'):
+    sys.path.insert(0, path)
+sys.path.insert(0, '../bin')
+
+from solrruntest import SolrRunTest
+
+if __name__ == '__main__':
+    from unittest import main
+    main()
+
diff --git a/server/test/alltests.sh b/server/test/alltests.sh
new file mode 100755
index 0000000..178c3c8
--- /dev/null
+++ b/server/test/alltests.sh
@@ -0,0 +1,30 @@
+#!/bin/bash
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2005-2010 Seek You Too B.V. (CQ2) http://www.cq2.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+export LANG=en_US.UTF-8
+export PYTHONPATH=.:$PYTHONPATH
+python _alltests.py "$@"
diff --git a/server/test/sitecustomize.py b/server/test/sitecustomize.py
new file mode 100644
index 0000000..f110c26
--- /dev/null
+++ b/server/test/sitecustomize.py
@@ -0,0 +1,2 @@
+from sys import setdefaultencoding
+setdefaultencoding('utf-8')
diff --git a/server/test/solrruntest.py b/server/test/solrruntest.py
new file mode 100644
index 0000000..06056b3
--- /dev/null
+++ b/server/test/solrruntest.py
@@ -0,0 +1,256 @@
+# -*- coding: utf-8 -*-
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+import sys
+from unittest import main
+from StringIO import StringIO
+from os import mkdir, listdir, system
+from os.path import join, dirname, abspath, basename, isdir
+from shutil import rmtree
+from simplejson import dump as jsonDump
+from lxml.etree import parse, tostring
+
+from seecr.test import SeecrTestCase
+start_solr = __import__('start-solr')
+
+
+mydir = dirname(abspath(__file__))
+version = "4.0.0"
+
+class SolrRunTest(SeecrTestCase):
+    def testParseArguments(self):
+        options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--config=/tmp/config.json'])
+        self.assertEquals(8042, options.port)
+        self.assertEquals('/tmp', options.stateDir)
+        self.assertEquals('/tmp/config.json', options.config)
+
+    def testIncompleteArguments(self):
+        stdout_mock = StringIO()
+        sys.stdout = stdout_mock
+        try:
+            self.assertRaises(ValueError, lambda: start_solr.parseArguments(['--port=8042', '--stateDir=/tmp']))
+        finally:
+            sys.stdout = sys.__stdout__
+
+    def testSetupSolrConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
+        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
+        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+        f = open(join(solrDataDir, 'start.config'))
+        for line in f:
+            if line.startswith('jetty.home'):
+                break
+        else:
+            self.fail("No jetty.home line found")
+        f.close()
+        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+        self.assertTrue('/usr/share/java/solr4.0.0/*' in open(join(solrDataDir, 'start.config')).read())
+
+        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+        self.assertEquals(set([u'córë2', 'core1']), set(solr_xml.xpath("//core/@name")))
+        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
+
+        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+
+    def testSetupSolrTwiceConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
+        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
+        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+        f = open(join(solrDataDir, 'start.config'))
+        for line in f:
+            if line.startswith('jetty.home'):
+                break
+        else:
+            self.fail("No jetty.home line found")
+        f.close()
+        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+        self.assertTrue('/usr/share/java/solr4.0.0/*' in open(join(solrDataDir, 'start.config')).read())
+
+        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+        self.assertEquals(set(['core1', u'córë2']), set(solr_xml.xpath("//core/@name")))
+        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
+
+        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+
+    def testSetupSolrConfigWithAutocomplete(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'autocomplete': {}}, 'core2': {}}
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertTrue('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertFalse('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+
+    def testSetupSolrConfigWithAdmin(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'admin': {}}, 'core2': {}}
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertTrue('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertTrue('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertTrue('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertFalse('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+        self.assertFalse('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
+
+    def testSetupSolrConfigWithSuggestions(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core2': {'suggestions': {'field': 'afieldname'}}, 'core1': {}}
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertEquals(['afieldname'], solrconfig_xml.xpath('/config/searchComponent[@name="suggestions"]/lst/str[@name="field"]/text()'))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+    def testSetupSolrConfigWithAdditionalSolrConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<config><extra>option</extra></config>""")
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core', 'conf', 'solrconfig.xml')))
+
+        self.assertEquals(['option'], solrconfig_xml.xpath("/config/extra/text()"))
+
+    def testSetupSolrConfigWithAdditionalInvalidSolrConfigShouldRaiseAnError(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<extra>option</extra>""")
+        try:
+            self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
+            self.fail()
+        except ValueError, e:
+            self.assertEquals("No elements found with which to extend the solrconfig.xml", str(e))
+
+    def testSetupWithNoFeatures(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'suggestions': False}, 'core2': {}}
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+    def testInvalidCoreConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'suggestions': False}, 'core2': False}
+        try:
+            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+            self.fail()
+        except AssertionError, e:
+            self.assertEquals("Core feature descriptions must be a dictionary (empty for no additional features).", str(e))
+            self.assertFalse(isdir(solrDataDir))
+
+    def testUnknownFeatureInConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'unknown-feature': True}}
+        try:
+            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+            self.fail()
+        except ValueError, e:
+            self.assertEquals("Unknown feature 'unknown-feature'", str(e))
+
+    def testNotMatchingLuceneMatchVersion(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
+
+        self.assertRaises(ValueError, lambda: self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}}))
+
+    def testStartSolr(self):
+        solrConfig = self._createSolrConfig(stateDir=join(self.tempdir, 'the/state/dir'), port=1423, config={})
+        execCalled = []
+        solrConfig._execvp = lambda *args, **kwargs: execCalled.append((args, kwargs))
+        solrConfig.start(javaMX="1234M")
+        self.assertEquals(1, len(execCalled))
+        self.assertEquals((
+            'java', 
+            ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr4.0.0/start.jar'],
+        ), execCalled[0][0])
+        self.assertEquals({}, execCalled[0][1])
+
+    def testSetupSolrCoreWithExtraFilters(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {'schemaExtension':[
+            { 
+                'extensionType': 'fieldTypeFilter',
+                'fieldTypeName': 'text_ws',
+                'filterClass': 'solr.ASCIIFoldingFilterFactory',
+            }
+        ]}})
+        schemaXml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['solr.LowerCaseFilterFactory', 'solr.ASCIIFoldingFilterFactory'], schemaXml.xpath('/schema/types/fieldType[@name="text_ws"]/analyzer/filter/@class'))
+
+    def xtestStartSolrReally(self):
+        tempdir = "/tmp/testSetupSolrConfig"
+        isdir(tempdir) and rmtree(tempdir)
+        mkdir(tempdir)
+        solrDataDir = join(tempdir, 'solr-data')
+        solrConfig = self._createSolrConfig(stateDir=solrDataDir, port=8000, config={"test": {'admin': True}})
+        solrConfig.start(javaMX="1024M")
+
+    def _createSolrConfig(self, stateDir, port, config):
+        solrConfFile = join(self.tempdir, 'solr.conf')
+        jsonDump(config, open(solrConfFile, 'w'))
+        return start_solr.SolrConfig(stateDir, port, solrConfFile)
+        
+
+if __name__ == '__main__':
+    main()
diff --git a/server/usr-share/core-data/conf/schema.xml b/server/usr-share/core-data/conf/schema.xml
new file mode 100644
index 0000000..e2db7ed
--- /dev/null
+++ b/server/usr-share/core-data/conf/schema.xml
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<schema name="meresco-corename" version="1.5">
+  <types>
+    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
+
+    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100" omitNorms="false" multiValued="true" indexed="true" stored="false">
+      <analyzer>
+        <tokenizer class="solr.ClassicTokenizerFactory"/>
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+    </fieldType>
+
+    <fieldType name="untokenized_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="true" indexed="true" stored="false" />
+
+    <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
+
+    <fieldType name="datetime" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/> 
+ </types>
+
+
+ <fields>
+   <field name="__id__" type="string" stored="true" required="true" /> 
+   <field name="__all__" type="text_ws" /> 
+   <field name="__timestamp__" type="datetime" indexed="true" stored="false" default="NOW" sortMissingLast="true" omitNorms="true" multiValued="false" />
+   <dynamicField name="sorted.*" type="sorted_string" />
+   <dynamicField name="untokenized.*" type="untokenized_string" />
+   <dynamicField name="meta.*" type="untokenized_string" />
+   <dynamicField name="*" type="text_ws" />
+ </fields>
+
+ <uniqueKey>__id__</uniqueKey>
+ <defaultSearchField>__all__</defaultSearchField>
+
+ <solrQueryParser defaultOperator="AND"/>
+</schema>
diff --git a/server/usr-share/core-data/conf/solrconfig.xml b/server/usr-share/core-data/conf/solrconfig.xml
new file mode 100644
index 0000000..2a3f0a5
--- /dev/null
+++ b/server/usr-share/core-data/conf/solrconfig.xml
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<!-- 
+     For more details about configurations options that may appear in
+     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
+-->
+<config>
+  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
+  <luceneMatchVersion>LUCENE_40</luceneMatchVersion>
+
+  <query>
+    <maxBooleanClauses>1024</maxBooleanClauses>
+
+    <filterCache class="solr.FastLRUCache"
+                 size="512"
+                 initialSize="512"
+                 autowarmCount="256"/>
+    <queryResultCache class="solr.LRUCache"
+                     size="512"
+                     initialSize="512"
+                     autowarmCount="256"/>
+    <documentCache class="solr.LRUCache"
+                   size="512"
+                   initialSize="512"
+                   autowarmCount="256"/>
+
+    <enableLazyFieldLoading>true</enableLazyFieldLoading>
+
+    <queryResultWindowSize>20</queryResultWindowSize>
+
+    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
+
+  </query>
+
+  <requestDispatcher>
+    <httpCaching never304="true" />
+  </requestDispatcher>
+
+  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />
+  <requestHandler name="/select" class="solr.SearchHandler" />
+
+</config>
diff --git a/server/usr-share/solr-data/contexts/solr.xml b/server/usr-share/solr-data/contexts/solr.xml
new file mode 100644
index 0000000..750392b
--- /dev/null
+++ b/server/usr-share/solr-data/contexts/solr.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0"  encoding="ISO-8859-1"?>
+<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
+ 
+<Configure class="org.eclipse.jetty.webapp.WebAppContext">
+  <Set name="contextPath">/solr</Set>
+  <Set name="war">/usr/share/java/webapps/apache-solr-4.0.0.war</Set>
+</Configure>
+
diff --git a/server/usr-share/solr-data/etc/jetty.xml b/server/usr-share/solr-data/etc/jetty.xml
new file mode 100644
index 0000000..ab84668
--- /dev/null
+++ b/server/usr-share/solr-data/etc/jetty.xml
@@ -0,0 +1,173 @@
+<?xml version="1.0"?>
+<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
+
+<!-- =============================================================== -->
+<!-- Configure the Jetty Server                                      -->
+<!--                                                                 -->
+<!-- Documentation of this file format can be found at:              -->
+<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->
+<!--                                                                 -->
+<!-- =============================================================== -->
+
+
+<Configure id="Server" class="org.eclipse.jetty.server.Server">
+
+    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
+    <Call name="setAttribute">
+      <Arg>org.eclipse.jetty.server.Request.maxFormContentSize</Arg>
+      <Arg>200000</Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Server Thread Pool                                          -->
+    <!-- =========================================================== -->
+    <Set name="ThreadPool">
+      <!-- Default queued blocking threadpool -->
+      <New class="org.eclipse.jetty.util.thread.QueuedThreadPool">
+        <Set name="minThreads">10</Set>
+        <Set name="maxThreads">10000</Set>
+        <Set name="detailedDump">false</Set>
+      </New>
+    </Set>
+
+    <!-- =========================================================== -->
+    <!-- Set connectors                                              -->
+    <!-- =========================================================== -->
+
+  <!--
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.eclipse.jetty.server.nio.SelectChannelConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">50000</Set>
+            <Set name="Acceptors">2</Set>
+            <Set name="statsOn">false</Set>
+            <Set name="confidentialPort">8443</Set>
+	    <Set name="lowResourcesConnections">5000</Set>
+	    <Set name="lowResourcesMaxIdleTime">5000</Set>
+          </New>
+      </Arg>
+    </Call>
+  -->
+
+    <!-- This connector is currently being used for Solr because it
+          showed better performance than nio.SelectChannelConnector
+          for typical Solr requests.  -->
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.eclipse.jetty.server.bio.SocketConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">50000</Set>
+            <Set name="lowResourceMaxIdleTime">1500</Set>
+            <Set name="statsOn">false</Set>
+          </New>
+      </Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Set handler Collection Structure                            --> 
+    <!-- =========================================================== -->
+    <Set name="handler">
+      <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
+        <Set name="handlers">
+         <Array type="org.eclipse.jetty.server.Handler">
+           <Item>
+             <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"/>
+           </Item>
+           <Item>
+             <New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler"/>
+           </Item>
+           <Item>
+             <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler"/>
+           </Item>
+         </Array>
+        </Set>
+      </New>
+    </Set>
+    
+    <!-- =========================================================== -->
+    <!-- Configure Request Log                                       -->
+    <!-- =========================================================== -->
+    <!-- 
+    <Ref id="Handlers">
+      <Call name="addHandler">
+        <Arg>
+          <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler">
+            <Set name="requestLog">
+              <New id="RequestLogImpl" class="org.eclipse.jetty.server.NCSARequestLog">
+                <Set name="filename">
+                   logs/request.yyyy_mm_dd.log
+                </Set>
+                <Set name="filenameDateFormat">yyyy_mm_dd</Set>
+                <Set name="retainDays">90</Set>
+                <Set name="append">true</Set>
+                <Set name="extended">false</Set>
+                <Set name="logCookies">false</Set>
+                <Set name="LogTimeZone">UTC</Set>
+              </New>
+            </Set>
+          </New>
+        </Arg>
+      </Call>
+    </Ref>
+    -->
+
+    <!-- =========================================================== -->
+    <!-- extra options                                               -->
+    <!-- =========================================================== -->
+    <Set name="stopAtShutdown">true</Set>
+    <Set name="sendServerVersion">false</Set>
+    <Set name="sendDateHeader">false</Set>
+    <Set name="gracefulShutdown">1000</Set>
+    <Set name="dumpAfterStart">false</Set>
+    <Set name="dumpBeforeStop">false</Set>
+
+
+
+
+    <Call name="addBean">
+      <Arg>
+        <New id="DeploymentManager" class="org.eclipse.jetty.deploy.DeploymentManager">
+          <Set name="contexts">
+            <Ref id="Contexts" />
+          </Set>
+          <Call name="setContextAttribute">
+            <Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>
+            <Arg>.*/servlet-api-[^/]*\.jar$</Arg>
+          </Call>
+          
+          
+          <!-- Add a customize step to the deployment lifecycle -->
+          <!-- uncomment and replace DebugBinding with your extended AppLifeCycle.Binding class 
+          <Call name="insertLifeCycleNode">
+            <Arg>deployed</Arg>
+            <Arg>starting</Arg>
+            <Arg>customise</Arg>
+          </Call>
+          <Call name="addLifeCycleBinding">
+            <Arg>
+              <New class="org.eclipse.jetty.deploy.bindings.DebugBinding">
+                <Arg>customise</Arg>
+              </New>
+            </Arg>
+          </Call>
+          -->
+          
+        </New>
+      </Arg>
+    </Call>
+    
+    <Ref id="DeploymentManager">
+      <Call name="addAppProvider">
+        <Arg>
+          <New class="org.eclipse.jetty.deploy.providers.ContextProvider">
+            <Set name="monitoredDirName"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
+            <Set name="scanInterval">0</Set>
+          </New>
+        </Arg>
+      </Call>
+    </Ref>
+
+</Configure>
diff --git a/server/usr-share/solr-data/etc/webdefault.xml b/server/usr-share/solr-data/etc/webdefault.xml
new file mode 100644
index 0000000..213138b
--- /dev/null
+++ b/server/usr-share/solr-data/etc/webdefault.xml
@@ -0,0 +1,527 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+  <!-- ===================================================================== -->
+  <!-- This file contains the default descriptor for web applications.       -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+  <!-- The intent of this descriptor is to include jetty specific or common  -->
+  <!-- configuration for all webapps.   If a context has a webdefault.xml    -->
+  <!-- descriptor, it is applied before the contexts own web.xml file        -->
+  <!--                                                                       -->
+  <!-- A context may be assigned a default descriptor by:                    -->
+  <!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
+  <!--  + Passed an arg to addWebApplications                                -->
+  <!--                                                                       -->
+  <!-- This file is used both as the resource within the jetty.jar (which is -->
+  <!-- used as the default if no explicit defaults descriptor is set) and it -->
+  <!-- is copied to the etc directory of the Jetty distro and explicitly     -->
+  <!-- by the jetty.xml file.                                                -->
+  <!--                                                                       -->
+  <!-- ===================================================================== -->
+<web-app
+  xmlns="http://java.sun.com/xml/ns/javaee"
+  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
+  metadata-complete="true"
+  version="2.5"
+>
+
+  <description>
+    Default web.xml file.  
+    This file is applied to a Web application before it's own WEB_INF/web.xml file
+  </description>
+
+  <!-- ==================================================================== -->
+  <!-- Removes static references to beans from javax.el.BeanELResolver to   -->
+  <!-- ensure webapp classloader can be released on undeploy                -->
+  <!-- ==================================================================== -->
+  <listener>
+   <listener-class>org.eclipse.jetty.servlet.listener.ELContextCleaner</listener-class>
+  </listener>
+  
+  <!-- ==================================================================== -->
+  <!-- Removes static cache of Methods from java.beans.Introspector to      -->
+  <!-- ensure webapp classloader can be released on undeploy                -->
+  <!-- ==================================================================== -->  
+  <listener>
+   <listener-class>org.eclipse.jetty.servlet.listener.IntrospectorCleaner</listener-class>
+  </listener>
+  
+
+  <!-- ==================================================================== -->
+  <!-- Context params to control Session Cookies                            -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!--
+    UNCOMMENT TO ACTIVATE <context-param> <param-name>org.eclipse.jetty.servlet.SessionDomain</param-name> <param-value>127.0.0.1</param-value> </context-param> <context-param>
+    <param-name>org.eclipse.jetty.servlet.SessionPath</param-name> <param-value>/</param-value> </context-param> <context-param> <param-name>org.eclipse.jetty.servlet.MaxAge</param-name>
+    <param-value>-1</param-value> </context-param>
+  -->
+
+  <!-- ==================================================================== -->
+  <!-- The default servlet.                                                 -->
+  <!-- This servlet, normally mapped to /, provides the handling for static -->
+  <!-- content, OPTIONS and TRACE methods for the context.                  -->
+  <!-- The following initParameters are supported:                          -->
+  <!--  
+ *  acceptRanges      If true, range requests and responses are
+ *                    supported
+ *
+ *  dirAllowed        If true, directory listings are returned if no
+ *                    welcome file is found. Else 403 Forbidden.
+ *
+ *  welcomeServlets   If true, attempt to dispatch to welcome files
+ *                    that are servlets, but only after no matching static
+ *                    resources could be found. If false, then a welcome
+ *                    file must exist on disk. If "exact", then exact
+ *                    servlet matches are supported without an existing file.
+ *                    Default is true.
+ *
+ *                    This must be false if you want directory listings,
+ *                    but have index.jsp in your welcome file list.
+ *
+ *  redirectWelcome   If true, welcome files are redirected rather than
+ *                    forwarded to.
+ *
+ *  gzip              If set to true, then static content will be served as
+ *                    gzip content encoded if a matching resource is
+ *                    found ending with ".gz"
+ *
+ *  resourceBase      Set to replace the context resource base
+ *
+ *  resourceCache     If set, this is a context attribute name, which the servlet 
+ *                    will use to look for a shared ResourceCache instance. 
+ *                        
+ *  relativeResourceBase
+ *                    Set with a pathname relative to the base of the
+ *                    servlet context root. Useful for only serving static content out
+ *                    of only specific subdirectories.
+ *
+ *  aliases           If True, aliases of resources are allowed (eg. symbolic
+ *                    links and caps variations). May bypass security constraints.
+ *
+ *  maxCacheSize      The maximum total size of the cache or 0 for no cache.
+ *  maxCachedFileSize The maximum size of a file to cache
+ *  maxCachedFiles    The maximum number of files to cache
+ *
+ *  useFileMappedBuffer
+ *                    If set to true, it will use mapped file buffer to serve static content
+ *                    when using NIO connector. Setting this value to false means that
+ *                    a direct buffer will be used instead of a mapped file buffer.
+ *                    By default, this is set to true.
+ *
+ *  cacheControl      If set, all static content will have this value set as the cache-control
+ *                    header.
+ -->
+ 
+ 
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet>
+    <servlet-name>default</servlet-name>
+    <servlet-class>org.eclipse.jetty.servlet.DefaultServlet</servlet-class>
+    <init-param>
+      <param-name>aliases</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>acceptRanges</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>dirAllowed</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>welcomeServlets</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>redirectWelcome</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCacheSize</param-name>
+      <param-value>256000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFileSize</param-name>
+      <param-value>200000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFiles</param-name>
+      <param-value>2048</param-value>
+    </init-param>
+    <init-param>
+      <param-name>gzip</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>useFileMappedBuffer</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <!--
+    <init-param>
+      <param-name>resourceCache</param-name>
+      <param-value>resourceCache</param-value>
+    </init-param>
+    -->
+    <!--
+    <init-param>
+      <param-name>cacheControl</param-name>
+      <param-value>max-age=3600,public</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping>
+    <servlet-name>default</servlet-name>
+    <url-pattern>/</url-pattern>
+  </servlet-mapping>
+
+
+  <!-- ==================================================================== -->
+  <!-- JSP Servlet                                                          -->
+  <!-- This is the jasper JSP servlet from the jakarta project              -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
+  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
+  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
+  <!-- following initialization parameters (default values are in square    -->
+  <!-- brackets):                                                           -->
+  <!--                                                                      -->
+  <!--   checkInterval       If development is false and reloading is true, -->
+  <!--                       background compiles are enabled. checkInterval -->
+  <!--                       is the time in seconds between checks to see   -->
+  <!--                       if a JSP page needs to be recompiled. [300]    -->
+  <!--                                                                      -->
+  <!--   compiler            Which compiler Ant should use to compile JSP   -->
+  <!--                       pages.  See the Ant documenation for more      -->
+  <!--                       information. [javac]                           -->
+  <!--                                                                      -->
+  <!--   classdebuginfo      Should the class file be compiled with         -->
+  <!--                       debugging information?  [true]                 -->
+  <!--                                                                      -->
+  <!--   classpath           What class path should I use while compiling   -->
+  <!--                       generated servlets?  [Created dynamically      -->
+  <!--                       based on the current web application]          -->
+  <!--                       Set to ? to make the container explicitly set  -->
+  <!--                       this parameter.                                -->
+  <!--                                                                      -->
+  <!--   development         Is Jasper used in development mode (will check -->
+  <!--                       for JSP modification on every access)?  [true] -->
+  <!--                                                                      -->
+  <!--   enablePooling       Determines whether tag handler pooling is      -->
+  <!--                       enabled  [true]                                -->
+  <!--                                                                      -->
+  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
+  <!--                       a separate JVM is used for JSP page compiles   -->
+  <!--                       from the one Tomcat is running in. [true]      -->
+  <!--                                                                      -->
+  <!--   ieClassId           The class-id value to be sent to Internet      -->
+  <!--                       Explorer when using <jsp:plugin> tags.         -->
+  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
+  <!--                                                                      -->
+  <!--   javaEncoding        Java file encoding to use for generating java  -->
+  <!--                       source files. [UTF-8]                          -->
+  <!--                                                                      -->
+  <!--   keepgenerated       Should we keep the generated Java source code  -->
+  <!--                       for each page instead of deleting it? [true]   -->
+  <!--                                                                      -->
+  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
+  <!--                       by this servlet.  Increasing levels cause the  -->
+  <!--                       generation of more messages.  Valid values are -->
+  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
+  <!--                       [WARNING]                                      -->
+  <!--                                                                      -->
+  <!--   mappedfile          Should we generate static content with one     -->
+  <!--                       print statement per input line, to ease        -->
+  <!--                       debugging?  [false]                            -->
+  <!--                                                                      -->
+  <!--                                                                      -->
+  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
+  <!--                                                                      -->
+  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
+  <!--                       debugging be suppressed?  [false]              -->
+  <!--                                                                      -->
+  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
+  <!--                       dumped to a file? [false]                      -->
+  <!--                       False if suppressSmap is true                  -->
+  <!--                                                                      -->
+  <!--   scratchdir          What scratch directory should we use when      -->
+  <!--                       compiling JSP pages?  [default work directory  -->
+  <!--                       for the current web application]               -->
+  <!--                                                                      -->
+  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
+  <!--                                                                      -->
+  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
+  <!--                       header is added by generated servlet  [false]  -->
+  <!--                                                                      -->
+  <!-- If you wish to use Jikes to compile JSP pages:                       -->
+  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
+  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
+  <!--   to cause Jikes to emit error messages in a format compatible with  -->
+  <!--   Jasper.                                                            -->
+  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
+  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet
+    id="jsp"
+  >
+    <servlet-name>jsp</servlet-name>
+    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
+    <init-param>
+      <param-name>logVerbosityLevel</param-name>
+      <param-value>DEBUG</param-value>
+    </init-param>
+    <init-param>
+      <param-name>fork</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>xpoweredBy</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <!--  
+    <init-param>
+        <param-name>classpath</param-name>
+        <param-value>?</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping>
+    <servlet-name>jsp</servlet-name>
+    <url-pattern>*.jsp</url-pattern>
+    <url-pattern>*.jspf</url-pattern>
+    <url-pattern>*.jspx</url-pattern>
+    <url-pattern>*.xsp</url-pattern>
+    <url-pattern>*.JSP</url-pattern>
+    <url-pattern>*.JSPF</url-pattern>
+    <url-pattern>*.JSPX</url-pattern>
+    <url-pattern>*.XSP</url-pattern>
+  </servlet-mapping>
+
+  <!-- ==================================================================== -->
+  <!-- Dynamic Servlet Invoker.                                             -->
+  <!-- This servlet invokes anonymous servlets that have not been defined   -->
+  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
+  <!-- of a request passed to the envoker is treated as a servlet name for  -->
+  <!-- an existing servlet, or as a class name of a new servlet.            -->
+  <!-- This servlet is normally mapped to /servlet/*                        -->
+  <!-- This servlet support the following initParams:                       -->
+  <!--                                                                      -->
+  <!--  nonContextServlets       If false, the invoker can only load        -->
+  <!--                           servlets from the contexts classloader.    -->
+  <!--                           This is false by default and setting this  -->
+  <!--                           to true may have security implications.    -->
+  <!--                                                                      -->
+  <!--  verbose                  If true, log dynamic loads                 -->
+  <!--                                                                      -->
+  <!--  *                        All other parameters are copied to the     -->
+  <!--                           each dynamic servlet as init parameters    -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!--
+    Uncomment for dynamic invocation <servlet> <servlet-name>invoker</servlet-name> <servlet-class>org.eclipse.jetty.servlet.Invoker</servlet-class> <init-param> <param-name>verbose</param-name>
+    <param-value>false</param-value> </init-param> <init-param> <param-name>nonContextServlets</param-name> <param-value>false</param-value> </init-param> <init-param>
+    <param-name>dynamicParam</param-name> <param-value>anyValue</param-value> </init-param> <load-on-startup>0</load-on-startup> </servlet> <servlet-mapping> <servlet-name>invoker</servlet-name>
+    <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
+  -->
+
+
+
+  <!-- ==================================================================== -->
+  <session-config>
+    <session-timeout>30</session-timeout>
+  </session-config>
+
+  <!-- ==================================================================== -->
+  <!-- Default MIME mappings                                                -->
+  <!-- The default MIME mappings are provided by the mime.properties        -->
+  <!-- resource in the org.eclipse.jetty.server.jar file.  Additional or modified  -->
+  <!-- mappings may be specified here                                       -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- UNCOMMENT TO ACTIVATE
+  <mime-mapping>
+    <extension>mysuffix</extension>
+    <mime-type>mymime/type</mime-type>
+  </mime-mapping>
+  -->
+
+  <!-- ==================================================================== -->
+  <welcome-file-list>
+    <welcome-file>index.html</welcome-file>
+    <welcome-file>index.htm</welcome-file>
+    <welcome-file>index.jsp</welcome-file>
+  </welcome-file-list>
+
+  <!-- ==================================================================== -->
+  <locale-encoding-mapping-list>
+    <locale-encoding-mapping>
+      <locale>ar</locale>
+      <encoding>ISO-8859-6</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>be</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>bg</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ca</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>cs</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>da</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>de</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>el</locale>
+      <encoding>ISO-8859-7</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>en</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>es</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>et</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>fi</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>fr</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>hr</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>hu</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>is</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>it</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>iw</locale>
+      <encoding>ISO-8859-8</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ja</locale>
+      <encoding>Shift_JIS</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ko</locale>
+      <encoding>EUC-KR</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>lt</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>lv</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>mk</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>nl</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>no</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>pl</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>pt</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ro</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ru</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sh</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sk</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sl</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sq</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sr</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sv</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>tr</locale>
+      <encoding>ISO-8859-9</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>uk</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>zh</locale>
+      <encoding>GB2312</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>zh_TW</locale>
+      <encoding>Big5</encoding>
+    </locale-encoding-mapping>
+  </locale-encoding-mapping-list>
+
+  <security-constraint>
+    <web-resource-collection>
+      <web-resource-name>Disable TRACE</web-resource-name>
+      <url-pattern>/</url-pattern>
+      <http-method>TRACE</http-method>
+    </web-resource-collection>
+    <auth-constraint/>
+  </security-constraint>
+
+</web-app>
+
diff --git a/server/usr-share/solr-data/solr.xml b/server/usr-share/solr-data/solr.xml
new file mode 100644
index 0000000..3da55c2
--- /dev/null
+++ b/server/usr-share/solr-data/solr.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
+<solr sharedLib="lib" persistent="true">
+    <cores adminPath="/admin/cores"/>
+</solr>
diff --git a/server/usr-share/solr-data/start.config b/server/usr-share/solr-data/start.config
new file mode 100644
index 0000000..4828eaa
--- /dev/null
+++ b/server/usr-share/solr-data/start.config
@@ -0,0 +1,162 @@
+# This file controls what file are to be put on classpath or command line.
+#
+# Format is as follows:
+#
+# Each line contains entry in the format:
+#
+#  SUBJECT [ [!] CONDITION [AND|OR] ]*
+# 
+# where SUBJECT: 
+#   ends with ".class" is the Main class to run.
+#   ends with ".xml" is a configuration file for the command line
+#   ends with "/" is a directory from which to add all jar and zip files. 
+#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
+#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
+#   Containing = are used to assign system properties.
+#   Containing ~= are used to assign start properties.
+#   Containing /= are used to assign a canonical path.
+#   all other subjects are treated as files to be added to the classpath.
+#
+# ${name} is expanded to a start property
+# $(name) is expanded to either a start property or a system property. 
+# The start property ${version} is defined as the version of the start.jar
+#
+# Files starting with "/" are considered absolute, all others are relative to
+# the home directory.
+#
+# CONDITION is one of:
+#   always
+#   never
+#   available classname        # true if class on classpath
+#   property name              # true if set as start property
+#   system   name              # true if set as system property
+#   exists file                # true if file/dir exists
+#   java OPERATOR version      # java version compared to literal
+#   nargs OPERATOR number      # number of command line args compared to literal
+#   OPERATOR := one of "<",">","<=",">=","==","!="
+#
+# CONTITIONS can be combined with AND OR or !, with AND being the assume
+# operator for a list of CONDITIONS.
+#
+# Classpath operations are evaluated on the fly, so once a class or jar is
+# added to the classpath, subsequent available conditions will see that class.
+#
+# The configuration file may be divided into sections with option names like:
+# [ssl,default]
+#
+# Clauses after a section header will only be included if they match one of the tags in the 
+# options property.  By default options are set to "default,*" or the OPTIONS property may
+# be used to pass in a list of tags, eg. :
+#
+#    java -jar start.jar OPTIONS=jetty,jsp,ssl
+#
+# The tag '*' is always appended to the options, so any section with the * tag is always 
+# applied.
+#
+
+# add a property defined classpath
+${path}.path                                     property path
+
+# add a property defined library directory
+${lib}/**                                        exists ${lib}
+
+jetty.home=/location/of/your/jetty/config/dir
+jetty.lib=/location/of/your/lib
+
+# The main class to run
+org.eclipse.jetty.xml.XmlConfiguration.class
+${start.class}.class                             property start.class
+
+# The default configuration files
+$(jetty.home)/etc/jetty.xml                      nargs == 0
+./jetty-server/src/main/config/etc/jetty.xml     nargs == 0 AND ! exists $(jetty.home)/etc/jetty.xml
+
+# Default OPTIONS if not specified on the command line
+OPTIONS~=default,*                               ! property OPTIONS
+
+# Add a resources directory if it is there
+[All,resources,default]
+$(jetty.home)/resources/
+           
+# Add jetty modules
+[*]
+$(jetty.lib)/jetty-util-$(version).jar                                             ! available org.eclipse.jetty.util.StringUtil
+$(jetty.lib)/jetty-io-$(version).jar                                               ! available org.eclipse.jetty.io.Buffer
+
+[Server,All,xml,default]
+$(jetty.lib)/jetty-xml-$(version).jar                                              ! available org.eclipse.jetty.xml.XmlParser
+         
+[Server,All,server,default]
+$(jetty.lib)/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
+$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+$(jetty.lib)/jetty-continuation-$(version).jar                                     ! available org.eclipse.jetty.continuation.Continuation
+$(jetty.lib)/jetty-server-$(version).jar                                           ! available org.eclipse.jetty.server.Server
+                                             
+[Server,All,security,default]
+$(jetty.lib)/jetty-security-$(version).jar                                         ! available org.eclipse.jetty.security.LoginService
+                                                       
+[Server,All,servlet,default]
+$(jetty.lib)/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
+$(jetty.lib)/jetty-servlet-$(version).jar                                          ! available org.eclipse.jetty.servlet.ServletHandler
+                            
+[Server,All,webapp,default]
+$(jetty.lib)/jetty-webapp-$(version).jar                                           ! available org.eclipse.jetty.webapp.WebAppContext
+                                  
+[Server,All,deploy,default]
+$(jetty.lib)/jetty-deploy-$(version).jar                                           ! available org.eclipse.jetty.deploy.ContextDeployer
+           
+[Server,All,servlets,default]
+$(jetty.lib)/jetty-servlets-$(version).jar                                         ! available org.eclipse.jetty.servlets.WelcomeFilter
+
+[All,rewrite]
+$(jetty.lib)/jetty-rewrite-$(version).jar                                          ! available org.eclipse.jetty.rewrite.handler.RewriteHandler
+
+[All,jmx]
+$(jetty.lib)/jetty-jmx-$(version).jar                                              ! available org.eclipse.jetty.jmx.MBeanContainer
+                  
+[All,ajp]
+$(jetty.lib)/jetty-ajp-$(version).jar                                              ! available org.eclipse.jetty.ajp.Ajp13Connection      
+                   
+[All,plus,jndi]
+$(jetty.lib)/jetty-jndi-${version}.jar                                             ! available org.eclipse.jetty.jndi.ContextFactory
+$(jetty.lib)/jetty-plus-${version}.jar                                             ! available org.eclipse.jetty.plus.jndi.NamingEntry
+$(jetty.lib)/jndi/**                                                               exists $(jetty.lib)/jndi 
+
+[All,annotations]
+$(jetty.lib)/jetty-annotations-$(version).jar                                      ! available org.eclipse.jetty.annotations.AnnotationFinder
+$(jetty.lib)/annotations/**                                                        exists $(jetty.lib)/jndi 
+          
+[All,setuid]
+$(jetty.lib)/jetty-setuid-$(version).jar                                           ! available org.eclipse.jetty.setuid.SetUID
+$(jetty.lib)/setuid/**                                                       
+                                    
+[All,policy]
+$(jetty.lib)/jetty-policy-$(version).jar                                           ! available org.eclipse.jetty.policy.JettyPolicy
+                                    
+[All,Client,client]
+$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+$(jetty.lib)/jetty-client-$(version).jar                                           ! available org.eclipse.jetty.client.HttpClient
+
+[All,websocket]
+$(jetty.lib)/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
+       
+[Client]
+$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+
+[All,websocket]
+$(jetty.lib)/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
+       
+[All,overlay,overlays]
+$(jetty.lib)/jetty-overlay-deployer-$(version).jar                                 ! available org.eclipse.jetty.overlay.OverlayedAppProvider
+       
+      
+# Add ext if it exists
+[Server,All,default,ext]        
+$(jetty.lib)/ext/**
+
+# Add all other sub-directories in /lib/ as options in a dynamic way
+[All,=$(jetty.lib)/**]        
+
+# Set webapps dir
+jetty.webapps=/usr/share/java/webapps
+
diff --git a/server/usr-share/solrconfig.d/admin.xml b/server/usr-share/solrconfig.d/admin.xml
new file mode 100644
index 0000000..0bb6621
--- /dev/null
+++ b/server/usr-share/solrconfig.d/admin.xml
@@ -0,0 +1,18 @@
+<config>
+  <requestHandler name="/admin" class="solr.admin.AdminHandlers" />
+
+  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
+    <lst name="invariants">
+      <str name="q">solrpingquery</str>
+    </lst>
+    <lst name="defaults">
+      <str name="echoParams">all</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Legacy config for the admin interface -->
+  <admin>
+    <defaultQuery>*:*</defaultQuery>
+  </admin>
+</config>
+
diff --git a/server/usr-share/solrconfig.d/autocomplete.xml b/server/usr-share/solrconfig.d/autocomplete.xml
new file mode 100644
index 0000000..ac9f732
--- /dev/null
+++ b/server/usr-share/solrconfig.d/autocomplete.xml
@@ -0,0 +1,13 @@
+<config>
+  <searchComponent name="terms" class="solr.TermsComponent"/>
+
+  <!-- A request handler for demonstrating the terms component -->
+  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
+     <lst name="defaults">
+      <bool name="terms">true</bool>
+    </lst>     
+    <arr name="components">
+      <str>terms</str>
+    </arr>
+  </requestHandler>
+</config>
diff --git a/server/usr-share/solrconfig.d/suggestions.xml b/server/usr-share/solrconfig.d/suggestions.xml
new file mode 100644
index 0000000..26f6dd0
--- /dev/null
+++ b/server/usr-share/solrconfig.d/suggestions.xml
@@ -0,0 +1,17 @@
+<config>
+  <searchComponent name="suggestions" class="solr.SpellCheckComponent">
+    <str name="queryAnalyzerFieldType">textSpell</str>
+    <lst name="spellchecker">
+      <str name="name">default</str>
+      <str name="field">%(field)s</str>
+      <str name="spellcheckIndexDir">suggestions</str>
+      <str name="buildOnCommit">true</str>
+    </lst>
+  </searchComponent>
+
+  <requestHandler name="/select" class="solr.SearchHandler" startup="lazy">
+    <arr name="last-components">
+      <str>suggestions</str>
+    </arr>
+  </requestHandler>
+</config>
diff --git a/solrrun/__init__.py b/solrrun/__init__.py
deleted file mode 100644
index 6c55ee5..0000000
--- a/solrrun/__init__.py
+++ /dev/null
@@ -1,24 +0,0 @@
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
diff --git a/solrrun/solrconfig.py b/solrrun/solrconfig.py
deleted file mode 100644
index 41bd7da..0000000
--- a/solrrun/solrconfig.py
+++ /dev/null
@@ -1,155 +0,0 @@
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from os import makedirs, listdir, system, execvp
-from os.path import dirname, abspath, isdir, isfile, join
-from shutil import copytree, rmtree
-from re import compile, MULTILINE
-from StringIO import StringIO
-from lxml.etree import parse, SubElement, tostring
-from simplejson import load as jsonLoad
-
-
-mydir = dirname(abspath(__file__))
-solrUsrShareDir = '/usr/share/solr4.0.0-run'
-solrUsrShareDir = join(dirname(mydir), 'usr-share') # DO_NOT_DISTRIBUTE
-SOLR_VERSION = "4.0.0"
-
-
-class SolrConfig(object):
-    def __init__(self, stateDir, port, configFile):
-        self.config=jsonLoad(open(configFile))
-        self.stateDir = stateDir
-        self.port = port
-        self.configBasedir = dirname(abspath(configFile))
-        assert all(type(v) == dict for v in self.config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
-
-        if not isdir(self.stateDir):
-            copytree(join(solrUsrShareDir, 'solr-data'), self.stateDir)
-        else:
-            newMatchVersion = parse(open(join(solrUsrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-            for coreDir in listdir(join(self.stateDir, 'cores')):
-                currentMatchVersion = parse(open(join(self.stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-                if currentMatchVersion != newMatchVersion:
-                    raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
-
-        self._setupJettyXml()
-        self._setupStartConfig()
-        self._setupSolrXml()
-        self._setupCoreData()
-
-        for core, features in self.config.items():
-            for feature, options in features.items():
-                self._setupFeature(name=feature, core=core, options=options)
-
-    def _setupFeatureSchemaExtension(self, core, options):
-        schemaXmlFile = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
-        schemaXml = parse(open(schemaXmlFile))
-        for option in options:
-            if option.get('extensionType') == 'fieldTypeFilter':
-                fieldTypeName = option['fieldTypeName']
-                fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
-                assert len(fieldTypes) == 1
-                analyzer = fieldTypes[0].xpath('analyzer')[0]
-                SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
-
-        with open(schemaXmlFile, 'w') as f:
-            f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
-
-    def _setupFeature(self, name, core, options):
-        if name == 'schemaExtension':
-            self._setupFeatureSchemaExtension(core=core, options=options)
-            return
-        if name == 'additionalSolrConfig':
-            filepath = options if options.startswith('/') else join(self.configBasedir, options)
-            self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
-            return
-        if options == False:
-            return
-        featureFilename = join(solrUsrShareDir, 'solrconfig.d', '%s.xml' % name)
-        if not isfile(featureFilename):
-            raise ValueError("Unknown feature '%s'" % name)
-
-        feature = open(featureFilename).read()
-        if type(options) is dict:
-            feature = feature % options
-        feature_xml = parse(StringIO(feature))
-        self._extendSolrConfig(core=core, lxmlElementList=feature_xml.xpath('/config/*'))
-
-    def _extendSolrConfig(self, core, lxmlElementList):
-        if not lxmlElementList:
-            raise ValueError("No elements found with which to extend the solrconfig.xml")
-        solrconfig_file = join(self.stateDir, 'cores', core, 'conf', 'solrconfig.xml')
-        core_sorlconfig = parse(open(solrconfig_file))
-        core_sorlconfig.getroot().extend(lxmlElementList)
-        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
-
-    def _setupCoreData(self):
-        cores = self.config.keys()
-        solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
-        coresElement = solr_xml.xpath("/solr/cores")[0]
-        [coresElement.remove(child) for child in coresElement.getchildren()]
-        for core in cores:
-            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
-            coreDir = join(self.stateDir, 'cores', core)
-            isdir(coreDir) and rmtree(coreDir)
-            copytree(join(solrUsrShareDir, 'core-data'), coreDir)
-            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
-            schema_xml = parse(open(schema_xml_path))
-            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
-            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
-
-        open(join(self.stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
-
-    def _setupJettyXml(self):
-        system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
-                self.port,
-                join(self.stateDir, 'etc', 'jetty.xml')
-            ))
-
-    def _setupStartConfig(self):
-        startConfigPath = join(self.stateDir, 'start.config')
-        startConfig = oldStartConfig = open(startConfigPath).read()
-        startConfig = compile('^jetty\.home=.*$', flags=MULTILINE).sub('jetty.home=' + self.stateDir, startConfig)
-        startConfig = compile('^jetty\.lib=.*$', flags=MULTILINE).sub('jetty.lib=/usr/share/java/solr%s' % SOLR_VERSION, startConfig)
-        open(startConfigPath, 'w').write(startConfig)
-
-    def _setupSolrXml(self):
-        system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, self.stateDir))
-
-    def start(self, javaMX):
-        self._execvp(
-            'java', [
-                'java',
-                '-Xmx%s' % javaMX, 
-                '-Djetty.port=%s' % self.port,
-                '-DSTART=%s/start.config' % self.stateDir,
-                '-Dsolr.solr.home=%s' % self.stateDir, 
-                '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
-            ])
-
-    def _execvp(self, *args, **kwargs):
-        execvp(*args, **kwargs)
-
diff --git a/test/_alltests.py b/test/_alltests.py
deleted file mode 100644
index fe173da..0000000
--- a/test/_alltests.py
+++ /dev/null
@@ -1,39 +0,0 @@
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-import os, sys
-os.system('find .. -name "*.pyc" | xargs rm -f')
-
-from glob import glob
-for path in glob('../deps.d/*'):
-    sys.path.insert(0, path)
-sys.path.insert(0, '../bin')
-
-from solrruntest import SolrRunTest
-
-if __name__ == '__main__':
-    from unittest import main
-    main()
-
diff --git a/test/alltests.sh b/test/alltests.sh
deleted file mode 100755
index 178c3c8..0000000
--- a/test/alltests.sh
+++ /dev/null
@@ -1,30 +0,0 @@
-#!/bin/bash
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2005-2010 Seek You Too B.V. (CQ2) http://www.cq2.nl
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-export LANG=en_US.UTF-8
-export PYTHONPATH=.:$PYTHONPATH
-python _alltests.py "$@"
diff --git a/test/sitecustomize.py b/test/sitecustomize.py
deleted file mode 100644
index f110c26..0000000
--- a/test/sitecustomize.py
+++ /dev/null
@@ -1,2 +0,0 @@
-from sys import setdefaultencoding
-setdefaultencoding('utf-8')
diff --git a/test/solrruntest.py b/test/solrruntest.py
deleted file mode 100644
index 06056b3..0000000
--- a/test/solrruntest.py
+++ /dev/null
@@ -1,256 +0,0 @@
-# -*- coding: utf-8 -*-
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-import sys
-from unittest import main
-from StringIO import StringIO
-from os import mkdir, listdir, system
-from os.path import join, dirname, abspath, basename, isdir
-from shutil import rmtree
-from simplejson import dump as jsonDump
-from lxml.etree import parse, tostring
-
-from seecr.test import SeecrTestCase
-start_solr = __import__('start-solr')
-
-
-mydir = dirname(abspath(__file__))
-version = "4.0.0"
-
-class SolrRunTest(SeecrTestCase):
-    def testParseArguments(self):
-        options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--config=/tmp/config.json'])
-        self.assertEquals(8042, options.port)
-        self.assertEquals('/tmp', options.stateDir)
-        self.assertEquals('/tmp/config.json', options.config)
-
-    def testIncompleteArguments(self):
-        stdout_mock = StringIO()
-        sys.stdout = stdout_mock
-        try:
-            self.assertRaises(ValueError, lambda: start_solr.parseArguments(['--port=8042', '--stateDir=/tmp']))
-        finally:
-            sys.stdout = sys.__stdout__
-
-    def testSetupSolrConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
-        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
-        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
-        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
-        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
-
-        f = open(join(solrDataDir, 'start.config'))
-        for line in f:
-            if line.startswith('jetty.home'):
-                break
-        else:
-            self.fail("No jetty.home line found")
-        f.close()
-        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('/usr/share/java/solr4.0.0/*' in open(join(solrDataDir, 'start.config')).read())
-
-        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
-        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
-
-        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
-        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-        self.assertEquals(set([u'córë2', 'core1']), set(solr_xml.xpath("//core/@name")))
-        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
-
-        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
-
-        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
-
-    def testSetupSolrTwiceConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
-        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
-        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
-        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
-        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
-
-        f = open(join(solrDataDir, 'start.config'))
-        for line in f:
-            if line.startswith('jetty.home'):
-                break
-        else:
-            self.fail("No jetty.home line found")
-        f.close()
-        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('/usr/share/java/solr4.0.0/*' in open(join(solrDataDir, 'start.config')).read())
-
-        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
-        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
-
-        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
-        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-        self.assertEquals(set(['core1', u'córë2']), set(solr_xml.xpath("//core/@name")))
-        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
-
-        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
-
-        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
-
-    def testSetupSolrConfigWithAutocomplete(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'autocomplete': {}}, 'core2': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertTrue('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertFalse('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertFalse('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-
-    def testSetupSolrConfigWithAdmin(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'admin': {}}, 'core2': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertTrue('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertTrue('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertTrue('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertFalse('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertFalse('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertFalse('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
-
-    def testSetupSolrConfigWithSuggestions(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core2': {'suggestions': {'field': 'afieldname'}}, 'core1': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertEquals(['afieldname'], solrconfig_xml.xpath('/config/searchComponent[@name="suggestions"]/lst/str[@name="field"]/text()'))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-
-    def testSetupSolrConfigWithAdditionalSolrConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<config><extra>option</extra></config>""")
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core', 'conf', 'solrconfig.xml')))
-
-        self.assertEquals(['option'], solrconfig_xml.xpath("/config/extra/text()"))
-
-    def testSetupSolrConfigWithAdditionalInvalidSolrConfigShouldRaiseAnError(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<extra>option</extra>""")
-        try:
-            self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
-            self.fail()
-        except ValueError, e:
-            self.assertEquals("No elements found with which to extend the solrconfig.xml", str(e))
-
-    def testSetupWithNoFeatures(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'suggestions': False}, 'core2': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-
-    def testInvalidCoreConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'suggestions': False}, 'core2': False}
-        try:
-            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-            self.fail()
-        except AssertionError, e:
-            self.assertEquals("Core feature descriptions must be a dictionary (empty for no additional features).", str(e))
-            self.assertFalse(isdir(solrDataDir))
-
-    def testUnknownFeatureInConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'unknown-feature': True}}
-        try:
-            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-            self.fail()
-        except ValueError, e:
-            self.assertEquals("Unknown feature 'unknown-feature'", str(e))
-
-    def testNotMatchingLuceneMatchVersion(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
-        system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
-
-        self.assertRaises(ValueError, lambda: self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}}))
-
-    def testStartSolr(self):
-        solrConfig = self._createSolrConfig(stateDir=join(self.tempdir, 'the/state/dir'), port=1423, config={})
-        execCalled = []
-        solrConfig._execvp = lambda *args, **kwargs: execCalled.append((args, kwargs))
-        solrConfig.start(javaMX="1234M")
-        self.assertEquals(1, len(execCalled))
-        self.assertEquals((
-            'java', 
-            ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr4.0.0/start.jar'],
-        ), execCalled[0][0])
-        self.assertEquals({}, execCalled[0][1])
-
-    def testSetupSolrCoreWithExtraFilters(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {'schemaExtension':[
-            { 
-                'extensionType': 'fieldTypeFilter',
-                'fieldTypeName': 'text_ws',
-                'filterClass': 'solr.ASCIIFoldingFilterFactory',
-            }
-        ]}})
-        schemaXml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['solr.LowerCaseFilterFactory', 'solr.ASCIIFoldingFilterFactory'], schemaXml.xpath('/schema/types/fieldType[@name="text_ws"]/analyzer/filter/@class'))
-
-    def xtestStartSolrReally(self):
-        tempdir = "/tmp/testSetupSolrConfig"
-        isdir(tempdir) and rmtree(tempdir)
-        mkdir(tempdir)
-        solrDataDir = join(tempdir, 'solr-data')
-        solrConfig = self._createSolrConfig(stateDir=solrDataDir, port=8000, config={"test": {'admin': True}})
-        solrConfig.start(javaMX="1024M")
-
-    def _createSolrConfig(self, stateDir, port, config):
-        solrConfFile = join(self.tempdir, 'solr.conf')
-        jsonDump(config, open(solrConfFile, 'w'))
-        return start_solr.SolrConfig(stateDir, port, solrConfFile)
-        
-
-if __name__ == '__main__':
-    main()
diff --git a/usr-share/core-data/conf/schema.xml b/usr-share/core-data/conf/schema.xml
deleted file mode 100644
index e2db7ed..0000000
--- a/usr-share/core-data/conf/schema.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<schema name="meresco-corename" version="1.5">
-  <types>
-    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
-
-    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100" omitNorms="false" multiValued="true" indexed="true" stored="false">
-      <analyzer>
-        <tokenizer class="solr.ClassicTokenizerFactory"/>
-        <filter class="solr.LowerCaseFilterFactory"/>
-      </analyzer>
-    </fieldType>
-
-    <fieldType name="untokenized_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="true" indexed="true" stored="false" />
-
-    <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
-
-    <fieldType name="datetime" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/> 
- </types>
-
-
- <fields>
-   <field name="__id__" type="string" stored="true" required="true" /> 
-   <field name="__all__" type="text_ws" /> 
-   <field name="__timestamp__" type="datetime" indexed="true" stored="false" default="NOW" sortMissingLast="true" omitNorms="true" multiValued="false" />
-   <dynamicField name="sorted.*" type="sorted_string" />
-   <dynamicField name="untokenized.*" type="untokenized_string" />
-   <dynamicField name="meta.*" type="untokenized_string" />
-   <dynamicField name="*" type="text_ws" />
- </fields>
-
- <uniqueKey>__id__</uniqueKey>
- <defaultSearchField>__all__</defaultSearchField>
-
- <solrQueryParser defaultOperator="AND"/>
-</schema>
diff --git a/usr-share/core-data/conf/solrconfig.xml b/usr-share/core-data/conf/solrconfig.xml
deleted file mode 100644
index 2a3f0a5..0000000
--- a/usr-share/core-data/conf/solrconfig.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<!-- 
-     For more details about configurations options that may appear in
-     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
--->
-<config>
-  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
-  <luceneMatchVersion>LUCENE_40</luceneMatchVersion>
-
-  <query>
-    <maxBooleanClauses>1024</maxBooleanClauses>
-
-    <filterCache class="solr.FastLRUCache"
-                 size="512"
-                 initialSize="512"
-                 autowarmCount="256"/>
-    <queryResultCache class="solr.LRUCache"
-                     size="512"
-                     initialSize="512"
-                     autowarmCount="256"/>
-    <documentCache class="solr.LRUCache"
-                   size="512"
-                   initialSize="512"
-                   autowarmCount="256"/>
-
-    <enableLazyFieldLoading>true</enableLazyFieldLoading>
-
-    <queryResultWindowSize>20</queryResultWindowSize>
-
-    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
-
-  </query>
-
-  <requestDispatcher>
-    <httpCaching never304="true" />
-  </requestDispatcher>
-
-  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />
-  <requestHandler name="/select" class="solr.SearchHandler" />
-
-</config>
diff --git a/usr-share/solr-data/contexts/solr.xml b/usr-share/solr-data/contexts/solr.xml
deleted file mode 100644
index 750392b..0000000
--- a/usr-share/solr-data/contexts/solr.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0"  encoding="ISO-8859-1"?>
-<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
- 
-<Configure class="org.eclipse.jetty.webapp.WebAppContext">
-  <Set name="contextPath">/solr</Set>
-  <Set name="war">/usr/share/java/webapps/apache-solr-4.0.0.war</Set>
-</Configure>
-
diff --git a/usr-share/solr-data/etc/jetty.xml b/usr-share/solr-data/etc/jetty.xml
deleted file mode 100644
index ab84668..0000000
--- a/usr-share/solr-data/etc/jetty.xml
+++ /dev/null
@@ -1,173 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
-
-<!-- =============================================================== -->
-<!-- Configure the Jetty Server                                      -->
-<!--                                                                 -->
-<!-- Documentation of this file format can be found at:              -->
-<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->
-<!--                                                                 -->
-<!-- =============================================================== -->
-
-
-<Configure id="Server" class="org.eclipse.jetty.server.Server">
-
-    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
-    <Call name="setAttribute">
-      <Arg>org.eclipse.jetty.server.Request.maxFormContentSize</Arg>
-      <Arg>200000</Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Server Thread Pool                                          -->
-    <!-- =========================================================== -->
-    <Set name="ThreadPool">
-      <!-- Default queued blocking threadpool -->
-      <New class="org.eclipse.jetty.util.thread.QueuedThreadPool">
-        <Set name="minThreads">10</Set>
-        <Set name="maxThreads">10000</Set>
-        <Set name="detailedDump">false</Set>
-      </New>
-    </Set>
-
-    <!-- =========================================================== -->
-    <!-- Set connectors                                              -->
-    <!-- =========================================================== -->
-
-  <!--
-    <Call name="addConnector">
-      <Arg>
-          <New class="org.eclipse.jetty.server.nio.SelectChannelConnector">
-            <Set name="host"><SystemProperty name="jetty.host" /></Set>
-            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">50000</Set>
-            <Set name="Acceptors">2</Set>
-            <Set name="statsOn">false</Set>
-            <Set name="confidentialPort">8443</Set>
-	    <Set name="lowResourcesConnections">5000</Set>
-	    <Set name="lowResourcesMaxIdleTime">5000</Set>
-          </New>
-      </Arg>
-    </Call>
-  -->
-
-    <!-- This connector is currently being used for Solr because it
-          showed better performance than nio.SelectChannelConnector
-          for typical Solr requests.  -->
-    <Call name="addConnector">
-      <Arg>
-          <New class="org.eclipse.jetty.server.bio.SocketConnector">
-            <Set name="host"><SystemProperty name="jetty.host" /></Set>
-            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">50000</Set>
-            <Set name="lowResourceMaxIdleTime">1500</Set>
-            <Set name="statsOn">false</Set>
-          </New>
-      </Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Set handler Collection Structure                            --> 
-    <!-- =========================================================== -->
-    <Set name="handler">
-      <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
-        <Set name="handlers">
-         <Array type="org.eclipse.jetty.server.Handler">
-           <Item>
-             <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"/>
-           </Item>
-           <Item>
-             <New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler"/>
-           </Item>
-           <Item>
-             <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler"/>
-           </Item>
-         </Array>
-        </Set>
-      </New>
-    </Set>
-    
-    <!-- =========================================================== -->
-    <!-- Configure Request Log                                       -->
-    <!-- =========================================================== -->
-    <!-- 
-    <Ref id="Handlers">
-      <Call name="addHandler">
-        <Arg>
-          <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler">
-            <Set name="requestLog">
-              <New id="RequestLogImpl" class="org.eclipse.jetty.server.NCSARequestLog">
-                <Set name="filename">
-                   logs/request.yyyy_mm_dd.log
-                </Set>
-                <Set name="filenameDateFormat">yyyy_mm_dd</Set>
-                <Set name="retainDays">90</Set>
-                <Set name="append">true</Set>
-                <Set name="extended">false</Set>
-                <Set name="logCookies">false</Set>
-                <Set name="LogTimeZone">UTC</Set>
-              </New>
-            </Set>
-          </New>
-        </Arg>
-      </Call>
-    </Ref>
-    -->
-
-    <!-- =========================================================== -->
-    <!-- extra options                                               -->
-    <!-- =========================================================== -->
-    <Set name="stopAtShutdown">true</Set>
-    <Set name="sendServerVersion">false</Set>
-    <Set name="sendDateHeader">false</Set>
-    <Set name="gracefulShutdown">1000</Set>
-    <Set name="dumpAfterStart">false</Set>
-    <Set name="dumpBeforeStop">false</Set>
-
-
-
-
-    <Call name="addBean">
-      <Arg>
-        <New id="DeploymentManager" class="org.eclipse.jetty.deploy.DeploymentManager">
-          <Set name="contexts">
-            <Ref id="Contexts" />
-          </Set>
-          <Call name="setContextAttribute">
-            <Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>
-            <Arg>.*/servlet-api-[^/]*\.jar$</Arg>
-          </Call>
-          
-          
-          <!-- Add a customize step to the deployment lifecycle -->
-          <!-- uncomment and replace DebugBinding with your extended AppLifeCycle.Binding class 
-          <Call name="insertLifeCycleNode">
-            <Arg>deployed</Arg>
-            <Arg>starting</Arg>
-            <Arg>customise</Arg>
-          </Call>
-          <Call name="addLifeCycleBinding">
-            <Arg>
-              <New class="org.eclipse.jetty.deploy.bindings.DebugBinding">
-                <Arg>customise</Arg>
-              </New>
-            </Arg>
-          </Call>
-          -->
-          
-        </New>
-      </Arg>
-    </Call>
-    
-    <Ref id="DeploymentManager">
-      <Call name="addAppProvider">
-        <Arg>
-          <New class="org.eclipse.jetty.deploy.providers.ContextProvider">
-            <Set name="monitoredDirName"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
-            <Set name="scanInterval">0</Set>
-          </New>
-        </Arg>
-      </Call>
-    </Ref>
-
-</Configure>
diff --git a/usr-share/solr-data/etc/webdefault.xml b/usr-share/solr-data/etc/webdefault.xml
deleted file mode 100644
index 213138b..0000000
--- a/usr-share/solr-data/etc/webdefault.xml
+++ /dev/null
@@ -1,527 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-  <!-- ===================================================================== -->
-  <!-- This file contains the default descriptor for web applications.       -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-  <!-- The intent of this descriptor is to include jetty specific or common  -->
-  <!-- configuration for all webapps.   If a context has a webdefault.xml    -->
-  <!-- descriptor, it is applied before the contexts own web.xml file        -->
-  <!--                                                                       -->
-  <!-- A context may be assigned a default descriptor by:                    -->
-  <!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
-  <!--  + Passed an arg to addWebApplications                                -->
-  <!--                                                                       -->
-  <!-- This file is used both as the resource within the jetty.jar (which is -->
-  <!-- used as the default if no explicit defaults descriptor is set) and it -->
-  <!-- is copied to the etc directory of the Jetty distro and explicitly     -->
-  <!-- by the jetty.xml file.                                                -->
-  <!--                                                                       -->
-  <!-- ===================================================================== -->
-<web-app
-  xmlns="http://java.sun.com/xml/ns/javaee"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
-  metadata-complete="true"
-  version="2.5"
->
-
-  <description>
-    Default web.xml file.  
-    This file is applied to a Web application before it's own WEB_INF/web.xml file
-  </description>
-
-  <!-- ==================================================================== -->
-  <!-- Removes static references to beans from javax.el.BeanELResolver to   -->
-  <!-- ensure webapp classloader can be released on undeploy                -->
-  <!-- ==================================================================== -->
-  <listener>
-   <listener-class>org.eclipse.jetty.servlet.listener.ELContextCleaner</listener-class>
-  </listener>
-  
-  <!-- ==================================================================== -->
-  <!-- Removes static cache of Methods from java.beans.Introspector to      -->
-  <!-- ensure webapp classloader can be released on undeploy                -->
-  <!-- ==================================================================== -->  
-  <listener>
-   <listener-class>org.eclipse.jetty.servlet.listener.IntrospectorCleaner</listener-class>
-  </listener>
-  
-
-  <!-- ==================================================================== -->
-  <!-- Context params to control Session Cookies                            -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!--
-    UNCOMMENT TO ACTIVATE <context-param> <param-name>org.eclipse.jetty.servlet.SessionDomain</param-name> <param-value>127.0.0.1</param-value> </context-param> <context-param>
-    <param-name>org.eclipse.jetty.servlet.SessionPath</param-name> <param-value>/</param-value> </context-param> <context-param> <param-name>org.eclipse.jetty.servlet.MaxAge</param-name>
-    <param-value>-1</param-value> </context-param>
-  -->
-
-  <!-- ==================================================================== -->
-  <!-- The default servlet.                                                 -->
-  <!-- This servlet, normally mapped to /, provides the handling for static -->
-  <!-- content, OPTIONS and TRACE methods for the context.                  -->
-  <!-- The following initParameters are supported:                          -->
-  <!--  
- *  acceptRanges      If true, range requests and responses are
- *                    supported
- *
- *  dirAllowed        If true, directory listings are returned if no
- *                    welcome file is found. Else 403 Forbidden.
- *
- *  welcomeServlets   If true, attempt to dispatch to welcome files
- *                    that are servlets, but only after no matching static
- *                    resources could be found. If false, then a welcome
- *                    file must exist on disk. If "exact", then exact
- *                    servlet matches are supported without an existing file.
- *                    Default is true.
- *
- *                    This must be false if you want directory listings,
- *                    but have index.jsp in your welcome file list.
- *
- *  redirectWelcome   If true, welcome files are redirected rather than
- *                    forwarded to.
- *
- *  gzip              If set to true, then static content will be served as
- *                    gzip content encoded if a matching resource is
- *                    found ending with ".gz"
- *
- *  resourceBase      Set to replace the context resource base
- *
- *  resourceCache     If set, this is a context attribute name, which the servlet 
- *                    will use to look for a shared ResourceCache instance. 
- *                        
- *  relativeResourceBase
- *                    Set with a pathname relative to the base of the
- *                    servlet context root. Useful for only serving static content out
- *                    of only specific subdirectories.
- *
- *  aliases           If True, aliases of resources are allowed (eg. symbolic
- *                    links and caps variations). May bypass security constraints.
- *
- *  maxCacheSize      The maximum total size of the cache or 0 for no cache.
- *  maxCachedFileSize The maximum size of a file to cache
- *  maxCachedFiles    The maximum number of files to cache
- *
- *  useFileMappedBuffer
- *                    If set to true, it will use mapped file buffer to serve static content
- *                    when using NIO connector. Setting this value to false means that
- *                    a direct buffer will be used instead of a mapped file buffer.
- *                    By default, this is set to true.
- *
- *  cacheControl      If set, all static content will have this value set as the cache-control
- *                    header.
- -->
- 
- 
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet>
-    <servlet-name>default</servlet-name>
-    <servlet-class>org.eclipse.jetty.servlet.DefaultServlet</servlet-class>
-    <init-param>
-      <param-name>aliases</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>acceptRanges</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>dirAllowed</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>welcomeServlets</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>redirectWelcome</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCacheSize</param-name>
-      <param-value>256000000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCachedFileSize</param-name>
-      <param-value>200000000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCachedFiles</param-name>
-      <param-value>2048</param-value>
-    </init-param>
-    <init-param>
-      <param-name>gzip</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>useFileMappedBuffer</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <!--
-    <init-param>
-      <param-name>resourceCache</param-name>
-      <param-value>resourceCache</param-value>
-    </init-param>
-    -->
-    <!--
-    <init-param>
-      <param-name>cacheControl</param-name>
-      <param-value>max-age=3600,public</param-value>
-    </init-param>
-    -->
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping>
-    <servlet-name>default</servlet-name>
-    <url-pattern>/</url-pattern>
-  </servlet-mapping>
-
-
-  <!-- ==================================================================== -->
-  <!-- JSP Servlet                                                          -->
-  <!-- This is the jasper JSP servlet from the jakarta project              -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
-  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
-  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
-  <!-- following initialization parameters (default values are in square    -->
-  <!-- brackets):                                                           -->
-  <!--                                                                      -->
-  <!--   checkInterval       If development is false and reloading is true, -->
-  <!--                       background compiles are enabled. checkInterval -->
-  <!--                       is the time in seconds between checks to see   -->
-  <!--                       if a JSP page needs to be recompiled. [300]    -->
-  <!--                                                                      -->
-  <!--   compiler            Which compiler Ant should use to compile JSP   -->
-  <!--                       pages.  See the Ant documenation for more      -->
-  <!--                       information. [javac]                           -->
-  <!--                                                                      -->
-  <!--   classdebuginfo      Should the class file be compiled with         -->
-  <!--                       debugging information?  [true]                 -->
-  <!--                                                                      -->
-  <!--   classpath           What class path should I use while compiling   -->
-  <!--                       generated servlets?  [Created dynamically      -->
-  <!--                       based on the current web application]          -->
-  <!--                       Set to ? to make the container explicitly set  -->
-  <!--                       this parameter.                                -->
-  <!--                                                                      -->
-  <!--   development         Is Jasper used in development mode (will check -->
-  <!--                       for JSP modification on every access)?  [true] -->
-  <!--                                                                      -->
-  <!--   enablePooling       Determines whether tag handler pooling is      -->
-  <!--                       enabled  [true]                                -->
-  <!--                                                                      -->
-  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
-  <!--                       a separate JVM is used for JSP page compiles   -->
-  <!--                       from the one Tomcat is running in. [true]      -->
-  <!--                                                                      -->
-  <!--   ieClassId           The class-id value to be sent to Internet      -->
-  <!--                       Explorer when using <jsp:plugin> tags.         -->
-  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
-  <!--                                                                      -->
-  <!--   javaEncoding        Java file encoding to use for generating java  -->
-  <!--                       source files. [UTF-8]                          -->
-  <!--                                                                      -->
-  <!--   keepgenerated       Should we keep the generated Java source code  -->
-  <!--                       for each page instead of deleting it? [true]   -->
-  <!--                                                                      -->
-  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
-  <!--                       by this servlet.  Increasing levels cause the  -->
-  <!--                       generation of more messages.  Valid values are -->
-  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
-  <!--                       [WARNING]                                      -->
-  <!--                                                                      -->
-  <!--   mappedfile          Should we generate static content with one     -->
-  <!--                       print statement per input line, to ease        -->
-  <!--                       debugging?  [false]                            -->
-  <!--                                                                      -->
-  <!--                                                                      -->
-  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
-  <!--                                                                      -->
-  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
-  <!--                       debugging be suppressed?  [false]              -->
-  <!--                                                                      -->
-  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
-  <!--                       dumped to a file? [false]                      -->
-  <!--                       False if suppressSmap is true                  -->
-  <!--                                                                      -->
-  <!--   scratchdir          What scratch directory should we use when      -->
-  <!--                       compiling JSP pages?  [default work directory  -->
-  <!--                       for the current web application]               -->
-  <!--                                                                      -->
-  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
-  <!--                                                                      -->
-  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
-  <!--                       header is added by generated servlet  [false]  -->
-  <!--                                                                      -->
-  <!-- If you wish to use Jikes to compile JSP pages:                       -->
-  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
-  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
-  <!--   to cause Jikes to emit error messages in a format compatible with  -->
-  <!--   Jasper.                                                            -->
-  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
-  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet
-    id="jsp"
-  >
-    <servlet-name>jsp</servlet-name>
-    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
-    <init-param>
-      <param-name>logVerbosityLevel</param-name>
-      <param-value>DEBUG</param-value>
-    </init-param>
-    <init-param>
-      <param-name>fork</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>xpoweredBy</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <!--  
-    <init-param>
-        <param-name>classpath</param-name>
-        <param-value>?</param-value>
-    </init-param>
-    -->
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping>
-    <servlet-name>jsp</servlet-name>
-    <url-pattern>*.jsp</url-pattern>
-    <url-pattern>*.jspf</url-pattern>
-    <url-pattern>*.jspx</url-pattern>
-    <url-pattern>*.xsp</url-pattern>
-    <url-pattern>*.JSP</url-pattern>
-    <url-pattern>*.JSPF</url-pattern>
-    <url-pattern>*.JSPX</url-pattern>
-    <url-pattern>*.XSP</url-pattern>
-  </servlet-mapping>
-
-  <!-- ==================================================================== -->
-  <!-- Dynamic Servlet Invoker.                                             -->
-  <!-- This servlet invokes anonymous servlets that have not been defined   -->
-  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
-  <!-- of a request passed to the envoker is treated as a servlet name for  -->
-  <!-- an existing servlet, or as a class name of a new servlet.            -->
-  <!-- This servlet is normally mapped to /servlet/*                        -->
-  <!-- This servlet support the following initParams:                       -->
-  <!--                                                                      -->
-  <!--  nonContextServlets       If false, the invoker can only load        -->
-  <!--                           servlets from the contexts classloader.    -->
-  <!--                           This is false by default and setting this  -->
-  <!--                           to true may have security implications.    -->
-  <!--                                                                      -->
-  <!--  verbose                  If true, log dynamic loads                 -->
-  <!--                                                                      -->
-  <!--  *                        All other parameters are copied to the     -->
-  <!--                           each dynamic servlet as init parameters    -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!--
-    Uncomment for dynamic invocation <servlet> <servlet-name>invoker</servlet-name> <servlet-class>org.eclipse.jetty.servlet.Invoker</servlet-class> <init-param> <param-name>verbose</param-name>
-    <param-value>false</param-value> </init-param> <init-param> <param-name>nonContextServlets</param-name> <param-value>false</param-value> </init-param> <init-param>
-    <param-name>dynamicParam</param-name> <param-value>anyValue</param-value> </init-param> <load-on-startup>0</load-on-startup> </servlet> <servlet-mapping> <servlet-name>invoker</servlet-name>
-    <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
-  -->
-
-
-
-  <!-- ==================================================================== -->
-  <session-config>
-    <session-timeout>30</session-timeout>
-  </session-config>
-
-  <!-- ==================================================================== -->
-  <!-- Default MIME mappings                                                -->
-  <!-- The default MIME mappings are provided by the mime.properties        -->
-  <!-- resource in the org.eclipse.jetty.server.jar file.  Additional or modified  -->
-  <!-- mappings may be specified here                                       -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- UNCOMMENT TO ACTIVATE
-  <mime-mapping>
-    <extension>mysuffix</extension>
-    <mime-type>mymime/type</mime-type>
-  </mime-mapping>
-  -->
-
-  <!-- ==================================================================== -->
-  <welcome-file-list>
-    <welcome-file>index.html</welcome-file>
-    <welcome-file>index.htm</welcome-file>
-    <welcome-file>index.jsp</welcome-file>
-  </welcome-file-list>
-
-  <!-- ==================================================================== -->
-  <locale-encoding-mapping-list>
-    <locale-encoding-mapping>
-      <locale>ar</locale>
-      <encoding>ISO-8859-6</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>be</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>bg</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>ca</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>cs</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>da</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>de</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>el</locale>
-      <encoding>ISO-8859-7</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>en</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>es</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>et</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>fi</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>fr</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>hr</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>hu</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>is</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>it</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>iw</locale>
-      <encoding>ISO-8859-8</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>ja</locale>
-      <encoding>Shift_JIS</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>ko</locale>
-      <encoding>EUC-KR</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>lt</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>lv</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>mk</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>nl</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>no</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>pl</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>pt</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>ro</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>ru</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sh</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sk</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sl</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sq</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sr</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sv</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>tr</locale>
-      <encoding>ISO-8859-9</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>uk</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>zh</locale>
-      <encoding>GB2312</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>zh_TW</locale>
-      <encoding>Big5</encoding>
-    </locale-encoding-mapping>
-  </locale-encoding-mapping-list>
-
-  <security-constraint>
-    <web-resource-collection>
-      <web-resource-name>Disable TRACE</web-resource-name>
-      <url-pattern>/</url-pattern>
-      <http-method>TRACE</http-method>
-    </web-resource-collection>
-    <auth-constraint/>
-  </security-constraint>
-
-</web-app>
-
diff --git a/usr-share/solr-data/solr.xml b/usr-share/solr-data/solr.xml
deleted file mode 100644
index 3da55c2..0000000
--- a/usr-share/solr-data/solr.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
-<solr sharedLib="lib" persistent="true">
-    <cores adminPath="/admin/cores"/>
-</solr>
diff --git a/usr-share/solr-data/start.config b/usr-share/solr-data/start.config
deleted file mode 100644
index 4828eaa..0000000
--- a/usr-share/solr-data/start.config
+++ /dev/null
@@ -1,162 +0,0 @@
-# This file controls what file are to be put on classpath or command line.
-#
-# Format is as follows:
-#
-# Each line contains entry in the format:
-#
-#  SUBJECT [ [!] CONDITION [AND|OR] ]*
-# 
-# where SUBJECT: 
-#   ends with ".class" is the Main class to run.
-#   ends with ".xml" is a configuration file for the command line
-#   ends with "/" is a directory from which to add all jar and zip files. 
-#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
-#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
-#   Containing = are used to assign system properties.
-#   Containing ~= are used to assign start properties.
-#   Containing /= are used to assign a canonical path.
-#   all other subjects are treated as files to be added to the classpath.
-#
-# ${name} is expanded to a start property
-# $(name) is expanded to either a start property or a system property. 
-# The start property ${version} is defined as the version of the start.jar
-#
-# Files starting with "/" are considered absolute, all others are relative to
-# the home directory.
-#
-# CONDITION is one of:
-#   always
-#   never
-#   available classname        # true if class on classpath
-#   property name              # true if set as start property
-#   system   name              # true if set as system property
-#   exists file                # true if file/dir exists
-#   java OPERATOR version      # java version compared to literal
-#   nargs OPERATOR number      # number of command line args compared to literal
-#   OPERATOR := one of "<",">","<=",">=","==","!="
-#
-# CONTITIONS can be combined with AND OR or !, with AND being the assume
-# operator for a list of CONDITIONS.
-#
-# Classpath operations are evaluated on the fly, so once a class or jar is
-# added to the classpath, subsequent available conditions will see that class.
-#
-# The configuration file may be divided into sections with option names like:
-# [ssl,default]
-#
-# Clauses after a section header will only be included if they match one of the tags in the 
-# options property.  By default options are set to "default,*" or the OPTIONS property may
-# be used to pass in a list of tags, eg. :
-#
-#    java -jar start.jar OPTIONS=jetty,jsp,ssl
-#
-# The tag '*' is always appended to the options, so any section with the * tag is always 
-# applied.
-#
-
-# add a property defined classpath
-${path}.path                                     property path
-
-# add a property defined library directory
-${lib}/**                                        exists ${lib}
-
-jetty.home=/location/of/your/jetty/config/dir
-jetty.lib=/location/of/your/lib
-
-# The main class to run
-org.eclipse.jetty.xml.XmlConfiguration.class
-${start.class}.class                             property start.class
-
-# The default configuration files
-$(jetty.home)/etc/jetty.xml                      nargs == 0
-./jetty-server/src/main/config/etc/jetty.xml     nargs == 0 AND ! exists $(jetty.home)/etc/jetty.xml
-
-# Default OPTIONS if not specified on the command line
-OPTIONS~=default,*                               ! property OPTIONS
-
-# Add a resources directory if it is there
-[All,resources,default]
-$(jetty.home)/resources/
-           
-# Add jetty modules
-[*]
-$(jetty.lib)/jetty-util-$(version).jar                                             ! available org.eclipse.jetty.util.StringUtil
-$(jetty.lib)/jetty-io-$(version).jar                                               ! available org.eclipse.jetty.io.Buffer
-
-[Server,All,xml,default]
-$(jetty.lib)/jetty-xml-$(version).jar                                              ! available org.eclipse.jetty.xml.XmlParser
-         
-[Server,All,server,default]
-$(jetty.lib)/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
-$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
-$(jetty.lib)/jetty-continuation-$(version).jar                                     ! available org.eclipse.jetty.continuation.Continuation
-$(jetty.lib)/jetty-server-$(version).jar                                           ! available org.eclipse.jetty.server.Server
-                                             
-[Server,All,security,default]
-$(jetty.lib)/jetty-security-$(version).jar                                         ! available org.eclipse.jetty.security.LoginService
-                                                       
-[Server,All,servlet,default]
-$(jetty.lib)/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
-$(jetty.lib)/jetty-servlet-$(version).jar                                          ! available org.eclipse.jetty.servlet.ServletHandler
-                            
-[Server,All,webapp,default]
-$(jetty.lib)/jetty-webapp-$(version).jar                                           ! available org.eclipse.jetty.webapp.WebAppContext
-                                  
-[Server,All,deploy,default]
-$(jetty.lib)/jetty-deploy-$(version).jar                                           ! available org.eclipse.jetty.deploy.ContextDeployer
-           
-[Server,All,servlets,default]
-$(jetty.lib)/jetty-servlets-$(version).jar                                         ! available org.eclipse.jetty.servlets.WelcomeFilter
-
-[All,rewrite]
-$(jetty.lib)/jetty-rewrite-$(version).jar                                          ! available org.eclipse.jetty.rewrite.handler.RewriteHandler
-
-[All,jmx]
-$(jetty.lib)/jetty-jmx-$(version).jar                                              ! available org.eclipse.jetty.jmx.MBeanContainer
-                  
-[All,ajp]
-$(jetty.lib)/jetty-ajp-$(version).jar                                              ! available org.eclipse.jetty.ajp.Ajp13Connection      
-                   
-[All,plus,jndi]
-$(jetty.lib)/jetty-jndi-${version}.jar                                             ! available org.eclipse.jetty.jndi.ContextFactory
-$(jetty.lib)/jetty-plus-${version}.jar                                             ! available org.eclipse.jetty.plus.jndi.NamingEntry
-$(jetty.lib)/jndi/**                                                               exists $(jetty.lib)/jndi 
-
-[All,annotations]
-$(jetty.lib)/jetty-annotations-$(version).jar                                      ! available org.eclipse.jetty.annotations.AnnotationFinder
-$(jetty.lib)/annotations/**                                                        exists $(jetty.lib)/jndi 
-          
-[All,setuid]
-$(jetty.lib)/jetty-setuid-$(version).jar                                           ! available org.eclipse.jetty.setuid.SetUID
-$(jetty.lib)/setuid/**                                                       
-                                    
-[All,policy]
-$(jetty.lib)/jetty-policy-$(version).jar                                           ! available org.eclipse.jetty.policy.JettyPolicy
-                                    
-[All,Client,client]
-$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
-$(jetty.lib)/jetty-client-$(version).jar                                           ! available org.eclipse.jetty.client.HttpClient
-
-[All,websocket]
-$(jetty.lib)/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
-       
-[Client]
-$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
-
-[All,websocket]
-$(jetty.lib)/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
-       
-[All,overlay,overlays]
-$(jetty.lib)/jetty-overlay-deployer-$(version).jar                                 ! available org.eclipse.jetty.overlay.OverlayedAppProvider
-       
-      
-# Add ext if it exists
-[Server,All,default,ext]        
-$(jetty.lib)/ext/**
-
-# Add all other sub-directories in /lib/ as options in a dynamic way
-[All,=$(jetty.lib)/**]        
-
-# Set webapps dir
-jetty.webapps=/usr/share/java/webapps
-
diff --git a/usr-share/solrconfig.d/admin.xml b/usr-share/solrconfig.d/admin.xml
deleted file mode 100644
index 0bb6621..0000000
--- a/usr-share/solrconfig.d/admin.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<config>
-  <requestHandler name="/admin" class="solr.admin.AdminHandlers" />
-
-  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
-    <lst name="invariants">
-      <str name="q">solrpingquery</str>
-    </lst>
-    <lst name="defaults">
-      <str name="echoParams">all</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Legacy config for the admin interface -->
-  <admin>
-    <defaultQuery>*:*</defaultQuery>
-  </admin>
-</config>
-
diff --git a/usr-share/solrconfig.d/autocomplete.xml b/usr-share/solrconfig.d/autocomplete.xml
deleted file mode 100644
index ac9f732..0000000
--- a/usr-share/solrconfig.d/autocomplete.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<config>
-  <searchComponent name="terms" class="solr.TermsComponent"/>
-
-  <!-- A request handler for demonstrating the terms component -->
-  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
-     <lst name="defaults">
-      <bool name="terms">true</bool>
-    </lst>     
-    <arr name="components">
-      <str>terms</str>
-    </arr>
-  </requestHandler>
-</config>
diff --git a/usr-share/solrconfig.d/suggestions.xml b/usr-share/solrconfig.d/suggestions.xml
deleted file mode 100644
index 26f6dd0..0000000
--- a/usr-share/solrconfig.d/suggestions.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<config>
-  <searchComponent name="suggestions" class="solr.SpellCheckComponent">
-    <str name="queryAnalyzerFieldType">textSpell</str>
-    <lst name="spellchecker">
-      <str name="name">default</str>
-      <str name="field">%(field)s</str>
-      <str name="spellcheckIndexDir">suggestions</str>
-      <str name="buildOnCommit">true</str>
-    </lst>
-  </searchComponent>
-
-  <requestHandler name="/select" class="solr.SearchHandler" startup="lazy">
-    <arr name="last-components">
-      <str>suggestions</str>
-    </arr>
-  </requestHandler>
-</config>
-- 
1.7.2.5


From ac147414012cedb151f250c95559f48186d18ea8 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 11 Dec 2012 14:43:38 +0100
Subject: [PATCH 37/66] JPM/TJ: server deps in server subdir.

---
 deps.txt        |    2 --
 server/deps.txt |    2 ++
 2 files changed, 2 insertions(+), 2 deletions(-)
 delete mode 100644 deps.txt
 create mode 100644 server/deps.txt

diff --git a/deps.txt b/deps.txt
deleted file mode 100644
index 597641c..0000000
--- a/deps.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-solr4.0
-python-lxml
diff --git a/server/deps.txt b/server/deps.txt
new file mode 100644
index 0000000..c843e32
--- /dev/null
+++ b/server/deps.txt
@@ -0,0 +1,2 @@
+solr4.0.0
+python-lxml
-- 
1.7.2.5


From 7e2e27b63a28edce96aa50de7fdd700800016d58 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 11 Dec 2012 16:11:17 +0100
Subject: [PATCH 38/66] JPM/TJ: fixed test.

---
 doc/changes.txt                   |    4 +-
 doc/original_3.6.0_solrconfig.xml | 1622 -------------------------------------
 doc/original_start.config         |  164 ++++
 server/test/solrruntest.py        |    6 +-
 4 files changed, 169 insertions(+), 1627 deletions(-)
 delete mode 100644 doc/original_3.6.0_solrconfig.xml
 create mode 100644 doc/original_start.config

diff --git a/doc/changes.txt b/doc/changes.txt
index 4771270..f46bca3 100644
--- a/doc/changes.txt
+++ b/doc/changes.txt
@@ -1,3 +1,5 @@
+Onderstaande is gebaseerd op de solr-4.0.0.tgz
+
 example/etc/jetty.xml -> usr-share/solr-data/etc/jetty.xml
 
 example/etc/webdefault.xml -> usr-share/solr-data/etc/webdefault.xml
@@ -5,7 +7,7 @@ example/etc/webdefault.xml -> usr-share/solr-data/etc/webdefault.xml
 example/example-DIH/solr/solr.xml -> usr-share/solr-data/solr.xml
  - Remove core elements
 
-example/start.jar:org/mortbay/start/start.config -> solr-data/start.config
+example/org/eclipse/jetty/start/start.config -> solr-data/start.config
  - Handmatige diff; Keep explaining comments; Add jetty.webapps; Add dummy jetty.home; Fix jetty classpath
  - replace ('$(jetty.home)/lib', '$(jetty.lib)')
  - Voeg jetty.lib=/some/location toe (wordt overschreven in solrconfig.py)
diff --git a/doc/original_3.6.0_solrconfig.xml b/doc/original_3.6.0_solrconfig.xml
deleted file mode 100644
index 5f50ab5..0000000
--- a/doc/original_3.6.0_solrconfig.xml
+++ /dev/null
@@ -1,1622 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<!-- 
-     For more details about configurations options that may appear in
-     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
--->
-<config>
-  <!-- In all configuration below, a prefix of "solr." for class names
-       is an alias that causes solr to search appropriate packages,
-       including org.apache.solr.(search|update|request|core|analysis)
-
-       You may also specify a fully qualified Java classname if you
-       have your own custom plugins.
-    -->
-
-  <!-- Set this to 'false' if you want solr to continue working after
-       it has encountered an severe configuration error.  In a
-       production environment, you may want solr to keep working even
-       if one handler is mis-configured.
-
-       You may also set this to false using by setting the system
-       property:
-
-         -Dsolr.abortOnConfigurationError=false
-    -->
-  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
-  
-  <!-- Controls what version of Lucene various components of Solr
-       adhere to.  Generally, you want to use the latest version to
-       get all bug fixes and improvements. It is highly recommended
-       that you fully re-index after changing this setting as it can
-       affect both how text is indexed and queried.
-    -->
-  <luceneMatchVersion>LUCENE_36</luceneMatchVersion>
-
-  <!-- lib directives can be used to instruct Solr to load an Jars
-       identified and use them to resolve any "plugins" specified in
-       your solrconfig.xml or schema.xml (ie: Analyzers, Request
-       Handlers, etc...).
-
-       All directories and paths are resolved relative to the
-       instanceDir.
-
-       If a "./lib" directory exists in your instanceDir, all files
-       found in it are included as if you had used the following
-       syntax...
-       
-              <lib dir="./lib" />
-    -->
-
-  <!-- A 'dir' option by itself adds any files found in the directory 
-       to the classpath, this is useful for including all jars in a
-       directory.
-    -->
-  <!--
-     <lib dir="../add-everything-found-in-this-dir-to-the-classpath" />
-  -->
-
-  <!-- When a 'regex' is specified in addition to a 'dir', only the
-       files in that directory which completely match the regex
-       (anchored on both ends) will be included.
-    -->
-  <lib dir="../../dist/" regex="apache-solr-cell-\d.*\.jar" />
-  <lib dir="../../contrib/extraction/lib" regex=".*\.jar" />
-
-  <lib dir="../../dist/" regex="apache-solr-clustering-\d.*\.jar" />
-  <lib dir="../../contrib/clustering/lib/" regex=".*\.jar" />
-
-  <lib dir="../../dist/" regex="apache-solr-dataimporthandler-\d.*\.jar" />
-  <lib dir="../../contrib/dataimporthandler/lib/" regex=".*\.jar" />
-  
-  <lib dir="../../dist/" regex="apache-solr-langid-\d.*\.jar" />
-  <lib dir="../../contrib/langid/lib/" regex=".*\.jar" />
-
-  <lib dir="../../dist/" regex="apache-solr-velocity-\d.*\.jar" />
-  <lib dir="../../contrib/velocity/lib" regex=".*\.jar" />
-
-  <!-- If a 'dir' option (with or without a regex) is used and nothing
-       is found that matches, it will be ignored
-    -->
-  <lib dir="/total/crap/dir/ignored" />
-
-  <!-- an exact 'path' can be used instead of a 'dir' to specify a 
-       specific file.  This will cause a serious error to be logged if 
-       it can't be loaded.
-    -->
-  <!--
-     <lib path="../a-jar-that-does-not-exist.jar" /> 
-  -->
-  
-  <!-- Data Directory
-
-       Used to specify an alternate directory to hold all index data
-       other than the default ./data under the Solr home.  If
-       replication is in use, this should match the replication
-       configuration.
-    -->
-  <dataDir>${solr.data.dir:}</dataDir>
-
-
-  <!-- The DirectoryFactory to use for indexes.
-       
-       solr.StandardDirectoryFactory, the default, is filesystem
-       based and tries to pick the best implementation for the current
-       JVM and platform.  One can force a particular implementation
-       via solr.MMapDirectoryFactory, solr.NIOFSDirectoryFactory, or
-       solr.SimpleFSDirectoryFactory.
-
-       solr.RAMDirectoryFactory is memory based, not
-       persistent, and doesn't work with replication.
-    -->
-  <directoryFactory name="DirectoryFactory" 
-                    class="${solr.directoryFactory:solr.StandardDirectoryFactory}"/>
-
-  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-       Index Config - These settings control low-level behavior of indexing
-       Most example settings here show the default value, but are commented
-       out, to more easily see where customizations have been made.
-       
-       Note: As of Solr 3.6, the <indexDefaults> and <mainIndex> sections
-             are deprecated and not shown in the example config. They will 
-             still work, but will go away for good in 4.0
-       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
-  <indexConfig>
-    <!-- maxFieldLength specifies max number of *tokens* indexed per field. Default: 10000 -->
-    <!-- <maxFieldLength>10000</maxFieldLength>  -->
-    <!-- Maximum time to wait for a write lock (ms) for an IndexWriter. Default: 1000 -->
-    <!-- <writeLockTimeout>1000</writeLockTimeout>  -->
-
-    <!-- Expert: Enabling compound file will use less files for the index, 
-         using fewer file descriptors on the expense of performance decrease. 
-         Default in Lucene is "true". Default in Solr is "false" (since 3.6) -->
-    <!-- <useCompoundFile>false</useCompoundFile> -->
-
-    <!-- ramBufferSizeMB sets the amount of RAM that may be used by Lucene
-         indexing for buffering added documents and deletions before they are
-         flushed to the Directory.
-         maxBufferedDocs sets a limit on the number of documents buffered
-         before flushing.
-         If both ramBufferSizeMB and maxBufferedDocs is set, then
-         Lucene will flush based on whichever limit is hit first.  -->
-    <!-- <ramBufferSizeMB>32</ramBufferSizeMB> -->
-    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->
-
-    <!-- Expert: Merge Policy 
-         The Merge Policy in Lucene controls how merging of segments is done.
-         The default since Solr/Lucene 3.3 is TieredMergePolicy.
-         The default since Lucene 2.3 was the LogByteSizeMergePolicy,
-         Even older versions of Lucene used LogDocMergePolicy.
-      -->
-    <!--
-        <mergePolicy class="org.apache.lucene.index.TieredMergePolicy">
-          <int name="maxMergeAtOnce">10</int>
-          <int name="segmentsPerTier">10</int>
-        </mergePolicy>
-      -->
-       
-    <!-- Merge Factor
-         The merge factor controls how many segments will get merged at a time.
-         For TieredMergePolicy, mergeFactor is a convenience parameter which
-         will set both MaxMergeAtOnce and SegmentsPerTier at once.
-         For LogByteSizeMergePolicy, mergeFactor decides how many new segments
-         will be allowed before they are merged into one.
-         Default is 10 for both merge policies.
-      -->
-    <!-- 
-    <mergeFactor>10</mergeFactor>
-      -->
-
-    <!-- Expert: Merge Scheduler
-         The Merge Scheduler in Lucene controls how merges are
-         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
-         can perform merges in the background using separate threads.
-         The SerialMergeScheduler (Lucene 2.2 default) does not.
-     -->
-    <!-- 
-       <mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler"/>
-       -->
-
-    <!-- LockFactory 
-
-         This option specifies which Lucene LockFactory implementation
-         to use.
-      
-         single = SingleInstanceLockFactory - suggested for a
-                  read-only index or when there is no possibility of
-                  another process trying to modify the index.
-         native = NativeFSLockFactory - uses OS native file locking.
-                  Do not use when multiple solr webapps in the same
-                  JVM are attempting to share a single index.
-         simple = SimpleFSLockFactory  - uses a plain file for locking
-
-         Defaults: 'native' is default for Solr3.6 and later, otherwise
-                   'simple' is the default
-
-         More details on the nuances of each LockFactory...
-         http://wiki.apache.org/lucene-java/AvailableLockFactories
-    -->
-    <!-- <lockType>native</lockType> -->
-
-    <!-- Unlock On Startup
-
-         If true, unlock any held write or commit locks on startup.
-         This defeats the locking mechanism that allows multiple
-         processes to safely access a lucene index, and should be used
-         with care. Default is "false".
-
-         This is not needed if lock type is 'none' or 'single'
-     -->
-    <!--
-    <unlockOnStartup>false</unlockOnStartup>
-      -->
-    
-    <!-- Expert: Controls how often Lucene loads terms into memory
-         Default is 128 and is likely good for most everyone.
-      -->
-    <!-- <termIndexInterval>128</termIndexInterval> -->
-
-    <!-- If true, IndexReaders will be reopened (often more efficient)
-         instead of closed and then opened. Default: true
-      -->
-    <!-- 
-    <reopenReaders>true</reopenReaders>
-      -->
-
-    <!-- Commit Deletion Policy
-
-         Custom deletion policies can be specified here. The class must
-         implement org.apache.lucene.index.IndexDeletionPolicy.
-
-         http://lucene.apache.org/java/3_5_0/api/core/org/apache/lucene/index/IndexDeletionPolicy.html
-
-         The default Solr IndexDeletionPolicy implementation supports
-         deleting index commit points on number of commits, age of
-         commit point and optimized status.
-         
-         The latest commit point should always be preserved regardless
-         of the criteria.
-    -->
-    <!-- 
-    <deletionPolicy class="solr.SolrDeletionPolicy">
-    -->
-      <!-- The number of commit points to be kept -->
-      <!-- <str name="maxCommitsToKeep">1</str> -->
-      <!-- The number of optimized commit points to be kept -->
-      <!-- <str name="maxOptimizedCommitsToKeep">0</str> -->
-      <!--
-          Delete all commit points once they have reached the given age.
-          Supports DateMathParser syntax e.g.
-        -->
-      <!--
-         <str name="maxCommitAge">30MINUTES</str>
-         <str name="maxCommitAge">1DAY</str>
-      -->
-    <!-- 
-    </deletionPolicy>
-    -->
-
-    <!-- Lucene Infostream
-       
-         To aid in advanced debugging, Lucene provides an "InfoStream"
-         of detailed information when indexing.
-
-         Setting The value to true will instruct the underlying Lucene
-         IndexWriter to write its debugging info the specified file
-      -->
-     <!-- <infoStream file="INFOSTREAM.txt">false</infoStream> --> 
-  </indexConfig>
-
-
-  <!-- JMX
-       
-       This example enables JMX if and only if an existing MBeanServer
-       is found, use this if you want to configure JMX through JVM
-       parameters. Remove this to disable exposing Solr configuration
-       and statistics to JMX.
-
-       For more details see http://wiki.apache.org/solr/SolrJmx
-    -->
-  <jmx />
-  <!-- If you want to connect to a particular server, specify the
-       agentId 
-    -->
-  <!-- <jmx agentId="myAgent" /> -->
-  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->
-  <!-- <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr"/>
-    -->
-
-  <!-- The default high-performance update handler -->
-  <updateHandler class="solr.DirectUpdateHandler2">
-
-    <!-- AutoCommit
-
-         Perform a <commit/> automatically under certain conditions.
-         Instead of enabling autoCommit, consider using "commitWithin"
-         when adding documents. 
-
-         http://wiki.apache.org/solr/UpdateXmlMessages
-
-         maxDocs - Maximum number of documents to add since the last
-                   commit before automatically triggering a new commit.
-
-         maxTime - Maximum amount of time that is allowed to pass
-                   since a document was added before automaticly
-                   triggering a new commit. 
-      -->
-    <!--
-       <autoCommit> 
-         <maxDocs>10000</maxDocs>
-         <maxTime>1000</maxTime> 
-       </autoCommit>
-      -->
-
-    <!-- Update Related Event Listeners
-         
-         Various IndexWriter related events can trigger Listeners to
-         take actions.
-
-         postCommit - fired after every commit or optimize command
-         postOptimize - fired after every optimize command
-      -->
-    <!-- The RunExecutableListener executes an external command from a
-         hook such as postCommit or postOptimize.
-         
-         exe - the name of the executable to run
-         dir - dir to use as the current working directory. (default=".")
-         wait - the calling thread waits until the executable returns. 
-                (default="true")
-         args - the arguments to pass to the program.  (default is none)
-         env - environment variables to set.  (default is none)
-      -->
-    <!-- This example shows how RunExecutableListener could be used
-         with the script based replication...
-         http://wiki.apache.org/solr/CollectionDistribution
-      -->
-    <!--
-       <listener event="postCommit" class="solr.RunExecutableListener">
-         <str name="exe">solr/bin/snapshooter</str>
-         <str name="dir">.</str>
-         <bool name="wait">true</bool>
-         <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
-         <arr name="env"> <str>MYVAR=val1</str> </arr>
-       </listener>
-      -->
-  </updateHandler>
-  
-  <!-- IndexReaderFactory
-
-       Use the following format to specify a custom IndexReaderFactory,
-       which allows for alternate IndexReader implementations.
-
-       ** Experimental Feature **
-
-       Please note - Using a custom IndexReaderFactory may prevent
-       certain other features from working. The API to
-       IndexReaderFactory may change without warning or may even be
-       removed from future releases if the problems cannot be
-       resolved.
-
-
-       ** Features that may not work with custom IndexReaderFactory **
-
-       The ReplicationHandler assumes a disk-resident index. Using a
-       custom IndexReader implementation may cause incompatibility
-       with ReplicationHandler and may cause replication to not work
-       correctly. See SOLR-1366 for details.
-
-    -->
-  <!--
-  <indexReaderFactory name="IndexReaderFactory" class="package.class">
-    <str name="someArg">Some Value</str>
-  </indexReaderFactory >
-  -->
-  <!-- By explicitly declaring the Factory, the termIndexDivisor can
-       be specified.
-    -->
-  <!--
-     <indexReaderFactory name="IndexReaderFactory" 
-                         class="solr.StandardIndexReaderFactory">
-       <int name="setTermIndexDivisor">12</int>
-     </indexReaderFactory >
-    -->
-
-  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-       Query section - these settings control query time things like caches
-       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
-  <query>
-    <!-- Max Boolean Clauses
-
-         Maximum number of clauses in each BooleanQuery,  an exception
-         is thrown if exceeded.
-
-         ** WARNING **
-         
-         This option actually modifies a global Lucene property that
-         will affect all SolrCores.  If multiple solrconfig.xml files
-         disagree on this property, the value at any given moment will
-         be based on the last SolrCore to be initialized.
-         
-      -->
-    <maxBooleanClauses>1024</maxBooleanClauses>
-
-
-    <!-- Solr Internal Query Caches
-
-         There are two implementations of cache available for Solr,
-         LRUCache, based on a synchronized LinkedHashMap, and
-         FastLRUCache, based on a ConcurrentHashMap.  
-
-         FastLRUCache has faster gets and slower puts in single
-         threaded operation and thus is generally faster than LRUCache
-         when the hit ratio of the cache is high (> 75%), and may be
-         faster under other scenarios on multi-cpu systems.
-    -->
-
-    <!-- Filter Cache
-
-         Cache used by SolrIndexSearcher for filters (DocSets),
-         unordered sets of *all* documents that match a query.  When a
-         new searcher is opened, its caches may be prepopulated or
-         "autowarmed" using data from caches in the old searcher.
-         autowarmCount is the number of items to prepopulate.  For
-         LRUCache, the autowarmed items will be the most recently
-         accessed items.
-
-         Parameters:
-           class - the SolrCache implementation LRUCache or
-               (LRUCache or FastLRUCache)
-           size - the maximum number of entries in the cache
-           initialSize - the initial capacity (number of entries) of
-               the cache.  (see java.util.HashMap)
-           autowarmCount - the number of entries to prepopulate from
-               and old cache.  
-      -->
-    <filterCache class="solr.FastLRUCache"
-                 size="512"
-                 initialSize="512"
-                 autowarmCount="0"/>
-
-    <!-- Query Result Cache
-         
-         Caches results of searches - ordered lists of document ids
-         (DocList) based on a query, a sort, and the range of documents 
-         requested.  
-      -->
-    <queryResultCache class="solr.LRUCache"
-                     size="512"
-                     initialSize="512"
-                     autowarmCount="0"/>
-   
-    <!-- Document Cache
-
-         Caches Lucene Document objects (the stored fields for each
-         document).  Since Lucene internal document ids are transient,
-         this cache will not be autowarmed.  
-      -->
-    <documentCache class="solr.LRUCache"
-                   size="512"
-                   initialSize="512"
-                   autowarmCount="0"/>
-    
-    <!-- Field Value Cache
-         
-         Cache used to hold field values that are quickly accessible
-         by document id.  The fieldValueCache is created by default
-         even if not configured here.
-      -->
-    <!--
-       <fieldValueCache class="solr.FastLRUCache"
-                        size="512"
-                        autowarmCount="128"
-                        showItems="32" />
-      -->
-
-    <!-- Custom Cache
-
-         Example of a generic cache.  These caches may be accessed by
-         name through SolrIndexSearcher.getCache(),cacheLookup(), and
-         cacheInsert().  The purpose is to enable easy caching of
-         user/application level data.  The regenerator argument should
-         be specified as an implementation of solr.CacheRegenerator 
-         if autowarming is desired.  
-      -->
-    <!--
-       <cache name="myUserCache"
-              class="solr.LRUCache"
-              size="4096"
-              initialSize="1024"
-              autowarmCount="1024"
-              regenerator="com.mycompany.MyRegenerator"
-              />
-      -->
-
-
-    <!-- Lazy Field Loading
-
-         If true, stored fields that are not requested will be loaded
-         lazily.  This can result in a significant speed improvement
-         if the usual case is to not load all stored fields,
-         especially if the skipped fields are large compressed text
-         fields.
-    -->
-    <enableLazyFieldLoading>true</enableLazyFieldLoading>
-
-   <!-- Use Filter For Sorted Query
-
-        A possible optimization that attempts to use a filter to
-        satisfy a search.  If the requested sort does not include
-        score, then the filterCache will be checked for a filter
-        matching the query. If found, the filter will be used as the
-        source of document ids, and then the sort will be applied to
-        that.
-
-        For most situations, this will not be useful unless you
-        frequently get the same search repeatedly with different sort
-        options, and none of them ever use "score"
-     -->
-   <!--
-      <useFilterForSortedQuery>true</useFilterForSortedQuery>
-     -->
-
-   <!-- Result Window Size
-
-        An optimization for use with the queryResultCache.  When a search
-        is requested, a superset of the requested number of document ids
-        are collected.  For example, if a search for a particular query
-        requests matching documents 10 through 19, and queryWindowSize 
-        is 50, then documents 0 through 49 will be collected and cached.  
-        Any further requests in that range can be satisfied via the cache.  
-     -->
-   <queryResultWindowSize>20</queryResultWindowSize>
-
-   <!-- Maximum number of documents to cache for any entry in the
-        queryResultCache. 
-     -->
-   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
-
-   <!-- Query Related Event Listeners
-
-        Various IndexSearcher related events can trigger Listeners to
-        take actions.
-
-        newSearcher - fired whenever a new searcher is being prepared
-        and there is a current searcher handling requests (aka
-        registered).  It can be used to prime certain caches to
-        prevent long request times for certain requests.
-
-        firstSearcher - fired whenever a new searcher is being
-        prepared but there is no current registered searcher to handle
-        requests or to gain autowarming data from.
-
-        
-     -->
-    <!-- QuerySenderListener takes an array of NamedList and executes a
-         local query request for each NamedList in sequence. 
-      -->
-    <listener event="newSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <!--
-           <lst><str name="q">solr</str><str name="sort">price asc</str></lst>
-           <lst><str name="q">rocks</str><str name="sort">weight asc</str></lst>
-          -->
-      </arr>
-    </listener>
-    <listener event="firstSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <lst>
-          <str name="q">static firstSearcher warming in solrconfig.xml</str>
-        </lst>
-      </arr>
-    </listener>
-
-    <!-- Use Cold Searcher
-
-         If a search request comes in and there is no current
-         registered searcher, then immediately register the still
-         warming searcher and use it.  If "false" then all requests
-         will block until the first searcher is done warming.
-      -->
-    <useColdSearcher>false</useColdSearcher>
-
-    <!-- Max Warming Searchers
-         
-         Maximum number of searchers that may be warming in the
-         background concurrently.  An error is returned if this limit
-         is exceeded.
-
-         Recommend values of 1-2 for read-only slaves, higher for
-         masters w/o cache warming.
-      -->
-    <maxWarmingSearchers>2</maxWarmingSearchers>
-
-  </query>
-
-
-  <!-- Request Dispatcher
-
-       This section contains instructions for how the SolrDispatchFilter
-       should behave when processing requests for this SolrCore.
-
-       If you wish to regain use of /select?qt=... style request handler
-       dispatching, then first add handleSelect="true" to
-       <requestDispatcher>. Then change the name of the request handler
-       named "/select" to something else without a leading "/", such as
-       simply "select" and add default="true" to it.
-   -->
-  <requestDispatcher>
-    <!-- Request Parsing
-
-         These settings indicate how Solr Requests may be parsed, and
-         what restrictions may be placed on the ContentStreams from
-         those requests
-
-         enableRemoteStreaming - enables use of the stream.file
-         and stream.url parameters for specifying remote streams.
-         SearchRequestHandler won't fetch it, but some others do.
-
-         multipartUploadLimitInKB - specifies the max size of
-         Multipart File Uploads that Solr will allow in a Request.
-         
-         *** WARNING ***
-         The settings below authorize Solr to fetch remote files, You
-         should make sure your system has some authentication before
-         using enableRemoteStreaming="true"
-
-      --> 
-    <requestParsers enableRemoteStreaming="true" 
-                    multipartUploadLimitInKB="2048000" />
-
-    <!-- HTTP Caching
-
-         Set HTTP caching related parameters (for proxy caches and clients).
-
-         The options below instruct Solr not to output any HTTP Caching
-         related headers
-      -->
-    <httpCaching never304="true" />
-    <!-- If you include a <cacheControl> directive, it will be used to
-         generate a Cache-Control header (as well as an Expires header
-         if the value contains "max-age=")
-         
-         By default, no Cache-Control header is generated.
-         
-         You can use the <cacheControl> option even if you have set
-         never304="true"
-      -->
-    <!--
-       <httpCaching never304="true" >
-         <cacheControl>max-age=30, public</cacheControl> 
-       </httpCaching>
-      -->
-    <!-- To enable Solr to respond with automatically generated HTTP
-         Caching headers, and to response to Cache Validation requests
-         correctly, set the value of never304="false"
-         
-         This will cause Solr to generate Last-Modified and ETag
-         headers based on the properties of the Index.
-
-         The following options can also be specified to affect the
-         values of these headers...
-
-         lastModFrom - the default value is "openTime" which means the
-         Last-Modified value (and validation against If-Modified-Since
-         requests) will all be relative to when the current Searcher
-         was opened.  You can change it to lastModFrom="dirLastMod" if
-         you want the value to exactly correspond to when the physical
-         index was last modified.
-
-         etagSeed="..." is an option you can change to force the ETag
-         header (and validation against If-None-Match requests) to be
-         different even if the index has not changed (ie: when making
-         significant changes to your config file)
-
-         (lastModifiedFrom and etagSeed are both ignored if you use
-         the never304="true" option)
-      -->
-    <!--
-       <httpCaching lastModifiedFrom="openTime"
-                    etagSeed="Solr">
-         <cacheControl>max-age=30, public</cacheControl> 
-       </httpCaching>
-      -->
-  </requestDispatcher>
-
-  <!-- Request Handlers 
-
-       http://wiki.apache.org/solr/SolrRequestHandler
-
-       Incoming queries will be dispatched to the correct handler
-       based on the matching request path piece.
-
-       If a Request Handler is declared with startup="lazy", then it will
-       not be initialized until the first request that uses it.
-
-    -->
-  <!-- SearchHandler
-
-       http://wiki.apache.org/solr/SearchHandler
-
-       For processing Search Queries, the primary Request Handler
-       provided with Solr is "SearchHandler" It delegates to a sequent
-       of SearchComponents (see below) and supports distributed
-       queries across multiple shards
-    -->
-  <requestHandler name="/select" class="solr.SearchHandler">
-    <!-- default values for query parameters can be specified, these
-         will be overridden by parameters in the request
-      -->
-     <lst name="defaults">
-       <str name="echoParams">explicit</str>
-       <int name="rows">10</int>
-       <str name="df">text</str>
-     </lst>
-    <!-- In addition to defaults, "appends" params can be specified
-         to identify values which should be appended to the list of
-         multi-val params from the query (or the existing "defaults").
-      -->
-    <!-- In this example, the param "fq=instock:true" would be appended to
-         any query time fq params the user may specify, as a mechanism for
-         partitioning the index, independent of any user selected filtering
-         that may also be desired (perhaps as a result of faceted searching).
-
-         NOTE: there is *absolutely* nothing a client can do to prevent these
-         "appends" values from being used, so don't use this mechanism
-         unless you are sure you always want it.
-      -->
-    <!--
-       <lst name="appends">
-         <str name="fq">inStock:true</str>
-       </lst>
-      -->
-    <!-- "invariants" are a way of letting the Solr maintainer lock down
-         the options available to Solr clients.  Any params values
-         specified here are used regardless of what values may be specified
-         in either the query, the "defaults", or the "appends" params.
-
-         In this example, the facet.field and facet.query params would
-         be fixed, limiting the facets clients can use.  Faceting is
-         not turned on by default - but if the client does specify
-         facet=true in the request, these are the only facets they
-         will be able to see counts for; regardless of what other
-         facet.field or facet.query params they may specify.
-
-         NOTE: there is *absolutely* nothing a client can do to prevent these
-         "invariants" values from being used, so don't use this mechanism
-         unless you are sure you always want it.
-      -->
-    <!--
-       <lst name="invariants">
-         <str name="facet.field">cat</str>
-         <str name="facet.field">manu_exact</str>
-         <str name="facet.query">price:[* TO 500]</str>
-         <str name="facet.query">price:[500 TO *]</str>
-       </lst>
-      -->
-    <!-- If the default list of SearchComponents is not desired, that
-         list can either be overridden completely, or components can be
-         prepended or appended to the default list.  (see below)
-      -->
-    <!--
-       <arr name="components">
-         <str>nameOfCustomComponent1</str>
-         <str>nameOfCustomComponent2</str>
-       </arr>
-      -->
-  </requestHandler>
-
-  <!-- A Robust Example
-
-       This example SearchHandler declaration shows off usage of the
-       SearchHandler with many defaults declared
-
-       Note that multiple instances of the same Request Handler
-       (SearchHandler) can be registered multiple times with different
-       names (and different init parameters)
-    -->
-  <requestHandler name="/browse" class="solr.SearchHandler">
-     <lst name="defaults">
-       <str name="echoParams">explicit</str>
-
-       <!-- VelocityResponseWriter settings -->
-       <str name="wt">velocity</str>
-
-       <str name="v.template">browse</str>
-       <str name="v.layout">layout</str>
-       <str name="title">Solritas</str>
-
-       <str name="df">text</str>
-       <str name="defType">edismax</str>
-       <str name="q.alt">*:*</str>
-       <str name="rows">10</str>
-       <str name="fl">*,score</str>
-       <str name="mlt.qf">
-         text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-       <str name="mlt.fl">text,features,name,sku,id,manu,cat</str>
-       <int name="mlt.count">3</int>
-
-       <str name="qf">
-          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-
-       <str name="facet">on</str>
-       <str name="facet.field">cat</str>
-       <str name="facet.field">manu_exact</str>
-       <str name="facet.query">ipod</str>
-       <str name="facet.query">GB</str>
-       <str name="facet.mincount">1</str>
-       <str name="facet.pivot">cat,inStock</str>
-       <str name="facet.range.other">after</str>
-       <str name="facet.range">price</str>
-       <int name="f.price.facet.range.start">0</int>
-       <int name="f.price.facet.range.end">600</int>
-       <int name="f.price.facet.range.gap">50</int>
-       <str name="facet.range">popularity</str>
-       <int name="f.popularity.facet.range.start">0</int>
-       <int name="f.popularity.facet.range.end">10</int>
-       <int name="f.popularity.facet.range.gap">3</int>
-       <str name="facet.range">manufacturedate_dt</str>
-       <str name="f.manufacturedate_dt.facet.range.start">NOW/YEAR-10YEARS</str>
-       <str name="f.manufacturedate_dt.facet.range.end">NOW</str>
-       <str name="f.manufacturedate_dt.facet.range.gap">+1YEAR</str>
-       <str name="f.manufacturedate_dt.facet.range.other">before</str>
-       <str name="f.manufacturedate_dt.facet.range.other">after</str>
-
-
-       <!-- Highlighting defaults -->
-       <str name="hl">on</str>
-       <str name="hl.fl">text features name</str>
-       <str name="f.name.hl.fragsize">0</str>
-       <str name="f.name.hl.alternateField">name</str>
-     </lst>
-     <arr name="last-components">
-       <str>spellcheck</str>
-     </arr>
-     <!--
-     <str name="url-scheme">httpx</str>
-     -->
-  </requestHandler>
-
-  <!-- XML Update Request Handler.  
-       
-       http://wiki.apache.org/solr/UpdateXmlMessages
-
-       The canonical Request Handler for Modifying the Index through
-       commands specified using XML.
-
-       Note: Since solr1.1 requestHandlers requires a valid content
-       type header if posted in the body. For example, curl now
-       requires: -H 'Content-type:text/xml; charset=utf-8'
-    -->
-  <requestHandler name="/update" 
-                  class="solr.XmlUpdateRequestHandler">
-    <!-- See below for information on defining 
-         updateRequestProcessorChains that can be used by name 
-         on each Update Request
-      -->
-    <!--
-       <lst name="defaults">
-         <str name="update.chain">dedupe</str>
-       </lst>
-       -->
-    </requestHandler>
-  <!-- Binary Update Request Handler
-       http://wiki.apache.org/solr/javabin
-    -->
-  <requestHandler name="/update/javabin" 
-                  class="solr.BinaryUpdateRequestHandler" />
-
-  <!-- CSV Update Request Handler
-       http://wiki.apache.org/solr/UpdateCSV
-    -->
-  <requestHandler name="/update/csv" 
-                  class="solr.CSVRequestHandler" 
-                  startup="lazy" />
-
-  <!-- JSON Update Request Handler
-       http://wiki.apache.org/solr/UpdateJSON
-    -->
-  <requestHandler name="/update/json" 
-                  class="solr.JsonUpdateRequestHandler" 
-                  startup="lazy" />
-
-  <!-- Solr Cell Update Request Handler
-
-       http://wiki.apache.org/solr/ExtractingRequestHandler 
-
-    -->
-  <requestHandler name="/update/extract" 
-                  startup="lazy"
-                  class="solr.extraction.ExtractingRequestHandler" >
-    <lst name="defaults">
-      <!-- All the main content goes into "text"... if you need to return
-           the extracted text or do highlighting, use a stored field. -->
-      <str name="fmap.content">text</str>
-      <str name="lowernames">true</str>
-      <str name="uprefix">ignored_</str>
-
-      <!-- capture link hrefs but ignore div attributes -->
-      <str name="captureAttr">true</str>
-      <str name="fmap.a">links</str>
-      <str name="fmap.div">ignored_</str>
-    </lst>
-  </requestHandler>
-
-  <!-- XSLT Update Request Handler
-       Transforms incoming XML with stylesheet identified by tr=
-  -->
-  <requestHandler name="/update/xslt"
-                   startup="lazy"
-                   class="solr.XsltUpdateRequestHandler"/>
-
-  <!-- Field Analysis Request Handler
-
-       RequestHandler that provides much the same functionality as
-       analysis.jsp. Provides the ability to specify multiple field
-       types and field names in the same request and outputs
-       index-time and query-time analysis for each of them.
-
-       Request parameters are:
-       analysis.fieldname - field name whose analyzers are to be used
-
-       analysis.fieldtype - field type whose analyzers are to be used
-       analysis.fieldvalue - text for index-time analysis
-       q (or analysis.q) - text for query time analysis
-       analysis.showmatch (true|false) - When set to true and when
-           query analysis is performed, the produced tokens of the
-           field value analysis will be marked as "matched" for every
-           token that is produces by the query analysis
-   -->
-  <requestHandler name="/analysis/field" 
-                  startup="lazy"
-                  class="solr.FieldAnalysisRequestHandler" />
-
-
-  <!-- Document Analysis Handler
-
-       http://wiki.apache.org/solr/AnalysisRequestHandler
-
-       An analysis handler that provides a breakdown of the analysis
-       process of provided docuemnts. This handler expects a (single)
-       content stream with the following format:
-
-       <docs>
-         <doc>
-           <field name="id">1</field>
-           <field name="name">The Name</field>
-           <field name="text">The Text Value</field>
-         </doc>
-         <doc>...</doc>
-         <doc>...</doc>
-         ...
-       </docs>
-
-    Note: Each document must contain a field which serves as the
-    unique key. This key is used in the returned response to associate
-    an analysis breakdown to the analyzed document.
-
-    Like the FieldAnalysisRequestHandler, this handler also supports
-    query analysis by sending either an "analysis.query" or "q"
-    request parameter that holds the query text to be analyzed. It
-    also supports the "analysis.showmatch" parameter which when set to
-    true, all field tokens that match the query tokens will be marked
-    as a "match". 
-  -->
-  <requestHandler name="/analysis/document" 
-                  class="solr.DocumentAnalysisRequestHandler" 
-                  startup="lazy" />
-
-  <!-- Admin Handlers
-
-       Admin Handlers - This will register all the standard admin
-       RequestHandlers.  
-    -->
-  <requestHandler name="/admin/" 
-                  class="solr.admin.AdminHandlers" />
-  <!-- This single handler is equivalent to the following... -->
-  <!--
-     <requestHandler name="/admin/luke"       class="solr.admin.LukeRequestHandler" />
-     <requestHandler name="/admin/system"     class="solr.admin.SystemInfoHandler" />
-     <requestHandler name="/admin/plugins"    class="solr.admin.PluginInfoHandler" />
-     <requestHandler name="/admin/threads"    class="solr.admin.ThreadDumpHandler" />
-     <requestHandler name="/admin/properties" class="solr.admin.PropertiesRequestHandler" />
-     <requestHandler name="/admin/file"       class="solr.admin.ShowFileRequestHandler" >
-    -->
-  <!-- If you wish to hide files under ${solr.home}/conf, explicitly
-       register the ShowFileRequestHandler using: 
-    -->
-  <!--
-     <requestHandler name="/admin/file" 
-                     class="solr.admin.ShowFileRequestHandler" >
-       <lst name="invariants">
-         <str name="hidden">synonyms.txt</str> 
-         <str name="hidden">anotherfile.txt</str> 
-       </lst>
-     </requestHandler>
-    -->
-
-  <!-- ping/healthcheck -->
-  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
-    <lst name="invariants">
-      <str name="q">solrpingquery</str>
-    </lst>
-    <lst name="defaults">
-      <str name="echoParams">all</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Echo the request contents back to the client -->
-  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
-    <lst name="defaults">
-     <str name="echoParams">explicit</str> 
-     <str name="echoHandler">true</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Solr Replication
-
-       The SolrReplicationHandler supports replicating indexes from a
-       "master" used for indexing and "slaves" used for queries.
-
-       http://wiki.apache.org/solr/SolrReplication 
-
-       In the example below, remove the <lst name="master"> section if
-       this is just a slave and remove  the <lst name="slave"> section
-       if this is just a master.
-    -->
-  <!--
-     <requestHandler name="/replication" class="solr.ReplicationHandler" >
-       <lst name="master">
-         <str name="replicateAfter">commit</str>
-         <str name="replicateAfter">startup</str>
-         <str name="confFiles">schema.xml,stopwords.txt</str>
-       </lst>
-       <lst name="slave">
-         <str name="masterUrl">http://localhost:8983/solr/replication</str>
-         <str name="pollInterval">00:00:60</str>
-       </lst>
-     </requestHandler>
-    -->
-
-  <!-- Search Components
-
-       Search components are registered to SolrCore and used by 
-       instances of SearchHandler (which can access them by name)
-       
-       By default, the following components are available:
-       
-       <searchComponent name="query"     class="solr.QueryComponent" />
-       <searchComponent name="facet"     class="solr.FacetComponent" />
-       <searchComponent name="mlt"       class="solr.MoreLikeThisComponent" />
-       <searchComponent name="highlight" class="solr.HighlightComponent" />
-       <searchComponent name="stats"     class="solr.StatsComponent" />
-       <searchComponent name="debug"     class="solr.DebugComponent" />
-   
-       Default configuration in a requestHandler would look like:
-
-       <arr name="components">
-         <str>query</str>
-         <str>facet</str>
-         <str>mlt</str>
-         <str>highlight</str>
-         <str>stats</str>
-         <str>debug</str>
-       </arr>
-
-       If you register a searchComponent to one of the standard names, 
-       that will be used instead of the default.
-
-       To insert components before or after the 'standard' components, use:
-    
-       <arr name="first-components">
-         <str>myFirstComponentName</str>
-       </arr>
-    
-       <arr name="last-components">
-         <str>myLastComponentName</str>
-       </arr>
-
-       NOTE: The component registered with the name "debug" will
-       always be executed after the "last-components" 
-       
-     -->
-
-   <!-- Spell Check
-
-        The spell check component can return a list of alternative spelling
-        suggestions.  
-
-        http://wiki.apache.org/solr/SpellCheckComponent
-     -->
-  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
-
-    <str name="queryAnalyzerFieldType">textSpell</str>
-
-    <!-- Multiple "Spell Checkers" can be declared and used by this
-         component
-      -->
-
-    <!-- a spellchecker built from a field of the main index, and
-         written to disk
-      -->
-    <lst name="spellchecker">
-      <str name="name">default</str>
-      <str name="field">name</str>
-      <str name="spellcheckIndexDir">spellchecker</str>
-      <!-- uncomment this to require terms to occur in 1% of the documents 
-           in order to be included in the dictionary
-        -->
-      <!--
-      	<float name="thresholdTokenFrequency">.01</float>
-      -->
-    </lst>
-
-    <!-- a spellchecker that uses a different distance measure -->
-    <!--
-       <lst name="spellchecker">
-         <str name="name">jarowinkler</str>
-         <str name="field">spell</str>
-         <str name="distanceMeasure">
-           org.apache.lucene.search.spell.JaroWinklerDistance
-         </str>
-         <str name="spellcheckIndexDir">spellcheckerJaro</str>
-       </lst>
-     -->
-
-    <!-- a spellchecker that use an alternate comparator 
-
-         comparatorClass be one of:
-          1. score (default)
-          2. freq (Frequency first, then score)
-          3. A fully qualified class name
-      -->
-    <!--
-       <lst name="spellchecker">
-         <str name="name">freq</str>
-         <str name="field">lowerfilt</str>
-         <str name="spellcheckIndexDir">spellcheckerFreq</str>
-         <str name="comparatorClass">freq</str>
-         <str name="buildOnCommit">true</str>
-      -->
-
-    <!-- A spellchecker that reads the list of words from a file -->
-    <!--
-       <lst name="spellchecker">
-         <str name="classname">solr.FileBasedSpellChecker</str>
-         <str name="name">file</str>
-         <str name="sourceLocation">spellings.txt</str>
-         <str name="characterEncoding">UTF-8</str>
-         <str name="spellcheckIndexDir">spellcheckerFile</str>
-       </lst>
-      -->
-  </searchComponent>
-
-  <!-- A request handler for demonstrating the spellcheck component.  
-
-       NOTE: This is purely as an example.  The whole purpose of the
-       SpellCheckComponent is to hook it into the request handler that
-       handles your normal user queries so that a separate request is
-       not needed to get suggestions.
-
-       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS
-       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!
-       
-       See http://wiki.apache.org/solr/SpellCheckComponent for details
-       on the request parameters.
-    -->
-  <requestHandler name="/spell" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <str name="df">text</str>
-      <str name="spellcheck.onlyMorePopular">false</str>
-      <str name="spellcheck.extendedResults">false</str>
-      <str name="spellcheck.count">1</str>
-    </lst>
-    <arr name="last-components">
-      <str>spellcheck</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Term Vector Component
-
-       http://wiki.apache.org/solr/TermVectorComponent
-    -->
-  <searchComponent name="tvComponent" class="solr.TermVectorComponent"/>
-
-  <!-- A request handler for demonstrating the term vector component
-
-       This is purely as an example.
-
-       In reality you will likely want to add the component to your 
-       already specified request handlers. 
-    -->
-  <requestHandler name="/tvrh" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <str name="df">text</str>
-      <bool name="tv">true</bool>
-    </lst>
-    <arr name="last-components">
-      <str>tvComponent</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Clustering Component
-
-       http://wiki.apache.org/solr/ClusteringComponent
-
-       This relies on third party jars which are notincluded in the
-       release.  To use this component (and the "/clustering" handler)
-       Those jars will need to be downloaded, and you'll need to set
-       the solr.cluster.enabled system property when running solr...
-
-          java -Dsolr.clustering.enabled=true -jar start.jar
-    -->
-  <searchComponent name="clustering" 
-                   enable="${solr.clustering.enabled:false}"
-                   class="solr.clustering.ClusteringComponent" >
-    <!-- Declare an engine -->
-    <lst name="engine">
-      <!-- The name, only one can be named "default" -->
-      <str name="name">default</str>
-
-      <!-- Class name of Carrot2 clustering algorithm. 
-           
-           Currently available algorithms are:
-           
-           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm
-           * org.carrot2.clustering.stc.STCClusteringAlgorithm
-           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm
-           
-           See http://project.carrot2.org/algorithms.html for the
-           algorithm's characteristics.
-        -->
-      <str name="carrot.algorithm">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>
-
-      <!-- Overriding values for Carrot2 default algorithm attributes.
-
-           For a description of all available attributes, see:
-           http://download.carrot2.org/stable/manual/#chapter.components.
-           Use attribute key as name attribute of str elements
-           below. These can be further overridden for individual
-           requests by specifying attribute key as request parameter
-           name and attribute value as parameter value.
-        -->
-      <str name="LingoClusteringAlgorithm.desiredClusterCountBase">20</str>
-      
-      <!-- Location of Carrot2 lexical resources.
-
-           A directory from which to load Carrot2-specific stop words
-           and stop labels. Absolute or relative to Solr config directory.
-           If a specific resource (e.g. stopwords.en) is present in the
-           specified dir, it will completely override the corresponding
-           default one that ships with Carrot2.
-
-           For an overview of Carrot2 lexical resources, see:
-           http://download.carrot2.org/head/manual/#chapter.lexical-resources
-        -->
-      <str name="carrot.lexicalResourcesDir">clustering/carrot2</str>
-
-      <!-- The language to assume for the documents.
-           
-           For a list of allowed values, see:
-           http://download.carrot2.org/stable/manual/#section.attribute.lingo.MultilingualClustering.defaultLanguage
-       -->
-      <str name="MultilingualClustering.defaultLanguage">ENGLISH</str>
-    </lst>
-    <lst name="engine">
-      <str name="name">stc</str>
-      <str name="carrot.algorithm">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>
-    </lst>
-  </searchComponent>
-
-  <!-- A request handler for demonstrating the clustering component
-
-       This is purely as an example.
-
-       In reality you will likely want to add the component to your 
-       already specified request handlers. 
-    -->
-  <requestHandler name="/clustering"
-                  startup="lazy"
-                  enable="${solr.clustering.enabled:false}"
-                  class="solr.SearchHandler">
-    <lst name="defaults">
-      <bool name="clustering">true</bool>
-      <str name="clustering.engine">default</str>
-      <bool name="clustering.results">true</bool>
-      <!-- The title field -->
-      <str name="carrot.title">name</str>
-      <str name="carrot.url">id</str>
-      <!-- The field to cluster on -->
-       <str name="carrot.snippet">features</str>
-       <!-- produce summaries -->
-       <bool name="carrot.produceSummary">true</bool>
-       <!-- the maximum number of labels per cluster -->
-       <!--<int name="carrot.numDescriptions">5</int>-->
-       <!-- produce sub clusters -->
-       <bool name="carrot.outputSubClusters">false</bool>
-       
-       <str name="df">text</str>
-       <str name="defType">edismax</str>
-       <str name="qf">
-          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
-       </str>
-       <str name="q.alt">*:*</str>
-       <str name="rows">10</str>
-       <str name="fl">*,score</str>
-    </lst>     
-    <arr name="last-components">
-      <str>clustering</str>
-    </arr>
-  </requestHandler>
-  
-  <!-- Terms Component
-
-       http://wiki.apache.org/solr/TermsComponent
-
-       A component to return terms and document frequency of those
-       terms
-    -->
-  <searchComponent name="terms" class="solr.TermsComponent"/>
-
-  <!-- A request handler for demonstrating the terms component -->
-  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
-     <lst name="defaults">
-      <bool name="terms">true</bool>
-    </lst>     
-    <arr name="components">
-      <str>terms</str>
-    </arr>
-  </requestHandler>
-
-
-  <!-- Query Elevation Component
-
-       http://wiki.apache.org/solr/QueryElevationComponent
-
-       a search component that enables you to configure the top
-       results for a given query regardless of the normal lucene
-       scoring.
-    -->
-  <searchComponent name="elevator" class="solr.QueryElevationComponent" >
-    <!-- pick a fieldType to analyze queries -->
-    <str name="queryFieldType">string</str>
-    <str name="config-file">elevate.xml</str>
-  </searchComponent>
-
-  <!-- A request handler for demonstrating the elevator component -->
-  <requestHandler name="/elevate" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <str name="echoParams">explicit</str>
-      <str name="df">text</str>
-    </lst>
-    <arr name="last-components">
-      <str>elevator</str>
-    </arr>
-  </requestHandler>
-
-  <!-- Highlighting Component
-
-       http://wiki.apache.org/solr/HighlightingParameters
-    -->
-  <searchComponent class="solr.HighlightComponent" name="highlight">
-    <highlighting>
-      <!-- Configure the standard fragmenter -->
-      <!-- This could most likely be commented out in the "default" case -->
-      <fragmenter name="gap" 
-                  default="true"
-                  class="solr.highlight.GapFragmenter">
-        <lst name="defaults">
-          <int name="hl.fragsize">100</int>
-        </lst>
-      </fragmenter>
-
-      <!-- A regular-expression-based fragmenter 
-           (for sentence extraction) 
-        -->
-      <fragmenter name="regex" 
-                  class="solr.highlight.RegexFragmenter">
-        <lst name="defaults">
-          <!-- slightly smaller fragsizes work better because of slop -->
-          <int name="hl.fragsize">70</int>
-          <!-- allow 50% slop on fragment sizes -->
-          <float name="hl.regex.slop">0.5</float>
-          <!-- a basic sentence pattern -->
-          <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
-        </lst>
-      </fragmenter>
-
-      <!-- Configure the standard formatter -->
-      <formatter name="html" 
-                 default="true"
-                 class="solr.highlight.HtmlFormatter">
-        <lst name="defaults">
-          <str name="hl.simple.pre"><![CDATA[<em>]]></str>
-          <str name="hl.simple.post"><![CDATA[</em>]]></str>
-        </lst>
-      </formatter>
-
-      <!-- Configure the standard encoder -->
-      <encoder name="html" 
-               class="solr.highlight.HtmlEncoder" />
-
-      <!-- Configure the standard fragListBuilder -->
-      <fragListBuilder name="simple" 
-                       default="true"
-                       class="solr.highlight.SimpleFragListBuilder"/>
-
-      <!-- Configure the single fragListBuilder -->
-      <fragListBuilder name="single" 
-                       class="solr.highlight.SingleFragListBuilder"/>
-
-      <!-- default tag FragmentsBuilder -->
-      <fragmentsBuilder name="default" 
-                        default="true"
-                        class="solr.highlight.ScoreOrderFragmentsBuilder">
-        <!-- 
-        <lst name="defaults">
-          <str name="hl.multiValuedSeparatorChar">/</str>
-        </lst>
-        -->
-      </fragmentsBuilder>
-
-      <!-- multi-colored tag FragmentsBuilder -->
-      <fragmentsBuilder name="colored" 
-                        class="solr.highlight.ScoreOrderFragmentsBuilder">
-        <lst name="defaults">
-          <str name="hl.tag.pre"><![CDATA[
-               <b style="background:yellow">,<b style="background:lawgreen">,
-               <b style="background:aquamarine">,<b style="background:magenta">,
-               <b style="background:palegreen">,<b style="background:coral">,
-               <b style="background:wheat">,<b style="background:khaki">,
-               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
-          <str name="hl.tag.post"><![CDATA[</b>]]></str>
-        </lst>
-      </fragmentsBuilder>
-      
-      <boundaryScanner name="default" 
-                       default="true"
-                       class="solr.highlight.SimpleBoundaryScanner">
-        <lst name="defaults">
-          <str name="hl.bs.maxScan">10</str>
-          <str name="hl.bs.chars">.,!? &#9;&#10;&#13;</str>
-        </lst>
-      </boundaryScanner>
-      
-      <boundaryScanner name="breakIterator" 
-                       class="solr.highlight.BreakIteratorBoundaryScanner">
-        <lst name="defaults">
-          <!-- type should be one of:
-               * CHARACTER 
-               * WORD (default)
-               * LINE
-               * SENTENCE 
-            -->
-          <str name="hl.bs.type">WORD</str>
-          <!-- language and country are used when constructing Locale 
-               object which will be used when getting instance of 
-               BreakIterator 
-            -->
-          <str name="hl.bs.language">en</str>
-          <str name="hl.bs.country">US</str>
-        </lst>
-      </boundaryScanner>
-    </highlighting>
-  </searchComponent>
-
-  <!-- Update Processors
-
-       Chains of Update Processor Factories for dealing with Update
-       Requests can be declared, and then used by name in Update
-       Request Processors
-
-       http://wiki.apache.org/solr/UpdateRequestProcessor
-
-    --> 
-  <!-- Deduplication
-
-       An example dedup update processor that creates the "id" field
-       on the fly based on the hash code of some other fields.  This
-       example has overwriteDupes set to false since we are using the
-       id field as the signatureField and Solr will maintain
-       uniqueness based on that anyway.  
-       
-    -->
-  <!--
-     <updateRequestProcessorChain name="dedupe">
-       <processor class="solr.processor.SignatureUpdateProcessorFactory">
-         <bool name="enabled">true</bool>
-         <str name="signatureField">id</str>
-         <bool name="overwriteDupes">false</bool>
-         <str name="fields">name,features,cat</str>
-         <str name="signatureClass">solr.processor.Lookup3Signature</str>
-       </processor>
-       <processor class="solr.LogUpdateProcessorFactory" />
-       <processor class="solr.RunUpdateProcessorFactory" />
-     </updateRequestProcessorChain>
-    -->
-
-    <!--
-       This example update chain identifies the language of the incoming
-       documents using the langid contrib. The detected language is
-       written to field language_s. No field name mapping is done.
-       The fields used for detection are text, title, subject and description,
-       making this example suitable for detecting languages form full-text
-       rich documents injected via ExtractingRequestHandler.
-       See more about langId at http://wiki.apache.org/solr/LanguageDetection
-    -->
-    <!--
-     <updateRequestProcessorChain name="langid">
-       <processor class="org.apache.solr.update.processor.TikaLanguageIdentifierUpdateProcessorFactory">
-         <str name="langid.fl">text,title,subject,description</str>
-         <str name="langid.langField">language_s</str>
-         <str name="langid.fallback">en</str>
-       </processor>
-       <processor class="solr.LogUpdateProcessorFactory" />
-       <processor class="solr.RunUpdateProcessorFactory" />
-     </updateRequestProcessorChain>
-    -->
- 
-  <!-- Response Writers
-
-       http://wiki.apache.org/solr/QueryResponseWriter
-
-       Request responses will be written using the writer specified by
-       the 'wt' request parameter matching the name of a registered
-       writer.
-
-       The "default" writer is the default and will be used if 'wt' is
-       not specified in the request.
-    -->
-  <!-- The following response writers are implicitly configured unless
-       overridden...
-    -->
-  <!--
-     <queryResponseWriter name="xml" 
-                          default="true"
-                          class="solr.XMLResponseWriter" />
-     <queryResponseWriter name="json" class="solr.JSONResponseWriter"/>
-     <queryResponseWriter name="python" class="solr.PythonResponseWriter"/>
-     <queryResponseWriter name="ruby" class="solr.RubyResponseWriter"/>
-     <queryResponseWriter name="php" class="solr.PHPResponseWriter"/>
-     <queryResponseWriter name="phps" class="solr.PHPSerializedResponseWriter"/>
-     <queryResponseWriter name="csv" class="solr.CSVResponseWriter"/>
-    -->
-
-  <queryResponseWriter name="json" class="solr.JSONResponseWriter">
-     <!-- For the purposes of the tutorial, JSON responses are written as
-      plain text so that they are easy to read in *any* browser.
-      If you expect a MIME type of "application/json" just remove this override.
-     -->
-    <str name="content-type">text/plain; charset=UTF-8</str>
-  </queryResponseWriter>
-  
-  <!--
-     Custom response writers can be declared as needed...
-    -->
-    <queryResponseWriter name="velocity" class="solr.VelocityResponseWriter" startup="lazy"/>
-  
-
-  <!-- XSLT response writer transforms the XML output by any xslt file found
-       in Solr's conf/xslt directory.  Changes to xslt files are checked for
-       every xsltCacheLifetimeSeconds.  
-    -->
-  <queryResponseWriter name="xslt" class="solr.XSLTResponseWriter">
-    <int name="xsltCacheLifetimeSeconds">5</int>
-  </queryResponseWriter>
-
-  <!-- Query Parsers
-
-       http://wiki.apache.org/solr/SolrQuerySyntax
-
-       Multiple QParserPlugins can be registered by name, and then
-       used in either the "defType" param for the QueryComponent (used
-       by SearchHandler) or in LocalParams
-    -->
-  <!-- example of registering a query parser -->
-  <!--
-     <queryParser name="myparser" class="com.mycompany.MyQParserPlugin"/>
-    -->
-
-  <!-- Function Parsers
-
-       http://wiki.apache.org/solr/FunctionQuery
-
-       Multiple ValueSourceParsers can be registered by name, and then
-       used as function names when using the "func" QParser.
-    -->
-  <!-- example of registering a custom function parser  -->
-  <!--
-     <valueSourceParser name="myfunc" 
-                        class="com.mycompany.MyValueSourceParser" />
-    -->
-
-  <!-- Legacy config for the admin interface -->
-  <admin>
-    <defaultQuery>*:*</defaultQuery>
-
-    <!-- configure a healthcheck file for servers behind a
-         loadbalancer 
-      -->
-    <!--
-       <healthcheck type="file">server-enabled</healthcheck>
-      -->
-  </admin>
-
-</config>
diff --git a/doc/original_start.config b/doc/original_start.config
new file mode 100644
index 0000000..ca2d0ae
--- /dev/null
+++ b/doc/original_start.config
@@ -0,0 +1,164 @@
+# This file controls what file are to be put on classpath or command line.
+#
+# Format is as follows:
+#
+# Each line contains entry in the format:
+#
+#  SUBJECT [ [!] CONDITION [AND|OR] ]*
+# 
+# where SUBJECT: 
+#   ends with ".class" is the Main class to run.
+#   ends with ".xml" is a configuration file for the command line
+#   ends with "/" is a directory from which to add all jar and zip files. 
+#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
+#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
+#   Containing = are used to assign system properties.
+#   Containing ~= are used to assign start properties.
+#   Containing /= are used to assign a canonical path.
+#   all other subjects are treated as files to be added to the classpath.
+#
+# ${name} is expanded to a start property
+# $(name) is expanded to either a start property or a system property. 
+# The start property ${version} is defined as the version of the start.jar
+#
+# Files starting with "/" are considered absolute, all others are relative to
+# the home directory.
+#
+# CONDITION is one of:
+#   always
+#   never
+#   available classname        # true if class on classpath
+#   property name              # true if set as start property
+#   system   name              # true if set as system property
+#   exists file                # true if file/dir exists
+#   java OPERATOR version      # java version compared to literal
+#   nargs OPERATOR number      # number of command line args compared to literal
+#   OPERATOR := one of "<",">","<=",">=","==","!="
+#
+# CONTITIONS can be combined with AND OR or !, with AND being the assume
+# operator for a list of CONDITIONS.
+#
+# Classpath operations are evaluated on the fly, so once a class or jar is
+# added to the classpath, subsequent available conditions will see that class.
+#
+# The configuration file may be divided into sections with option names like:
+# [ssl,default]
+#
+# Clauses after a section header will only be included if they match one of the tags in the 
+# options property.  By default options are set to "default,*" or the OPTIONS property may
+# be used to pass in a list of tags, eg. :
+#
+#    java -jar start.jar OPTIONS=jetty,jsp,ssl
+#
+# The tag '*' is always appended to the options, so any section with the * tag is always 
+# applied.
+#
+
+# add a property defined classpath
+${path}.path                                     property path
+
+# add a property defined library directory
+${lib}/**                                        exists ${lib}
+
+# Try different settings of jetty.home until the start.jar is found.
+jetty.home=.                                     ! exists $(jetty.home)/start.jar 
+jetty.home=..                                    ! exists $(jetty.home)/start.jar 
+jetty.home=jetty-distribution/src/main/resources     ! exists $(jetty.home)/start.jar 
+jetty.home=../jetty-distribution/src/main/resources  ! exists $(jetty.home)/start.jar 
+jetty.home=.                                     ! exists $(jetty.home)/start.jar
+jetty.home/=$(jetty.home)                        exists $(jetty.home)/start.jar
+
+# The main class to run
+org.eclipse.jetty.xml.XmlConfiguration.class
+${start.class}.class                             property start.class
+
+# The default configuration files
+$(jetty.home)/etc/jetty.xml                      nargs == 0
+./jetty-server/src/main/config/etc/jetty.xml     nargs == 0 AND ! exists $(jetty.home)/etc/jetty.xml
+
+# Default OPTIONS if not specified on the command line
+OPTIONS~=default,*                               ! property OPTIONS
+
+# Add a resources directory if it is there
+[All,resources,default]
+$(jetty.home)/resources/
+           
+# Add jetty modules
+[*]
+$(jetty.home)/lib/jetty-util-$(version).jar                                             ! available org.eclipse.jetty.util.StringUtil
+$(jetty.home)/lib/jetty-io-$(version).jar                                               ! available org.eclipse.jetty.io.Buffer
+
+[Server,All,xml,default]
+$(jetty.home)/lib/jetty-xml-$(version).jar                                              ! available org.eclipse.jetty.xml.XmlParser
+         
+[Server,All,server,default]
+$(jetty.home)/lib/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
+$(jetty.home)/lib/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+$(jetty.home)/lib/jetty-continuation-$(version).jar                                     ! available org.eclipse.jetty.continuation.Continuation
+$(jetty.home)/lib/jetty-server-$(version).jar                                           ! available org.eclipse.jetty.server.Server
+                                             
+[Server,All,security,default]
+$(jetty.home)/lib/jetty-security-$(version).jar                                         ! available org.eclipse.jetty.security.LoginService
+                                                       
+[Server,All,servlet,default]
+$(jetty.home)/lib/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
+$(jetty.home)/lib/jetty-servlet-$(version).jar                                          ! available org.eclipse.jetty.servlet.ServletHandler
+                            
+[Server,All,webapp,default]
+$(jetty.home)/lib/jetty-webapp-$(version).jar                                           ! available org.eclipse.jetty.webapp.WebAppContext
+                                  
+[Server,All,deploy,default]
+$(jetty.home)/lib/jetty-deploy-$(version).jar                                           ! available org.eclipse.jetty.deploy.ContextDeployer
+           
+[Server,All,servlets,default]
+$(jetty.home)/lib/jetty-servlets-$(version).jar                                         ! available org.eclipse.jetty.servlets.WelcomeFilter
+
+[All,rewrite]
+$(jetty.home)/lib/jetty-rewrite-$(version).jar                                          ! available org.eclipse.jetty.rewrite.handler.RewriteHandler
+
+[All,jmx]
+$(jetty.home)/lib/jetty-jmx-$(version).jar                                              ! available org.eclipse.jetty.jmx.MBeanContainer
+                  
+[All,ajp]
+$(jetty.home)/lib/jetty-ajp-$(version).jar                                              ! available org.eclipse.jetty.ajp.Ajp13Connection      
+                   
+[All,plus,jndi]
+$(jetty.home)/lib/jetty-jndi-${version}.jar                                             ! available org.eclipse.jetty.jndi.ContextFactory
+$(jetty.home)/lib/jetty-plus-${version}.jar                                             ! available org.eclipse.jetty.plus.jndi.NamingEntry
+$(jetty.home)/lib/jndi/**                                                               exists $(jetty.home)/lib/jndi 
+
+[All,annotations]
+$(jetty.home)/lib/jetty-annotations-$(version).jar                                      ! available org.eclipse.jetty.annotations.AnnotationFinder
+$(jetty.home)/lib/annotations/**                                                        exists $(jetty.home)/lib/jndi 
+          
+[All,setuid]
+$(jetty.home)/lib/jetty-setuid-$(version).jar                                           ! available org.eclipse.jetty.setuid.SetUID
+$(jetty.home)/lib/setuid/**                                                       
+                                    
+[All,policy]
+$(jetty.home)/lib/jetty-policy-$(version).jar                                           ! available org.eclipse.jetty.policy.JettyPolicy
+                                    
+[All,Client,client]
+$(jetty.home)/lib/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+$(jetty.home)/lib/jetty-client-$(version).jar                                           ! available org.eclipse.jetty.client.HttpClient
+
+[All,websocket]
+$(jetty.home)/lib/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
+       
+[Client]
+$(jetty.home)/lib/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+
+[All,websocket]
+$(jetty.home)/lib/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
+       
+[All,overlay,overlays]
+$(jetty.home)/lib/jetty-overlay-deployer-$(version).jar                                 ! available org.eclipse.jetty.overlay.OverlayedAppProvider
+       
+      
+# Add ext if it exists
+[Server,All,default,ext]        
+$(jetty.home)/lib/ext/**
+
+# Add all other sub-directories in /lib/ as options in a dynamic way
+[All,=$(jetty.home)/lib/**]        
+
diff --git a/server/test/solrruntest.py b/server/test/solrruntest.py
index 06056b3..5018d22 100644
--- a/server/test/solrruntest.py
+++ b/server/test/solrruntest.py
@@ -71,7 +71,7 @@ class SolrRunTest(SeecrTestCase):
             self.fail("No jetty.home line found")
         f.close()
         self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('/usr/share/java/solr4.0.0/*' in open(join(solrDataDir, 'start.config')).read())
+        self.assertTrue('jetty.lib=/usr/share/java/solr4.0.0' in open(join(solrDataDir, 'start.config')).read())
 
         context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
         self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
@@ -104,7 +104,7 @@ class SolrRunTest(SeecrTestCase):
             self.fail("No jetty.home line found")
         f.close()
         self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('/usr/share/java/solr4.0.0/*' in open(join(solrDataDir, 'start.config')).read())
+        self.assertTrue('jetty.lib=/usr/share/java/solr4.0.0' in open(join(solrDataDir, 'start.config')).read())
 
         context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
         self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
@@ -252,5 +252,3 @@ class SolrRunTest(SeecrTestCase):
         return start_solr.SolrConfig(stateDir, port, solrConfFile)
         
 
-if __name__ == '__main__':
-    main()
-- 
1.7.2.5


From 84447c945c5a70f444da48a876901cf1646adccf Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Tue, 11 Dec 2012 16:36:43 +0100
Subject: [PATCH 39/66] JPM/TJ: start of integration test.

---
 test-deps.txt                         |    1 +
 test/_integration/__init__.py         |    1 +
 test/_integration/integrationstate.py |  101 +++++++++++++++++++++++++++++++++
 test/_integration/solrservertest.py   |    8 +++
 test/_integrationtest.py              |   35 +++++++++++
 test/integrationtest.sh               |   31 ++++++++++
 test/sitecustomize.py                 |   27 +++++++++
 7 files changed, 204 insertions(+), 0 deletions(-)
 create mode 100644 test-deps.txt
 create mode 100644 test/_integration/__init__.py
 create mode 100644 test/_integration/integrationstate.py
 create mode 100644 test/_integration/solrservertest.py
 create mode 100644 test/_integrationtest.py
 create mode 100755 test/integrationtest.sh
 create mode 100644 test/sitecustomize.py

diff --git a/test-deps.txt b/test-deps.txt
new file mode 100644
index 0000000..3a13902
--- /dev/null
+++ b/test-deps.txt
@@ -0,0 +1 @@
+seecr-test
diff --git a/test/_integration/__init__.py b/test/_integration/__init__.py
new file mode 100644
index 0000000..cf09f09
--- /dev/null
+++ b/test/_integration/__init__.py
@@ -0,0 +1 @@
+from integrationstate import IntegrationState
diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
new file mode 100644
index 0000000..f8b340e
--- /dev/null
+++ b/test/_integration/integrationstate.py
@@ -0,0 +1,101 @@
+# -*- coding: utf-8 -*-
+## begin license ##
+# 
+# "NBC+" also known as "ZP (ZoekPlatform)" is
+#  initiated by Stichting Bibliotheek.nl to provide a new search service
+#  for all public libraries in the Netherlands. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "NBC+ (Zoekplatform BNL)"
+# 
+# "NBC+ (Zoekplatform BNL)" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "NBC+ (Zoekplatform BNL)" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "NBC+ (Zoekplatform BNL)"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from os.path import isdir, join, abspath, dirname, basename, isfile
+from os import makedirs
+from sys import path as systemPath
+from time import sleep, time 
+from traceback import print_exc
+from uuid import uuid4
+from simplejson import dump
+from glob import glob
+from xml.sax.saxutils import escape as xmlEscape
+from escaping import unescapeFilename
+from lxml.etree import parse
+from meresco.components import lxmltostring
+from urllib import urlopen
+from shutil import copyfile
+
+from seecr.test.integrationtestcase import IntegrationState as _IntegrationState
+from seecr.test.portnumbergenerator import PortNumberGenerator
+from seecr.test.utils import postRequest, sleepWheel
+
+mydir = dirname(abspath(__file__))
+projectDir = dirname(dirname(mydir))
+
+class IntegrationState(_IntegrationState):
+    def __init__(self, stateName, tests=None, fastMode=False):
+        _IntegrationState.__init__(self, "solr-"+stateName, tests=tests, fastMode=fastMode)
+
+        self.testdataDir = join(dirname(mydir), 'data/integration')
+        self.solrStatePath = join(self.integrationTempdir, 'solr')
+
+        self.solrPort = PortNumberGenerator.next()
+
+        self.solrCore = "records"
+
+    def binDir(self):
+        return join(projectDir, 'server', 'bin')
+
+    def setUp(self):
+        self._startSolrServer()
+        self._createDatabase()
+   
+    def tearDown(self):
+        _IntegrationState.tearDown(self)
+
+    def _startSolrServer(self):
+        self._startServer('solr', self.binPath('start-solr'), 'http://localhost:%s/solr/%s/admin/ping' % (self.solrPort, self.solrCore), port=self.solrPort, stateDir=self.solrStatePath)
+
+
+    def _createDatabase(self):
+        if self.fastMode:
+            print "Reusing database in", self.integrationTempdir
+            return
+        start = time()
+        print "Creating database in", self.integrationTempdir
+        try:
+            self._uploadSolrData(join(self.testdataDir))
+            print "Finished creating database in %s seconds" % (time() - start)
+        except Exception, e:
+            print 'Error received while creating database for', self.stateName
+            print_exc()
+            exit(1)
+
+    def _uploadSolrData(self, dataDir):
+        for f in sorted(glob(join(dataDir, 'solr*.records'))):
+            print 'HIER VERDER'
+            break
+            oaibatchLxml = parse(open(f))
+            for record in xpath(oaibatchLxml, '//oai:record'):
+                print 'Uploading %s' % xpath(record, 'oai:header/oai:identifier/text()')[0]
+                data = lxmltostring(xpath(record, 'oai:metadata/doc')[0])
+                postRequest(port=self.solrPort, path='/solr/%s/update' % self.solrCore, data='<add>%s</add>' % data, contentType='text/xml')
+                postRequest(port=self.solrPort, path='/solr/%s/update' % self.solrCore, data='<commit/>', contentType='text/xml')
+        
+
diff --git a/test/_integration/solrservertest.py b/test/_integration/solrservertest.py
new file mode 100644
index 0000000..12f2669
--- /dev/null
+++ b/test/_integration/solrservertest.py
@@ -0,0 +1,8 @@
+
+
+from seecr.test import IntegrationTestCase
+
+class SolrServerTest(IntegrationTestCase): 
+    def testAdminInterface(self):
+        header, body = getRequest(port=self.solrPort, path='/solr/records/amdin', parse=False)
+        self.assertEquals('Hallo wie is daar?' in body, body)
diff --git a/test/_integrationtest.py b/test/_integrationtest.py
new file mode 100644
index 0000000..e46b368
--- /dev/null
+++ b/test/_integrationtest.py
@@ -0,0 +1,35 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+
+from os import system                               #DO_NOT_DISTRIBUTE
+from glob import glob                               #DO_NOT_DISTRIBUTE
+from sys import path as systemPath                  #DO_NOT_DISTRIBUTE
+system('find .. -name "*.pyc" | xargs rm -f')       #DO_NOT_DISTRIBUTE
+for path in glob('../deps.d/*'):                    #DO_NOT_DISTRIBUTE
+    systemPath.insert(0, path)                      #DO_NOT_DISTRIBUTE
+systemPath.insert(0, '..')                          #DO_NOT_DISTRIBUTE
+
+from sys import argv
+
+from seecr.test.testrunner import TestRunner
+from _integration import IntegrationState
+
+
+if __name__ == '__main__':
+    flags = ['--fast']
+    fastMode = '--fast' in argv
+    for flag in flags:
+        if flag in argv:
+            argv.remove(flag)
+
+    runner = TestRunner()
+    IntegrationState(
+        "default", 
+        tests=[
+            '_integration.solrservertest.SolrServerTest',
+        ],
+        fastMode=fastMode).addToTestRunner(runner)
+
+    testnames = argv[1:]
+    runner.run(testnames)
+    
diff --git a/test/integrationtest.sh b/test/integrationtest.sh
new file mode 100755
index 0000000..4509d02
--- /dev/null
+++ b/test/integrationtest.sh
@@ -0,0 +1,31 @@
+#!/bin/bash
+## begin license ##
+# 
+# "NBC+" also known as "ZP (ZoekPlatform)" is
+#  initiated by Stichting Bibliotheek.nl to provide a new search service
+#  for all public libraries in the Netherlands. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "NBC+ (Zoekplatform BNL)"
+# 
+# "NBC+ (Zoekplatform BNL)" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "NBC+ (Zoekplatform BNL)" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "NBC+ (Zoekplatform BNL)"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+export LANG=en_US.UTF-8
+export PYTHONPATH=.:$PYTHONPATH
+python2.6 _integrationtest.py "$@"
diff --git a/test/sitecustomize.py b/test/sitecustomize.py
new file mode 100644
index 0000000..95f0462
--- /dev/null
+++ b/test/sitecustomize.py
@@ -0,0 +1,27 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from sys import setdefaultencoding
+setdefaultencoding('utf-8')
-- 
1.7.2.5


From d139d2b5d32a27f40a755ea744ebfe0ab716eac5 Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Wed, 12 Dec 2012 11:43:50 +0100
Subject: [PATCH 40/66] HM/TJ: admin default added to configuration, updated solrconfig.xml to match solr 4.0.0

---
 server/test/solrruntest.py                     |   14 ----
 server/usr-share/core-data/conf/solrconfig.xml |   86 +++++++++++++++++++-----
 server/usr-share/solrconfig.d/admin.xml        |   18 -----
 test/_integration/integrationstate.py          |   10 ++-
 test/_integration/solrservertest.py            |   10 ++-
 5 files changed, 85 insertions(+), 53 deletions(-)
 delete mode 100644 server/usr-share/solrconfig.d/admin.xml

diff --git a/server/test/solrruntest.py b/server/test/solrruntest.py
index 5018d22..8a8d9c9 100644
--- a/server/test/solrruntest.py
+++ b/server/test/solrruntest.py
@@ -132,20 +132,6 @@ class SolrRunTest(SeecrTestCase):
         self.assertFalse('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
         self.assertFalse('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
 
-    def testSetupSolrConfigWithAdmin(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'admin': {}}, 'core2': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertTrue('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertTrue('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertTrue('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertFalse('/admin' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertFalse('/admin/ping' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-        self.assertFalse('*:*' in solrconfig_xml.xpath("/config/admin/defaultQuery/text()"))
-
     def testSetupSolrConfigWithSuggestions(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         config = {'core2': {'suggestions': {'field': 'afieldname'}}, 'core1': {}}
diff --git a/server/usr-share/core-data/conf/solrconfig.xml b/server/usr-share/core-data/conf/solrconfig.xml
index 2a3f0a5..296db2c 100644
--- a/server/usr-share/core-data/conf/solrconfig.xml
+++ b/server/usr-share/core-data/conf/solrconfig.xml
@@ -22,37 +22,91 @@
 -->
 <config>
   <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
+  
+  <!--
+    Controls what version of Lucene various components of Solr adhere to. Generally, you want
+    to use the latest version to get all bug fixes and improvements. It is highly recommended 
+    that you fully re-index after changing this setting as it can affect both how text is indexed
+    and queried.
+  -->
   <luceneMatchVersion>LUCENE_40</luceneMatchVersion>
 
   <query>
     <maxBooleanClauses>1024</maxBooleanClauses>
 
-    <filterCache class="solr.FastLRUCache"
-                 size="512"
-                 initialSize="512"
-                 autowarmCount="256"/>
-    <queryResultCache class="solr.LRUCache"
-                     size="512"
-                     initialSize="512"
-                     autowarmCount="256"/>
-    <documentCache class="solr.LRUCache"
-                   size="512"
-                   initialSize="512"
-                   autowarmCount="256"/>
+    <filterCache 
+      class="solr.LRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="256"/>
+
+    <queryResultCache 
+      class="solr.LRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="256"/>
+
+    <documentCache
+      class="solr.LRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="256"/>
 
     <enableLazyFieldLoading>true</enableLazyFieldLoading>
 
-    <queryResultWindowSize>20</queryResultWindowSize>
+    <queryResultWindowSize>50</queryResultWindowSize>
 
+    <HashDocSet maxSize="3000" loadFactor="0.75"/>
     <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
 
+	<maxWarmingSearchers>4</maxWarmingSearchers>
   </query>
 
-  <requestDispatcher>
+  <requestDispatcher handleSelect="true" >
     <httpCaching never304="true" />
   </requestDispatcher>
 
-  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />
-  <requestHandler name="/select" class="solr.SearchHandler" />
+  <requestHandler name="/search" class="org.apache.solr.handler.component.SearchHandler">
+  </requestHandler>
+
+
+  <!-- Update request handler.  
+  
+       Note: Since solr1.1 requestHandlers requires a valid content type header if posted in 
+       the body. For example, curl now requires: -H 'Content-type:text/xml; charset=utf-8'
+       The response format differs from solr1.1 formatting and returns a standard error code.
+       
+       To enable solr1.1 behavior, remove the /update handler or change its path
+       
+       "update.processor.class" is the class name for the UpdateRequestProcessor.  It is initalized
+       only once.  This can not be changed for each request.
+    -->
+  <requestHandler name="/update" class="solr.UpdateRequestHandler"  />
+  <!--requestHandler name="/update" class="solr.XmlUpdateRequestHandler" / -->
+
+
+ <requestHandler name="/admin/" class="org.apache.solr.handler.admin.AdminHandlers" />
+  
+  <!-- ping/healthcheck -->
+  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
+    <lst name="invariants">
+      <str name="qt">/search</str>
+      <str name="q">solrpingquery</str>
+    </lst>
+    <lst name="defaults">
+      <str name="echoParams">all</str>
+    </lst>
+    <!-- An optional feature of the PingRequestHandler is to configure the 
+         handler with a "healthcheckFile" which can be used to enable/disable 
+         the PingRequestHandler.
+         relative paths are resolved against the data dir 
+      -->
+    <!-- <str name="healthcheckFile">server-enabled.txt</str> -->
+  </requestHandler>
+     
+  <!-- config for the admin interface --> 
+  <admin>
+    <defaultQuery>*:*</defaultQuery>
+  </admin>
 
 </config>
diff --git a/server/usr-share/solrconfig.d/admin.xml b/server/usr-share/solrconfig.d/admin.xml
deleted file mode 100644
index 0bb6621..0000000
--- a/server/usr-share/solrconfig.d/admin.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<config>
-  <requestHandler name="/admin" class="solr.admin.AdminHandlers" />
-
-  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
-    <lst name="invariants">
-      <str name="q">solrpingquery</str>
-    </lst>
-    <lst name="defaults">
-      <str name="echoParams">all</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Legacy config for the admin interface -->
-  <admin>
-    <defaultQuery>*:*</defaultQuery>
-  </admin>
-</config>
-
diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
index f8b340e..e180bfd 100644
--- a/test/_integration/integrationstate.py
+++ b/test/_integration/integrationstate.py
@@ -40,6 +40,7 @@ from lxml.etree import parse
 from meresco.components import lxmltostring
 from urllib import urlopen
 from shutil import copyfile
+from simplejson import dumps
 
 from seecr.test.integrationtestcase import IntegrationState as _IntegrationState
 from seecr.test.portnumbergenerator import PortNumberGenerator
@@ -58,6 +59,12 @@ class IntegrationState(_IntegrationState):
         self.solrPort = PortNumberGenerator.next()
 
         self.solrCore = "records"
+        self.config = {
+                self.solrCore: {}
+            }
+        self.configPath = join(self.integrationTempdir, 'solr.config')
+        with open(self.configPath, 'w') as f:
+            f.write(dumps(self.config))
 
     def binDir(self):
         return join(projectDir, 'server', 'bin')
@@ -70,8 +77,7 @@ class IntegrationState(_IntegrationState):
         _IntegrationState.tearDown(self)
 
     def _startSolrServer(self):
-        self._startServer('solr', self.binPath('start-solr'), 'http://localhost:%s/solr/%s/admin/ping' % (self.solrPort, self.solrCore), port=self.solrPort, stateDir=self.solrStatePath)
-
+        self._startServer('solr', self.binPath('start-solr'), 'http://localhost:%s/solr/%s/admin/ping' % (self.solrPort, self.solrCore), port=self.solrPort, stateDir=self.solrStatePath, config=self.configPath)
 
     def _createDatabase(self):
         if self.fastMode:
diff --git a/test/_integration/solrservertest.py b/test/_integration/solrservertest.py
index 12f2669..3ca91b8 100644
--- a/test/_integration/solrservertest.py
+++ b/test/_integration/solrservertest.py
@@ -1,8 +1,12 @@
 
-
 from seecr.test import IntegrationTestCase
+from seecr.test.utils import getRequest
 
 class SolrServerTest(IntegrationTestCase): 
+    def testAdminPingInterface(self):
+        header, body = getRequest(port=self.solrPort, path='/solr/records/admin/ping', parse=True)
+        self.assertEquals(['OK'], body.xpath('/response/str[@name="status"]/text()'))
+
     def testAdminInterface(self):
-        header, body = getRequest(port=self.solrPort, path='/solr/records/amdin', parse=False)
-        self.assertEquals('Hallo wie is daar?' in body, body)
+        header, body = getRequest(port=self.solrPort, path='/solr/#', parse=False)
+        self.assertTrue('<title>Solr Admin</title>' in body, body)
-- 
1.7.2.5


From f1866f080c720eb1033d80267f7caaa452698dca Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Wed, 12 Dec 2012 11:48:22 +0100
Subject: [PATCH 41/66] HM/TJ: move client subdir back to main dir.

---
 client/deps.txt                                |    8 -
 client/meresco/__init__.py                     |   27 --
 client/meresco/solr/__init__.py                |   24 --
 client/meresco/solr/cql2solrlucenequery.py     |   45 ---
 client/meresco/solr/fields2solrdoc.py          |   69 ----
 client/meresco/solr/solrinterface.py           |  180 ----------
 client/meresco/solr/solrlucenequerycomposer.py |  114 ------
 client/meresco/solr/solrresponse.py            |    6 -
 client/setup.py                                |   41 ---
 client/test/_alltests.py                       |   43 ---
 client/test/alltests.sh                        |   31 --
 client/test/cql2solrlucenequerytest.py         |   80 -----
 client/test/fields2solrdoctest.py              |  119 -------
 client/test/sitecustomize.py                   |   27 --
 client/test/solrinterfacetest.py               |  450 ------------------------
 client/test/solrlucenequerycomposertest.py     |  113 ------
 client/testsetup.sh                            |   59 ---
 deps.txt                                       |    8 +
 meresco/__init__.py                            |   27 ++
 meresco/solr/__init__.py                       |   24 ++
 meresco/solr/cql2solrlucenequery.py            |   45 +++
 meresco/solr/fields2solrdoc.py                 |   69 ++++
 meresco/solr/solrinterface.py                  |  180 ++++++++++
 meresco/solr/solrlucenequerycomposer.py        |  114 ++++++
 meresco/solr/solrresponse.py                   |    6 +
 setup.py                                       |   41 +++
 test/_alltests.py                              |   43 +++
 test/alltests.sh                               |   22 +-
 test/cql2solrlucenequerytest.py                |   80 +++++
 test/fields2solrdoctest.py                     |  119 +++++++
 test/solrinterfacetest.py                      |  450 ++++++++++++++++++++++++
 test/solrlucenequerycomposertest.py            |  113 ++++++
 testsetup.sh                                   |   59 +++
 33 files changed, 1382 insertions(+), 1454 deletions(-)
 delete mode 100644 client/deps.txt
 delete mode 100644 client/meresco/__init__.py
 delete mode 100644 client/meresco/solr/__init__.py
 delete mode 100644 client/meresco/solr/cql2solrlucenequery.py
 delete mode 100644 client/meresco/solr/fields2solrdoc.py
 delete mode 100644 client/meresco/solr/solrinterface.py
 delete mode 100644 client/meresco/solr/solrlucenequerycomposer.py
 delete mode 100644 client/meresco/solr/solrresponse.py
 delete mode 100644 client/setup.py
 delete mode 100644 client/test/_alltests.py
 delete mode 100755 client/test/alltests.sh
 delete mode 100644 client/test/cql2solrlucenequerytest.py
 delete mode 100644 client/test/fields2solrdoctest.py
 delete mode 100644 client/test/sitecustomize.py
 delete mode 100644 client/test/solrinterfacetest.py
 delete mode 100644 client/test/solrlucenequerycomposertest.py
 delete mode 100755 client/testsetup.sh
 create mode 100644 deps.txt
 create mode 100644 meresco/__init__.py
 create mode 100644 meresco/solr/__init__.py
 create mode 100644 meresco/solr/cql2solrlucenequery.py
 create mode 100644 meresco/solr/fields2solrdoc.py
 create mode 100644 meresco/solr/solrinterface.py
 create mode 100644 meresco/solr/solrlucenequerycomposer.py
 create mode 100644 meresco/solr/solrresponse.py
 create mode 100644 setup.py
 create mode 100644 test/_alltests.py
 create mode 100644 test/cql2solrlucenequerytest.py
 create mode 100644 test/fields2solrdoctest.py
 create mode 100644 test/solrinterfacetest.py
 create mode 100644 test/solrlucenequerycomposertest.py
 create mode 100755 testsetup.sh

diff --git a/client/deps.txt b/client/deps.txt
deleted file mode 100644
index cc3bafa..0000000
--- a/client/deps.txt
+++ /dev/null
@@ -1,8 +0,0 @@
-python-meresco-components (>= 4.0)
-python-meresco-components (<< 4.4)
-python-meresco-core (>= 4.0)
-python-meresco-core (<< 4.1)
-python-cqlparser (>= 1.7)
-python-cqlparser (< 1.8)
-python-weightless-core (>= 0.7)
-python-weightless-core (<< 0.8)
diff --git a/client/meresco/__init__.py b/client/meresco/__init__.py
deleted file mode 100644
index af326b5..0000000
--- a/client/meresco/__init__.py
+++ /dev/null
@@ -1,27 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from pkgutil import extend_path
-__path__ = extend_path(__path__, __name__)
diff --git a/client/meresco/solr/__init__.py b/client/meresco/solr/__init__.py
deleted file mode 100644
index 4dfd28d..0000000
--- a/client/meresco/solr/__init__.py
+++ /dev/null
@@ -1,24 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
diff --git a/client/meresco/solr/cql2solrlucenequery.py b/client/meresco/solr/cql2solrlucenequery.py
deleted file mode 100644
index 4076d97..0000000
--- a/client/meresco/solr/cql2solrlucenequery.py
+++ /dev/null
@@ -1,45 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from meresco.core import Observable
-
-from meresco.components.statistics import Logger
-from meresco.components.clausecollector import ClauseCollector
-from meresco.solr.solrlucenequerycomposer import SolrLuceneQueryComposer
-
-class CQL2SolrLuceneQuery(Observable, Logger):
-
-    def __init__(self, unqualifiedFields, name=None):
-        Observable.__init__(self, name=name)
-        self._cqlComposer = SolrLuceneQueryComposer(unqualifiedFields)
-
-    def executeQuery(self, cqlAbstractSyntaxTree, *args, **kwargs):
-        response = yield self.any.executeQuery(luceneQueryString=self._convert(cqlAbstractSyntaxTree), *args, **kwargs)
-        raise StopIteration(response)
-
-    def _convert(self, ast):
-        ClauseCollector(ast, self.log).visit()
-        return self._cqlComposer.compose(ast)
-
diff --git a/client/meresco/solr/fields2solrdoc.py b/client/meresco/solr/fields2solrdoc.py
deleted file mode 100644
index 6dc9768..0000000
--- a/client/meresco/solr/fields2solrdoc.py
+++ /dev/null
@@ -1,69 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from meresco.core import Observable
-from xml.sax.saxutils import escape as escapeXml
-from itertools import chain
-
-class Fields2SolrDoc(Observable):
-    def __init__(self, transactionName, partname, singularValueFields=None):
-        Observable.__init__(self)
-        self._transactionName = transactionName
-        self._partname = partname
-        self._singularValueFields = set(singularValueFields) if singularValueFields else set()
-        self.txs = {}
-
-    def begin(self, name):
-        if name != self._transactionName:
-            return
-        tx = self.ctx.tx
-        tx.join(self)
-        self.txs[tx.getId()] = {}
-
-    def addField(self, name, value):
-        tx = self.ctx.tx
-        valueList = self.txs[tx.getId()].setdefault(name, [])
-        if len(valueList) == 1 and name in self._singularValueFields:
-            return
-        valueList.append(value)
-
-    def commit(self, id):
-        fields = self.txs.pop(id)
-        if not fields:
-            return
-
-        tx = self.ctx.tx
-        recordIdentifier = tx.locals["id"]
-        specialFields = [
-            ('__id__', recordIdentifier), 
-        ] 
-        def fieldStatement(key, value):
-            return '<field name="%s">%s</field>' % (escapeXml(key), escapeXml(value))
-        allFields = ((k,v) for k,vs in fields.items() for v in vs)
-
-        xml = "<doc xmlns=''>%s</doc>" % ''.join(fieldStatement(*args) for args in chain(iter(specialFields), allFields))
-        yield self.all.add(identifier=recordIdentifier, partname=self._partname, data=xml)
-
diff --git a/client/meresco/solr/solrinterface.py b/client/meresco/solr/solrinterface.py
deleted file mode 100644
index 6f59930..0000000
--- a/client/meresco/solr/solrinterface.py
+++ /dev/null
@@ -1,180 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from urllib import urlencode
-from socket import socket
-from lxml.etree import parse
-from StringIO import StringIO
-from time import sleep
-from xml.sax.saxutils import escape as escapeXml
-from weightless.http import httpget, httppost
-from meresco.core import Observable
-
-from solrresponse import SolrResponse
-
-CRLF = '\r\n'
-
-class SolrInterface(Observable):
-    def __init__(self, host=None, port=None, core=None, commitTimeout=1):
-        Observable.__init__(self)
-        self._host = host
-        self._port = port
-        self._core = core
-        self._commitWithin = int(commitTimeout * 1000)
-        if self._commitWithin <= 0:
-            raise ValueError("Value commitTimeout should be greater then zero")
-        if core is not None:
-            self.observable_name = lambda: core
-
-    def all_unknown(self, message, *args, **kwargs):
-        print 'Unexpected all.unknown for:', message, args, kwargs
-        return
-        yield
-
-    def do_unknown(self, message, *args, **kwargs):
-        print 'Unexpected do.unknown for:', message, args, kwargs
-
-    def _path(self, action):
-        return '/solr/%s' % action if self._core is None else '/solr/%s/%s' % (self._core, action)
-
-    def add(self, identifier, partname, data):
-        path = self._path('update')
-        path += "?commitWithin=%d" % self._commitWithin
-        yield self._send(path=path, body="<add>%s</add>" % data)
-
-    def delete(self, identifier):
-        path = self._path('update')
-        path += "?commitWithin=%d" % self._commitWithin
-        yield self._send(path=path, body="<delete><id>%s</id></delete>" % escapeXml(identifier))
-
-    def executeQuery(self, luceneQueryString, start=0, stop=10, sortKeys=None, fieldnamesAndMaximums=None, suggestionsCount=0, suggestionsQuery=None, filterQuery=None, **kwargs):
-        if not luceneQueryString:
-            raise ValueError("Empty luceneQueryString not allowed.")
-        arguments = dict(
-                q=luceneQueryString, 
-                start=start, 
-                rows=stop-start, 
-            )
-        if sortKeys:
-            arguments["sort"] = ','.join("%s %s" % (sortKey['sortBy'], 'desc' if sortKey['sortDescending'] else 'asc') for sortKey in sortKeys)
-        if filterQuery:
-            arguments['fq'] = filterQuery
-
-        arguments.update(_drilldownArguments(fieldnamesAndMaximums))
-        if suggestionsCount > 0 and suggestionsQuery:
-            arguments["spellcheck"] = 'true'
-            arguments["spellcheck.count"] = suggestionsCount
-            arguments["spellcheck.q"] = suggestionsQuery
-
-        path = self._path('select')
-        body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
-        xml = parse(StringIO(body))
-        recordCount = int(xml.xpath('/response/result/@numFound')[0])
-        identifiers = xml.xpath('/response/result/doc/str[@name="__id__"]/text()')
-        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
-        response = SolrResponse(total=recordCount, hits=identifiers, queryTime=qtime)
-        if fieldnamesAndMaximums is not None:
-            _updateResponseWithDrilldownData(arguments, xml, response)
-        if suggestionsCount > 0 and suggestionsQuery:
-            _updateResponseWithSuggestionData(arguments, xml, response)
-        raise StopIteration(response)
-
-    def prefixSearch(self, field, prefix, limit=10):
-        arguments = {'terms.fl': field, 'terms.prefix': prefix, 'terms.limit': limit}
-        path = self._path('terms')
-        body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
-        xml = parse(StringIO(body))
-        terms = xml.xpath('/response/lst[@name="terms"]/lst[@name="%s"]/int/@name' % field)
-        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
-        response = SolrResponse(total=len(terms), hits=terms, queryTime=qtime)
-        raise StopIteration(response)
-    
-    def fieldnames(self):
-        path = self._path('admin/luke')
-        body = yield self._read(path)
-        xml = parse(StringIO(body))
-        fieldnames = xml.xpath('/response/lst[@name="fields"]/lst/@name')
-        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
-        response = SolrResponse(total=len(fieldnames), hits=fieldnames, queryTime=qtime)
-        raise StopIteration(response)
-
-    def _send(self, path, body, contentType="text/xml"):
-        headers = None
-        if body:
-            headers={'Content-Type': contentType, 'Content-Length': len(body)}
-        host, port = self._solrServer() # WARNING: can return a different server each time.
-        response = yield self._httppost(host=host, port=port, request=path, body=body, headers=headers)
-        header, body = response.split("\r\n\r\n", 1)
-        self._verify200(header, response)
-        raise StopIteration(body)
-
-    def _read(self, path):
-        host, port = self._solrServer()
-        response = yield self._httpget(host, port, path)
-        header, body = response.split('\r\n\r\n', 1)
-        self._verify200(header, response)
-        raise StopIteration(body)
-
-    def _httpget(self, *args):
-        return httpget(*args)
-
-    def _httppost(self, **kwargs):
-        return httppost(**kwargs)
-
-    def _verify200(self, header, response):
-        if not header.startswith('HTTP/1.1 200'):
-            raise IOError("Expected status '200' from Solr, but got: " + response)
-
-    def _solrServer(self):
-        return (self._host, self._port) if self._host else self.call.solrServer()
-
-
-def _drilldownArguments(fieldnamesAndMaximums):
-    arguments = {}
-    if fieldnamesAndMaximums is not None:
-        arguments['facet'] = "on"
-        arguments['facet.mincount'] = "1"
-        arguments['facet.field'] = []
-        for fieldname, maximumResults, howToSort in fieldnamesAndMaximums:
-            arguments['facet.field'].append(fieldname)
-            arguments.setdefault('f.%s.facet.limit' % fieldname, []).append(-1 if maximumResults == 0 else maximumResults)
-            arguments.setdefault('f.%s.facet.sort' % fieldname, []).append('count' if howToSort else 'index')
-    return arguments
-
-def _updateResponseWithDrilldownData(arguments, xml, response):
-    drilldownData = []
-    for facet_fields in xml.xpath('/response/lst[@name="facet_counts"]/lst[@name="facet_fields"]/lst'):
-        drilldownResult = facet_fields.xpath('int')
-        drilldownData.append((facet_fields.attrib["name"], ((termCount.attrib['name'], int(termCount.text)) for termCount in drilldownResult)))
-    response.drilldownData = drilldownData
-
-def _updateResponseWithSuggestionData(arguments, xml, response):
-    suggestions = {}
-    for suggestion in xml.xpath('/response/lst[@name="spellcheck"]/lst[@name="suggestions"]/lst'):
-        startOffset = int(suggestion.xpath('int[@name="startOffset"]/text()')[0])
-        endOffset = int(suggestion.xpath('int[@name="endOffset"]/text()')[0])
-        suggestions[suggestion.attrib['name']] = (startOffset, endOffset, suggestion.xpath('arr[@name="suggestion"]/str/text()'))
-    response.suggestions = suggestions
diff --git a/client/meresco/solr/solrlucenequerycomposer.py b/client/meresco/solr/solrlucenequerycomposer.py
deleted file mode 100644
index 92e6892..0000000
--- a/client/meresco/solr/solrlucenequerycomposer.py
+++ /dev/null
@@ -1,114 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from cqlparser import CqlVisitor, UnsupportedCQL
-
-
-class SolrLuceneQueryComposer(object):
-    def __init__(self, unqualifiedTermFields):
-        self._unqualifiedTermFields = unqualifiedTermFields
-
-    def compose(self, ast):
-        (result, ) = _Cql2LuceneQueryVisitor(ast, self._unqualifiedTermFields).visit()
-        return result
-
-
-class _Cql2LuceneQueryVisitor(CqlVisitor):
-    def __init__(self, ast, unqualifiedTermFields):
-        CqlVisitor.__init__(self, ast)
-        self._unqualifiedTermFields = unqualifiedTermFields
-
-    def visitSCOPED_CLAUSE(self, node):
-        clause = CqlVisitor.visitSCOPED_CLAUSE(self, node)
-        if len(clause) == 1:
-            return clause[0]
-        return "(%s)" % ' '.join(clause)
-    
-    def visitINDEX(self, node):
-        results = CqlVisitor.visitINDEX(self, node)
-        return results.replace(':', '\\:')
-
-    def visitSEARCH_CLAUSE(self, node):
-        # possible children:
-        # CQL_QUERY
-        # SEARCH_TERM
-        # INDEX, RELATION, SEARCH_TERM
-        firstChild = node.children[0].name
-        results = CqlVisitor.visitSEARCH_CLAUSE(self, node)
-        if firstChild == 'SEARCH_TERM':
-            (unqualifiedRhs,) = results
-            unqualifiedTermFields = [
-                _formatBoost(_formatTerm(fieldname, unqualifiedRhs), boost) 
-                    for fieldname, boost in self._unqualifiedTermFields
-                ]
-            if len(unqualifiedTermFields) == 1:
-                return unqualifiedTermFields[0]
-            return "(%s)" % ' OR '.join(unqualifiedTermFields)
-        elif firstChild == 'INDEX':
-            (index, (relation, boost), term) = results
-            if relation in ['==', 'exact']:
-                query = '%s:"%s"' % (index, term)
-            elif relation == '=':
-                query = _formatTerm(index, term)
-            elif relation in ['>', '<', '>=', '<=']:
-                query = _formatRangeTerm(index, relation, term)
-            else:
-                raise UnsupportedCQL("Only =, ==, exact, <, <=, > and >= are supported.")
-            return _formatBoost(query, boost)
-        else:
-            ((query,),) = results
-            return query
-
-    def visitRELATION(self, node):
-        results = CqlVisitor.visitRELATION(self, node)
-        if len(results) == 1:
-            relation = results[0]
-            boost = 1.0
-        else:
-            (relation, (modifier, comparitor, value)) = results
-            boost = float(value)
-        return relation, boost
- 
-
-def _formatTerm(index, termString):
-    if termString == '*':
-        return '*:*'
-    if '*' in termString:
-        termString = termString.lower()
-    else:
-        termString = '"%s"' % termString.replace('\\', r'\\').replace('"', r'\"')
-    return '%s:%s' % (index, termString)
-
-def _formatBoost(query, boost):
-    return '%s^%.1f' % (query, boost) if boost != 1 else query
-
-def _formatRangeTerm(index, relation, term):
-    rangeString = {
-        '<': "{* TO %s}",
-        '>': "{%s TO *}",
-        '<=': "[* TO %s]",
-        '>=': "[%s TO *]"}[relation]
-    return '%s:%s' % (index, rangeString % term)
-
diff --git a/client/meresco/solr/solrresponse.py b/client/meresco/solr/solrresponse.py
deleted file mode 100644
index e876691..0000000
--- a/client/meresco/solr/solrresponse.py
+++ /dev/null
@@ -1,6 +0,0 @@
-
-class SolrResponse(object):
-    def __init__(self, **kwargs):
-        self.__dict__.update(kwargs)
-
-
diff --git a/client/setup.py b/client/setup.py
deleted file mode 100644
index a0ea169..0000000
--- a/client/setup.py
+++ /dev/null
@@ -1,41 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from distutils.core import setup
-
-setup(
-    name='meresco-solr',
-    packages=[
-        'meresco.solr',
-    ],
-    version='%VERSION%',
-    url='http://www.meresco.org',
-    author='Seecr (Seek You Too B.V.)',
-    author_email='info@seecr.nl',
-    description='Meresco Solr is a set of components and tools to integrate Solr into Meresco.',
-    long_description='Meresco Solr is a set of components and tools to integrate Solr into Meresco.',
-    license='GNU Public License',
-    platforms='all',
-)
diff --git a/client/test/_alltests.py b/client/test/_alltests.py
deleted file mode 100644
index fdf0d74..0000000
--- a/client/test/_alltests.py
+++ /dev/null
@@ -1,43 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from os import system
-from sys import path, argv
-from unittest import main
-
-system('find .. -name "*.pyc" | xargs rm -f')
-from glob import glob
-for dir in glob('../deps.d/*'):
-    path.insert(0, dir)
-path.insert(0, "..")
-
-from fields2solrdoctest import Fields2SolrDocTest
-from solrinterfacetest import SolrInterfaceTest
-from solrlucenequerycomposertest import SolrLuceneQueryComposerTest
-from cql2solrlucenequerytest import CQL2SolrLuceneQueryTest
-
-if __name__ == '__main__':
-    main()
-
diff --git a/client/test/alltests.sh b/client/test/alltests.sh
deleted file mode 100755
index be42d6c..0000000
--- a/client/test/alltests.sh
+++ /dev/null
@@ -1,31 +0,0 @@
-#!/bin/bash
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-export LANG=en_US.UTF-8
-export PYTHONPATH=.:"$PYTHONPATH"
-
-python2.6 _alltests.py "$@"
-
diff --git a/client/test/cql2solrlucenequerytest.py b/client/test/cql2solrlucenequerytest.py
deleted file mode 100644
index c24c673..0000000
--- a/client/test/cql2solrlucenequerytest.py
+++ /dev/null
@@ -1,80 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from unittest import TestCase
-from seecr.test import CallTrace
-from cqlparser import parseString
-from meresco.solr.cql2solrlucenequery import CQL2SolrLuceneQuery
-from meresco.core import Observable
-from weightless.core import be, compose
-
-def executeQueryMock(luceneQueryString, *args, **kwargs):
-    return
-    yield
-
-class CQL2SolrLuceneQueryTest(TestCase):
-    def setUp(self):
-        self.convertor = CQL2SolrLuceneQuery([('field', 1.0)])
-        self.observer = CallTrace('Query responder', methods={'executeQuery': executeQueryMock})
-        self.dna = be((Observable(),
-            (self.convertor, 
-                (self.observer,),
-            )
-        ))
-        self.loggedClauses = []
-        def logShunt(clause, **kwargs):
-            self.loggedClauses.append(clause)
-        self.convertor.log = logShunt
-
-    def assertConversion(self, expectedClauses, query):
-        self.loggedClauses = []
-        list(compose(self.dna.any.executeQuery(cqlAbstractSyntaxTree=parseString(query))))
-        self.assertEquals(expectedClauses, self.loggedClauses)
-
-    def testOneTerm(self):
-        self.assertConversion(['term'], 'term')
-        self.assertEquals(1, len(self.observer.calledMethods))
-        self.assertEquals("executeQuery", self.observer.calledMethods[0].name)
-        self.assertEquals('field:"term"', self.observer.calledMethods[0].kwargs['luceneQueryString'])
-
-    def testIndexRelationTerm(self):
-        self.assertConversion(['field = term'], 'field=term')
-
-    def testIndexRelationBoostTerm(self):
-        self.assertConversion(['field =/boost=1.1 term'], "field =/boost=1.1 term")
-
-    def testIndexExactTerm(self):
-        self.assertConversion(['field exact term'], 'field exact term')
-        self.assertConversion(['field exact "term with spaces"'], 'field exact "term with spaces"')
-
-    def testTermAndTerm(self):
-        self.assertConversion(['term1', 'term2'], 'term1 AND term2')
-        self.assertConversion(['term1', 'term2', 'term3'], 'term1 AND term2 OR term3')
-        self.assertConversion(['term1', 'term2', 'term3'], 'term1 AND (term2 OR term3)')
-        self.assertConversion(['term1', 'term2', 'term3'], 'term1 OR term2 AND term3')
-
-    def testBraces(self):
-        self.assertConversion(['term'], '(term)')
-
diff --git a/client/test/fields2solrdoctest.py b/client/test/fields2solrdoctest.py
deleted file mode 100644
index dc9eee5..0000000
--- a/client/test/fields2solrdoctest.py
+++ /dev/null
@@ -1,119 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from seecr.test import SeecrTestCase, CallTrace
-
-from meresco.core import Observable, TransactionScope, Transaction
-from meresco.solr.fields2solrdoc import Fields2SolrDoc
-from weightless.core import be, compose
-from StringIO import StringIO
-from lxml.etree import parse
-
-def add(identifier, partname, data):
-    return
-    yield
-
-def todict(data):
-    result = {}
-    for field in parse(StringIO(data)).xpath('/doc/field'):
-        result.setdefault(field.attrib['name'], []).append(field.text)
-    return result
-
-class Fields2SolrDocTest(SeecrTestCase):
-
-    def setUp(self):
-        SeecrTestCase.setUp(self)
-
-        ctx = CallTrace('CTX')
-        tx = CallTrace('TX')
-        tx.locals = {'id': 'iden&tifier'}
-        tx.name = "tsName"
-        self.fxf = Fields2SolrDoc("tsName", "fields-partname")
-        self.fxf.ctx = ctx 
-        self.fxf.ctx.tx = tx
-        self.observer = CallTrace(methods={'add': add})
-        self.fxf.addObserver(self.observer)
-
-    def testCreateXml(self):
-        self.fxf.begin(name="tsName")
-        self.fxf.addField("field_one", "valueOne")
-        self.fxf.addField("field_one", "anotherValueOne")
-        self.fxf.addField("field_two", "value<Two>")
-        list(compose(self.fxf.commit(self.fxf.ctx.tx.getId())))
-        self.assertEquals(["add"], [m.name for m in self.observer.calledMethods])
-        kwargs = self.observer.calledMethods[0].kwargs
-        self.assertEquals({'__id__':['iden&tifier'], 'field_one':['valueOne', 'anotherValueOne'], 'field_two': ['value<Two>']}, todict(kwargs['data']))
-
-    def testWorksWithRealTransactionScope(self):
-        intercept = CallTrace('Intercept', ignoredAttributes=['begin', 'commit', 'rollback'], methods={'add': add})
-        class MockVenturi(Observable):
-            def all_unknown(self, message, *args, **kwargs):
-                self.ctx.tx.locals['id'] = 'an:identifier'
-                yield self.all.unknown(message, *args, **kwargs)
-        class MockMultiFielder(Observable):
-            def add(self, *args, **kwargs):
-                self.do.addField('field.name', 'MyName')
-                self.do.addField('field.name', 'AnotherName')
-                self.do.addField('field.title', 'MyDocument')
-                yield 'ok'
-        root = be( 
-            (Observable(),
-                (TransactionScope(transactionName="solrDoc"),
-                    (MockVenturi(),
-                        (MockMultiFielder(),
-                            (Fields2SolrDoc("solrDoc", "fields-partname"),
-                                (intercept,),
-                            )   
-                        )   
-                    )   
-                )   
-            )   
-        )   
-        list(compose(root.all.add('some', 'arguments')))
-        self.assertEquals(['add'], [m.name for m in intercept.calledMethods])
-        method = intercept.calledMethods[0]
-        self.assertEquals((), method.args)
-        self.assertEquals('an:identifier', method.kwargs['identifier'])
-        self.assertEquals('fields-partname', method.kwargs['partname'])
-        self.assertEquals({'__id__': ['an:identifier'], 'field.name':['MyName', 'AnotherName'], 'field.title': ['MyDocument']}, todict(method.kwargs['data']))
-
-        expectedXml = """<doc xmlns=''><field name="__id__">an:identifier</field><field name="field.title">MyDocument</field><field name="field.name">MyName</field><field name="field.name">AnotherName</field></doc>"""
-        self.assertEquals(expectedXml, method.kwargs['data'])
-
-    def testSingularValueFields(self):
-        __callstack_var_tx__ = Transaction('name') 
-        __callstack_var_tx__.locals['id'] = 'identifier'
-        observer = CallTrace('observer', emptyGeneratorMethods=['add'])
-        fxf = Fields2SolrDoc('name', 'partname', singularValueFields=['once'])
-        fxf.addObserver(observer)
-        fxf.begin(name='name')
-        fxf.addField('once', 'one')
-        fxf.addField('once', 'two')
-        fxf.addField('twice', 'one')
-        fxf.addField('twice', 'two')
-        list(compose(fxf.commit(__callstack_var_tx__.getId())))
-        method = observer.calledMethods[0]
-        self.assertEquals({'__id__': ['identifier'], 'once':['one'], 'twice': ['one', 'two']}, todict(method.kwargs['data']))
diff --git a/client/test/sitecustomize.py b/client/test/sitecustomize.py
deleted file mode 100644
index 95f0462..0000000
--- a/client/test/sitecustomize.py
+++ /dev/null
@@ -1,27 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from sys import setdefaultencoding
-setdefaultencoding('utf-8')
diff --git a/client/test/solrinterfacetest.py b/client/test/solrinterfacetest.py
deleted file mode 100644
index 023f331..0000000
--- a/client/test/solrinterfacetest.py
+++ /dev/null
@@ -1,450 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from unittest import TestCase
-
-from cgi import parse_qs
-
-from weightless.core import compose
-from weightless.io import Suspend
-from meresco.core import Observable
-from meresco.solr.solrinterface import SolrInterface
-from seecr.test import CallTrace
-
-
-class SolrInterfaceTest(TestCase):
-    def setUp(self):
-        TestCase.setUp(self)
-        self._solrInterface = SolrInterface("localhost", 8888)
-
-    def testCoreSupport(self):
-        sendData = []
-        interface = SolrInterface("localhost", "8888", core="THE_CORE")
-        interface._send = lambda path, body: sendData.append((path, body))
-        list(interface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
-        self.assertEquals(1, len(sendData))
-        self.assertEquals(('/solr/THE_CORE/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True)], response=RESPONSE, solrInterface=interface)
-        self.assertEquals(path, "/solr/THE_CORE/select")
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc", body)
-
-    def testAdd(self):
-        g = compose(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
-        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
-
-        g = compose(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
-        self.assertRaises(
-            IOError,
-            lambda: self._returnValueFromGenerator(g, ["ERROR"], '500'))
-
-        sendData = []
-        self._solrInterface._send = lambda path, body: sendData.append((path, body))
-        list(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
-        self.assertEquals(1, len(sendData))
-        self.assertEquals(('/solr/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
-
-    def testAddWithTimeOut(self):
-        sent_data = []
-        iSolr = SolrInterface("localhost", "8889", commitTimeout=10)
-        iSolr._send = lambda path, body: sent_data.append((path, body))
-        r = iSolr.add("record1", "part0", "<record><data>data here</data></record>")
-        list(r)
-        self.assertEquals('/solr/update?commitWithin=10000', sent_data[0][0])
-        self.assertEquals(1, len(sent_data))
-
-    def testObservableName(self):
-        sendData = []
-        observable = Observable()
-        solrInterface1 = SolrInterface("localhost", 1234, core="index1")
-        solrInterface2 = SolrInterface("localhost", 1234, core="index2")
-        solrInterface1._send = lambda path, body: sendData.append(("1", path, body))
-        solrInterface2._send = lambda path, body: sendData.append(("2", path, body))
-        observable.addObserver(solrInterface1)
-        observable.addObserver(solrInterface2)
-
-        list(compose(observable.all['index1'].add(identifier="recordId", partname="partname", data="data")))
-
-        self.assertEquals([
-                ('1', '/solr/index1/update?commitWithin=1000', '<add>data</add>'),
-            ], sendData)
-
-    def testDelete(self):
-        g = compose(self._solrInterface.delete("record&:1"))
-        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
-
-        g = compose(self._solrInterface.delete("record&:1"))
-        self.assertRaises(
-            IOError,
-            lambda: self._returnValueFromGenerator(g, "ERROR", '500'))
-
-        sendData = []
-        self._solrInterface._send = lambda path, body: sendData.append((path, body))
-        list(self._solrInterface.delete("record&:1"))
-        self.assertEquals(1, len(sendData))
-        self.assertEquals(('/solr/update?commitWithin=1000', '<delete><id>%s</id></delete>' % "record&amp;:1"), sendData[0])
-
-    def testDeleteWithTimeOut(self):
-        sent_data = []
-        iSolr = SolrInterface("localhost", "8889", commitTimeout=10)
-        iSolr._send = lambda path, body: sent_data.append((path, body))
-        r = iSolr.delete("record1")
-        list(r)
-        self.assertEquals('/solr/update?commitWithin=10000', sent_data[0][0])
-        self.assertEquals(1, len(sent_data))
-
-    def testSolrTimeoutShouldBeGreaterThenZero(self):
-        try:
-            iSolr = SolrInterface("localhost", "8889", commitTimeout=-1)
-            self.fail()
-        except ValueError, e:
-            self.assertEquals('Value commitTimeout should be greater then zero', str(e))
-
-    def testExecuteQuery(self):
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=None, response=RESPONSE) 
-        self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1','3','5'], hits)
-
-    def testPrefixSearch(self):
-        response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", response=TERMS_PREFIX_RESPONSE) 
-        self.assertEquals(['hoogte', 'holland', 'hoe', 'horticulture', 'houden', 'housing', 'houdt', 'hoge', 'hoofd', 'houten'], response.hits)
-        self.assertEquals(10, response.total)
-        self.assertEquals(76, response.queryTime)
-        self.assertEquals('/solr/terms', path)
-        self.assertQueryArguments('terms.limit=10&terms.prefix=ho&terms.fl=afield', body)
-
-    def testPrefixSearchWithLimit(self):
-        response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", limit=5, response=TERMS_PREFIX_RESPONSE) 
-        self.assertEquals('/solr/terms', path)
-        self.assertQueryArguments('terms.limit=5&terms.prefix=ho&terms.fl=afield', body)
-
-    def testExecuteEmptyQuery(self):
-        self.assertRaises(ValueError, self.executeQuery, '', response=RESPONSE)
-
-    def testExecuteQueryWithStartStopAndSortKeys(self):
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True), dict(sortBy="anotherfield", sortDescending=False)], response=RESPONSE)
-        self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc,anotherfield+asc", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1','3','5'], hits)
-
-    def testExecuteQuerySortAscending(self):
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=[dict(sortBy="field", sortDescending=False)], response=RESPONSE)
-        self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10&sort=field+asc", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1','3','5'], hits)
-
-    def testDrilldown(self):
-        total, hits, drilldownData, (path, body) = self.executeQuery("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__other__', 5, False)], response=RESPONSE % FACET_COUNTS)
-        result = dict(drilldownData)
-        self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1', '3', '5'], hits)
-        self.assertEquals(['__all__', '__other__'], result.keys())
-        self.assertEquals([("term_0", 1), ("term_1", 2)], list(result['__all__']))
-        self.assertEquals([("term_2", 3), ("term_3", 4)], list(result['__other__']))
-
-    def testDrilldownOnSameFieldTwice(self):
-        total, hits, drilldownData, (path, body) = self.executeQuery("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__all__', 5, False)], response=RESPONSE % FACET_COUNTS_SAME_FIELD_TWICE)
-        self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__all__&f.__all__.facet.limit=5&f.__all__.facet.sort=index", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1', '3', '5'], hits)
-        self.assertEquals(2, len(drilldownData))
-        result = dict(drilldownData)
-        self.assertEquals(['__all__'], result.keys())
-        self.assertEquals([("term_0", 1), ("term_1", 2)], list(result['__all__']))
-
-    def testExecuteQuerySolrHostFromObserver(self):
-        solrInterface = SolrInterface()
-        observer = CallTrace(returnValues={'solrServer': ('localhost', 1234)})
-        solrInterface.addObserver(observer)
-        kwargs = []
-        def httppost(**_kwargs):
-            kwargs.append(_kwargs)
-            s = Suspend()
-            response = yield s
-            result = s.getResult()
-            raise StopIteration(result)
-        solrInterface._httppost = httppost
-
-        g = compose(solrInterface.executeQuery("meresco.exists:true"))
-        self._returnValueFromGenerator(g, [RESPONSE])
-        self.assertEquals(['solrServer'], observer.calledMethodNames())
-        self.assertQueryArguments('q=meresco.exists%3Atrue&start=0&rows=10', kwargs[0]['body'])
-        self.assertEquals('localhost', kwargs[0]['host'])
-        self.assertEquals('/solr/select', kwargs[0]['request'])
-        self.assertEquals(1234, kwargs[0]['port'])
-        self.assertEquals({'Content-Type': 'application/x-www-form-urlencoded', 'Content-Length': len(kwargs[0]['body'])}, kwargs[0]['headers'])
-
-    def testAddWithSolrServerFromObserver(self):
-        solrInterface = SolrInterface()
-        observer = CallTrace(returnValues={'solrServer': ('localhost', 1234)})
-        solrInterface.addObserver(observer)
-        kwargs = []
-        def httppost(**_kwargs):
-            kwargs.append(_kwargs)
-            s = Suspend()
-            response = yield s
-            result = s.getResult()
-            raise StopIteration(result)
-        solrInterface._httppost = httppost
-
-        g = compose(solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
-        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
-        self.assertEquals(['solrServer'], observer.calledMethodNames())
-        self.assertEquals('localhost', kwargs[0]['host'])
-        self.assertEquals(1234, kwargs[0]['port'])
-        self.assertEquals({'Content-Type': 'text/xml', 'Content-Length': len(kwargs[0]['body'])}, kwargs[0]['headers'])
-
-    def testQueryResponseTime(self):
-        response, readData = self.executeQueryResponse("meresco.exists:true", response=RESPONSE % "")
-        self.assertEquals(6, response.queryTime)
-
-    def testSolrGivesSpellCheckResults(self):
-        total, hits, suggestions, (path, body) = self.executeQuery(query="__all__:aap AND __all__:bo", response=RESPONSE % SUGGESTIONS, suggestionsCount=2, suggestionsQuery="aap AND bo")
-        self.assertQueryArguments('spellcheck.count=2&rows=10&spellcheck=true&spellcheck.q=aap+AND+bo&q=__all__%3Aaap+AND+__all__%3Abo&start=0', body)
-        self.assertEquals(['1','3','5'], hits)
-        self.assertEquals({'aap': (0, 3, ['aapje', 'raap']), 'bo': (8, 10, ['bio', 'bon'])}, suggestions)
-
-    def testFieldnames(self):
-        readData = []
-        def read(path):
-            readData.append(path)
-        self._solrInterface._read = read
-        gen = self._solrInterface.fieldnames()
-        gen.next()
-        try:
-            gen.send(FIELDNAMES_RESPONSE)
-        except StopIteration, e:
-            (response,) = e.args 
-        self.assertEquals(['/solr/admin/luke'], readData)
-        self.assertEquals(['__all__', '__exists__', '__id__', '__timestamp__', 'field0', 'field1', 'untokenized.field0'], response.hits)
-
-    def testPassFilterQuery(self):
-        total, hits, (path, body) = self.executeQuery("*", filterQuery="field:value", response=RESPONSE) 
-        self.assertQueryArguments("q=*&fq=field:value&start=0&rows=10", body)
-        total, hits, (path, body) = self.executeQuery("*", filterQuery="field:http\://host.nl", response=RESPONSE) 
-        self.assertQueryArguments("q=*&fq=field:http\://host.nl&start=0&rows=10", body)
-
-    def executeQueryResponse(self, query, response, solrInterface=None, **kwargs):
-        if solrInterface is None:
-            solrInterface = self._solrInterface
-        sendData = []
-        def send(path, body, contentType="default"):
-            sendData.append((path, body))
-        solrInterface._send = send
-        gen = solrInterface.executeQuery(luceneQueryString=query, **kwargs)
-        gen.next()
-        try:
-            gen.send(response)
-        except StopIteration, e:
-            (response,) = e.args 
-            return response, sendData
-
-    def executePrefixSearch(self, response, solrInterface=None, **kwargs):
-        if solrInterface is None:
-            solrInterface = self._solrInterface
-        sendData = []
-        def send(path, body, contentType="default"):
-            sendData.append((path, body))
-        solrInterface._send = send
-        gen = solrInterface.prefixSearch(**kwargs)
-        gen.next()
-        try:
-            gen.send(response)
-        except StopIteration, e:
-            (response,) = e.args 
-            return response, sendData[0]
-    
-    def executeQuery(self, query, response, solrInterface=None, **kwargs):
-        response, sendData = self.executeQueryResponse(query, response, solrInterface=solrInterface, **kwargs)
-        result = [response.total, response.hits]
-        if getattr(response, 'drilldownData', None) is not None:
-            result.append(response.drilldownData)
-        if getattr(response, 'suggestions', None) is not None:
-            result.append(response.suggestions)
-        result.append(sendData[0])
-        return result
-
-    def _returnValueFromGenerator(self, g, serverResponses, responseStatus='200'):
-        for response in serverResponses:
-            s = g.next()
-            self.assertEquals(Suspend, type(s))
-            s(CallTrace('reactor'), lambda: None)
-            s.resume('HTTP/1.1 %s\r\n\r\n%s' % (responseStatus, response))
-        try:
-            g.next()
-            self.fail("expected StopIteration")
-        except StopIteration, e:
-            if len(e.args) > 0:
-                return e.args[0]
-    
-    def assertQueryArguments(self, arguments1, arguments2):
-        arguments1 = parse_qs(arguments1, keep_blank_values=True)
-        arguments2 = parse_qs(arguments2, keep_blank_values=True)
-        self.assertEquals(arguments1, arguments2)
-
-RESPONSE = """
-<response>
-    <lst name="responseHeader">
-        <int name="status">0</int>
-        <int name="QTime">6</int>
-        <lst name="params">
-            <str name="indent">on</str>
-            <str name="start">0</str>
-            <str name="q">meresco.exists:true</str>
-            <str name="version">2.2</str>
-            <str name="rows">10</str>
-        </lst>
-    </lst>
-    <result name="response" numFound="3" start="0">
-        <doc>
-            <str name="__id__">1</str>
-        </doc>
-        <doc>
-            <str name="__id__">3</str>
-        </doc>
-        <doc>
-            <str name="__id__">5</str>
-        </doc>
-    </result>
-    %s
-</response>"""
-
-TERMS_PREFIX_RESPONSE = """
-<response>
-    <lst name="responseHeader">
-        <int name="status">0</int>
-        <int name="QTime">76</int>
-    </lst>
-    <lst name="terms">
-        <lst name="afield">
-            <int name="hoogte">221194</int>
-            <int name="holland">162140</int>
-            <int name="hoe">57391</int>
-            <int name="horticulture">30914</int>
-            <int name="houden">15239</int>
-            <int name="housing">14980</int>
-            <int name="houdt">14178</int>
-            <int name="hoge">12870</int>
-            <int name="hoofd">12583</int>
-            <int name="houten">10945</int>
-        </lst>
-    </lst>
-</response>"""
-
-SUGGESTIONS="""
-<lst name="spellcheck">
-    <lst name="suggestions">
-        <lst name="aap">
-            <int name="numFound">2</int>
-            <int name="startOffset">0</int>
-            <int name="endOffset">3</int>
-            <arr name="suggestion">
-                <str>aapje</str>
-                <str>raap</str>
-            </arr>
-        </lst>
-        <lst name="bo">
-            <int name="numFound">2</int>
-            <int name="startOffset">8</int>
-            <int name="endOffset">10</int>
-            <arr name="suggestion">
-                <str>bio</str>
-                <str>bon</str>
-            </arr>
-        </lst>
-    </lst>
-</lst>"""
-
-FACET_COUNTS="""
-<lst name="facet_counts">
-    <lst name="facet_queries"/>
-    <lst name="facet_fields">
-        <lst name="__all__">
-            <int name="term_0">1</int>
-            <int name="term_1">2</int>
-        </lst>
-        <lst name="__other__">
-            <int name="term_2">3</int>
-            <int name="term_3">4</int>
-        </lst>
-    </lst>
-    <lst name="facet_dates"/>
-    <lst name="facet_ranges"/>
-</lst>"""
-
-FACET_COUNTS_SAME_FIELD_TWICE="""
-<lst name="facet_counts">
-    <lst name="facet_queries"/>
-    <lst name="facet_fields">
-        <lst name="__all__">
-            <int name="term_0">1</int>
-            <int name="term_1">2</int>
-        </lst>
-        <lst name="__all__">
-            <int name="term_0">1</int>
-            <int name="term_1">2</int>
-        </lst>
-    </lst>
-    <lst name="facet_dates"/>
-    <lst name="facet_ranges"/>
-</lst>"""
-
-FIELDNAMES_RESPONSE="""
-<response>
-<lst name="responseHeader">
-<int name="status">0</int>
-<int name="QTime">4701</int>
-</lst>
-<lst name="index">
-<int name="numDocs">265054</int>
-<int name="maxDoc">332132</int>
-<int name="numTerms">1972551</int>
-<long name="version">1348587033477</long>
-<int name="segmentCount">11</int>
-<bool name="current">true</bool>
-<bool name="hasDeletions">true</bool>
-<str name="directory">
-org.apache.lucene.store.MMapDirectory:org.apache.lucene.store.MMapDirectory@/data/dev/index-state/14e40aff-9ee8-4b6c-826c-e0fb82232e33-solr/cores/records/data/index lockFactory=org.apache.lucene.store.NativeFSLockFactory@1c851ed
-</str>
-<date name="lastModified">2012-09-26T22:23:31Z</date>
-</lst>
-<lst name="fields">
-<lst name="__all__">...</lst>
-<lst name="__exists__">...</lst>
-<lst name="__id__">...</lst>
-<lst name="__timestamp__">...</lst>
-<lst name="field0">...</lst>
-<lst name="field1">...</lst>
-<lst name="untokenized.field0">...</lst>
-</lst>
-<lst name="info">...</lst>
-</response>
-"""
diff --git a/client/test/solrlucenequerycomposertest.py b/client/test/solrlucenequerycomposertest.py
deleted file mode 100644
index 442100f..0000000
--- a/client/test/solrlucenequerycomposertest.py
+++ /dev/null
@@ -1,113 +0,0 @@
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from seecr.test import SeecrTestCase
-
-from cqlparser import parseString, UnsupportedCQL
-from meresco.solr.solrlucenequerycomposer import SolrLuceneQueryComposer
-
-class SolrLuceneQueryComposerTest(SeecrTestCase):
-    def testOne(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0)])
-        self.assertEquals('__all__:"term"', self.cql2lucene("term"))
-        self.assertEquals('(__all__:"fiets" AND __all__:"auto")', self.cql2lucene("fiets AND auto"))
-        self.assertEquals('__all__:"fiets auto"', self.cql2lucene('"fiets auto"'))
-        self.assertEquals('__all__:fi*', self.cql2lucene('"fi*"'))
-        self.assertEquals('__all__:fi*', self.cql2lucene('fi*'))
-        self.assertEquals('__all__:f*ts', self.cql2lucene('"f*ts"'))
-        self.assertEquals('__all__:*ts', self.cql2lucene('*ts'))
-        self.assertEquals('(__all__:"fiets" AND (__all__:"auto" OR __all__:"boot"))', self.cql2lucene('fiets AND (auto OR boot)'))
-        self.assertEquals('((__all__:"fiets" AND __all__:"auto") OR __all__:"boot")', self.cql2lucene('fiets AND auto OR boot'))
-        self.assertEquals('(__all__:"fiets" AND (__all__:"auto" OR __all__:"boot"))', self.cql2lucene('fiets AND (auto OR boot)'))
-        self.assertEquals('((__all__:"fiets" AND __all__:"auto") OR (__all__:"boot" AND __all__:"other"))', self.cql2lucene('(fiets AND auto) OR (boot AND other)'))
-        self.assertEquals('(__all__:"fiets" OR (__all__:"auto" AND __all__:"boot"))', self.cql2lucene('fiets OR auto AND boot'))
-
-    def testEscaping(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
-        self.assertEquals('field:"term:term1"', self.cql2lucene('field="term:term1"'))
-        self.assertEquals('field:"term:term1"', self.cql2lucene('field exact "term:term1"'))
-        self.assertEquals('field:"term"', self.cql2lucene('field exact term'))
-        self.assertEquals(r'dc\:title:"term"', self.cql2lucene('dc:title exact term'))
-
-    def testSolrKeywords(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
-        self.assertEquals('field:"NOT"', self.cql2lucene('field="NOT"'))
-        self.assertEquals('field:"AND"', self.cql2lucene('field="AND"'))
-        self.assertEquals('field:"OR"', self.cql2lucene('field="OR"'))
-        # Escaping Special Characters
-        # Lucene supports escaping special characters that are part of the query syntax. The current list special characters are
-        # + - && || ! ( ) { } [ ] ^ " ~ * ? : \
-        # To escape these character use the \ before the character.
-        self.assertEquals('field:"-"', self.cql2lucene('field=-'))
-        self.assertEquals('field:"+"', self.cql2lucene('field=+'))
-        self.assertEquals('field:"!"', self.cql2lucene('field="!"'))
-        self.assertEquals('field:"!"', self.cql2lucene('field=!'))
-        self.assertEquals('field:"&&"', self.cql2lucene('field="&&"'))
-        self.assertEquals(r'field:"\""', self.cql2lucene(r'field="\""'))
-        self.assertEquals(r'field:"fiets!"', self.cql2lucene(r'field="fiets!"'))
-        self.assertEquals(r'field:"fiets!"', self.cql2lucene(r'field=fiets!'))
-
-    def testPrefixQuery(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0)])
-        self.assertEquals('__all__:term*', self.cql2lucene('term*'))
-        self.assertEquals('__all__:term*', self.cql2lucene('TERM*'))
-        self.assertEquals('*:*', self.cql2lucene('*'))
-
-    def testMultipleUnqualifiedTermFields(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0), ("__extra__", 1.0)])
-        self.assertEquals('(__all__:"term" OR __extra__:"term")', self.cql2lucene("term"))
-        self.assertEquals('((__all__:"term" OR __extra__:"term") AND (__all__:"otherterm" OR __extra__:"otherterm"))', self.cql2lucene("term AND otherterm"))
-
-    def testBoost(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 4.0)])
-        self.assertEquals('__all__:"term"^4.0', self.cql2lucene("term"))
-
-        self.assertEquals('field:"term"^3.5', self.cql2lucene("field=/boost=3.5 term"))
-
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 4.0), ("__extra__", 2.0), ("__uri__", 1.0)])
-        self.assertEquals('(__all__:"term"^4.0 OR __extra__:"term"^2.0 OR __uri__:"term")', self.cql2lucene("term"))
-
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("all", 1)])
-        self.assertEquals('field:"term"^2.0', self.cql2lucene("field exact/boost=2 term"))
-
-    def testRangeQuery(self):
-        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
-        self.assertEquals('field:{* TO 5}', self.cql2lucene("field<5"))
-        self.assertEquals('field:[* TO 5]', self.cql2lucene("field<=5"))
-        self.assertEquals('field:[5 TO *]', self.cql2lucene("field>=5"))
-        self.assertEquals('field:{5 TO *}', self.cql2lucene("field>5"))
-        self.assertEquals('(field:{5 TO *} AND field:[* TO 10])', self.cql2lucene("field>5 AND field<=10"))
-
-    def testUnsupportedCQL(self):
-        printer=SolrLuceneQueryComposer(unqualifiedTermFields=[("all", 1)])
-        ast = parseString("field any term")
-        try:
-            printer.compose(ast)
-            self.fail("must raise UnsupportedCQL")
-        except UnsupportedCQL, e:
-            self.assertEquals("Only =, ==, exact, <, <=, > and >= are supported.", str(e))
-
-    def cql2lucene(self, cql):
-        return self.printer.compose(parseString(cql))
diff --git a/client/testsetup.sh b/client/testsetup.sh
deleted file mode 100755
index bcc3e70..0000000
--- a/client/testsetup.sh
+++ /dev/null
@@ -1,59 +0,0 @@
-#!/bin/bash
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-set -o errexit
-
-rm -rf tmp build
-
-fullPythonVersion=python2.6
-${fullPythonVersion} setup.py install --root tmp
-
-
-VERSION="x.y.z"
-
-find tmp -name '*.py' -exec sed -r -e \
-    "/DO_NOT_DISTRIBUTE/ d;
-    s/\\\$Version:[^\\\$]*\\\$/\\\$Version: ${VERSION}\\\$/" -i '{}' \;
-
-if [ -f /etc/debian_version ]; then
-    SITE_PACKAGE_DIR=`pwd`/tmp/usr/local/lib/${fullPythonVersion}/dist-packages
-else
-    SITE_PACKAGE_DIR=`pwd`/tmp/usr/lib/${fullPythonVersion}/site-packages
-fi
-
-cp meresco/__init__.py ${SITE_PACKAGE_DIR}/meresco
-export PYTHONPATH=${SITE_PACKAGE_DIR}:${PYTHONPATH}
-cp -r test tmp/test
-
-set +o errexit
-(
-cd tmp/test
-./alltests.sh
-)
-set -o errexit
-
-rm -rf tmp build
-
diff --git a/deps.txt b/deps.txt
new file mode 100644
index 0000000..cc3bafa
--- /dev/null
+++ b/deps.txt
@@ -0,0 +1,8 @@
+python-meresco-components (>= 4.0)
+python-meresco-components (<< 4.4)
+python-meresco-core (>= 4.0)
+python-meresco-core (<< 4.1)
+python-cqlparser (>= 1.7)
+python-cqlparser (< 1.8)
+python-weightless-core (>= 0.7)
+python-weightless-core (<< 0.8)
diff --git a/meresco/__init__.py b/meresco/__init__.py
new file mode 100644
index 0000000..af326b5
--- /dev/null
+++ b/meresco/__init__.py
@@ -0,0 +1,27 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from pkgutil import extend_path
+__path__ = extend_path(__path__, __name__)
diff --git a/meresco/solr/__init__.py b/meresco/solr/__init__.py
new file mode 100644
index 0000000..4dfd28d
--- /dev/null
+++ b/meresco/solr/__init__.py
@@ -0,0 +1,24 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
diff --git a/meresco/solr/cql2solrlucenequery.py b/meresco/solr/cql2solrlucenequery.py
new file mode 100644
index 0000000..4076d97
--- /dev/null
+++ b/meresco/solr/cql2solrlucenequery.py
@@ -0,0 +1,45 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from meresco.core import Observable
+
+from meresco.components.statistics import Logger
+from meresco.components.clausecollector import ClauseCollector
+from meresco.solr.solrlucenequerycomposer import SolrLuceneQueryComposer
+
+class CQL2SolrLuceneQuery(Observable, Logger):
+
+    def __init__(self, unqualifiedFields, name=None):
+        Observable.__init__(self, name=name)
+        self._cqlComposer = SolrLuceneQueryComposer(unqualifiedFields)
+
+    def executeQuery(self, cqlAbstractSyntaxTree, *args, **kwargs):
+        response = yield self.any.executeQuery(luceneQueryString=self._convert(cqlAbstractSyntaxTree), *args, **kwargs)
+        raise StopIteration(response)
+
+    def _convert(self, ast):
+        ClauseCollector(ast, self.log).visit()
+        return self._cqlComposer.compose(ast)
+
diff --git a/meresco/solr/fields2solrdoc.py b/meresco/solr/fields2solrdoc.py
new file mode 100644
index 0000000..6dc9768
--- /dev/null
+++ b/meresco/solr/fields2solrdoc.py
@@ -0,0 +1,69 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from meresco.core import Observable
+from xml.sax.saxutils import escape as escapeXml
+from itertools import chain
+
+class Fields2SolrDoc(Observable):
+    def __init__(self, transactionName, partname, singularValueFields=None):
+        Observable.__init__(self)
+        self._transactionName = transactionName
+        self._partname = partname
+        self._singularValueFields = set(singularValueFields) if singularValueFields else set()
+        self.txs = {}
+
+    def begin(self, name):
+        if name != self._transactionName:
+            return
+        tx = self.ctx.tx
+        tx.join(self)
+        self.txs[tx.getId()] = {}
+
+    def addField(self, name, value):
+        tx = self.ctx.tx
+        valueList = self.txs[tx.getId()].setdefault(name, [])
+        if len(valueList) == 1 and name in self._singularValueFields:
+            return
+        valueList.append(value)
+
+    def commit(self, id):
+        fields = self.txs.pop(id)
+        if not fields:
+            return
+
+        tx = self.ctx.tx
+        recordIdentifier = tx.locals["id"]
+        specialFields = [
+            ('__id__', recordIdentifier), 
+        ] 
+        def fieldStatement(key, value):
+            return '<field name="%s">%s</field>' % (escapeXml(key), escapeXml(value))
+        allFields = ((k,v) for k,vs in fields.items() for v in vs)
+
+        xml = "<doc xmlns=''>%s</doc>" % ''.join(fieldStatement(*args) for args in chain(iter(specialFields), allFields))
+        yield self.all.add(identifier=recordIdentifier, partname=self._partname, data=xml)
+
diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
new file mode 100644
index 0000000..6f59930
--- /dev/null
+++ b/meresco/solr/solrinterface.py
@@ -0,0 +1,180 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from urllib import urlencode
+from socket import socket
+from lxml.etree import parse
+from StringIO import StringIO
+from time import sleep
+from xml.sax.saxutils import escape as escapeXml
+from weightless.http import httpget, httppost
+from meresco.core import Observable
+
+from solrresponse import SolrResponse
+
+CRLF = '\r\n'
+
+class SolrInterface(Observable):
+    def __init__(self, host=None, port=None, core=None, commitTimeout=1):
+        Observable.__init__(self)
+        self._host = host
+        self._port = port
+        self._core = core
+        self._commitWithin = int(commitTimeout * 1000)
+        if self._commitWithin <= 0:
+            raise ValueError("Value commitTimeout should be greater then zero")
+        if core is not None:
+            self.observable_name = lambda: core
+
+    def all_unknown(self, message, *args, **kwargs):
+        print 'Unexpected all.unknown for:', message, args, kwargs
+        return
+        yield
+
+    def do_unknown(self, message, *args, **kwargs):
+        print 'Unexpected do.unknown for:', message, args, kwargs
+
+    def _path(self, action):
+        return '/solr/%s' % action if self._core is None else '/solr/%s/%s' % (self._core, action)
+
+    def add(self, identifier, partname, data):
+        path = self._path('update')
+        path += "?commitWithin=%d" % self._commitWithin
+        yield self._send(path=path, body="<add>%s</add>" % data)
+
+    def delete(self, identifier):
+        path = self._path('update')
+        path += "?commitWithin=%d" % self._commitWithin
+        yield self._send(path=path, body="<delete><id>%s</id></delete>" % escapeXml(identifier))
+
+    def executeQuery(self, luceneQueryString, start=0, stop=10, sortKeys=None, fieldnamesAndMaximums=None, suggestionsCount=0, suggestionsQuery=None, filterQuery=None, **kwargs):
+        if not luceneQueryString:
+            raise ValueError("Empty luceneQueryString not allowed.")
+        arguments = dict(
+                q=luceneQueryString, 
+                start=start, 
+                rows=stop-start, 
+            )
+        if sortKeys:
+            arguments["sort"] = ','.join("%s %s" % (sortKey['sortBy'], 'desc' if sortKey['sortDescending'] else 'asc') for sortKey in sortKeys)
+        if filterQuery:
+            arguments['fq'] = filterQuery
+
+        arguments.update(_drilldownArguments(fieldnamesAndMaximums))
+        if suggestionsCount > 0 and suggestionsQuery:
+            arguments["spellcheck"] = 'true'
+            arguments["spellcheck.count"] = suggestionsCount
+            arguments["spellcheck.q"] = suggestionsQuery
+
+        path = self._path('select')
+        body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
+        xml = parse(StringIO(body))
+        recordCount = int(xml.xpath('/response/result/@numFound')[0])
+        identifiers = xml.xpath('/response/result/doc/str[@name="__id__"]/text()')
+        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
+        response = SolrResponse(total=recordCount, hits=identifiers, queryTime=qtime)
+        if fieldnamesAndMaximums is not None:
+            _updateResponseWithDrilldownData(arguments, xml, response)
+        if suggestionsCount > 0 and suggestionsQuery:
+            _updateResponseWithSuggestionData(arguments, xml, response)
+        raise StopIteration(response)
+
+    def prefixSearch(self, field, prefix, limit=10):
+        arguments = {'terms.fl': field, 'terms.prefix': prefix, 'terms.limit': limit}
+        path = self._path('terms')
+        body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
+        xml = parse(StringIO(body))
+        terms = xml.xpath('/response/lst[@name="terms"]/lst[@name="%s"]/int/@name' % field)
+        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
+        response = SolrResponse(total=len(terms), hits=terms, queryTime=qtime)
+        raise StopIteration(response)
+    
+    def fieldnames(self):
+        path = self._path('admin/luke')
+        body = yield self._read(path)
+        xml = parse(StringIO(body))
+        fieldnames = xml.xpath('/response/lst[@name="fields"]/lst/@name')
+        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
+        response = SolrResponse(total=len(fieldnames), hits=fieldnames, queryTime=qtime)
+        raise StopIteration(response)
+
+    def _send(self, path, body, contentType="text/xml"):
+        headers = None
+        if body:
+            headers={'Content-Type': contentType, 'Content-Length': len(body)}
+        host, port = self._solrServer() # WARNING: can return a different server each time.
+        response = yield self._httppost(host=host, port=port, request=path, body=body, headers=headers)
+        header, body = response.split("\r\n\r\n", 1)
+        self._verify200(header, response)
+        raise StopIteration(body)
+
+    def _read(self, path):
+        host, port = self._solrServer()
+        response = yield self._httpget(host, port, path)
+        header, body = response.split('\r\n\r\n', 1)
+        self._verify200(header, response)
+        raise StopIteration(body)
+
+    def _httpget(self, *args):
+        return httpget(*args)
+
+    def _httppost(self, **kwargs):
+        return httppost(**kwargs)
+
+    def _verify200(self, header, response):
+        if not header.startswith('HTTP/1.1 200'):
+            raise IOError("Expected status '200' from Solr, but got: " + response)
+
+    def _solrServer(self):
+        return (self._host, self._port) if self._host else self.call.solrServer()
+
+
+def _drilldownArguments(fieldnamesAndMaximums):
+    arguments = {}
+    if fieldnamesAndMaximums is not None:
+        arguments['facet'] = "on"
+        arguments['facet.mincount'] = "1"
+        arguments['facet.field'] = []
+        for fieldname, maximumResults, howToSort in fieldnamesAndMaximums:
+            arguments['facet.field'].append(fieldname)
+            arguments.setdefault('f.%s.facet.limit' % fieldname, []).append(-1 if maximumResults == 0 else maximumResults)
+            arguments.setdefault('f.%s.facet.sort' % fieldname, []).append('count' if howToSort else 'index')
+    return arguments
+
+def _updateResponseWithDrilldownData(arguments, xml, response):
+    drilldownData = []
+    for facet_fields in xml.xpath('/response/lst[@name="facet_counts"]/lst[@name="facet_fields"]/lst'):
+        drilldownResult = facet_fields.xpath('int')
+        drilldownData.append((facet_fields.attrib["name"], ((termCount.attrib['name'], int(termCount.text)) for termCount in drilldownResult)))
+    response.drilldownData = drilldownData
+
+def _updateResponseWithSuggestionData(arguments, xml, response):
+    suggestions = {}
+    for suggestion in xml.xpath('/response/lst[@name="spellcheck"]/lst[@name="suggestions"]/lst'):
+        startOffset = int(suggestion.xpath('int[@name="startOffset"]/text()')[0])
+        endOffset = int(suggestion.xpath('int[@name="endOffset"]/text()')[0])
+        suggestions[suggestion.attrib['name']] = (startOffset, endOffset, suggestion.xpath('arr[@name="suggestion"]/str/text()'))
+    response.suggestions = suggestions
diff --git a/meresco/solr/solrlucenequerycomposer.py b/meresco/solr/solrlucenequerycomposer.py
new file mode 100644
index 0000000..92e6892
--- /dev/null
+++ b/meresco/solr/solrlucenequerycomposer.py
@@ -0,0 +1,114 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from cqlparser import CqlVisitor, UnsupportedCQL
+
+
+class SolrLuceneQueryComposer(object):
+    def __init__(self, unqualifiedTermFields):
+        self._unqualifiedTermFields = unqualifiedTermFields
+
+    def compose(self, ast):
+        (result, ) = _Cql2LuceneQueryVisitor(ast, self._unqualifiedTermFields).visit()
+        return result
+
+
+class _Cql2LuceneQueryVisitor(CqlVisitor):
+    def __init__(self, ast, unqualifiedTermFields):
+        CqlVisitor.__init__(self, ast)
+        self._unqualifiedTermFields = unqualifiedTermFields
+
+    def visitSCOPED_CLAUSE(self, node):
+        clause = CqlVisitor.visitSCOPED_CLAUSE(self, node)
+        if len(clause) == 1:
+            return clause[0]
+        return "(%s)" % ' '.join(clause)
+    
+    def visitINDEX(self, node):
+        results = CqlVisitor.visitINDEX(self, node)
+        return results.replace(':', '\\:')
+
+    def visitSEARCH_CLAUSE(self, node):
+        # possible children:
+        # CQL_QUERY
+        # SEARCH_TERM
+        # INDEX, RELATION, SEARCH_TERM
+        firstChild = node.children[0].name
+        results = CqlVisitor.visitSEARCH_CLAUSE(self, node)
+        if firstChild == 'SEARCH_TERM':
+            (unqualifiedRhs,) = results
+            unqualifiedTermFields = [
+                _formatBoost(_formatTerm(fieldname, unqualifiedRhs), boost) 
+                    for fieldname, boost in self._unqualifiedTermFields
+                ]
+            if len(unqualifiedTermFields) == 1:
+                return unqualifiedTermFields[0]
+            return "(%s)" % ' OR '.join(unqualifiedTermFields)
+        elif firstChild == 'INDEX':
+            (index, (relation, boost), term) = results
+            if relation in ['==', 'exact']:
+                query = '%s:"%s"' % (index, term)
+            elif relation == '=':
+                query = _formatTerm(index, term)
+            elif relation in ['>', '<', '>=', '<=']:
+                query = _formatRangeTerm(index, relation, term)
+            else:
+                raise UnsupportedCQL("Only =, ==, exact, <, <=, > and >= are supported.")
+            return _formatBoost(query, boost)
+        else:
+            ((query,),) = results
+            return query
+
+    def visitRELATION(self, node):
+        results = CqlVisitor.visitRELATION(self, node)
+        if len(results) == 1:
+            relation = results[0]
+            boost = 1.0
+        else:
+            (relation, (modifier, comparitor, value)) = results
+            boost = float(value)
+        return relation, boost
+ 
+
+def _formatTerm(index, termString):
+    if termString == '*':
+        return '*:*'
+    if '*' in termString:
+        termString = termString.lower()
+    else:
+        termString = '"%s"' % termString.replace('\\', r'\\').replace('"', r'\"')
+    return '%s:%s' % (index, termString)
+
+def _formatBoost(query, boost):
+    return '%s^%.1f' % (query, boost) if boost != 1 else query
+
+def _formatRangeTerm(index, relation, term):
+    rangeString = {
+        '<': "{* TO %s}",
+        '>': "{%s TO *}",
+        '<=': "[* TO %s]",
+        '>=': "[%s TO *]"}[relation]
+    return '%s:%s' % (index, rangeString % term)
+
diff --git a/meresco/solr/solrresponse.py b/meresco/solr/solrresponse.py
new file mode 100644
index 0000000..e876691
--- /dev/null
+++ b/meresco/solr/solrresponse.py
@@ -0,0 +1,6 @@
+
+class SolrResponse(object):
+    def __init__(self, **kwargs):
+        self.__dict__.update(kwargs)
+
+
diff --git a/setup.py b/setup.py
new file mode 100644
index 0000000..a0ea169
--- /dev/null
+++ b/setup.py
@@ -0,0 +1,41 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from distutils.core import setup
+
+setup(
+    name='meresco-solr',
+    packages=[
+        'meresco.solr',
+    ],
+    version='%VERSION%',
+    url='http://www.meresco.org',
+    author='Seecr (Seek You Too B.V.)',
+    author_email='info@seecr.nl',
+    description='Meresco Solr is a set of components and tools to integrate Solr into Meresco.',
+    long_description='Meresco Solr is a set of components and tools to integrate Solr into Meresco.',
+    license='GNU Public License',
+    platforms='all',
+)
diff --git a/test/_alltests.py b/test/_alltests.py
new file mode 100644
index 0000000..fdf0d74
--- /dev/null
+++ b/test/_alltests.py
@@ -0,0 +1,43 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from os import system
+from sys import path, argv
+from unittest import main
+
+system('find .. -name "*.pyc" | xargs rm -f')
+from glob import glob
+for dir in glob('../deps.d/*'):
+    path.insert(0, dir)
+path.insert(0, "..")
+
+from fields2solrdoctest import Fields2SolrDocTest
+from solrinterfacetest import SolrInterfaceTest
+from solrlucenequerycomposertest import SolrLuceneQueryComposerTest
+from cql2solrlucenequerytest import CQL2SolrLuceneQueryTest
+
+if __name__ == '__main__':
+    main()
+
diff --git a/test/alltests.sh b/test/alltests.sh
index 99e80c7..be42d6c 100755
--- a/test/alltests.sh
+++ b/test/alltests.sh
@@ -4,7 +4,7 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
 # 
 # This file is part of "Meresco Solr"
 # 
@@ -25,21 +25,7 @@
 ## end license ##
 
 export LANG=en_US.UTF-8
-export PYTHONPATH=.:$PYTHONPATH
-tests="client server"
-option=$1
-if [ "$option" == "--client" ]; then 
-    tests="client"
-    shift
-elif [ "$option" == "--server" ]; then 
-    tests="server"
-    shift
-fi
+export PYTHONPATH=.:"$PYTHONPATH"
+
+python2.6 _alltests.py "$@"
 
-for type in $tests; do
-    echo "Meresco Solr $(echo $type | sed -e "s,\(.\)\(.*\),\U\1\L\2,") tests."
-    (
-        cd ../$type/test
-        ./alltests.sh "$@"
-    )
-done
diff --git a/test/cql2solrlucenequerytest.py b/test/cql2solrlucenequerytest.py
new file mode 100644
index 0000000..c24c673
--- /dev/null
+++ b/test/cql2solrlucenequerytest.py
@@ -0,0 +1,80 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from unittest import TestCase
+from seecr.test import CallTrace
+from cqlparser import parseString
+from meresco.solr.cql2solrlucenequery import CQL2SolrLuceneQuery
+from meresco.core import Observable
+from weightless.core import be, compose
+
+def executeQueryMock(luceneQueryString, *args, **kwargs):
+    return
+    yield
+
+class CQL2SolrLuceneQueryTest(TestCase):
+    def setUp(self):
+        self.convertor = CQL2SolrLuceneQuery([('field', 1.0)])
+        self.observer = CallTrace('Query responder', methods={'executeQuery': executeQueryMock})
+        self.dna = be((Observable(),
+            (self.convertor, 
+                (self.observer,),
+            )
+        ))
+        self.loggedClauses = []
+        def logShunt(clause, **kwargs):
+            self.loggedClauses.append(clause)
+        self.convertor.log = logShunt
+
+    def assertConversion(self, expectedClauses, query):
+        self.loggedClauses = []
+        list(compose(self.dna.any.executeQuery(cqlAbstractSyntaxTree=parseString(query))))
+        self.assertEquals(expectedClauses, self.loggedClauses)
+
+    def testOneTerm(self):
+        self.assertConversion(['term'], 'term')
+        self.assertEquals(1, len(self.observer.calledMethods))
+        self.assertEquals("executeQuery", self.observer.calledMethods[0].name)
+        self.assertEquals('field:"term"', self.observer.calledMethods[0].kwargs['luceneQueryString'])
+
+    def testIndexRelationTerm(self):
+        self.assertConversion(['field = term'], 'field=term')
+
+    def testIndexRelationBoostTerm(self):
+        self.assertConversion(['field =/boost=1.1 term'], "field =/boost=1.1 term")
+
+    def testIndexExactTerm(self):
+        self.assertConversion(['field exact term'], 'field exact term')
+        self.assertConversion(['field exact "term with spaces"'], 'field exact "term with spaces"')
+
+    def testTermAndTerm(self):
+        self.assertConversion(['term1', 'term2'], 'term1 AND term2')
+        self.assertConversion(['term1', 'term2', 'term3'], 'term1 AND term2 OR term3')
+        self.assertConversion(['term1', 'term2', 'term3'], 'term1 AND (term2 OR term3)')
+        self.assertConversion(['term1', 'term2', 'term3'], 'term1 OR term2 AND term3')
+
+    def testBraces(self):
+        self.assertConversion(['term'], '(term)')
+
diff --git a/test/fields2solrdoctest.py b/test/fields2solrdoctest.py
new file mode 100644
index 0000000..dc9eee5
--- /dev/null
+++ b/test/fields2solrdoctest.py
@@ -0,0 +1,119 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from seecr.test import SeecrTestCase, CallTrace
+
+from meresco.core import Observable, TransactionScope, Transaction
+from meresco.solr.fields2solrdoc import Fields2SolrDoc
+from weightless.core import be, compose
+from StringIO import StringIO
+from lxml.etree import parse
+
+def add(identifier, partname, data):
+    return
+    yield
+
+def todict(data):
+    result = {}
+    for field in parse(StringIO(data)).xpath('/doc/field'):
+        result.setdefault(field.attrib['name'], []).append(field.text)
+    return result
+
+class Fields2SolrDocTest(SeecrTestCase):
+
+    def setUp(self):
+        SeecrTestCase.setUp(self)
+
+        ctx = CallTrace('CTX')
+        tx = CallTrace('TX')
+        tx.locals = {'id': 'iden&tifier'}
+        tx.name = "tsName"
+        self.fxf = Fields2SolrDoc("tsName", "fields-partname")
+        self.fxf.ctx = ctx 
+        self.fxf.ctx.tx = tx
+        self.observer = CallTrace(methods={'add': add})
+        self.fxf.addObserver(self.observer)
+
+    def testCreateXml(self):
+        self.fxf.begin(name="tsName")
+        self.fxf.addField("field_one", "valueOne")
+        self.fxf.addField("field_one", "anotherValueOne")
+        self.fxf.addField("field_two", "value<Two>")
+        list(compose(self.fxf.commit(self.fxf.ctx.tx.getId())))
+        self.assertEquals(["add"], [m.name for m in self.observer.calledMethods])
+        kwargs = self.observer.calledMethods[0].kwargs
+        self.assertEquals({'__id__':['iden&tifier'], 'field_one':['valueOne', 'anotherValueOne'], 'field_two': ['value<Two>']}, todict(kwargs['data']))
+
+    def testWorksWithRealTransactionScope(self):
+        intercept = CallTrace('Intercept', ignoredAttributes=['begin', 'commit', 'rollback'], methods={'add': add})
+        class MockVenturi(Observable):
+            def all_unknown(self, message, *args, **kwargs):
+                self.ctx.tx.locals['id'] = 'an:identifier'
+                yield self.all.unknown(message, *args, **kwargs)
+        class MockMultiFielder(Observable):
+            def add(self, *args, **kwargs):
+                self.do.addField('field.name', 'MyName')
+                self.do.addField('field.name', 'AnotherName')
+                self.do.addField('field.title', 'MyDocument')
+                yield 'ok'
+        root = be( 
+            (Observable(),
+                (TransactionScope(transactionName="solrDoc"),
+                    (MockVenturi(),
+                        (MockMultiFielder(),
+                            (Fields2SolrDoc("solrDoc", "fields-partname"),
+                                (intercept,),
+                            )   
+                        )   
+                    )   
+                )   
+            )   
+        )   
+        list(compose(root.all.add('some', 'arguments')))
+        self.assertEquals(['add'], [m.name for m in intercept.calledMethods])
+        method = intercept.calledMethods[0]
+        self.assertEquals((), method.args)
+        self.assertEquals('an:identifier', method.kwargs['identifier'])
+        self.assertEquals('fields-partname', method.kwargs['partname'])
+        self.assertEquals({'__id__': ['an:identifier'], 'field.name':['MyName', 'AnotherName'], 'field.title': ['MyDocument']}, todict(method.kwargs['data']))
+
+        expectedXml = """<doc xmlns=''><field name="__id__">an:identifier</field><field name="field.title">MyDocument</field><field name="field.name">MyName</field><field name="field.name">AnotherName</field></doc>"""
+        self.assertEquals(expectedXml, method.kwargs['data'])
+
+    def testSingularValueFields(self):
+        __callstack_var_tx__ = Transaction('name') 
+        __callstack_var_tx__.locals['id'] = 'identifier'
+        observer = CallTrace('observer', emptyGeneratorMethods=['add'])
+        fxf = Fields2SolrDoc('name', 'partname', singularValueFields=['once'])
+        fxf.addObserver(observer)
+        fxf.begin(name='name')
+        fxf.addField('once', 'one')
+        fxf.addField('once', 'two')
+        fxf.addField('twice', 'one')
+        fxf.addField('twice', 'two')
+        list(compose(fxf.commit(__callstack_var_tx__.getId())))
+        method = observer.calledMethods[0]
+        self.assertEquals({'__id__': ['identifier'], 'once':['one'], 'twice': ['one', 'two']}, todict(method.kwargs['data']))
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
new file mode 100644
index 0000000..023f331
--- /dev/null
+++ b/test/solrinterfacetest.py
@@ -0,0 +1,450 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from unittest import TestCase
+
+from cgi import parse_qs
+
+from weightless.core import compose
+from weightless.io import Suspend
+from meresco.core import Observable
+from meresco.solr.solrinterface import SolrInterface
+from seecr.test import CallTrace
+
+
+class SolrInterfaceTest(TestCase):
+    def setUp(self):
+        TestCase.setUp(self)
+        self._solrInterface = SolrInterface("localhost", 8888)
+
+    def testCoreSupport(self):
+        sendData = []
+        interface = SolrInterface("localhost", "8888", core="THE_CORE")
+        interface._send = lambda path, body: sendData.append((path, body))
+        list(interface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        self.assertEquals(1, len(sendData))
+        self.assertEquals(('/solr/THE_CORE/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
+        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True)], response=RESPONSE, solrInterface=interface)
+        self.assertEquals(path, "/solr/THE_CORE/select")
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc", body)
+
+    def testAdd(self):
+        g = compose(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
+
+        g = compose(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        self.assertRaises(
+            IOError,
+            lambda: self._returnValueFromGenerator(g, ["ERROR"], '500'))
+
+        sendData = []
+        self._solrInterface._send = lambda path, body: sendData.append((path, body))
+        list(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        self.assertEquals(1, len(sendData))
+        self.assertEquals(('/solr/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
+
+    def testAddWithTimeOut(self):
+        sent_data = []
+        iSolr = SolrInterface("localhost", "8889", commitTimeout=10)
+        iSolr._send = lambda path, body: sent_data.append((path, body))
+        r = iSolr.add("record1", "part0", "<record><data>data here</data></record>")
+        list(r)
+        self.assertEquals('/solr/update?commitWithin=10000', sent_data[0][0])
+        self.assertEquals(1, len(sent_data))
+
+    def testObservableName(self):
+        sendData = []
+        observable = Observable()
+        solrInterface1 = SolrInterface("localhost", 1234, core="index1")
+        solrInterface2 = SolrInterface("localhost", 1234, core="index2")
+        solrInterface1._send = lambda path, body: sendData.append(("1", path, body))
+        solrInterface2._send = lambda path, body: sendData.append(("2", path, body))
+        observable.addObserver(solrInterface1)
+        observable.addObserver(solrInterface2)
+
+        list(compose(observable.all['index1'].add(identifier="recordId", partname="partname", data="data")))
+
+        self.assertEquals([
+                ('1', '/solr/index1/update?commitWithin=1000', '<add>data</add>'),
+            ], sendData)
+
+    def testDelete(self):
+        g = compose(self._solrInterface.delete("record&:1"))
+        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
+
+        g = compose(self._solrInterface.delete("record&:1"))
+        self.assertRaises(
+            IOError,
+            lambda: self._returnValueFromGenerator(g, "ERROR", '500'))
+
+        sendData = []
+        self._solrInterface._send = lambda path, body: sendData.append((path, body))
+        list(self._solrInterface.delete("record&:1"))
+        self.assertEquals(1, len(sendData))
+        self.assertEquals(('/solr/update?commitWithin=1000', '<delete><id>%s</id></delete>' % "record&amp;:1"), sendData[0])
+
+    def testDeleteWithTimeOut(self):
+        sent_data = []
+        iSolr = SolrInterface("localhost", "8889", commitTimeout=10)
+        iSolr._send = lambda path, body: sent_data.append((path, body))
+        r = iSolr.delete("record1")
+        list(r)
+        self.assertEquals('/solr/update?commitWithin=10000', sent_data[0][0])
+        self.assertEquals(1, len(sent_data))
+
+    def testSolrTimeoutShouldBeGreaterThenZero(self):
+        try:
+            iSolr = SolrInterface("localhost", "8889", commitTimeout=-1)
+            self.fail()
+        except ValueError, e:
+            self.assertEquals('Value commitTimeout should be greater then zero', str(e))
+
+    def testExecuteQuery(self):
+        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=None, response=RESPONSE) 
+        self.assertEquals("/solr/select", path)
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10", body)
+        self.assertEquals(3, total)
+        self.assertEquals(['1','3','5'], hits)
+
+    def testPrefixSearch(self):
+        response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", response=TERMS_PREFIX_RESPONSE) 
+        self.assertEquals(['hoogte', 'holland', 'hoe', 'horticulture', 'houden', 'housing', 'houdt', 'hoge', 'hoofd', 'houten'], response.hits)
+        self.assertEquals(10, response.total)
+        self.assertEquals(76, response.queryTime)
+        self.assertEquals('/solr/terms', path)
+        self.assertQueryArguments('terms.limit=10&terms.prefix=ho&terms.fl=afield', body)
+
+    def testPrefixSearchWithLimit(self):
+        response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", limit=5, response=TERMS_PREFIX_RESPONSE) 
+        self.assertEquals('/solr/terms', path)
+        self.assertQueryArguments('terms.limit=5&terms.prefix=ho&terms.fl=afield', body)
+
+    def testExecuteEmptyQuery(self):
+        self.assertRaises(ValueError, self.executeQuery, '', response=RESPONSE)
+
+    def testExecuteQueryWithStartStopAndSortKeys(self):
+        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True), dict(sortBy="anotherfield", sortDescending=False)], response=RESPONSE)
+        self.assertEquals("/solr/select", path)
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc,anotherfield+asc", body)
+        self.assertEquals(3, total)
+        self.assertEquals(['1','3','5'], hits)
+
+    def testExecuteQuerySortAscending(self):
+        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=[dict(sortBy="field", sortDescending=False)], response=RESPONSE)
+        self.assertEquals("/solr/select", path)
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10&sort=field+asc", body)
+        self.assertEquals(3, total)
+        self.assertEquals(['1','3','5'], hits)
+
+    def testDrilldown(self):
+        total, hits, drilldownData, (path, body) = self.executeQuery("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__other__', 5, False)], response=RESPONSE % FACET_COUNTS)
+        result = dict(drilldownData)
+        self.assertEquals("/solr/select", path)
+        self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
+        self.assertEquals(3, total)
+        self.assertEquals(['1', '3', '5'], hits)
+        self.assertEquals(['__all__', '__other__'], result.keys())
+        self.assertEquals([("term_0", 1), ("term_1", 2)], list(result['__all__']))
+        self.assertEquals([("term_2", 3), ("term_3", 4)], list(result['__other__']))
+
+    def testDrilldownOnSameFieldTwice(self):
+        total, hits, drilldownData, (path, body) = self.executeQuery("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__all__', 5, False)], response=RESPONSE % FACET_COUNTS_SAME_FIELD_TWICE)
+        self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__all__&f.__all__.facet.limit=5&f.__all__.facet.sort=index", body)
+        self.assertEquals(3, total)
+        self.assertEquals(['1', '3', '5'], hits)
+        self.assertEquals(2, len(drilldownData))
+        result = dict(drilldownData)
+        self.assertEquals(['__all__'], result.keys())
+        self.assertEquals([("term_0", 1), ("term_1", 2)], list(result['__all__']))
+
+    def testExecuteQuerySolrHostFromObserver(self):
+        solrInterface = SolrInterface()
+        observer = CallTrace(returnValues={'solrServer': ('localhost', 1234)})
+        solrInterface.addObserver(observer)
+        kwargs = []
+        def httppost(**_kwargs):
+            kwargs.append(_kwargs)
+            s = Suspend()
+            response = yield s
+            result = s.getResult()
+            raise StopIteration(result)
+        solrInterface._httppost = httppost
+
+        g = compose(solrInterface.executeQuery("meresco.exists:true"))
+        self._returnValueFromGenerator(g, [RESPONSE])
+        self.assertEquals(['solrServer'], observer.calledMethodNames())
+        self.assertQueryArguments('q=meresco.exists%3Atrue&start=0&rows=10', kwargs[0]['body'])
+        self.assertEquals('localhost', kwargs[0]['host'])
+        self.assertEquals('/solr/select', kwargs[0]['request'])
+        self.assertEquals(1234, kwargs[0]['port'])
+        self.assertEquals({'Content-Type': 'application/x-www-form-urlencoded', 'Content-Length': len(kwargs[0]['body'])}, kwargs[0]['headers'])
+
+    def testAddWithSolrServerFromObserver(self):
+        solrInterface = SolrInterface()
+        observer = CallTrace(returnValues={'solrServer': ('localhost', 1234)})
+        solrInterface.addObserver(observer)
+        kwargs = []
+        def httppost(**_kwargs):
+            kwargs.append(_kwargs)
+            s = Suspend()
+            response = yield s
+            result = s.getResult()
+            raise StopIteration(result)
+        solrInterface._httppost = httppost
+
+        g = compose(solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        self._returnValueFromGenerator(g, ["SOME RESPONSE"])
+        self.assertEquals(['solrServer'], observer.calledMethodNames())
+        self.assertEquals('localhost', kwargs[0]['host'])
+        self.assertEquals(1234, kwargs[0]['port'])
+        self.assertEquals({'Content-Type': 'text/xml', 'Content-Length': len(kwargs[0]['body'])}, kwargs[0]['headers'])
+
+    def testQueryResponseTime(self):
+        response, readData = self.executeQueryResponse("meresco.exists:true", response=RESPONSE % "")
+        self.assertEquals(6, response.queryTime)
+
+    def testSolrGivesSpellCheckResults(self):
+        total, hits, suggestions, (path, body) = self.executeQuery(query="__all__:aap AND __all__:bo", response=RESPONSE % SUGGESTIONS, suggestionsCount=2, suggestionsQuery="aap AND bo")
+        self.assertQueryArguments('spellcheck.count=2&rows=10&spellcheck=true&spellcheck.q=aap+AND+bo&q=__all__%3Aaap+AND+__all__%3Abo&start=0', body)
+        self.assertEquals(['1','3','5'], hits)
+        self.assertEquals({'aap': (0, 3, ['aapje', 'raap']), 'bo': (8, 10, ['bio', 'bon'])}, suggestions)
+
+    def testFieldnames(self):
+        readData = []
+        def read(path):
+            readData.append(path)
+        self._solrInterface._read = read
+        gen = self._solrInterface.fieldnames()
+        gen.next()
+        try:
+            gen.send(FIELDNAMES_RESPONSE)
+        except StopIteration, e:
+            (response,) = e.args 
+        self.assertEquals(['/solr/admin/luke'], readData)
+        self.assertEquals(['__all__', '__exists__', '__id__', '__timestamp__', 'field0', 'field1', 'untokenized.field0'], response.hits)
+
+    def testPassFilterQuery(self):
+        total, hits, (path, body) = self.executeQuery("*", filterQuery="field:value", response=RESPONSE) 
+        self.assertQueryArguments("q=*&fq=field:value&start=0&rows=10", body)
+        total, hits, (path, body) = self.executeQuery("*", filterQuery="field:http\://host.nl", response=RESPONSE) 
+        self.assertQueryArguments("q=*&fq=field:http\://host.nl&start=0&rows=10", body)
+
+    def executeQueryResponse(self, query, response, solrInterface=None, **kwargs):
+        if solrInterface is None:
+            solrInterface = self._solrInterface
+        sendData = []
+        def send(path, body, contentType="default"):
+            sendData.append((path, body))
+        solrInterface._send = send
+        gen = solrInterface.executeQuery(luceneQueryString=query, **kwargs)
+        gen.next()
+        try:
+            gen.send(response)
+        except StopIteration, e:
+            (response,) = e.args 
+            return response, sendData
+
+    def executePrefixSearch(self, response, solrInterface=None, **kwargs):
+        if solrInterface is None:
+            solrInterface = self._solrInterface
+        sendData = []
+        def send(path, body, contentType="default"):
+            sendData.append((path, body))
+        solrInterface._send = send
+        gen = solrInterface.prefixSearch(**kwargs)
+        gen.next()
+        try:
+            gen.send(response)
+        except StopIteration, e:
+            (response,) = e.args 
+            return response, sendData[0]
+    
+    def executeQuery(self, query, response, solrInterface=None, **kwargs):
+        response, sendData = self.executeQueryResponse(query, response, solrInterface=solrInterface, **kwargs)
+        result = [response.total, response.hits]
+        if getattr(response, 'drilldownData', None) is not None:
+            result.append(response.drilldownData)
+        if getattr(response, 'suggestions', None) is not None:
+            result.append(response.suggestions)
+        result.append(sendData[0])
+        return result
+
+    def _returnValueFromGenerator(self, g, serverResponses, responseStatus='200'):
+        for response in serverResponses:
+            s = g.next()
+            self.assertEquals(Suspend, type(s))
+            s(CallTrace('reactor'), lambda: None)
+            s.resume('HTTP/1.1 %s\r\n\r\n%s' % (responseStatus, response))
+        try:
+            g.next()
+            self.fail("expected StopIteration")
+        except StopIteration, e:
+            if len(e.args) > 0:
+                return e.args[0]
+    
+    def assertQueryArguments(self, arguments1, arguments2):
+        arguments1 = parse_qs(arguments1, keep_blank_values=True)
+        arguments2 = parse_qs(arguments2, keep_blank_values=True)
+        self.assertEquals(arguments1, arguments2)
+
+RESPONSE = """
+<response>
+    <lst name="responseHeader">
+        <int name="status">0</int>
+        <int name="QTime">6</int>
+        <lst name="params">
+            <str name="indent">on</str>
+            <str name="start">0</str>
+            <str name="q">meresco.exists:true</str>
+            <str name="version">2.2</str>
+            <str name="rows">10</str>
+        </lst>
+    </lst>
+    <result name="response" numFound="3" start="0">
+        <doc>
+            <str name="__id__">1</str>
+        </doc>
+        <doc>
+            <str name="__id__">3</str>
+        </doc>
+        <doc>
+            <str name="__id__">5</str>
+        </doc>
+    </result>
+    %s
+</response>"""
+
+TERMS_PREFIX_RESPONSE = """
+<response>
+    <lst name="responseHeader">
+        <int name="status">0</int>
+        <int name="QTime">76</int>
+    </lst>
+    <lst name="terms">
+        <lst name="afield">
+            <int name="hoogte">221194</int>
+            <int name="holland">162140</int>
+            <int name="hoe">57391</int>
+            <int name="horticulture">30914</int>
+            <int name="houden">15239</int>
+            <int name="housing">14980</int>
+            <int name="houdt">14178</int>
+            <int name="hoge">12870</int>
+            <int name="hoofd">12583</int>
+            <int name="houten">10945</int>
+        </lst>
+    </lst>
+</response>"""
+
+SUGGESTIONS="""
+<lst name="spellcheck">
+    <lst name="suggestions">
+        <lst name="aap">
+            <int name="numFound">2</int>
+            <int name="startOffset">0</int>
+            <int name="endOffset">3</int>
+            <arr name="suggestion">
+                <str>aapje</str>
+                <str>raap</str>
+            </arr>
+        </lst>
+        <lst name="bo">
+            <int name="numFound">2</int>
+            <int name="startOffset">8</int>
+            <int name="endOffset">10</int>
+            <arr name="suggestion">
+                <str>bio</str>
+                <str>bon</str>
+            </arr>
+        </lst>
+    </lst>
+</lst>"""
+
+FACET_COUNTS="""
+<lst name="facet_counts">
+    <lst name="facet_queries"/>
+    <lst name="facet_fields">
+        <lst name="__all__">
+            <int name="term_0">1</int>
+            <int name="term_1">2</int>
+        </lst>
+        <lst name="__other__">
+            <int name="term_2">3</int>
+            <int name="term_3">4</int>
+        </lst>
+    </lst>
+    <lst name="facet_dates"/>
+    <lst name="facet_ranges"/>
+</lst>"""
+
+FACET_COUNTS_SAME_FIELD_TWICE="""
+<lst name="facet_counts">
+    <lst name="facet_queries"/>
+    <lst name="facet_fields">
+        <lst name="__all__">
+            <int name="term_0">1</int>
+            <int name="term_1">2</int>
+        </lst>
+        <lst name="__all__">
+            <int name="term_0">1</int>
+            <int name="term_1">2</int>
+        </lst>
+    </lst>
+    <lst name="facet_dates"/>
+    <lst name="facet_ranges"/>
+</lst>"""
+
+FIELDNAMES_RESPONSE="""
+<response>
+<lst name="responseHeader">
+<int name="status">0</int>
+<int name="QTime">4701</int>
+</lst>
+<lst name="index">
+<int name="numDocs">265054</int>
+<int name="maxDoc">332132</int>
+<int name="numTerms">1972551</int>
+<long name="version">1348587033477</long>
+<int name="segmentCount">11</int>
+<bool name="current">true</bool>
+<bool name="hasDeletions">true</bool>
+<str name="directory">
+org.apache.lucene.store.MMapDirectory:org.apache.lucene.store.MMapDirectory@/data/dev/index-state/14e40aff-9ee8-4b6c-826c-e0fb82232e33-solr/cores/records/data/index lockFactory=org.apache.lucene.store.NativeFSLockFactory@1c851ed
+</str>
+<date name="lastModified">2012-09-26T22:23:31Z</date>
+</lst>
+<lst name="fields">
+<lst name="__all__">...</lst>
+<lst name="__exists__">...</lst>
+<lst name="__id__">...</lst>
+<lst name="__timestamp__">...</lst>
+<lst name="field0">...</lst>
+<lst name="field1">...</lst>
+<lst name="untokenized.field0">...</lst>
+</lst>
+<lst name="info">...</lst>
+</response>
+"""
diff --git a/test/solrlucenequerycomposertest.py b/test/solrlucenequerycomposertest.py
new file mode 100644
index 0000000..442100f
--- /dev/null
+++ b/test/solrlucenequerycomposertest.py
@@ -0,0 +1,113 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from seecr.test import SeecrTestCase
+
+from cqlparser import parseString, UnsupportedCQL
+from meresco.solr.solrlucenequerycomposer import SolrLuceneQueryComposer
+
+class SolrLuceneQueryComposerTest(SeecrTestCase):
+    def testOne(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0)])
+        self.assertEquals('__all__:"term"', self.cql2lucene("term"))
+        self.assertEquals('(__all__:"fiets" AND __all__:"auto")', self.cql2lucene("fiets AND auto"))
+        self.assertEquals('__all__:"fiets auto"', self.cql2lucene('"fiets auto"'))
+        self.assertEquals('__all__:fi*', self.cql2lucene('"fi*"'))
+        self.assertEquals('__all__:fi*', self.cql2lucene('fi*'))
+        self.assertEquals('__all__:f*ts', self.cql2lucene('"f*ts"'))
+        self.assertEquals('__all__:*ts', self.cql2lucene('*ts'))
+        self.assertEquals('(__all__:"fiets" AND (__all__:"auto" OR __all__:"boot"))', self.cql2lucene('fiets AND (auto OR boot)'))
+        self.assertEquals('((__all__:"fiets" AND __all__:"auto") OR __all__:"boot")', self.cql2lucene('fiets AND auto OR boot'))
+        self.assertEquals('(__all__:"fiets" AND (__all__:"auto" OR __all__:"boot"))', self.cql2lucene('fiets AND (auto OR boot)'))
+        self.assertEquals('((__all__:"fiets" AND __all__:"auto") OR (__all__:"boot" AND __all__:"other"))', self.cql2lucene('(fiets AND auto) OR (boot AND other)'))
+        self.assertEquals('(__all__:"fiets" OR (__all__:"auto" AND __all__:"boot"))', self.cql2lucene('fiets OR auto AND boot'))
+
+    def testEscaping(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
+        self.assertEquals('field:"term:term1"', self.cql2lucene('field="term:term1"'))
+        self.assertEquals('field:"term:term1"', self.cql2lucene('field exact "term:term1"'))
+        self.assertEquals('field:"term"', self.cql2lucene('field exact term'))
+        self.assertEquals(r'dc\:title:"term"', self.cql2lucene('dc:title exact term'))
+
+    def testSolrKeywords(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
+        self.assertEquals('field:"NOT"', self.cql2lucene('field="NOT"'))
+        self.assertEquals('field:"AND"', self.cql2lucene('field="AND"'))
+        self.assertEquals('field:"OR"', self.cql2lucene('field="OR"'))
+        # Escaping Special Characters
+        # Lucene supports escaping special characters that are part of the query syntax. The current list special characters are
+        # + - && || ! ( ) { } [ ] ^ " ~ * ? : \
+        # To escape these character use the \ before the character.
+        self.assertEquals('field:"-"', self.cql2lucene('field=-'))
+        self.assertEquals('field:"+"', self.cql2lucene('field=+'))
+        self.assertEquals('field:"!"', self.cql2lucene('field="!"'))
+        self.assertEquals('field:"!"', self.cql2lucene('field=!'))
+        self.assertEquals('field:"&&"', self.cql2lucene('field="&&"'))
+        self.assertEquals(r'field:"\""', self.cql2lucene(r'field="\""'))
+        self.assertEquals(r'field:"fiets!"', self.cql2lucene(r'field="fiets!"'))
+        self.assertEquals(r'field:"fiets!"', self.cql2lucene(r'field=fiets!'))
+
+    def testPrefixQuery(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0)])
+        self.assertEquals('__all__:term*', self.cql2lucene('term*'))
+        self.assertEquals('__all__:term*', self.cql2lucene('TERM*'))
+        self.assertEquals('*:*', self.cql2lucene('*'))
+
+    def testMultipleUnqualifiedTermFields(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 1.0), ("__extra__", 1.0)])
+        self.assertEquals('(__all__:"term" OR __extra__:"term")', self.cql2lucene("term"))
+        self.assertEquals('((__all__:"term" OR __extra__:"term") AND (__all__:"otherterm" OR __extra__:"otherterm"))', self.cql2lucene("term AND otherterm"))
+
+    def testBoost(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 4.0)])
+        self.assertEquals('__all__:"term"^4.0', self.cql2lucene("term"))
+
+        self.assertEquals('field:"term"^3.5', self.cql2lucene("field=/boost=3.5 term"))
+
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("__all__", 4.0), ("__extra__", 2.0), ("__uri__", 1.0)])
+        self.assertEquals('(__all__:"term"^4.0 OR __extra__:"term"^2.0 OR __uri__:"term")', self.cql2lucene("term"))
+
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[("all", 1)])
+        self.assertEquals('field:"term"^2.0', self.cql2lucene("field exact/boost=2 term"))
+
+    def testRangeQuery(self):
+        self.printer = SolrLuceneQueryComposer(unqualifiedTermFields=[])
+        self.assertEquals('field:{* TO 5}', self.cql2lucene("field<5"))
+        self.assertEquals('field:[* TO 5]', self.cql2lucene("field<=5"))
+        self.assertEquals('field:[5 TO *]', self.cql2lucene("field>=5"))
+        self.assertEquals('field:{5 TO *}', self.cql2lucene("field>5"))
+        self.assertEquals('(field:{5 TO *} AND field:[* TO 10])', self.cql2lucene("field>5 AND field<=10"))
+
+    def testUnsupportedCQL(self):
+        printer=SolrLuceneQueryComposer(unqualifiedTermFields=[("all", 1)])
+        ast = parseString("field any term")
+        try:
+            printer.compose(ast)
+            self.fail("must raise UnsupportedCQL")
+        except UnsupportedCQL, e:
+            self.assertEquals("Only =, ==, exact, <, <=, > and >= are supported.", str(e))
+
+    def cql2lucene(self, cql):
+        return self.printer.compose(parseString(cql))
diff --git a/testsetup.sh b/testsetup.sh
new file mode 100755
index 0000000..bcc3e70
--- /dev/null
+++ b/testsetup.sh
@@ -0,0 +1,59 @@
+#!/bin/bash
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+set -o errexit
+
+rm -rf tmp build
+
+fullPythonVersion=python2.6
+${fullPythonVersion} setup.py install --root tmp
+
+
+VERSION="x.y.z"
+
+find tmp -name '*.py' -exec sed -r -e \
+    "/DO_NOT_DISTRIBUTE/ d;
+    s/\\\$Version:[^\\\$]*\\\$/\\\$Version: ${VERSION}\\\$/" -i '{}' \;
+
+if [ -f /etc/debian_version ]; then
+    SITE_PACKAGE_DIR=`pwd`/tmp/usr/local/lib/${fullPythonVersion}/dist-packages
+else
+    SITE_PACKAGE_DIR=`pwd`/tmp/usr/lib/${fullPythonVersion}/site-packages
+fi
+
+cp meresco/__init__.py ${SITE_PACKAGE_DIR}/meresco
+export PYTHONPATH=${SITE_PACKAGE_DIR}:${PYTHONPATH}
+cp -r test tmp/test
+
+set +o errexit
+(
+cd tmp/test
+./alltests.sh
+)
+set -o errexit
+
+rm -rf tmp build
+
-- 
1.7.2.5


From 2b0ede32e88355337df75e6b49e08d3ef7fab1f9 Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Wed, 12 Dec 2012 11:57:42 +0100
Subject: [PATCH 42/66] HM/TJ: integrated server into meresco.solr.

---
 bin/start-solr                                 |   76 ++++
 bin/start-solr.py                              |    1 +
 deps.txt                                       |    2 +
 meresco/solr/solrconfig.py                     |  155 +++++++
 server/bin/start-solr                          |   76 ----
 server/bin/start-solr.py                       |    1 -
 server/deps.txt                                |    2 -
 server/solrrun/__init__.py                     |   24 --
 server/solrrun/solrconfig.py                   |  155 -------
 server/test/_alltests.py                       |   39 --
 server/test/alltests.sh                        |   30 --
 server/test/sitecustomize.py                   |    2 -
 server/test/solrruntest.py                     |  240 -----------
 server/usr-share/core-data/conf/schema.xml     |   51 ---
 server/usr-share/core-data/conf/solrconfig.xml |  112 -----
 server/usr-share/solr-data/contexts/solr.xml   |    8 -
 server/usr-share/solr-data/etc/jetty.xml       |  173 --------
 server/usr-share/solr-data/etc/webdefault.xml  |  527 ------------------------
 server/usr-share/solr-data/solr.xml            |    4 -
 server/usr-share/solr-data/start.config        |  162 --------
 server/usr-share/solrconfig.d/autocomplete.xml |   13 -
 server/usr-share/solrconfig.d/suggestions.xml  |   17 -
 test/_alltests.py                              |    1 +
 test/solrconfigtest.py                         |  241 +++++++++++
 usr-share/core-data/conf/schema.xml            |   51 +++
 usr-share/core-data/conf/solrconfig.xml        |  112 +++++
 usr-share/solr-data/contexts/solr.xml          |    8 +
 usr-share/solr-data/etc/jetty.xml              |  173 ++++++++
 usr-share/solr-data/etc/webdefault.xml         |  527 ++++++++++++++++++++++++
 usr-share/solr-data/solr.xml                   |    4 +
 usr-share/solr-data/start.config               |  162 ++++++++
 usr-share/solrconfig.d/autocomplete.xml        |   13 +
 usr-share/solrconfig.d/suggestions.xml         |   17 +
 33 files changed, 1543 insertions(+), 1636 deletions(-)
 create mode 100755 bin/start-solr
 create mode 120000 bin/start-solr.py
 create mode 100644 meresco/solr/solrconfig.py
 delete mode 100755 server/bin/start-solr
 delete mode 120000 server/bin/start-solr.py
 delete mode 100644 server/deps.txt
 delete mode 100644 server/solrrun/__init__.py
 delete mode 100644 server/solrrun/solrconfig.py
 delete mode 100644 server/test/_alltests.py
 delete mode 100755 server/test/alltests.sh
 delete mode 100644 server/test/sitecustomize.py
 delete mode 100644 server/test/solrruntest.py
 delete mode 100644 server/usr-share/core-data/conf/schema.xml
 delete mode 100644 server/usr-share/core-data/conf/solrconfig.xml
 delete mode 100644 server/usr-share/solr-data/contexts/solr.xml
 delete mode 100644 server/usr-share/solr-data/etc/jetty.xml
 delete mode 100644 server/usr-share/solr-data/etc/webdefault.xml
 delete mode 100644 server/usr-share/solr-data/solr.xml
 delete mode 100644 server/usr-share/solr-data/start.config
 delete mode 100644 server/usr-share/solrconfig.d/autocomplete.xml
 delete mode 100644 server/usr-share/solrconfig.d/suggestions.xml
 create mode 100644 test/solrconfigtest.py
 create mode 100644 usr-share/core-data/conf/schema.xml
 create mode 100644 usr-share/core-data/conf/solrconfig.xml
 create mode 100644 usr-share/solr-data/contexts/solr.xml
 create mode 100644 usr-share/solr-data/etc/jetty.xml
 create mode 100644 usr-share/solr-data/etc/webdefault.xml
 create mode 100644 usr-share/solr-data/solr.xml
 create mode 100644 usr-share/solr-data/start.config
 create mode 100644 usr-share/solrconfig.d/autocomplete.xml
 create mode 100644 usr-share/solrconfig.d/suggestions.xml

diff --git a/bin/start-solr b/bin/start-solr
new file mode 100755
index 0000000..f57914f
--- /dev/null
+++ b/bin/start-solr
@@ -0,0 +1,76 @@
+#!/usr/bin/env python2.6
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+import sys                # DO_NOT_DISTRIBUTE
+sys.path.insert(0, '..')  # DO_NOT_DISTRIBUTE
+
+from sys import argv, exit
+from os import listdir
+from os.path import join
+from optparse import OptionParser, Option
+from subprocess import Popen
+
+from meresco.solr.solrconfig import SolrConfig, solrUsrShareDir
+
+
+def parseArguments(args):
+    features = [f.rsplit('.', 1)[0] for f in listdir(join(solrUsrShareDir, 'solrconfig.d'))]
+    parser = OptionParser(description="""Available features: %s.""" % ', '.join(features), epilog="""
+Example config: 
+{
+    "core1": {},
+    "core2": {"feature": {"option": "value"}},
+    "core3": {"booleanFeature": true},
+    "core4": {"schemaExtension": [
+        {"extensionType":"fieldTypeFilter", "fieldTypeName":"text_ws", "filterClass":"solr.ASCIIFoldingFilterFactory"}
+    ]},
+    "core5": {"additionalSolrConfig": "full path to additional solrconfig.xml"}
+}
+""")
+    parser.format_epilog = lambda formatter: parser.epilog
+    parser.add_option(Option('', '--port', type='int', help='Solr port number', dest='port'))
+    parser.add_option(Option('', '--stateDir', type='string', help='Solr state directory', dest='stateDir'))
+    parser.add_option(Option('', '--config', type='string', help="Filename with json configuration file for solr", dest="config"))
+    parser.add_option(Option('', '--javaMX', type='string', help="Value for -Xmx setting for java", dest="javaMX", default="1024M"))
+    options, arguments = parser.parse_args(args)
+    if not all([options.port, options.stateDir, options.config]):
+        parser.print_help()
+        raise ValueError("Missing required option (all except javaMX are required)")
+    return options, arguments
+
+
+if __name__ == '__main__':
+    args = argv[1:]
+    options, arguments = parseArguments(args)
+
+    if Popen(["java -version 2>&1 | grep 'libgcj' > /dev/null 2>&1"], shell=True).wait() == 0:
+        print "Don't use GCJ as the default java JRE."
+        exit(1)
+
+    solrConfig = SolrConfig(stateDir=options.stateDir, port=options.port, configFile=options.config)
+    solrConfig.start(javaMX=options.javaMX)
+
+
diff --git a/bin/start-solr.py b/bin/start-solr.py
new file mode 120000
index 0000000..67f9338
--- /dev/null
+++ b/bin/start-solr.py
@@ -0,0 +1 @@
+start-solr
\ No newline at end of file
diff --git a/deps.txt b/deps.txt
index cc3bafa..ffb7cb1 100644
--- a/deps.txt
+++ b/deps.txt
@@ -6,3 +6,5 @@ python-cqlparser (>= 1.7)
 python-cqlparser (< 1.8)
 python-weightless-core (>= 0.7)
 python-weightless-core (<< 0.8)
+solr4.0.0
+python-lxml
diff --git a/meresco/solr/solrconfig.py b/meresco/solr/solrconfig.py
new file mode 100644
index 0000000..5fa4b28
--- /dev/null
+++ b/meresco/solr/solrconfig.py
@@ -0,0 +1,155 @@
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from os import makedirs, listdir, system, execvp
+from os.path import dirname, abspath, isdir, isfile, join
+from shutil import copytree, rmtree
+from re import compile, MULTILINE
+from StringIO import StringIO
+from lxml.etree import parse, SubElement, tostring
+from simplejson import load as jsonLoad
+
+
+mydir = dirname(abspath(__file__))
+solrUsrShareDir = '/usr/share/solr4.0.0-run'
+solrUsrShareDir = join(dirname(dirname(mydir)), 'usr-share') # DO_NOT_DISTRIBUTE
+SOLR_VERSION = "4.0.0"
+
+
+class SolrConfig(object):
+    def __init__(self, stateDir, port, configFile):
+        self.config=jsonLoad(open(configFile))
+        self.stateDir = stateDir
+        self.port = port
+        self.configBasedir = dirname(abspath(configFile))
+        assert all(type(v) == dict for v in self.config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
+
+        if not isdir(self.stateDir):
+            copytree(join(solrUsrShareDir, 'solr-data'), self.stateDir)
+        else:
+            newMatchVersion = parse(open(join(solrUsrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+            for coreDir in listdir(join(self.stateDir, 'cores')):
+                currentMatchVersion = parse(open(join(self.stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+                if currentMatchVersion != newMatchVersion:
+                    raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
+
+        self._setupJettyXml()
+        self._setupStartConfig()
+        self._setupSolrXml()
+        self._setupCoreData()
+
+        for core, features in self.config.items():
+            for feature, options in features.items():
+                self._setupFeature(name=feature, core=core, options=options)
+
+    def _setupFeatureSchemaExtension(self, core, options):
+        schemaXmlFile = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
+        schemaXml = parse(open(schemaXmlFile))
+        for option in options:
+            if option.get('extensionType') == 'fieldTypeFilter':
+                fieldTypeName = option['fieldTypeName']
+                fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
+                assert len(fieldTypes) == 1
+                analyzer = fieldTypes[0].xpath('analyzer')[0]
+                SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
+
+        with open(schemaXmlFile, 'w') as f:
+            f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
+
+    def _setupFeature(self, name, core, options):
+        if name == 'schemaExtension':
+            self._setupFeatureSchemaExtension(core=core, options=options)
+            return
+        if name == 'additionalSolrConfig':
+            filepath = options if options.startswith('/') else join(self.configBasedir, options)
+            self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
+            return
+        if options == False:
+            return
+        featureFilename = join(solrUsrShareDir, 'solrconfig.d', '%s.xml' % name)
+        if not isfile(featureFilename):
+            raise ValueError("Unknown feature '%s'" % name)
+
+        feature = open(featureFilename).read()
+        if type(options) is dict:
+            feature = feature % options
+        feature_xml = parse(StringIO(feature))
+        self._extendSolrConfig(core=core, lxmlElementList=feature_xml.xpath('/config/*'))
+
+    def _extendSolrConfig(self, core, lxmlElementList):
+        if not lxmlElementList:
+            raise ValueError("No elements found with which to extend the solrconfig.xml")
+        solrconfig_file = join(self.stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+        core_sorlconfig = parse(open(solrconfig_file))
+        core_sorlconfig.getroot().extend(lxmlElementList)
+        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
+    def _setupCoreData(self):
+        cores = self.config.keys()
+        solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
+        coresElement = solr_xml.xpath("/solr/cores")[0]
+        [coresElement.remove(child) for child in coresElement.getchildren()]
+        for core in cores:
+            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
+            coreDir = join(self.stateDir, 'cores', core)
+            isdir(coreDir) and rmtree(coreDir)
+            copytree(join(solrUsrShareDir, 'core-data'), coreDir)
+            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
+            schema_xml = parse(open(schema_xml_path))
+            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
+            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
+
+        open(join(self.stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
+
+    def _setupJettyXml(self):
+        system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
+                self.port,
+                join(self.stateDir, 'etc', 'jetty.xml')
+            ))
+
+    def _setupStartConfig(self):
+        startConfigPath = join(self.stateDir, 'start.config')
+        startConfig = oldStartConfig = open(startConfigPath).read()
+        startConfig = compile('^jetty\.home=.*$', flags=MULTILINE).sub('jetty.home=' + self.stateDir, startConfig)
+        startConfig = compile('^jetty\.lib=.*$', flags=MULTILINE).sub('jetty.lib=/usr/share/java/solr%s' % SOLR_VERSION, startConfig)
+        open(startConfigPath, 'w').write(startConfig)
+
+    def _setupSolrXml(self):
+        system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, self.stateDir))
+
+    def start(self, javaMX):
+        self._execvp(
+            'java', [
+                'java',
+                '-Xmx%s' % javaMX, 
+                '-Djetty.port=%s' % self.port,
+                '-DSTART=%s/start.config' % self.stateDir,
+                '-Dsolr.solr.home=%s' % self.stateDir, 
+                '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
+            ])
+
+    def _execvp(self, *args, **kwargs):
+        execvp(*args, **kwargs)
+
diff --git a/server/bin/start-solr b/server/bin/start-solr
deleted file mode 100755
index 85948c2..0000000
--- a/server/bin/start-solr
+++ /dev/null
@@ -1,76 +0,0 @@
-#!/usr/bin/env python2.6
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-import sys                # DO_NOT_DISTRIBUTE
-sys.path.insert(0, '..')  # DO_NOT_DISTRIBUTE
-
-from sys import argv, exit
-from os import listdir
-from os.path import join
-from optparse import OptionParser, Option
-from subprocess import Popen
-
-from solrrun.solrconfig import SolrConfig, solrUsrShareDir
-
-
-def parseArguments(args):
-    features = [f.rsplit('.', 1)[0] for f in listdir(join(solrUsrShareDir, 'solrconfig.d'))]
-    parser = OptionParser(description="""Available features: %s.""" % ', '.join(features), epilog="""
-Example config: 
-{
-    "core1": {},
-    "core2": {"feature": {"option": "value"}},
-    "core3": {"booleanFeature": true},
-    "core4": {"schemaExtension": [
-        {"extensionType":"fieldTypeFilter", "fieldTypeName":"text_ws", "filterClass":"solr.ASCIIFoldingFilterFactory"}
-    ]},
-    "core5": {"additionalSolrConfig": "full path to additional solrconfig.xml"}
-}
-""")
-    parser.format_epilog = lambda formatter: parser.epilog
-    parser.add_option(Option('', '--port', type='int', help='Solr port number', dest='port'))
-    parser.add_option(Option('', '--stateDir', type='string', help='Solr state directory', dest='stateDir'))
-    parser.add_option(Option('', '--config', type='string', help="Filename with json configuration file for solr", dest="config"))
-    parser.add_option(Option('', '--javaMX', type='string', help="Value for -Xmx setting for java", dest="javaMX", default="1024M"))
-    options, arguments = parser.parse_args(args)
-    if not all([options.port, options.stateDir, options.config]):
-        parser.print_help()
-        raise ValueError("Missing required option (all except javaMX are required)")
-    return options, arguments
-
-
-if __name__ == '__main__':
-    args = argv[1:]
-    options, arguments = parseArguments(args)
-
-    if Popen(["java -version 2>&1 | grep 'libgcj' > /dev/null 2>&1"], shell=True).wait() == 0:
-        print "Don't use GCJ as the default java JRE."
-        exit(1)
-
-    solrConfig = SolrConfig(stateDir=options.stateDir, port=options.port, configFile=options.config)
-    solrConfig.start(javaMX=options.javaMX)
-
-
diff --git a/server/bin/start-solr.py b/server/bin/start-solr.py
deleted file mode 120000
index 67f9338..0000000
--- a/server/bin/start-solr.py
+++ /dev/null
@@ -1 +0,0 @@
-start-solr
\ No newline at end of file
diff --git a/server/deps.txt b/server/deps.txt
deleted file mode 100644
index c843e32..0000000
--- a/server/deps.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-solr4.0.0
-python-lxml
diff --git a/server/solrrun/__init__.py b/server/solrrun/__init__.py
deleted file mode 100644
index 6c55ee5..0000000
--- a/server/solrrun/__init__.py
+++ /dev/null
@@ -1,24 +0,0 @@
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
diff --git a/server/solrrun/solrconfig.py b/server/solrrun/solrconfig.py
deleted file mode 100644
index 41bd7da..0000000
--- a/server/solrrun/solrconfig.py
+++ /dev/null
@@ -1,155 +0,0 @@
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from os import makedirs, listdir, system, execvp
-from os.path import dirname, abspath, isdir, isfile, join
-from shutil import copytree, rmtree
-from re import compile, MULTILINE
-from StringIO import StringIO
-from lxml.etree import parse, SubElement, tostring
-from simplejson import load as jsonLoad
-
-
-mydir = dirname(abspath(__file__))
-solrUsrShareDir = '/usr/share/solr4.0.0-run'
-solrUsrShareDir = join(dirname(mydir), 'usr-share') # DO_NOT_DISTRIBUTE
-SOLR_VERSION = "4.0.0"
-
-
-class SolrConfig(object):
-    def __init__(self, stateDir, port, configFile):
-        self.config=jsonLoad(open(configFile))
-        self.stateDir = stateDir
-        self.port = port
-        self.configBasedir = dirname(abspath(configFile))
-        assert all(type(v) == dict for v in self.config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
-
-        if not isdir(self.stateDir):
-            copytree(join(solrUsrShareDir, 'solr-data'), self.stateDir)
-        else:
-            newMatchVersion = parse(open(join(solrUsrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-            for coreDir in listdir(join(self.stateDir, 'cores')):
-                currentMatchVersion = parse(open(join(self.stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-                if currentMatchVersion != newMatchVersion:
-                    raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
-
-        self._setupJettyXml()
-        self._setupStartConfig()
-        self._setupSolrXml()
-        self._setupCoreData()
-
-        for core, features in self.config.items():
-            for feature, options in features.items():
-                self._setupFeature(name=feature, core=core, options=options)
-
-    def _setupFeatureSchemaExtension(self, core, options):
-        schemaXmlFile = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
-        schemaXml = parse(open(schemaXmlFile))
-        for option in options:
-            if option.get('extensionType') == 'fieldTypeFilter':
-                fieldTypeName = option['fieldTypeName']
-                fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
-                assert len(fieldTypes) == 1
-                analyzer = fieldTypes[0].xpath('analyzer')[0]
-                SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
-
-        with open(schemaXmlFile, 'w') as f:
-            f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
-
-    def _setupFeature(self, name, core, options):
-        if name == 'schemaExtension':
-            self._setupFeatureSchemaExtension(core=core, options=options)
-            return
-        if name == 'additionalSolrConfig':
-            filepath = options if options.startswith('/') else join(self.configBasedir, options)
-            self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
-            return
-        if options == False:
-            return
-        featureFilename = join(solrUsrShareDir, 'solrconfig.d', '%s.xml' % name)
-        if not isfile(featureFilename):
-            raise ValueError("Unknown feature '%s'" % name)
-
-        feature = open(featureFilename).read()
-        if type(options) is dict:
-            feature = feature % options
-        feature_xml = parse(StringIO(feature))
-        self._extendSolrConfig(core=core, lxmlElementList=feature_xml.xpath('/config/*'))
-
-    def _extendSolrConfig(self, core, lxmlElementList):
-        if not lxmlElementList:
-            raise ValueError("No elements found with which to extend the solrconfig.xml")
-        solrconfig_file = join(self.stateDir, 'cores', core, 'conf', 'solrconfig.xml')
-        core_sorlconfig = parse(open(solrconfig_file))
-        core_sorlconfig.getroot().extend(lxmlElementList)
-        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
-
-    def _setupCoreData(self):
-        cores = self.config.keys()
-        solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
-        coresElement = solr_xml.xpath("/solr/cores")[0]
-        [coresElement.remove(child) for child in coresElement.getchildren()]
-        for core in cores:
-            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
-            coreDir = join(self.stateDir, 'cores', core)
-            isdir(coreDir) and rmtree(coreDir)
-            copytree(join(solrUsrShareDir, 'core-data'), coreDir)
-            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
-            schema_xml = parse(open(schema_xml_path))
-            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
-            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
-
-        open(join(self.stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
-
-    def _setupJettyXml(self):
-        system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
-                self.port,
-                join(self.stateDir, 'etc', 'jetty.xml')
-            ))
-
-    def _setupStartConfig(self):
-        startConfigPath = join(self.stateDir, 'start.config')
-        startConfig = oldStartConfig = open(startConfigPath).read()
-        startConfig = compile('^jetty\.home=.*$', flags=MULTILINE).sub('jetty.home=' + self.stateDir, startConfig)
-        startConfig = compile('^jetty\.lib=.*$', flags=MULTILINE).sub('jetty.lib=/usr/share/java/solr%s' % SOLR_VERSION, startConfig)
-        open(startConfigPath, 'w').write(startConfig)
-
-    def _setupSolrXml(self):
-        system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, self.stateDir))
-
-    def start(self, javaMX):
-        self._execvp(
-            'java', [
-                'java',
-                '-Xmx%s' % javaMX, 
-                '-Djetty.port=%s' % self.port,
-                '-DSTART=%s/start.config' % self.stateDir,
-                '-Dsolr.solr.home=%s' % self.stateDir, 
-                '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
-            ])
-
-    def _execvp(self, *args, **kwargs):
-        execvp(*args, **kwargs)
-
diff --git a/server/test/_alltests.py b/server/test/_alltests.py
deleted file mode 100644
index fe173da..0000000
--- a/server/test/_alltests.py
+++ /dev/null
@@ -1,39 +0,0 @@
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-import os, sys
-os.system('find .. -name "*.pyc" | xargs rm -f')
-
-from glob import glob
-for path in glob('../deps.d/*'):
-    sys.path.insert(0, path)
-sys.path.insert(0, '../bin')
-
-from solrruntest import SolrRunTest
-
-if __name__ == '__main__':
-    from unittest import main
-    main()
-
diff --git a/server/test/alltests.sh b/server/test/alltests.sh
deleted file mode 100755
index 178c3c8..0000000
--- a/server/test/alltests.sh
+++ /dev/null
@@ -1,30 +0,0 @@
-#!/bin/bash
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2005-2010 Seek You Too B.V. (CQ2) http://www.cq2.nl
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-export LANG=en_US.UTF-8
-export PYTHONPATH=.:$PYTHONPATH
-python _alltests.py "$@"
diff --git a/server/test/sitecustomize.py b/server/test/sitecustomize.py
deleted file mode 100644
index f110c26..0000000
--- a/server/test/sitecustomize.py
+++ /dev/null
@@ -1,2 +0,0 @@
-from sys import setdefaultencoding
-setdefaultencoding('utf-8')
diff --git a/server/test/solrruntest.py b/server/test/solrruntest.py
deleted file mode 100644
index 8a8d9c9..0000000
--- a/server/test/solrruntest.py
+++ /dev/null
@@ -1,240 +0,0 @@
-# -*- coding: utf-8 -*-
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-import sys
-from unittest import main
-from StringIO import StringIO
-from os import mkdir, listdir, system
-from os.path import join, dirname, abspath, basename, isdir
-from shutil import rmtree
-from simplejson import dump as jsonDump
-from lxml.etree import parse, tostring
-
-from seecr.test import SeecrTestCase
-start_solr = __import__('start-solr')
-
-
-mydir = dirname(abspath(__file__))
-version = "4.0.0"
-
-class SolrRunTest(SeecrTestCase):
-    def testParseArguments(self):
-        options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--config=/tmp/config.json'])
-        self.assertEquals(8042, options.port)
-        self.assertEquals('/tmp', options.stateDir)
-        self.assertEquals('/tmp/config.json', options.config)
-
-    def testIncompleteArguments(self):
-        stdout_mock = StringIO()
-        sys.stdout = stdout_mock
-        try:
-            self.assertRaises(ValueError, lambda: start_solr.parseArguments(['--port=8042', '--stateDir=/tmp']))
-        finally:
-            sys.stdout = sys.__stdout__
-
-    def testSetupSolrConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
-        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
-        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
-        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
-        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
-
-        f = open(join(solrDataDir, 'start.config'))
-        for line in f:
-            if line.startswith('jetty.home'):
-                break
-        else:
-            self.fail("No jetty.home line found")
-        f.close()
-        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('jetty.lib=/usr/share/java/solr4.0.0' in open(join(solrDataDir, 'start.config')).read())
-
-        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
-        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
-
-        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
-        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-        self.assertEquals(set([u'córë2', 'core1']), set(solr_xml.xpath("//core/@name")))
-        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
-
-        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
-
-        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
-
-    def testSetupSolrTwiceConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
-        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
-        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
-        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
-        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
-
-        f = open(join(solrDataDir, 'start.config'))
-        for line in f:
-            if line.startswith('jetty.home'):
-                break
-        else:
-            self.fail("No jetty.home line found")
-        f.close()
-        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('jetty.lib=/usr/share/java/solr4.0.0' in open(join(solrDataDir, 'start.config')).read())
-
-        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
-        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
-
-        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
-        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-        self.assertEquals(set(['core1', u'córë2']), set(solr_xml.xpath("//core/@name")))
-        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
-
-        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
-
-        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
-
-    def testSetupSolrConfigWithAutocomplete(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'autocomplete': {}}, 'core2': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertTrue('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertFalse('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertFalse('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-
-    def testSetupSolrConfigWithSuggestions(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core2': {'suggestions': {'field': 'afieldname'}}, 'core1': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertEquals(['afieldname'], solrconfig_xml.xpath('/config/searchComponent[@name="suggestions"]/lst/str[@name="field"]/text()'))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-
-    def testSetupSolrConfigWithAdditionalSolrConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<config><extra>option</extra></config>""")
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core', 'conf', 'solrconfig.xml')))
-
-        self.assertEquals(['option'], solrconfig_xml.xpath("/config/extra/text()"))
-
-    def testSetupSolrConfigWithAdditionalInvalidSolrConfigShouldRaiseAnError(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<extra>option</extra>""")
-        try:
-            self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
-            self.fail()
-        except ValueError, e:
-            self.assertEquals("No elements found with which to extend the solrconfig.xml", str(e))
-
-    def testSetupWithNoFeatures(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'suggestions': False}, 'core2': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-
-    def testInvalidCoreConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'suggestions': False}, 'core2': False}
-        try:
-            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-            self.fail()
-        except AssertionError, e:
-            self.assertEquals("Core feature descriptions must be a dictionary (empty for no additional features).", str(e))
-            self.assertFalse(isdir(solrDataDir))
-
-    def testUnknownFeatureInConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'unknown-feature': True}}
-        try:
-            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-            self.fail()
-        except ValueError, e:
-            self.assertEquals("Unknown feature 'unknown-feature'", str(e))
-
-    def testNotMatchingLuceneMatchVersion(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
-        system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
-
-        self.assertRaises(ValueError, lambda: self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}}))
-
-    def testStartSolr(self):
-        solrConfig = self._createSolrConfig(stateDir=join(self.tempdir, 'the/state/dir'), port=1423, config={})
-        execCalled = []
-        solrConfig._execvp = lambda *args, **kwargs: execCalled.append((args, kwargs))
-        solrConfig.start(javaMX="1234M")
-        self.assertEquals(1, len(execCalled))
-        self.assertEquals((
-            'java', 
-            ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr4.0.0/start.jar'],
-        ), execCalled[0][0])
-        self.assertEquals({}, execCalled[0][1])
-
-    def testSetupSolrCoreWithExtraFilters(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {'schemaExtension':[
-            { 
-                'extensionType': 'fieldTypeFilter',
-                'fieldTypeName': 'text_ws',
-                'filterClass': 'solr.ASCIIFoldingFilterFactory',
-            }
-        ]}})
-        schemaXml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['solr.LowerCaseFilterFactory', 'solr.ASCIIFoldingFilterFactory'], schemaXml.xpath('/schema/types/fieldType[@name="text_ws"]/analyzer/filter/@class'))
-
-    def xtestStartSolrReally(self):
-        tempdir = "/tmp/testSetupSolrConfig"
-        isdir(tempdir) and rmtree(tempdir)
-        mkdir(tempdir)
-        solrDataDir = join(tempdir, 'solr-data')
-        solrConfig = self._createSolrConfig(stateDir=solrDataDir, port=8000, config={"test": {'admin': True}})
-        solrConfig.start(javaMX="1024M")
-
-    def _createSolrConfig(self, stateDir, port, config):
-        solrConfFile = join(self.tempdir, 'solr.conf')
-        jsonDump(config, open(solrConfFile, 'w'))
-        return start_solr.SolrConfig(stateDir, port, solrConfFile)
-        
-
diff --git a/server/usr-share/core-data/conf/schema.xml b/server/usr-share/core-data/conf/schema.xml
deleted file mode 100644
index e2db7ed..0000000
--- a/server/usr-share/core-data/conf/schema.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<schema name="meresco-corename" version="1.5">
-  <types>
-    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
-
-    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100" omitNorms="false" multiValued="true" indexed="true" stored="false">
-      <analyzer>
-        <tokenizer class="solr.ClassicTokenizerFactory"/>
-        <filter class="solr.LowerCaseFilterFactory"/>
-      </analyzer>
-    </fieldType>
-
-    <fieldType name="untokenized_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="true" indexed="true" stored="false" />
-
-    <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
-
-    <fieldType name="datetime" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/> 
- </types>
-
-
- <fields>
-   <field name="__id__" type="string" stored="true" required="true" /> 
-   <field name="__all__" type="text_ws" /> 
-   <field name="__timestamp__" type="datetime" indexed="true" stored="false" default="NOW" sortMissingLast="true" omitNorms="true" multiValued="false" />
-   <dynamicField name="sorted.*" type="sorted_string" />
-   <dynamicField name="untokenized.*" type="untokenized_string" />
-   <dynamicField name="meta.*" type="untokenized_string" />
-   <dynamicField name="*" type="text_ws" />
- </fields>
-
- <uniqueKey>__id__</uniqueKey>
- <defaultSearchField>__all__</defaultSearchField>
-
- <solrQueryParser defaultOperator="AND"/>
-</schema>
diff --git a/server/usr-share/core-data/conf/solrconfig.xml b/server/usr-share/core-data/conf/solrconfig.xml
deleted file mode 100644
index 296db2c..0000000
--- a/server/usr-share/core-data/conf/solrconfig.xml
+++ /dev/null
@@ -1,112 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<!-- 
-     For more details about configurations options that may appear in
-     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
--->
-<config>
-  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
-  
-  <!--
-    Controls what version of Lucene various components of Solr adhere to. Generally, you want
-    to use the latest version to get all bug fixes and improvements. It is highly recommended 
-    that you fully re-index after changing this setting as it can affect both how text is indexed
-    and queried.
-  -->
-  <luceneMatchVersion>LUCENE_40</luceneMatchVersion>
-
-  <query>
-    <maxBooleanClauses>1024</maxBooleanClauses>
-
-    <filterCache 
-      class="solr.LRUCache"
-      size="512"
-      initialSize="512"
-      autowarmCount="256"/>
-
-    <queryResultCache 
-      class="solr.LRUCache"
-      size="512"
-      initialSize="512"
-      autowarmCount="256"/>
-
-    <documentCache
-      class="solr.LRUCache"
-      size="512"
-      initialSize="512"
-      autowarmCount="256"/>
-
-    <enableLazyFieldLoading>true</enableLazyFieldLoading>
-
-    <queryResultWindowSize>50</queryResultWindowSize>
-
-    <HashDocSet maxSize="3000" loadFactor="0.75"/>
-    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
-
-	<maxWarmingSearchers>4</maxWarmingSearchers>
-  </query>
-
-  <requestDispatcher handleSelect="true" >
-    <httpCaching never304="true" />
-  </requestDispatcher>
-
-  <requestHandler name="/search" class="org.apache.solr.handler.component.SearchHandler">
-  </requestHandler>
-
-
-  <!-- Update request handler.  
-  
-       Note: Since solr1.1 requestHandlers requires a valid content type header if posted in 
-       the body. For example, curl now requires: -H 'Content-type:text/xml; charset=utf-8'
-       The response format differs from solr1.1 formatting and returns a standard error code.
-       
-       To enable solr1.1 behavior, remove the /update handler or change its path
-       
-       "update.processor.class" is the class name for the UpdateRequestProcessor.  It is initalized
-       only once.  This can not be changed for each request.
-    -->
-  <requestHandler name="/update" class="solr.UpdateRequestHandler"  />
-  <!--requestHandler name="/update" class="solr.XmlUpdateRequestHandler" / -->
-
-
- <requestHandler name="/admin/" class="org.apache.solr.handler.admin.AdminHandlers" />
-  
-  <!-- ping/healthcheck -->
-  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
-    <lst name="invariants">
-      <str name="qt">/search</str>
-      <str name="q">solrpingquery</str>
-    </lst>
-    <lst name="defaults">
-      <str name="echoParams">all</str>
-    </lst>
-    <!-- An optional feature of the PingRequestHandler is to configure the 
-         handler with a "healthcheckFile" which can be used to enable/disable 
-         the PingRequestHandler.
-         relative paths are resolved against the data dir 
-      -->
-    <!-- <str name="healthcheckFile">server-enabled.txt</str> -->
-  </requestHandler>
-     
-  <!-- config for the admin interface --> 
-  <admin>
-    <defaultQuery>*:*</defaultQuery>
-  </admin>
-
-</config>
diff --git a/server/usr-share/solr-data/contexts/solr.xml b/server/usr-share/solr-data/contexts/solr.xml
deleted file mode 100644
index 750392b..0000000
--- a/server/usr-share/solr-data/contexts/solr.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0"  encoding="ISO-8859-1"?>
-<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
- 
-<Configure class="org.eclipse.jetty.webapp.WebAppContext">
-  <Set name="contextPath">/solr</Set>
-  <Set name="war">/usr/share/java/webapps/apache-solr-4.0.0.war</Set>
-</Configure>
-
diff --git a/server/usr-share/solr-data/etc/jetty.xml b/server/usr-share/solr-data/etc/jetty.xml
deleted file mode 100644
index ab84668..0000000
--- a/server/usr-share/solr-data/etc/jetty.xml
+++ /dev/null
@@ -1,173 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
-
-<!-- =============================================================== -->
-<!-- Configure the Jetty Server                                      -->
-<!--                                                                 -->
-<!-- Documentation of this file format can be found at:              -->
-<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->
-<!--                                                                 -->
-<!-- =============================================================== -->
-
-
-<Configure id="Server" class="org.eclipse.jetty.server.Server">
-
-    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
-    <Call name="setAttribute">
-      <Arg>org.eclipse.jetty.server.Request.maxFormContentSize</Arg>
-      <Arg>200000</Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Server Thread Pool                                          -->
-    <!-- =========================================================== -->
-    <Set name="ThreadPool">
-      <!-- Default queued blocking threadpool -->
-      <New class="org.eclipse.jetty.util.thread.QueuedThreadPool">
-        <Set name="minThreads">10</Set>
-        <Set name="maxThreads">10000</Set>
-        <Set name="detailedDump">false</Set>
-      </New>
-    </Set>
-
-    <!-- =========================================================== -->
-    <!-- Set connectors                                              -->
-    <!-- =========================================================== -->
-
-  <!--
-    <Call name="addConnector">
-      <Arg>
-          <New class="org.eclipse.jetty.server.nio.SelectChannelConnector">
-            <Set name="host"><SystemProperty name="jetty.host" /></Set>
-            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">50000</Set>
-            <Set name="Acceptors">2</Set>
-            <Set name="statsOn">false</Set>
-            <Set name="confidentialPort">8443</Set>
-	    <Set name="lowResourcesConnections">5000</Set>
-	    <Set name="lowResourcesMaxIdleTime">5000</Set>
-          </New>
-      </Arg>
-    </Call>
-  -->
-
-    <!-- This connector is currently being used for Solr because it
-          showed better performance than nio.SelectChannelConnector
-          for typical Solr requests.  -->
-    <Call name="addConnector">
-      <Arg>
-          <New class="org.eclipse.jetty.server.bio.SocketConnector">
-            <Set name="host"><SystemProperty name="jetty.host" /></Set>
-            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
-            <Set name="maxIdleTime">50000</Set>
-            <Set name="lowResourceMaxIdleTime">1500</Set>
-            <Set name="statsOn">false</Set>
-          </New>
-      </Arg>
-    </Call>
-
-    <!-- =========================================================== -->
-    <!-- Set handler Collection Structure                            --> 
-    <!-- =========================================================== -->
-    <Set name="handler">
-      <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
-        <Set name="handlers">
-         <Array type="org.eclipse.jetty.server.Handler">
-           <Item>
-             <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"/>
-           </Item>
-           <Item>
-             <New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler"/>
-           </Item>
-           <Item>
-             <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler"/>
-           </Item>
-         </Array>
-        </Set>
-      </New>
-    </Set>
-    
-    <!-- =========================================================== -->
-    <!-- Configure Request Log                                       -->
-    <!-- =========================================================== -->
-    <!-- 
-    <Ref id="Handlers">
-      <Call name="addHandler">
-        <Arg>
-          <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler">
-            <Set name="requestLog">
-              <New id="RequestLogImpl" class="org.eclipse.jetty.server.NCSARequestLog">
-                <Set name="filename">
-                   logs/request.yyyy_mm_dd.log
-                </Set>
-                <Set name="filenameDateFormat">yyyy_mm_dd</Set>
-                <Set name="retainDays">90</Set>
-                <Set name="append">true</Set>
-                <Set name="extended">false</Set>
-                <Set name="logCookies">false</Set>
-                <Set name="LogTimeZone">UTC</Set>
-              </New>
-            </Set>
-          </New>
-        </Arg>
-      </Call>
-    </Ref>
-    -->
-
-    <!-- =========================================================== -->
-    <!-- extra options                                               -->
-    <!-- =========================================================== -->
-    <Set name="stopAtShutdown">true</Set>
-    <Set name="sendServerVersion">false</Set>
-    <Set name="sendDateHeader">false</Set>
-    <Set name="gracefulShutdown">1000</Set>
-    <Set name="dumpAfterStart">false</Set>
-    <Set name="dumpBeforeStop">false</Set>
-
-
-
-
-    <Call name="addBean">
-      <Arg>
-        <New id="DeploymentManager" class="org.eclipse.jetty.deploy.DeploymentManager">
-          <Set name="contexts">
-            <Ref id="Contexts" />
-          </Set>
-          <Call name="setContextAttribute">
-            <Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>
-            <Arg>.*/servlet-api-[^/]*\.jar$</Arg>
-          </Call>
-          
-          
-          <!-- Add a customize step to the deployment lifecycle -->
-          <!-- uncomment and replace DebugBinding with your extended AppLifeCycle.Binding class 
-          <Call name="insertLifeCycleNode">
-            <Arg>deployed</Arg>
-            <Arg>starting</Arg>
-            <Arg>customise</Arg>
-          </Call>
-          <Call name="addLifeCycleBinding">
-            <Arg>
-              <New class="org.eclipse.jetty.deploy.bindings.DebugBinding">
-                <Arg>customise</Arg>
-              </New>
-            </Arg>
-          </Call>
-          -->
-          
-        </New>
-      </Arg>
-    </Call>
-    
-    <Ref id="DeploymentManager">
-      <Call name="addAppProvider">
-        <Arg>
-          <New class="org.eclipse.jetty.deploy.providers.ContextProvider">
-            <Set name="monitoredDirName"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
-            <Set name="scanInterval">0</Set>
-          </New>
-        </Arg>
-      </Call>
-    </Ref>
-
-</Configure>
diff --git a/server/usr-share/solr-data/etc/webdefault.xml b/server/usr-share/solr-data/etc/webdefault.xml
deleted file mode 100644
index 213138b..0000000
--- a/server/usr-share/solr-data/etc/webdefault.xml
+++ /dev/null
@@ -1,527 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-  <!-- ===================================================================== -->
-  <!-- This file contains the default descriptor for web applications.       -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
-  <!-- The intent of this descriptor is to include jetty specific or common  -->
-  <!-- configuration for all webapps.   If a context has a webdefault.xml    -->
-  <!-- descriptor, it is applied before the contexts own web.xml file        -->
-  <!--                                                                       -->
-  <!-- A context may be assigned a default descriptor by:                    -->
-  <!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
-  <!--  + Passed an arg to addWebApplications                                -->
-  <!--                                                                       -->
-  <!-- This file is used both as the resource within the jetty.jar (which is -->
-  <!-- used as the default if no explicit defaults descriptor is set) and it -->
-  <!-- is copied to the etc directory of the Jetty distro and explicitly     -->
-  <!-- by the jetty.xml file.                                                -->
-  <!--                                                                       -->
-  <!-- ===================================================================== -->
-<web-app
-  xmlns="http://java.sun.com/xml/ns/javaee"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
-  metadata-complete="true"
-  version="2.5"
->
-
-  <description>
-    Default web.xml file.  
-    This file is applied to a Web application before it's own WEB_INF/web.xml file
-  </description>
-
-  <!-- ==================================================================== -->
-  <!-- Removes static references to beans from javax.el.BeanELResolver to   -->
-  <!-- ensure webapp classloader can be released on undeploy                -->
-  <!-- ==================================================================== -->
-  <listener>
-   <listener-class>org.eclipse.jetty.servlet.listener.ELContextCleaner</listener-class>
-  </listener>
-  
-  <!-- ==================================================================== -->
-  <!-- Removes static cache of Methods from java.beans.Introspector to      -->
-  <!-- ensure webapp classloader can be released on undeploy                -->
-  <!-- ==================================================================== -->  
-  <listener>
-   <listener-class>org.eclipse.jetty.servlet.listener.IntrospectorCleaner</listener-class>
-  </listener>
-  
-
-  <!-- ==================================================================== -->
-  <!-- Context params to control Session Cookies                            -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!--
-    UNCOMMENT TO ACTIVATE <context-param> <param-name>org.eclipse.jetty.servlet.SessionDomain</param-name> <param-value>127.0.0.1</param-value> </context-param> <context-param>
-    <param-name>org.eclipse.jetty.servlet.SessionPath</param-name> <param-value>/</param-value> </context-param> <context-param> <param-name>org.eclipse.jetty.servlet.MaxAge</param-name>
-    <param-value>-1</param-value> </context-param>
-  -->
-
-  <!-- ==================================================================== -->
-  <!-- The default servlet.                                                 -->
-  <!-- This servlet, normally mapped to /, provides the handling for static -->
-  <!-- content, OPTIONS and TRACE methods for the context.                  -->
-  <!-- The following initParameters are supported:                          -->
-  <!--  
- *  acceptRanges      If true, range requests and responses are
- *                    supported
- *
- *  dirAllowed        If true, directory listings are returned if no
- *                    welcome file is found. Else 403 Forbidden.
- *
- *  welcomeServlets   If true, attempt to dispatch to welcome files
- *                    that are servlets, but only after no matching static
- *                    resources could be found. If false, then a welcome
- *                    file must exist on disk. If "exact", then exact
- *                    servlet matches are supported without an existing file.
- *                    Default is true.
- *
- *                    This must be false if you want directory listings,
- *                    but have index.jsp in your welcome file list.
- *
- *  redirectWelcome   If true, welcome files are redirected rather than
- *                    forwarded to.
- *
- *  gzip              If set to true, then static content will be served as
- *                    gzip content encoded if a matching resource is
- *                    found ending with ".gz"
- *
- *  resourceBase      Set to replace the context resource base
- *
- *  resourceCache     If set, this is a context attribute name, which the servlet 
- *                    will use to look for a shared ResourceCache instance. 
- *                        
- *  relativeResourceBase
- *                    Set with a pathname relative to the base of the
- *                    servlet context root. Useful for only serving static content out
- *                    of only specific subdirectories.
- *
- *  aliases           If True, aliases of resources are allowed (eg. symbolic
- *                    links and caps variations). May bypass security constraints.
- *
- *  maxCacheSize      The maximum total size of the cache or 0 for no cache.
- *  maxCachedFileSize The maximum size of a file to cache
- *  maxCachedFiles    The maximum number of files to cache
- *
- *  useFileMappedBuffer
- *                    If set to true, it will use mapped file buffer to serve static content
- *                    when using NIO connector. Setting this value to false means that
- *                    a direct buffer will be used instead of a mapped file buffer.
- *                    By default, this is set to true.
- *
- *  cacheControl      If set, all static content will have this value set as the cache-control
- *                    header.
- -->
- 
- 
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet>
-    <servlet-name>default</servlet-name>
-    <servlet-class>org.eclipse.jetty.servlet.DefaultServlet</servlet-class>
-    <init-param>
-      <param-name>aliases</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>acceptRanges</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>dirAllowed</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>welcomeServlets</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>redirectWelcome</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCacheSize</param-name>
-      <param-value>256000000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCachedFileSize</param-name>
-      <param-value>200000000</param-value>
-    </init-param>
-    <init-param>
-      <param-name>maxCachedFiles</param-name>
-      <param-value>2048</param-value>
-    </init-param>
-    <init-param>
-      <param-name>gzip</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <init-param>
-      <param-name>useFileMappedBuffer</param-name>
-      <param-value>true</param-value>
-    </init-param>
-    <!--
-    <init-param>
-      <param-name>resourceCache</param-name>
-      <param-value>resourceCache</param-value>
-    </init-param>
-    -->
-    <!--
-    <init-param>
-      <param-name>cacheControl</param-name>
-      <param-value>max-age=3600,public</param-value>
-    </init-param>
-    -->
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping>
-    <servlet-name>default</servlet-name>
-    <url-pattern>/</url-pattern>
-  </servlet-mapping>
-
-
-  <!-- ==================================================================== -->
-  <!-- JSP Servlet                                                          -->
-  <!-- This is the jasper JSP servlet from the jakarta project              -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
-  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
-  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
-  <!-- following initialization parameters (default values are in square    -->
-  <!-- brackets):                                                           -->
-  <!--                                                                      -->
-  <!--   checkInterval       If development is false and reloading is true, -->
-  <!--                       background compiles are enabled. checkInterval -->
-  <!--                       is the time in seconds between checks to see   -->
-  <!--                       if a JSP page needs to be recompiled. [300]    -->
-  <!--                                                                      -->
-  <!--   compiler            Which compiler Ant should use to compile JSP   -->
-  <!--                       pages.  See the Ant documenation for more      -->
-  <!--                       information. [javac]                           -->
-  <!--                                                                      -->
-  <!--   classdebuginfo      Should the class file be compiled with         -->
-  <!--                       debugging information?  [true]                 -->
-  <!--                                                                      -->
-  <!--   classpath           What class path should I use while compiling   -->
-  <!--                       generated servlets?  [Created dynamically      -->
-  <!--                       based on the current web application]          -->
-  <!--                       Set to ? to make the container explicitly set  -->
-  <!--                       this parameter.                                -->
-  <!--                                                                      -->
-  <!--   development         Is Jasper used in development mode (will check -->
-  <!--                       for JSP modification on every access)?  [true] -->
-  <!--                                                                      -->
-  <!--   enablePooling       Determines whether tag handler pooling is      -->
-  <!--                       enabled  [true]                                -->
-  <!--                                                                      -->
-  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
-  <!--                       a separate JVM is used for JSP page compiles   -->
-  <!--                       from the one Tomcat is running in. [true]      -->
-  <!--                                                                      -->
-  <!--   ieClassId           The class-id value to be sent to Internet      -->
-  <!--                       Explorer when using <jsp:plugin> tags.         -->
-  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
-  <!--                                                                      -->
-  <!--   javaEncoding        Java file encoding to use for generating java  -->
-  <!--                       source files. [UTF-8]                          -->
-  <!--                                                                      -->
-  <!--   keepgenerated       Should we keep the generated Java source code  -->
-  <!--                       for each page instead of deleting it? [true]   -->
-  <!--                                                                      -->
-  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
-  <!--                       by this servlet.  Increasing levels cause the  -->
-  <!--                       generation of more messages.  Valid values are -->
-  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
-  <!--                       [WARNING]                                      -->
-  <!--                                                                      -->
-  <!--   mappedfile          Should we generate static content with one     -->
-  <!--                       print statement per input line, to ease        -->
-  <!--                       debugging?  [false]                            -->
-  <!--                                                                      -->
-  <!--                                                                      -->
-  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
-  <!--                                                                      -->
-  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
-  <!--                       debugging be suppressed?  [false]              -->
-  <!--                                                                      -->
-  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
-  <!--                       dumped to a file? [false]                      -->
-  <!--                       False if suppressSmap is true                  -->
-  <!--                                                                      -->
-  <!--   scratchdir          What scratch directory should we use when      -->
-  <!--                       compiling JSP pages?  [default work directory  -->
-  <!--                       for the current web application]               -->
-  <!--                                                                      -->
-  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
-  <!--                                                                      -->
-  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
-  <!--                       header is added by generated servlet  [false]  -->
-  <!--                                                                      -->
-  <!-- If you wish to use Jikes to compile JSP pages:                       -->
-  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
-  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
-  <!--   to cause Jikes to emit error messages in a format compatible with  -->
-  <!--   Jasper.                                                            -->
-  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
-  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <servlet
-    id="jsp"
-  >
-    <servlet-name>jsp</servlet-name>
-    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
-    <init-param>
-      <param-name>logVerbosityLevel</param-name>
-      <param-value>DEBUG</param-value>
-    </init-param>
-    <init-param>
-      <param-name>fork</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <init-param>
-      <param-name>xpoweredBy</param-name>
-      <param-value>false</param-value>
-    </init-param>
-    <!--  
-    <init-param>
-        <param-name>classpath</param-name>
-        <param-value>?</param-value>
-    </init-param>
-    -->
-    <load-on-startup>0</load-on-startup>
-  </servlet>
-
-  <servlet-mapping>
-    <servlet-name>jsp</servlet-name>
-    <url-pattern>*.jsp</url-pattern>
-    <url-pattern>*.jspf</url-pattern>
-    <url-pattern>*.jspx</url-pattern>
-    <url-pattern>*.xsp</url-pattern>
-    <url-pattern>*.JSP</url-pattern>
-    <url-pattern>*.JSPF</url-pattern>
-    <url-pattern>*.JSPX</url-pattern>
-    <url-pattern>*.XSP</url-pattern>
-  </servlet-mapping>
-
-  <!-- ==================================================================== -->
-  <!-- Dynamic Servlet Invoker.                                             -->
-  <!-- This servlet invokes anonymous servlets that have not been defined   -->
-  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
-  <!-- of a request passed to the envoker is treated as a servlet name for  -->
-  <!-- an existing servlet, or as a class name of a new servlet.            -->
-  <!-- This servlet is normally mapped to /servlet/*                        -->
-  <!-- This servlet support the following initParams:                       -->
-  <!--                                                                      -->
-  <!--  nonContextServlets       If false, the invoker can only load        -->
-  <!--                           servlets from the contexts classloader.    -->
-  <!--                           This is false by default and setting this  -->
-  <!--                           to true may have security implications.    -->
-  <!--                                                                      -->
-  <!--  verbose                  If true, log dynamic loads                 -->
-  <!--                                                                      -->
-  <!--  *                        All other parameters are copied to the     -->
-  <!--                           each dynamic servlet as init parameters    -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!--
-    Uncomment for dynamic invocation <servlet> <servlet-name>invoker</servlet-name> <servlet-class>org.eclipse.jetty.servlet.Invoker</servlet-class> <init-param> <param-name>verbose</param-name>
-    <param-value>false</param-value> </init-param> <init-param> <param-name>nonContextServlets</param-name> <param-value>false</param-value> </init-param> <init-param>
-    <param-name>dynamicParam</param-name> <param-value>anyValue</param-value> </init-param> <load-on-startup>0</load-on-startup> </servlet> <servlet-mapping> <servlet-name>invoker</servlet-name>
-    <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
-  -->
-
-
-
-  <!-- ==================================================================== -->
-  <session-config>
-    <session-timeout>30</session-timeout>
-  </session-config>
-
-  <!-- ==================================================================== -->
-  <!-- Default MIME mappings                                                -->
-  <!-- The default MIME mappings are provided by the mime.properties        -->
-  <!-- resource in the org.eclipse.jetty.server.jar file.  Additional or modified  -->
-  <!-- mappings may be specified here                                       -->
-  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
-  <!-- UNCOMMENT TO ACTIVATE
-  <mime-mapping>
-    <extension>mysuffix</extension>
-    <mime-type>mymime/type</mime-type>
-  </mime-mapping>
-  -->
-
-  <!-- ==================================================================== -->
-  <welcome-file-list>
-    <welcome-file>index.html</welcome-file>
-    <welcome-file>index.htm</welcome-file>
-    <welcome-file>index.jsp</welcome-file>
-  </welcome-file-list>
-
-  <!-- ==================================================================== -->
-  <locale-encoding-mapping-list>
-    <locale-encoding-mapping>
-      <locale>ar</locale>
-      <encoding>ISO-8859-6</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>be</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>bg</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>ca</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>cs</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>da</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>de</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>el</locale>
-      <encoding>ISO-8859-7</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>en</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>es</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>et</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>fi</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>fr</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>hr</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>hu</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>is</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>it</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>iw</locale>
-      <encoding>ISO-8859-8</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>ja</locale>
-      <encoding>Shift_JIS</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>ko</locale>
-      <encoding>EUC-KR</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>lt</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>lv</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>mk</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>nl</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>no</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>pl</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>pt</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>ro</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>ru</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sh</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sk</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sl</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sq</locale>
-      <encoding>ISO-8859-2</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sr</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>sv</locale>
-      <encoding>ISO-8859-1</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>tr</locale>
-      <encoding>ISO-8859-9</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>uk</locale>
-      <encoding>ISO-8859-5</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>zh</locale>
-      <encoding>GB2312</encoding>
-    </locale-encoding-mapping>
-    <locale-encoding-mapping>
-      <locale>zh_TW</locale>
-      <encoding>Big5</encoding>
-    </locale-encoding-mapping>
-  </locale-encoding-mapping-list>
-
-  <security-constraint>
-    <web-resource-collection>
-      <web-resource-name>Disable TRACE</web-resource-name>
-      <url-pattern>/</url-pattern>
-      <http-method>TRACE</http-method>
-    </web-resource-collection>
-    <auth-constraint/>
-  </security-constraint>
-
-</web-app>
-
diff --git a/server/usr-share/solr-data/solr.xml b/server/usr-share/solr-data/solr.xml
deleted file mode 100644
index 3da55c2..0000000
--- a/server/usr-share/solr-data/solr.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
-<solr sharedLib="lib" persistent="true">
-    <cores adminPath="/admin/cores"/>
-</solr>
diff --git a/server/usr-share/solr-data/start.config b/server/usr-share/solr-data/start.config
deleted file mode 100644
index 4828eaa..0000000
--- a/server/usr-share/solr-data/start.config
+++ /dev/null
@@ -1,162 +0,0 @@
-# This file controls what file are to be put on classpath or command line.
-#
-# Format is as follows:
-#
-# Each line contains entry in the format:
-#
-#  SUBJECT [ [!] CONDITION [AND|OR] ]*
-# 
-# where SUBJECT: 
-#   ends with ".class" is the Main class to run.
-#   ends with ".xml" is a configuration file for the command line
-#   ends with "/" is a directory from which to add all jar and zip files. 
-#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
-#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
-#   Containing = are used to assign system properties.
-#   Containing ~= are used to assign start properties.
-#   Containing /= are used to assign a canonical path.
-#   all other subjects are treated as files to be added to the classpath.
-#
-# ${name} is expanded to a start property
-# $(name) is expanded to either a start property or a system property. 
-# The start property ${version} is defined as the version of the start.jar
-#
-# Files starting with "/" are considered absolute, all others are relative to
-# the home directory.
-#
-# CONDITION is one of:
-#   always
-#   never
-#   available classname        # true if class on classpath
-#   property name              # true if set as start property
-#   system   name              # true if set as system property
-#   exists file                # true if file/dir exists
-#   java OPERATOR version      # java version compared to literal
-#   nargs OPERATOR number      # number of command line args compared to literal
-#   OPERATOR := one of "<",">","<=",">=","==","!="
-#
-# CONTITIONS can be combined with AND OR or !, with AND being the assume
-# operator for a list of CONDITIONS.
-#
-# Classpath operations are evaluated on the fly, so once a class or jar is
-# added to the classpath, subsequent available conditions will see that class.
-#
-# The configuration file may be divided into sections with option names like:
-# [ssl,default]
-#
-# Clauses after a section header will only be included if they match one of the tags in the 
-# options property.  By default options are set to "default,*" or the OPTIONS property may
-# be used to pass in a list of tags, eg. :
-#
-#    java -jar start.jar OPTIONS=jetty,jsp,ssl
-#
-# The tag '*' is always appended to the options, so any section with the * tag is always 
-# applied.
-#
-
-# add a property defined classpath
-${path}.path                                     property path
-
-# add a property defined library directory
-${lib}/**                                        exists ${lib}
-
-jetty.home=/location/of/your/jetty/config/dir
-jetty.lib=/location/of/your/lib
-
-# The main class to run
-org.eclipse.jetty.xml.XmlConfiguration.class
-${start.class}.class                             property start.class
-
-# The default configuration files
-$(jetty.home)/etc/jetty.xml                      nargs == 0
-./jetty-server/src/main/config/etc/jetty.xml     nargs == 0 AND ! exists $(jetty.home)/etc/jetty.xml
-
-# Default OPTIONS if not specified on the command line
-OPTIONS~=default,*                               ! property OPTIONS
-
-# Add a resources directory if it is there
-[All,resources,default]
-$(jetty.home)/resources/
-           
-# Add jetty modules
-[*]
-$(jetty.lib)/jetty-util-$(version).jar                                             ! available org.eclipse.jetty.util.StringUtil
-$(jetty.lib)/jetty-io-$(version).jar                                               ! available org.eclipse.jetty.io.Buffer
-
-[Server,All,xml,default]
-$(jetty.lib)/jetty-xml-$(version).jar                                              ! available org.eclipse.jetty.xml.XmlParser
-         
-[Server,All,server,default]
-$(jetty.lib)/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
-$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
-$(jetty.lib)/jetty-continuation-$(version).jar                                     ! available org.eclipse.jetty.continuation.Continuation
-$(jetty.lib)/jetty-server-$(version).jar                                           ! available org.eclipse.jetty.server.Server
-                                             
-[Server,All,security,default]
-$(jetty.lib)/jetty-security-$(version).jar                                         ! available org.eclipse.jetty.security.LoginService
-                                                       
-[Server,All,servlet,default]
-$(jetty.lib)/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
-$(jetty.lib)/jetty-servlet-$(version).jar                                          ! available org.eclipse.jetty.servlet.ServletHandler
-                            
-[Server,All,webapp,default]
-$(jetty.lib)/jetty-webapp-$(version).jar                                           ! available org.eclipse.jetty.webapp.WebAppContext
-                                  
-[Server,All,deploy,default]
-$(jetty.lib)/jetty-deploy-$(version).jar                                           ! available org.eclipse.jetty.deploy.ContextDeployer
-           
-[Server,All,servlets,default]
-$(jetty.lib)/jetty-servlets-$(version).jar                                         ! available org.eclipse.jetty.servlets.WelcomeFilter
-
-[All,rewrite]
-$(jetty.lib)/jetty-rewrite-$(version).jar                                          ! available org.eclipse.jetty.rewrite.handler.RewriteHandler
-
-[All,jmx]
-$(jetty.lib)/jetty-jmx-$(version).jar                                              ! available org.eclipse.jetty.jmx.MBeanContainer
-                  
-[All,ajp]
-$(jetty.lib)/jetty-ajp-$(version).jar                                              ! available org.eclipse.jetty.ajp.Ajp13Connection      
-                   
-[All,plus,jndi]
-$(jetty.lib)/jetty-jndi-${version}.jar                                             ! available org.eclipse.jetty.jndi.ContextFactory
-$(jetty.lib)/jetty-plus-${version}.jar                                             ! available org.eclipse.jetty.plus.jndi.NamingEntry
-$(jetty.lib)/jndi/**                                                               exists $(jetty.lib)/jndi 
-
-[All,annotations]
-$(jetty.lib)/jetty-annotations-$(version).jar                                      ! available org.eclipse.jetty.annotations.AnnotationFinder
-$(jetty.lib)/annotations/**                                                        exists $(jetty.lib)/jndi 
-          
-[All,setuid]
-$(jetty.lib)/jetty-setuid-$(version).jar                                           ! available org.eclipse.jetty.setuid.SetUID
-$(jetty.lib)/setuid/**                                                       
-                                    
-[All,policy]
-$(jetty.lib)/jetty-policy-$(version).jar                                           ! available org.eclipse.jetty.policy.JettyPolicy
-                                    
-[All,Client,client]
-$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
-$(jetty.lib)/jetty-client-$(version).jar                                           ! available org.eclipse.jetty.client.HttpClient
-
-[All,websocket]
-$(jetty.lib)/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
-       
-[Client]
-$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
-
-[All,websocket]
-$(jetty.lib)/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
-       
-[All,overlay,overlays]
-$(jetty.lib)/jetty-overlay-deployer-$(version).jar                                 ! available org.eclipse.jetty.overlay.OverlayedAppProvider
-       
-      
-# Add ext if it exists
-[Server,All,default,ext]        
-$(jetty.lib)/ext/**
-
-# Add all other sub-directories in /lib/ as options in a dynamic way
-[All,=$(jetty.lib)/**]        
-
-# Set webapps dir
-jetty.webapps=/usr/share/java/webapps
-
diff --git a/server/usr-share/solrconfig.d/autocomplete.xml b/server/usr-share/solrconfig.d/autocomplete.xml
deleted file mode 100644
index ac9f732..0000000
--- a/server/usr-share/solrconfig.d/autocomplete.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<config>
-  <searchComponent name="terms" class="solr.TermsComponent"/>
-
-  <!-- A request handler for demonstrating the terms component -->
-  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
-     <lst name="defaults">
-      <bool name="terms">true</bool>
-    </lst>     
-    <arr name="components">
-      <str>terms</str>
-    </arr>
-  </requestHandler>
-</config>
diff --git a/server/usr-share/solrconfig.d/suggestions.xml b/server/usr-share/solrconfig.d/suggestions.xml
deleted file mode 100644
index 26f6dd0..0000000
--- a/server/usr-share/solrconfig.d/suggestions.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<config>
-  <searchComponent name="suggestions" class="solr.SpellCheckComponent">
-    <str name="queryAnalyzerFieldType">textSpell</str>
-    <lst name="spellchecker">
-      <str name="name">default</str>
-      <str name="field">%(field)s</str>
-      <str name="spellcheckIndexDir">suggestions</str>
-      <str name="buildOnCommit">true</str>
-    </lst>
-  </searchComponent>
-
-  <requestHandler name="/select" class="solr.SearchHandler" startup="lazy">
-    <arr name="last-components">
-      <str>suggestions</str>
-    </arr>
-  </requestHandler>
-</config>
diff --git a/test/_alltests.py b/test/_alltests.py
index fdf0d74..5d7aa2a 100644
--- a/test/_alltests.py
+++ b/test/_alltests.py
@@ -36,6 +36,7 @@ path.insert(0, "..")
 from fields2solrdoctest import Fields2SolrDocTest
 from solrinterfacetest import SolrInterfaceTest
 from solrlucenequerycomposertest import SolrLuceneQueryComposerTest
+from solrconfigtest import SolrConfigTest
 from cql2solrlucenequerytest import CQL2SolrLuceneQueryTest
 
 if __name__ == '__main__':
diff --git a/test/solrconfigtest.py b/test/solrconfigtest.py
new file mode 100644
index 0000000..2766485
--- /dev/null
+++ b/test/solrconfigtest.py
@@ -0,0 +1,241 @@
+# -*- coding: utf-8 -*-
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+import sys
+from unittest import main
+from StringIO import StringIO
+from os import mkdir, listdir, system
+from os.path import join, dirname, abspath, basename, isdir
+from shutil import rmtree
+from simplejson import dump as jsonDump
+from lxml.etree import parse, tostring
+
+from seecr.test import SeecrTestCase
+sys.path.insert(0, '../bin')
+start_solr = __import__('start-solr')
+
+
+mydir = dirname(abspath(__file__))
+version = "4.0.0"
+
+class SolrConfigTest(SeecrTestCase):
+    def testParseArguments(self):
+        options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--config=/tmp/config.json'])
+        self.assertEquals(8042, options.port)
+        self.assertEquals('/tmp', options.stateDir)
+        self.assertEquals('/tmp/config.json', options.config)
+
+    def testIncompleteArguments(self):
+        stdout_mock = StringIO()
+        sys.stdout = stdout_mock
+        try:
+            self.assertRaises(ValueError, lambda: start_solr.parseArguments(['--port=8042', '--stateDir=/tmp']))
+        finally:
+            sys.stdout = sys.__stdout__
+
+    def testSetupSolrConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
+        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
+        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+        f = open(join(solrDataDir, 'start.config'))
+        for line in f:
+            if line.startswith('jetty.home'):
+                break
+        else:
+            self.fail("No jetty.home line found")
+        f.close()
+        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+        self.assertTrue('jetty.lib=/usr/share/java/solr4.0.0' in open(join(solrDataDir, 'start.config')).read())
+
+        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+        self.assertEquals(set([u'córë2', 'core1']), set(solr_xml.xpath("//core/@name")))
+        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
+
+        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+
+    def testSetupSolrTwiceConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
+        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
+        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+        f = open(join(solrDataDir, 'start.config'))
+        for line in f:
+            if line.startswith('jetty.home'):
+                break
+        else:
+            self.fail("No jetty.home line found")
+        f.close()
+        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+        self.assertTrue('jetty.lib=/usr/share/java/solr4.0.0' in open(join(solrDataDir, 'start.config')).read())
+
+        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+        self.assertEquals(set(['core1', u'córë2']), set(solr_xml.xpath("//core/@name")))
+        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
+
+        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+
+    def testSetupSolrConfigWithAutocomplete(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'autocomplete': {}}, 'core2': {}}
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertTrue('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertFalse('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+
+    def testSetupSolrConfigWithSuggestions(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core2': {'suggestions': {'field': 'afieldname'}}, 'core1': {}}
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertEquals(['afieldname'], solrconfig_xml.xpath('/config/searchComponent[@name="suggestions"]/lst/str[@name="field"]/text()'))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+    def testSetupSolrConfigWithAdditionalSolrConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<config><extra>option</extra></config>""")
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core', 'conf', 'solrconfig.xml')))
+
+        self.assertEquals(['option'], solrconfig_xml.xpath("/config/extra/text()"))
+
+    def testSetupSolrConfigWithAdditionalInvalidSolrConfigShouldRaiseAnError(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<extra>option</extra>""")
+        try:
+            self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
+            self.fail()
+        except ValueError, e:
+            self.assertEquals("No elements found with which to extend the solrconfig.xml", str(e))
+
+    def testSetupWithNoFeatures(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'suggestions': False}, 'core2': {}}
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+    def testInvalidCoreConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'suggestions': False}, 'core2': False}
+        try:
+            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+            self.fail()
+        except AssertionError, e:
+            self.assertEquals("Core feature descriptions must be a dictionary (empty for no additional features).", str(e))
+            self.assertFalse(isdir(solrDataDir))
+
+    def testUnknownFeatureInConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'unknown-feature': True}}
+        try:
+            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
+            self.fail()
+        except ValueError, e:
+            self.assertEquals("Unknown feature 'unknown-feature'", str(e))
+
+    def testNotMatchingLuceneMatchVersion(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
+
+        self.assertRaises(ValueError, lambda: self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}}))
+
+    def testStartSolr(self):
+        solrConfig = self._createSolrConfig(stateDir=join(self.tempdir, 'the/state/dir'), port=1423, config={})
+        execCalled = []
+        solrConfig._execvp = lambda *args, **kwargs: execCalled.append((args, kwargs))
+        solrConfig.start(javaMX="1234M")
+        self.assertEquals(1, len(execCalled))
+        self.assertEquals((
+            'java', 
+            ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr4.0.0/start.jar'],
+        ), execCalled[0][0])
+        self.assertEquals({}, execCalled[0][1])
+
+    def testSetupSolrCoreWithExtraFilters(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {'schemaExtension':[
+            { 
+                'extensionType': 'fieldTypeFilter',
+                'fieldTypeName': 'text_ws',
+                'filterClass': 'solr.ASCIIFoldingFilterFactory',
+            }
+        ]}})
+        schemaXml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['solr.LowerCaseFilterFactory', 'solr.ASCIIFoldingFilterFactory'], schemaXml.xpath('/schema/types/fieldType[@name="text_ws"]/analyzer/filter/@class'))
+
+    def xtestStartSolrReally(self):
+        tempdir = "/tmp/testSetupSolrConfig"
+        isdir(tempdir) and rmtree(tempdir)
+        mkdir(tempdir)
+        solrDataDir = join(tempdir, 'solr-data')
+        solrConfig = self._createSolrConfig(stateDir=solrDataDir, port=8000, config={"test": {'admin': True}})
+        solrConfig.start(javaMX="1024M")
+
+    def _createSolrConfig(self, stateDir, port, config):
+        solrConfFile = join(self.tempdir, 'solr.conf')
+        jsonDump(config, open(solrConfFile, 'w'))
+        return start_solr.SolrConfig(stateDir, port, solrConfFile)
+        
+
diff --git a/usr-share/core-data/conf/schema.xml b/usr-share/core-data/conf/schema.xml
new file mode 100644
index 0000000..e2db7ed
--- /dev/null
+++ b/usr-share/core-data/conf/schema.xml
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<schema name="meresco-corename" version="1.5">
+  <types>
+    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="false"/>
+
+    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100" omitNorms="false" multiValued="true" indexed="true" stored="false">
+      <analyzer>
+        <tokenizer class="solr.ClassicTokenizerFactory"/>
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+    </fieldType>
+
+    <fieldType name="untokenized_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="true" indexed="true" stored="false" />
+
+    <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
+
+    <fieldType name="datetime" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/> 
+ </types>
+
+
+ <fields>
+   <field name="__id__" type="string" stored="true" required="true" /> 
+   <field name="__all__" type="text_ws" /> 
+   <field name="__timestamp__" type="datetime" indexed="true" stored="false" default="NOW" sortMissingLast="true" omitNorms="true" multiValued="false" />
+   <dynamicField name="sorted.*" type="sorted_string" />
+   <dynamicField name="untokenized.*" type="untokenized_string" />
+   <dynamicField name="meta.*" type="untokenized_string" />
+   <dynamicField name="*" type="text_ws" />
+ </fields>
+
+ <uniqueKey>__id__</uniqueKey>
+ <defaultSearchField>__all__</defaultSearchField>
+
+ <solrQueryParser defaultOperator="AND"/>
+</schema>
diff --git a/usr-share/core-data/conf/solrconfig.xml b/usr-share/core-data/conf/solrconfig.xml
new file mode 100644
index 0000000..296db2c
--- /dev/null
+++ b/usr-share/core-data/conf/solrconfig.xml
@@ -0,0 +1,112 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<!-- 
+     For more details about configurations options that may appear in
+     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
+-->
+<config>
+  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
+  
+  <!--
+    Controls what version of Lucene various components of Solr adhere to. Generally, you want
+    to use the latest version to get all bug fixes and improvements. It is highly recommended 
+    that you fully re-index after changing this setting as it can affect both how text is indexed
+    and queried.
+  -->
+  <luceneMatchVersion>LUCENE_40</luceneMatchVersion>
+
+  <query>
+    <maxBooleanClauses>1024</maxBooleanClauses>
+
+    <filterCache 
+      class="solr.LRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="256"/>
+
+    <queryResultCache 
+      class="solr.LRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="256"/>
+
+    <documentCache
+      class="solr.LRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="256"/>
+
+    <enableLazyFieldLoading>true</enableLazyFieldLoading>
+
+    <queryResultWindowSize>50</queryResultWindowSize>
+
+    <HashDocSet maxSize="3000" loadFactor="0.75"/>
+    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
+
+	<maxWarmingSearchers>4</maxWarmingSearchers>
+  </query>
+
+  <requestDispatcher handleSelect="true" >
+    <httpCaching never304="true" />
+  </requestDispatcher>
+
+  <requestHandler name="/search" class="org.apache.solr.handler.component.SearchHandler">
+  </requestHandler>
+
+
+  <!-- Update request handler.  
+  
+       Note: Since solr1.1 requestHandlers requires a valid content type header if posted in 
+       the body. For example, curl now requires: -H 'Content-type:text/xml; charset=utf-8'
+       The response format differs from solr1.1 formatting and returns a standard error code.
+       
+       To enable solr1.1 behavior, remove the /update handler or change its path
+       
+       "update.processor.class" is the class name for the UpdateRequestProcessor.  It is initalized
+       only once.  This can not be changed for each request.
+    -->
+  <requestHandler name="/update" class="solr.UpdateRequestHandler"  />
+  <!--requestHandler name="/update" class="solr.XmlUpdateRequestHandler" / -->
+
+
+ <requestHandler name="/admin/" class="org.apache.solr.handler.admin.AdminHandlers" />
+  
+  <!-- ping/healthcheck -->
+  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
+    <lst name="invariants">
+      <str name="qt">/search</str>
+      <str name="q">solrpingquery</str>
+    </lst>
+    <lst name="defaults">
+      <str name="echoParams">all</str>
+    </lst>
+    <!-- An optional feature of the PingRequestHandler is to configure the 
+         handler with a "healthcheckFile" which can be used to enable/disable 
+         the PingRequestHandler.
+         relative paths are resolved against the data dir 
+      -->
+    <!-- <str name="healthcheckFile">server-enabled.txt</str> -->
+  </requestHandler>
+     
+  <!-- config for the admin interface --> 
+  <admin>
+    <defaultQuery>*:*</defaultQuery>
+  </admin>
+
+</config>
diff --git a/usr-share/solr-data/contexts/solr.xml b/usr-share/solr-data/contexts/solr.xml
new file mode 100644
index 0000000..750392b
--- /dev/null
+++ b/usr-share/solr-data/contexts/solr.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0"  encoding="ISO-8859-1"?>
+<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
+ 
+<Configure class="org.eclipse.jetty.webapp.WebAppContext">
+  <Set name="contextPath">/solr</Set>
+  <Set name="war">/usr/share/java/webapps/apache-solr-4.0.0.war</Set>
+</Configure>
+
diff --git a/usr-share/solr-data/etc/jetty.xml b/usr-share/solr-data/etc/jetty.xml
new file mode 100644
index 0000000..ab84668
--- /dev/null
+++ b/usr-share/solr-data/etc/jetty.xml
@@ -0,0 +1,173 @@
+<?xml version="1.0"?>
+<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">
+
+<!-- =============================================================== -->
+<!-- Configure the Jetty Server                                      -->
+<!--                                                                 -->
+<!-- Documentation of this file format can be found at:              -->
+<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->
+<!--                                                                 -->
+<!-- =============================================================== -->
+
+
+<Configure id="Server" class="org.eclipse.jetty.server.Server">
+
+    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->
+    <Call name="setAttribute">
+      <Arg>org.eclipse.jetty.server.Request.maxFormContentSize</Arg>
+      <Arg>200000</Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Server Thread Pool                                          -->
+    <!-- =========================================================== -->
+    <Set name="ThreadPool">
+      <!-- Default queued blocking threadpool -->
+      <New class="org.eclipse.jetty.util.thread.QueuedThreadPool">
+        <Set name="minThreads">10</Set>
+        <Set name="maxThreads">10000</Set>
+        <Set name="detailedDump">false</Set>
+      </New>
+    </Set>
+
+    <!-- =========================================================== -->
+    <!-- Set connectors                                              -->
+    <!-- =========================================================== -->
+
+  <!--
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.eclipse.jetty.server.nio.SelectChannelConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">50000</Set>
+            <Set name="Acceptors">2</Set>
+            <Set name="statsOn">false</Set>
+            <Set name="confidentialPort">8443</Set>
+	    <Set name="lowResourcesConnections">5000</Set>
+	    <Set name="lowResourcesMaxIdleTime">5000</Set>
+          </New>
+      </Arg>
+    </Call>
+  -->
+
+    <!-- This connector is currently being used for Solr because it
+          showed better performance than nio.SelectChannelConnector
+          for typical Solr requests.  -->
+    <Call name="addConnector">
+      <Arg>
+          <New class="org.eclipse.jetty.server.bio.SocketConnector">
+            <Set name="host"><SystemProperty name="jetty.host" /></Set>
+            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
+            <Set name="maxIdleTime">50000</Set>
+            <Set name="lowResourceMaxIdleTime">1500</Set>
+            <Set name="statsOn">false</Set>
+          </New>
+      </Arg>
+    </Call>
+
+    <!-- =========================================================== -->
+    <!-- Set handler Collection Structure                            --> 
+    <!-- =========================================================== -->
+    <Set name="handler">
+      <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
+        <Set name="handlers">
+         <Array type="org.eclipse.jetty.server.Handler">
+           <Item>
+             <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"/>
+           </Item>
+           <Item>
+             <New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler"/>
+           </Item>
+           <Item>
+             <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler"/>
+           </Item>
+         </Array>
+        </Set>
+      </New>
+    </Set>
+    
+    <!-- =========================================================== -->
+    <!-- Configure Request Log                                       -->
+    <!-- =========================================================== -->
+    <!-- 
+    <Ref id="Handlers">
+      <Call name="addHandler">
+        <Arg>
+          <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler">
+            <Set name="requestLog">
+              <New id="RequestLogImpl" class="org.eclipse.jetty.server.NCSARequestLog">
+                <Set name="filename">
+                   logs/request.yyyy_mm_dd.log
+                </Set>
+                <Set name="filenameDateFormat">yyyy_mm_dd</Set>
+                <Set name="retainDays">90</Set>
+                <Set name="append">true</Set>
+                <Set name="extended">false</Set>
+                <Set name="logCookies">false</Set>
+                <Set name="LogTimeZone">UTC</Set>
+              </New>
+            </Set>
+          </New>
+        </Arg>
+      </Call>
+    </Ref>
+    -->
+
+    <!-- =========================================================== -->
+    <!-- extra options                                               -->
+    <!-- =========================================================== -->
+    <Set name="stopAtShutdown">true</Set>
+    <Set name="sendServerVersion">false</Set>
+    <Set name="sendDateHeader">false</Set>
+    <Set name="gracefulShutdown">1000</Set>
+    <Set name="dumpAfterStart">false</Set>
+    <Set name="dumpBeforeStop">false</Set>
+
+
+
+
+    <Call name="addBean">
+      <Arg>
+        <New id="DeploymentManager" class="org.eclipse.jetty.deploy.DeploymentManager">
+          <Set name="contexts">
+            <Ref id="Contexts" />
+          </Set>
+          <Call name="setContextAttribute">
+            <Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>
+            <Arg>.*/servlet-api-[^/]*\.jar$</Arg>
+          </Call>
+          
+          
+          <!-- Add a customize step to the deployment lifecycle -->
+          <!-- uncomment and replace DebugBinding with your extended AppLifeCycle.Binding class 
+          <Call name="insertLifeCycleNode">
+            <Arg>deployed</Arg>
+            <Arg>starting</Arg>
+            <Arg>customise</Arg>
+          </Call>
+          <Call name="addLifeCycleBinding">
+            <Arg>
+              <New class="org.eclipse.jetty.deploy.bindings.DebugBinding">
+                <Arg>customise</Arg>
+              </New>
+            </Arg>
+          </Call>
+          -->
+          
+        </New>
+      </Arg>
+    </Call>
+    
+    <Ref id="DeploymentManager">
+      <Call name="addAppProvider">
+        <Arg>
+          <New class="org.eclipse.jetty.deploy.providers.ContextProvider">
+            <Set name="monitoredDirName"><SystemProperty name="jetty.home" default="."/>/contexts</Set>
+            <Set name="scanInterval">0</Set>
+          </New>
+        </Arg>
+      </Call>
+    </Ref>
+
+</Configure>
diff --git a/usr-share/solr-data/etc/webdefault.xml b/usr-share/solr-data/etc/webdefault.xml
new file mode 100644
index 0000000..213138b
--- /dev/null
+++ b/usr-share/solr-data/etc/webdefault.xml
@@ -0,0 +1,527 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+  <!-- ===================================================================== -->
+  <!-- This file contains the default descriptor for web applications.       -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
+  <!-- The intent of this descriptor is to include jetty specific or common  -->
+  <!-- configuration for all webapps.   If a context has a webdefault.xml    -->
+  <!-- descriptor, it is applied before the contexts own web.xml file        -->
+  <!--                                                                       -->
+  <!-- A context may be assigned a default descriptor by:                    -->
+  <!--  + Calling WebApplicationContext.setDefaultsDescriptor                -->
+  <!--  + Passed an arg to addWebApplications                                -->
+  <!--                                                                       -->
+  <!-- This file is used both as the resource within the jetty.jar (which is -->
+  <!-- used as the default if no explicit defaults descriptor is set) and it -->
+  <!-- is copied to the etc directory of the Jetty distro and explicitly     -->
+  <!-- by the jetty.xml file.                                                -->
+  <!--                                                                       -->
+  <!-- ===================================================================== -->
+<web-app
+  xmlns="http://java.sun.com/xml/ns/javaee"
+  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
+  metadata-complete="true"
+  version="2.5"
+>
+
+  <description>
+    Default web.xml file.  
+    This file is applied to a Web application before it's own WEB_INF/web.xml file
+  </description>
+
+  <!-- ==================================================================== -->
+  <!-- Removes static references to beans from javax.el.BeanELResolver to   -->
+  <!-- ensure webapp classloader can be released on undeploy                -->
+  <!-- ==================================================================== -->
+  <listener>
+   <listener-class>org.eclipse.jetty.servlet.listener.ELContextCleaner</listener-class>
+  </listener>
+  
+  <!-- ==================================================================== -->
+  <!-- Removes static cache of Methods from java.beans.Introspector to      -->
+  <!-- ensure webapp classloader can be released on undeploy                -->
+  <!-- ==================================================================== -->  
+  <listener>
+   <listener-class>org.eclipse.jetty.servlet.listener.IntrospectorCleaner</listener-class>
+  </listener>
+  
+
+  <!-- ==================================================================== -->
+  <!-- Context params to control Session Cookies                            -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!--
+    UNCOMMENT TO ACTIVATE <context-param> <param-name>org.eclipse.jetty.servlet.SessionDomain</param-name> <param-value>127.0.0.1</param-value> </context-param> <context-param>
+    <param-name>org.eclipse.jetty.servlet.SessionPath</param-name> <param-value>/</param-value> </context-param> <context-param> <param-name>org.eclipse.jetty.servlet.MaxAge</param-name>
+    <param-value>-1</param-value> </context-param>
+  -->
+
+  <!-- ==================================================================== -->
+  <!-- The default servlet.                                                 -->
+  <!-- This servlet, normally mapped to /, provides the handling for static -->
+  <!-- content, OPTIONS and TRACE methods for the context.                  -->
+  <!-- The following initParameters are supported:                          -->
+  <!--  
+ *  acceptRanges      If true, range requests and responses are
+ *                    supported
+ *
+ *  dirAllowed        If true, directory listings are returned if no
+ *                    welcome file is found. Else 403 Forbidden.
+ *
+ *  welcomeServlets   If true, attempt to dispatch to welcome files
+ *                    that are servlets, but only after no matching static
+ *                    resources could be found. If false, then a welcome
+ *                    file must exist on disk. If "exact", then exact
+ *                    servlet matches are supported without an existing file.
+ *                    Default is true.
+ *
+ *                    This must be false if you want directory listings,
+ *                    but have index.jsp in your welcome file list.
+ *
+ *  redirectWelcome   If true, welcome files are redirected rather than
+ *                    forwarded to.
+ *
+ *  gzip              If set to true, then static content will be served as
+ *                    gzip content encoded if a matching resource is
+ *                    found ending with ".gz"
+ *
+ *  resourceBase      Set to replace the context resource base
+ *
+ *  resourceCache     If set, this is a context attribute name, which the servlet 
+ *                    will use to look for a shared ResourceCache instance. 
+ *                        
+ *  relativeResourceBase
+ *                    Set with a pathname relative to the base of the
+ *                    servlet context root. Useful for only serving static content out
+ *                    of only specific subdirectories.
+ *
+ *  aliases           If True, aliases of resources are allowed (eg. symbolic
+ *                    links and caps variations). May bypass security constraints.
+ *
+ *  maxCacheSize      The maximum total size of the cache or 0 for no cache.
+ *  maxCachedFileSize The maximum size of a file to cache
+ *  maxCachedFiles    The maximum number of files to cache
+ *
+ *  useFileMappedBuffer
+ *                    If set to true, it will use mapped file buffer to serve static content
+ *                    when using NIO connector. Setting this value to false means that
+ *                    a direct buffer will be used instead of a mapped file buffer.
+ *                    By default, this is set to true.
+ *
+ *  cacheControl      If set, all static content will have this value set as the cache-control
+ *                    header.
+ -->
+ 
+ 
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet>
+    <servlet-name>default</servlet-name>
+    <servlet-class>org.eclipse.jetty.servlet.DefaultServlet</servlet-class>
+    <init-param>
+      <param-name>aliases</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>acceptRanges</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>dirAllowed</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>welcomeServlets</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>redirectWelcome</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCacheSize</param-name>
+      <param-value>256000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFileSize</param-name>
+      <param-value>200000000</param-value>
+    </init-param>
+    <init-param>
+      <param-name>maxCachedFiles</param-name>
+      <param-value>2048</param-value>
+    </init-param>
+    <init-param>
+      <param-name>gzip</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <init-param>
+      <param-name>useFileMappedBuffer</param-name>
+      <param-value>true</param-value>
+    </init-param>
+    <!--
+    <init-param>
+      <param-name>resourceCache</param-name>
+      <param-value>resourceCache</param-value>
+    </init-param>
+    -->
+    <!--
+    <init-param>
+      <param-name>cacheControl</param-name>
+      <param-value>max-age=3600,public</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping>
+    <servlet-name>default</servlet-name>
+    <url-pattern>/</url-pattern>
+  </servlet-mapping>
+
+
+  <!-- ==================================================================== -->
+  <!-- JSP Servlet                                                          -->
+  <!-- This is the jasper JSP servlet from the jakarta project              -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- The JSP page compiler and execution servlet, which is the mechanism  -->
+  <!-- used by Glassfish to support JSP pages.  Traditionally, this servlet -->
+  <!-- is mapped to URL patterh "*.jsp".  This servlet supports the         -->
+  <!-- following initialization parameters (default values are in square    -->
+  <!-- brackets):                                                           -->
+  <!--                                                                      -->
+  <!--   checkInterval       If development is false and reloading is true, -->
+  <!--                       background compiles are enabled. checkInterval -->
+  <!--                       is the time in seconds between checks to see   -->
+  <!--                       if a JSP page needs to be recompiled. [300]    -->
+  <!--                                                                      -->
+  <!--   compiler            Which compiler Ant should use to compile JSP   -->
+  <!--                       pages.  See the Ant documenation for more      -->
+  <!--                       information. [javac]                           -->
+  <!--                                                                      -->
+  <!--   classdebuginfo      Should the class file be compiled with         -->
+  <!--                       debugging information?  [true]                 -->
+  <!--                                                                      -->
+  <!--   classpath           What class path should I use while compiling   -->
+  <!--                       generated servlets?  [Created dynamically      -->
+  <!--                       based on the current web application]          -->
+  <!--                       Set to ? to make the container explicitly set  -->
+  <!--                       this parameter.                                -->
+  <!--                                                                      -->
+  <!--   development         Is Jasper used in development mode (will check -->
+  <!--                       for JSP modification on every access)?  [true] -->
+  <!--                                                                      -->
+  <!--   enablePooling       Determines whether tag handler pooling is      -->
+  <!--                       enabled  [true]                                -->
+  <!--                                                                      -->
+  <!--   fork                Tell Ant to fork compiles of JSP pages so that -->
+  <!--                       a separate JVM is used for JSP page compiles   -->
+  <!--                       from the one Tomcat is running in. [true]      -->
+  <!--                                                                      -->
+  <!--   ieClassId           The class-id value to be sent to Internet      -->
+  <!--                       Explorer when using <jsp:plugin> tags.         -->
+  <!--                       [clsid:8AD9C840-044E-11D1-B3E9-00805F499D93]   -->
+  <!--                                                                      -->
+  <!--   javaEncoding        Java file encoding to use for generating java  -->
+  <!--                       source files. [UTF-8]                          -->
+  <!--                                                                      -->
+  <!--   keepgenerated       Should we keep the generated Java source code  -->
+  <!--                       for each page instead of deleting it? [true]   -->
+  <!--                                                                      -->
+  <!--   logVerbosityLevel   The level of detailed messages to be produced  -->
+  <!--                       by this servlet.  Increasing levels cause the  -->
+  <!--                       generation of more messages.  Valid values are -->
+  <!--                       FATAL, ERROR, WARNING, INFORMATION, and DEBUG. -->
+  <!--                       [WARNING]                                      -->
+  <!--                                                                      -->
+  <!--   mappedfile          Should we generate static content with one     -->
+  <!--                       print statement per input line, to ease        -->
+  <!--                       debugging?  [false]                            -->
+  <!--                                                                      -->
+  <!--                                                                      -->
+  <!--   reloading           Should Jasper check for modified JSPs?  [true] -->
+  <!--                                                                      -->
+  <!--   suppressSmap        Should the generation of SMAP info for JSR45   -->
+  <!--                       debugging be suppressed?  [false]              -->
+  <!--                                                                      -->
+  <!--   dumpSmap            Should the SMAP info for JSR45 debugging be    -->
+  <!--                       dumped to a file? [false]                      -->
+  <!--                       False if suppressSmap is true                  -->
+  <!--                                                                      -->
+  <!--   scratchdir          What scratch directory should we use when      -->
+  <!--                       compiling JSP pages?  [default work directory  -->
+  <!--                       for the current web application]               -->
+  <!--                                                                      -->
+  <!--   tagpoolMaxSize      The maximum tag handler pool size  [5]         -->
+  <!--                                                                      -->
+  <!--   xpoweredBy          Determines whether X-Powered-By response       -->
+  <!--                       header is added by generated servlet  [false]  -->
+  <!--                                                                      -->
+  <!-- If you wish to use Jikes to compile JSP pages:                       -->
+  <!--   Set the init parameter "compiler" to "jikes".  Define              -->
+  <!--   the property "-Dbuild.compiler.emacs=true" when starting Jetty     -->
+  <!--   to cause Jikes to emit error messages in a format compatible with  -->
+  <!--   Jasper.                                                            -->
+  <!--   If you get an error reporting that jikes can't use UTF-8 encoding, -->
+  <!--   try setting the init parameter "javaEncoding" to "ISO-8859-1".     -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <servlet
+    id="jsp"
+  >
+    <servlet-name>jsp</servlet-name>
+    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
+    <init-param>
+      <param-name>logVerbosityLevel</param-name>
+      <param-value>DEBUG</param-value>
+    </init-param>
+    <init-param>
+      <param-name>fork</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <init-param>
+      <param-name>xpoweredBy</param-name>
+      <param-value>false</param-value>
+    </init-param>
+    <!--  
+    <init-param>
+        <param-name>classpath</param-name>
+        <param-value>?</param-value>
+    </init-param>
+    -->
+    <load-on-startup>0</load-on-startup>
+  </servlet>
+
+  <servlet-mapping>
+    <servlet-name>jsp</servlet-name>
+    <url-pattern>*.jsp</url-pattern>
+    <url-pattern>*.jspf</url-pattern>
+    <url-pattern>*.jspx</url-pattern>
+    <url-pattern>*.xsp</url-pattern>
+    <url-pattern>*.JSP</url-pattern>
+    <url-pattern>*.JSPF</url-pattern>
+    <url-pattern>*.JSPX</url-pattern>
+    <url-pattern>*.XSP</url-pattern>
+  </servlet-mapping>
+
+  <!-- ==================================================================== -->
+  <!-- Dynamic Servlet Invoker.                                             -->
+  <!-- This servlet invokes anonymous servlets that have not been defined   -->
+  <!-- in the web.xml or by other means. The first element of the pathInfo  -->
+  <!-- of a request passed to the envoker is treated as a servlet name for  -->
+  <!-- an existing servlet, or as a class name of a new servlet.            -->
+  <!-- This servlet is normally mapped to /servlet/*                        -->
+  <!-- This servlet support the following initParams:                       -->
+  <!--                                                                      -->
+  <!--  nonContextServlets       If false, the invoker can only load        -->
+  <!--                           servlets from the contexts classloader.    -->
+  <!--                           This is false by default and setting this  -->
+  <!--                           to true may have security implications.    -->
+  <!--                                                                      -->
+  <!--  verbose                  If true, log dynamic loads                 -->
+  <!--                                                                      -->
+  <!--  *                        All other parameters are copied to the     -->
+  <!--                           each dynamic servlet as init parameters    -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!--
+    Uncomment for dynamic invocation <servlet> <servlet-name>invoker</servlet-name> <servlet-class>org.eclipse.jetty.servlet.Invoker</servlet-class> <init-param> <param-name>verbose</param-name>
+    <param-value>false</param-value> </init-param> <init-param> <param-name>nonContextServlets</param-name> <param-value>false</param-value> </init-param> <init-param>
+    <param-name>dynamicParam</param-name> <param-value>anyValue</param-value> </init-param> <load-on-startup>0</load-on-startup> </servlet> <servlet-mapping> <servlet-name>invoker</servlet-name>
+    <url-pattern>/servlet/*</url-pattern> </servlet-mapping>
+  -->
+
+
+
+  <!-- ==================================================================== -->
+  <session-config>
+    <session-timeout>30</session-timeout>
+  </session-config>
+
+  <!-- ==================================================================== -->
+  <!-- Default MIME mappings                                                -->
+  <!-- The default MIME mappings are provided by the mime.properties        -->
+  <!-- resource in the org.eclipse.jetty.server.jar file.  Additional or modified  -->
+  <!-- mappings may be specified here                                       -->
+  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
+  <!-- UNCOMMENT TO ACTIVATE
+  <mime-mapping>
+    <extension>mysuffix</extension>
+    <mime-type>mymime/type</mime-type>
+  </mime-mapping>
+  -->
+
+  <!-- ==================================================================== -->
+  <welcome-file-list>
+    <welcome-file>index.html</welcome-file>
+    <welcome-file>index.htm</welcome-file>
+    <welcome-file>index.jsp</welcome-file>
+  </welcome-file-list>
+
+  <!-- ==================================================================== -->
+  <locale-encoding-mapping-list>
+    <locale-encoding-mapping>
+      <locale>ar</locale>
+      <encoding>ISO-8859-6</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>be</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>bg</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ca</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>cs</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>da</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>de</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>el</locale>
+      <encoding>ISO-8859-7</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>en</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>es</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>et</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>fi</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>fr</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>hr</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>hu</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>is</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>it</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>iw</locale>
+      <encoding>ISO-8859-8</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ja</locale>
+      <encoding>Shift_JIS</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ko</locale>
+      <encoding>EUC-KR</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>lt</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>lv</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>mk</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>nl</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>no</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>pl</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>pt</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ro</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>ru</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sh</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sk</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sl</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sq</locale>
+      <encoding>ISO-8859-2</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sr</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>sv</locale>
+      <encoding>ISO-8859-1</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>tr</locale>
+      <encoding>ISO-8859-9</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>uk</locale>
+      <encoding>ISO-8859-5</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>zh</locale>
+      <encoding>GB2312</encoding>
+    </locale-encoding-mapping>
+    <locale-encoding-mapping>
+      <locale>zh_TW</locale>
+      <encoding>Big5</encoding>
+    </locale-encoding-mapping>
+  </locale-encoding-mapping-list>
+
+  <security-constraint>
+    <web-resource-collection>
+      <web-resource-name>Disable TRACE</web-resource-name>
+      <url-pattern>/</url-pattern>
+      <http-method>TRACE</http-method>
+    </web-resource-collection>
+    <auth-constraint/>
+  </security-constraint>
+
+</web-app>
+
diff --git a/usr-share/solr-data/solr.xml b/usr-share/solr-data/solr.xml
new file mode 100644
index 0000000..3da55c2
--- /dev/null
+++ b/usr-share/solr-data/solr.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
+<solr sharedLib="lib" persistent="true">
+    <cores adminPath="/admin/cores"/>
+</solr>
diff --git a/usr-share/solr-data/start.config b/usr-share/solr-data/start.config
new file mode 100644
index 0000000..4828eaa
--- /dev/null
+++ b/usr-share/solr-data/start.config
@@ -0,0 +1,162 @@
+# This file controls what file are to be put on classpath or command line.
+#
+# Format is as follows:
+#
+# Each line contains entry in the format:
+#
+#  SUBJECT [ [!] CONDITION [AND|OR] ]*
+# 
+# where SUBJECT: 
+#   ends with ".class" is the Main class to run.
+#   ends with ".xml" is a configuration file for the command line
+#   ends with "/" is a directory from which to add all jar and zip files. 
+#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
+#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
+#   Containing = are used to assign system properties.
+#   Containing ~= are used to assign start properties.
+#   Containing /= are used to assign a canonical path.
+#   all other subjects are treated as files to be added to the classpath.
+#
+# ${name} is expanded to a start property
+# $(name) is expanded to either a start property or a system property. 
+# The start property ${version} is defined as the version of the start.jar
+#
+# Files starting with "/" are considered absolute, all others are relative to
+# the home directory.
+#
+# CONDITION is one of:
+#   always
+#   never
+#   available classname        # true if class on classpath
+#   property name              # true if set as start property
+#   system   name              # true if set as system property
+#   exists file                # true if file/dir exists
+#   java OPERATOR version      # java version compared to literal
+#   nargs OPERATOR number      # number of command line args compared to literal
+#   OPERATOR := one of "<",">","<=",">=","==","!="
+#
+# CONTITIONS can be combined with AND OR or !, with AND being the assume
+# operator for a list of CONDITIONS.
+#
+# Classpath operations are evaluated on the fly, so once a class or jar is
+# added to the classpath, subsequent available conditions will see that class.
+#
+# The configuration file may be divided into sections with option names like:
+# [ssl,default]
+#
+# Clauses after a section header will only be included if they match one of the tags in the 
+# options property.  By default options are set to "default,*" or the OPTIONS property may
+# be used to pass in a list of tags, eg. :
+#
+#    java -jar start.jar OPTIONS=jetty,jsp,ssl
+#
+# The tag '*' is always appended to the options, so any section with the * tag is always 
+# applied.
+#
+
+# add a property defined classpath
+${path}.path                                     property path
+
+# add a property defined library directory
+${lib}/**                                        exists ${lib}
+
+jetty.home=/location/of/your/jetty/config/dir
+jetty.lib=/location/of/your/lib
+
+# The main class to run
+org.eclipse.jetty.xml.XmlConfiguration.class
+${start.class}.class                             property start.class
+
+# The default configuration files
+$(jetty.home)/etc/jetty.xml                      nargs == 0
+./jetty-server/src/main/config/etc/jetty.xml     nargs == 0 AND ! exists $(jetty.home)/etc/jetty.xml
+
+# Default OPTIONS if not specified on the command line
+OPTIONS~=default,*                               ! property OPTIONS
+
+# Add a resources directory if it is there
+[All,resources,default]
+$(jetty.home)/resources/
+           
+# Add jetty modules
+[*]
+$(jetty.lib)/jetty-util-$(version).jar                                             ! available org.eclipse.jetty.util.StringUtil
+$(jetty.lib)/jetty-io-$(version).jar                                               ! available org.eclipse.jetty.io.Buffer
+
+[Server,All,xml,default]
+$(jetty.lib)/jetty-xml-$(version).jar                                              ! available org.eclipse.jetty.xml.XmlParser
+         
+[Server,All,server,default]
+$(jetty.lib)/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
+$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+$(jetty.lib)/jetty-continuation-$(version).jar                                     ! available org.eclipse.jetty.continuation.Continuation
+$(jetty.lib)/jetty-server-$(version).jar                                           ! available org.eclipse.jetty.server.Server
+                                             
+[Server,All,security,default]
+$(jetty.lib)/jetty-security-$(version).jar                                         ! available org.eclipse.jetty.security.LoginService
+                                                       
+[Server,All,servlet,default]
+$(jetty.lib)/servlet-api-3.0.jar                                                   ! available javax.servlet.ServletContext
+$(jetty.lib)/jetty-servlet-$(version).jar                                          ! available org.eclipse.jetty.servlet.ServletHandler
+                            
+[Server,All,webapp,default]
+$(jetty.lib)/jetty-webapp-$(version).jar                                           ! available org.eclipse.jetty.webapp.WebAppContext
+                                  
+[Server,All,deploy,default]
+$(jetty.lib)/jetty-deploy-$(version).jar                                           ! available org.eclipse.jetty.deploy.ContextDeployer
+           
+[Server,All,servlets,default]
+$(jetty.lib)/jetty-servlets-$(version).jar                                         ! available org.eclipse.jetty.servlets.WelcomeFilter
+
+[All,rewrite]
+$(jetty.lib)/jetty-rewrite-$(version).jar                                          ! available org.eclipse.jetty.rewrite.handler.RewriteHandler
+
+[All,jmx]
+$(jetty.lib)/jetty-jmx-$(version).jar                                              ! available org.eclipse.jetty.jmx.MBeanContainer
+                  
+[All,ajp]
+$(jetty.lib)/jetty-ajp-$(version).jar                                              ! available org.eclipse.jetty.ajp.Ajp13Connection      
+                   
+[All,plus,jndi]
+$(jetty.lib)/jetty-jndi-${version}.jar                                             ! available org.eclipse.jetty.jndi.ContextFactory
+$(jetty.lib)/jetty-plus-${version}.jar                                             ! available org.eclipse.jetty.plus.jndi.NamingEntry
+$(jetty.lib)/jndi/**                                                               exists $(jetty.lib)/jndi 
+
+[All,annotations]
+$(jetty.lib)/jetty-annotations-$(version).jar                                      ! available org.eclipse.jetty.annotations.AnnotationFinder
+$(jetty.lib)/annotations/**                                                        exists $(jetty.lib)/jndi 
+          
+[All,setuid]
+$(jetty.lib)/jetty-setuid-$(version).jar                                           ! available org.eclipse.jetty.setuid.SetUID
+$(jetty.lib)/setuid/**                                                       
+                                    
+[All,policy]
+$(jetty.lib)/jetty-policy-$(version).jar                                           ! available org.eclipse.jetty.policy.JettyPolicy
+                                    
+[All,Client,client]
+$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+$(jetty.lib)/jetty-client-$(version).jar                                           ! available org.eclipse.jetty.client.HttpClient
+
+[All,websocket]
+$(jetty.lib)/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
+       
+[Client]
+$(jetty.lib)/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser
+
+[All,websocket]
+$(jetty.lib)/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket
+       
+[All,overlay,overlays]
+$(jetty.lib)/jetty-overlay-deployer-$(version).jar                                 ! available org.eclipse.jetty.overlay.OverlayedAppProvider
+       
+      
+# Add ext if it exists
+[Server,All,default,ext]        
+$(jetty.lib)/ext/**
+
+# Add all other sub-directories in /lib/ as options in a dynamic way
+[All,=$(jetty.lib)/**]        
+
+# Set webapps dir
+jetty.webapps=/usr/share/java/webapps
+
diff --git a/usr-share/solrconfig.d/autocomplete.xml b/usr-share/solrconfig.d/autocomplete.xml
new file mode 100644
index 0000000..ac9f732
--- /dev/null
+++ b/usr-share/solrconfig.d/autocomplete.xml
@@ -0,0 +1,13 @@
+<config>
+  <searchComponent name="terms" class="solr.TermsComponent"/>
+
+  <!-- A request handler for demonstrating the terms component -->
+  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
+     <lst name="defaults">
+      <bool name="terms">true</bool>
+    </lst>     
+    <arr name="components">
+      <str>terms</str>
+    </arr>
+  </requestHandler>
+</config>
diff --git a/usr-share/solrconfig.d/suggestions.xml b/usr-share/solrconfig.d/suggestions.xml
new file mode 100644
index 0000000..26f6dd0
--- /dev/null
+++ b/usr-share/solrconfig.d/suggestions.xml
@@ -0,0 +1,17 @@
+<config>
+  <searchComponent name="suggestions" class="solr.SpellCheckComponent">
+    <str name="queryAnalyzerFieldType">textSpell</str>
+    <lst name="spellchecker">
+      <str name="name">default</str>
+      <str name="field">%(field)s</str>
+      <str name="spellcheckIndexDir">suggestions</str>
+      <str name="buildOnCommit">true</str>
+    </lst>
+  </searchComponent>
+
+  <requestHandler name="/select" class="solr.SearchHandler" startup="lazy">
+    <arr name="last-components">
+      <str>suggestions</str>
+    </arr>
+  </requestHandler>
+</config>
-- 
1.7.2.5


From da2651a50e4fe3d4466ba473aadb9bd5e332bb81 Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Wed, 12 Dec 2012 12:10:58 +0100
Subject: [PATCH 43/66] TJ/HM: SolrConfig -> Server.

---
 bin/start-solr                        |    6 +-
 bin/start-solr.py                     |    1 -
 meresco/solr/server.py                |  155 +++++++++++++++++++++
 meresco/solr/solrconfig.py            |  155 ---------------------
 test/_alltests.py                     |    2 +-
 test/_integration/integrationstate.py |    2 +-
 test/servertest.py                    |  224 ++++++++++++++++++++++++++++++
 test/solrconfigtest.py                |  241 ---------------------------------
 8 files changed, 384 insertions(+), 402 deletions(-)
 delete mode 120000 bin/start-solr.py
 create mode 100644 meresco/solr/server.py
 delete mode 100644 meresco/solr/solrconfig.py
 create mode 100644 test/servertest.py
 delete mode 100644 test/solrconfigtest.py

diff --git a/bin/start-solr b/bin/start-solr
index f57914f..22e4cc6 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -33,7 +33,7 @@ from os.path import join
 from optparse import OptionParser, Option
 from subprocess import Popen
 
-from meresco.solr.solrconfig import SolrConfig, solrUsrShareDir
+from meresco.solr.server import Server, solrUsrShareDir
 
 
 def parseArguments(args):
@@ -70,7 +70,7 @@ if __name__ == '__main__':
         print "Don't use GCJ as the default java JRE."
         exit(1)
 
-    solrConfig = SolrConfig(stateDir=options.stateDir, port=options.port, configFile=options.config)
-    solrConfig.start(javaMX=options.javaMX)
+    solrServer = Server(stateDir=options.stateDir, port=options.port, configFile=options.config)
+    solrServer.start(javaMX=options.javaMX)
 
 
diff --git a/bin/start-solr.py b/bin/start-solr.py
deleted file mode 120000
index 67f9338..0000000
--- a/bin/start-solr.py
+++ /dev/null
@@ -1 +0,0 @@
-start-solr
\ No newline at end of file
diff --git a/meresco/solr/server.py b/meresco/solr/server.py
new file mode 100644
index 0000000..c5a0df1
--- /dev/null
+++ b/meresco/solr/server.py
@@ -0,0 +1,155 @@
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from os import makedirs, listdir, system, execvp
+from os.path import dirname, abspath, isdir, isfile, join
+from shutil import copytree, rmtree
+from re import compile, MULTILINE
+from StringIO import StringIO
+from lxml.etree import parse, SubElement, tostring
+from simplejson import load as jsonLoad
+
+
+mydir = dirname(abspath(__file__))
+solrUsrShareDir = '/usr/share/solr4.0.0-run'
+solrUsrShareDir = join(dirname(dirname(mydir)), 'usr-share') # DO_NOT_DISTRIBUTE
+SOLR_VERSION = "4.0.0"
+
+
+class Server(object):
+    def __init__(self, stateDir, port, configFile):
+        self.config=jsonLoad(open(configFile))
+        self.stateDir = stateDir
+        self.port = port
+        self.configBasedir = dirname(abspath(configFile))
+        assert all(type(v) == dict for v in self.config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
+
+        if not isdir(self.stateDir):
+            copytree(join(solrUsrShareDir, 'solr-data'), self.stateDir)
+        else:
+            newMatchVersion = parse(open(join(solrUsrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+            for coreDir in listdir(join(self.stateDir, 'cores')):
+                currentMatchVersion = parse(open(join(self.stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+                if currentMatchVersion != newMatchVersion:
+                    raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
+
+        self._setupJettyXml()
+        self._setupStartConfig()
+        self._setupSolrXml()
+        self._setupCoreData()
+
+        for core, features in self.config.items():
+            for feature, options in features.items():
+                self._setupFeature(name=feature, core=core, options=options)
+
+    def _setupFeatureSchemaExtension(self, core, options):
+        schemaXmlFile = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
+        schemaXml = parse(open(schemaXmlFile))
+        for option in options:
+            if option.get('extensionType') == 'fieldTypeFilter':
+                fieldTypeName = option['fieldTypeName']
+                fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
+                assert len(fieldTypes) == 1
+                analyzer = fieldTypes[0].xpath('analyzer')[0]
+                SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
+
+        with open(schemaXmlFile, 'w') as f:
+            f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
+
+    def _setupFeature(self, name, core, options):
+        if name == 'schemaExtension':
+            self._setupFeatureSchemaExtension(core=core, options=options)
+            return
+        if name == 'additionalSolrConfig':
+            filepath = options if options.startswith('/') else join(self.configBasedir, options)
+            self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
+            return
+        if options == False:
+            return
+        featureFilename = join(solrUsrShareDir, 'solrconfig.d', '%s.xml' % name)
+        if not isfile(featureFilename):
+            raise ValueError("Unknown feature '%s'" % name)
+
+        feature = open(featureFilename).read()
+        if type(options) is dict:
+            feature = feature % options
+        feature_xml = parse(StringIO(feature))
+        self._extendSolrConfig(core=core, lxmlElementList=feature_xml.xpath('/config/*'))
+
+    def _extendSolrConfig(self, core, lxmlElementList):
+        if not lxmlElementList:
+            raise ValueError("No elements found with which to extend the solrconfig.xml")
+        solrconfig_file = join(self.stateDir, 'cores', core, 'conf', 'solrconfig.xml')
+        core_sorlconfig = parse(open(solrconfig_file))
+        core_sorlconfig.getroot().extend(lxmlElementList)
+        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
+    def _setupCoreData(self):
+        cores = self.config.keys()
+        solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
+        coresElement = solr_xml.xpath("/solr/cores")[0]
+        [coresElement.remove(child) for child in coresElement.getchildren()]
+        for core in cores:
+            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
+            coreDir = join(self.stateDir, 'cores', core)
+            isdir(coreDir) and rmtree(coreDir)
+            copytree(join(solrUsrShareDir, 'core-data'), coreDir)
+            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
+            schema_xml = parse(open(schema_xml_path))
+            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
+            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
+
+        open(join(self.stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
+
+    def _setupJettyXml(self):
+        system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
+                self.port,
+                join(self.stateDir, 'etc', 'jetty.xml')
+            ))
+
+    def _setupStartConfig(self):
+        startConfigPath = join(self.stateDir, 'start.config')
+        startConfig = oldStartConfig = open(startConfigPath).read()
+        startConfig = compile('^jetty\.home=.*$', flags=MULTILINE).sub('jetty.home=' + self.stateDir, startConfig)
+        startConfig = compile('^jetty\.lib=.*$', flags=MULTILINE).sub('jetty.lib=/usr/share/java/solr%s' % SOLR_VERSION, startConfig)
+        open(startConfigPath, 'w').write(startConfig)
+
+    def _setupSolrXml(self):
+        system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, self.stateDir))
+
+    def start(self, javaMX):
+        self._execvp(
+            'java', [
+                'java',
+                '-Xmx%s' % javaMX, 
+                '-Djetty.port=%s' % self.port,
+                '-DSTART=%s/start.config' % self.stateDir,
+                '-Dsolr.solr.home=%s' % self.stateDir, 
+                '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
+            ])
+
+    def _execvp(self, *args, **kwargs):
+        execvp(*args, **kwargs)
+
diff --git a/meresco/solr/solrconfig.py b/meresco/solr/solrconfig.py
deleted file mode 100644
index 5fa4b28..0000000
--- a/meresco/solr/solrconfig.py
+++ /dev/null
@@ -1,155 +0,0 @@
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-from os import makedirs, listdir, system, execvp
-from os.path import dirname, abspath, isdir, isfile, join
-from shutil import copytree, rmtree
-from re import compile, MULTILINE
-from StringIO import StringIO
-from lxml.etree import parse, SubElement, tostring
-from simplejson import load as jsonLoad
-
-
-mydir = dirname(abspath(__file__))
-solrUsrShareDir = '/usr/share/solr4.0.0-run'
-solrUsrShareDir = join(dirname(dirname(mydir)), 'usr-share') # DO_NOT_DISTRIBUTE
-SOLR_VERSION = "4.0.0"
-
-
-class SolrConfig(object):
-    def __init__(self, stateDir, port, configFile):
-        self.config=jsonLoad(open(configFile))
-        self.stateDir = stateDir
-        self.port = port
-        self.configBasedir = dirname(abspath(configFile))
-        assert all(type(v) == dict for v in self.config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
-
-        if not isdir(self.stateDir):
-            copytree(join(solrUsrShareDir, 'solr-data'), self.stateDir)
-        else:
-            newMatchVersion = parse(open(join(solrUsrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-            for coreDir in listdir(join(self.stateDir, 'cores')):
-                currentMatchVersion = parse(open(join(self.stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
-                if currentMatchVersion != newMatchVersion:
-                    raise ValueError("LuceneMatchVersion in core '%s' does not match the new configuration. Remove the old index." % coreDir)
-
-        self._setupJettyXml()
-        self._setupStartConfig()
-        self._setupSolrXml()
-        self._setupCoreData()
-
-        for core, features in self.config.items():
-            for feature, options in features.items():
-                self._setupFeature(name=feature, core=core, options=options)
-
-    def _setupFeatureSchemaExtension(self, core, options):
-        schemaXmlFile = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
-        schemaXml = parse(open(schemaXmlFile))
-        for option in options:
-            if option.get('extensionType') == 'fieldTypeFilter':
-                fieldTypeName = option['fieldTypeName']
-                fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
-                assert len(fieldTypes) == 1
-                analyzer = fieldTypes[0].xpath('analyzer')[0]
-                SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
-
-        with open(schemaXmlFile, 'w') as f:
-            f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
-
-    def _setupFeature(self, name, core, options):
-        if name == 'schemaExtension':
-            self._setupFeatureSchemaExtension(core=core, options=options)
-            return
-        if name == 'additionalSolrConfig':
-            filepath = options if options.startswith('/') else join(self.configBasedir, options)
-            self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
-            return
-        if options == False:
-            return
-        featureFilename = join(solrUsrShareDir, 'solrconfig.d', '%s.xml' % name)
-        if not isfile(featureFilename):
-            raise ValueError("Unknown feature '%s'" % name)
-
-        feature = open(featureFilename).read()
-        if type(options) is dict:
-            feature = feature % options
-        feature_xml = parse(StringIO(feature))
-        self._extendSolrConfig(core=core, lxmlElementList=feature_xml.xpath('/config/*'))
-
-    def _extendSolrConfig(self, core, lxmlElementList):
-        if not lxmlElementList:
-            raise ValueError("No elements found with which to extend the solrconfig.xml")
-        solrconfig_file = join(self.stateDir, 'cores', core, 'conf', 'solrconfig.xml')
-        core_sorlconfig = parse(open(solrconfig_file))
-        core_sorlconfig.getroot().extend(lxmlElementList)
-        open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
-
-    def _setupCoreData(self):
-        cores = self.config.keys()
-        solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
-        coresElement = solr_xml.xpath("/solr/cores")[0]
-        [coresElement.remove(child) for child in coresElement.getchildren()]
-        for core in cores:
-            SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
-            coreDir = join(self.stateDir, 'cores', core)
-            isdir(coreDir) and rmtree(coreDir)
-            copytree(join(solrUsrShareDir, 'core-data'), coreDir)
-            schema_xml_path = join(coreDir, 'conf', 'schema.xml')
-            schema_xml = parse(open(schema_xml_path))
-            schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
-            open(schema_xml_path, 'w').write(tostring(schema_xml, pretty_print=True, encoding="UTF-8"))
-
-        open(join(self.stateDir, 'solr.xml'), 'w').write(tostring(solr_xml, pretty_print=True, encoding="UTF-8"))
-
-    def _setupJettyXml(self):
-        system(r"""sed 's,<SystemProperty name="jetty.port"[^/]*/>,<SystemProperty name="jetty.port" default="%s"/>,' -i %s""" % (
-                self.port,
-                join(self.stateDir, 'etc', 'jetty.xml')
-            ))
-
-    def _setupStartConfig(self):
-        startConfigPath = join(self.stateDir, 'start.config')
-        startConfig = oldStartConfig = open(startConfigPath).read()
-        startConfig = compile('^jetty\.home=.*$', flags=MULTILINE).sub('jetty.home=' + self.stateDir, startConfig)
-        startConfig = compile('^jetty\.lib=.*$', flags=MULTILINE).sub('jetty.lib=/usr/share/java/solr%s' % SOLR_VERSION, startConfig)
-        open(startConfigPath, 'w').write(startConfig)
-
-    def _setupSolrXml(self):
-        system(r"""sed -e "s,<Set name=\"war\">.*</Set>,<Set name=\"war\">/usr/share/java/webapps/apache-solr-%s.war</Set>," -i %s/contexts/solr.xml""" % (SOLR_VERSION, self.stateDir))
-
-    def start(self, javaMX):
-        self._execvp(
-            'java', [
-                'java',
-                '-Xmx%s' % javaMX, 
-                '-Djetty.port=%s' % self.port,
-                '-DSTART=%s/start.config' % self.stateDir,
-                '-Dsolr.solr.home=%s' % self.stateDir, 
-                '-jar', '/usr/share/java/solr%s/start.jar' % SOLR_VERSION,
-            ])
-
-    def _execvp(self, *args, **kwargs):
-        execvp(*args, **kwargs)
-
diff --git a/test/_alltests.py b/test/_alltests.py
index 5d7aa2a..3c43864 100644
--- a/test/_alltests.py
+++ b/test/_alltests.py
@@ -36,7 +36,7 @@ path.insert(0, "..")
 from fields2solrdoctest import Fields2SolrDocTest
 from solrinterfacetest import SolrInterfaceTest
 from solrlucenequerycomposertest import SolrLuceneQueryComposerTest
-from solrconfigtest import SolrConfigTest
+from servertest import ServerTest
 from cql2solrlucenequerytest import CQL2SolrLuceneQueryTest
 
 if __name__ == '__main__':
diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
index e180bfd..7546e55 100644
--- a/test/_integration/integrationstate.py
+++ b/test/_integration/integrationstate.py
@@ -67,7 +67,7 @@ class IntegrationState(_IntegrationState):
             f.write(dumps(self.config))
 
     def binDir(self):
-        return join(projectDir, 'server', 'bin')
+        return join(projectDir, 'bin')
 
     def setUp(self):
         self._startSolrServer()
diff --git a/test/servertest.py b/test/servertest.py
new file mode 100644
index 0000000..944d59a
--- /dev/null
+++ b/test/servertest.py
@@ -0,0 +1,224 @@
+# -*- coding: utf-8 -*-
+## begin license ##
+# 
+# "Solr Run" starts Solr with correct parameters etc. 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+# 
+# This file is part of "Solr Run"
+# 
+# "Solr Run" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Solr Run" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Solr Run"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from StringIO import StringIO
+from os import mkdir, listdir, system
+from os.path import join, dirname, abspath, basename, isdir
+from shutil import rmtree
+from simplejson import dump as jsonDump
+from lxml.etree import parse, tostring
+
+from meresco.solr.server import Server
+
+from seecr.test import SeecrTestCase
+
+mydir = dirname(abspath(__file__))
+version = "4.0.0"
+
+class ServerTest(SeecrTestCase):
+    def testSetupSolrConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
+        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
+        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+        f = open(join(solrDataDir, 'start.config'))
+        for line in f:
+            if line.startswith('jetty.home'):
+                break
+        else:
+            self.fail("No jetty.home line found")
+        f.close()
+        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+        self.assertTrue('jetty.lib=/usr/share/java/solr4.0.0' in open(join(solrDataDir, 'start.config')).read())
+
+        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+        self.assertEquals(set([u'córë2', 'core1']), set(solr_xml.xpath("//core/@name")))
+        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
+
+        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+
+    def testSetupSolrTwiceConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
+        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
+        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
+        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
+        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
+
+        f = open(join(solrDataDir, 'start.config'))
+        for line in f:
+            if line.startswith('jetty.home'):
+                break
+        else:
+            self.fail("No jetty.home line found")
+        f.close()
+        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
+        self.assertTrue('jetty.lib=/usr/share/java/solr4.0.0' in open(join(solrDataDir, 'start.config')).read())
+
+        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
+        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
+
+        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
+        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
+        self.assertEquals(set(['core1', u'córë2']), set(solr_xml.xpath("//core/@name")))
+        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
+
+        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
+
+        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
+        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
+
+    def testSetupSolrConfigWithAutocomplete(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'autocomplete': {}}, 'core2': {}}
+        self._createServer(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertTrue('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertFalse('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
+
+    def testSetupSolrConfigWithSuggestions(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core2': {'suggestions': {'field': 'afieldname'}}, 'core1': {}}
+        self._createServer(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+        self.assertEquals(['afieldname'], solrconfig_xml.xpath('/config/searchComponent[@name="suggestions"]/lst/str[@name="field"]/text()'))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+    def testSetupSolrConfigWithAdditionalSolrConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<config><extra>option</extra></config>""")
+        self._createServer(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core', 'conf', 'solrconfig.xml')))
+
+        self.assertEquals(['option'], solrconfig_xml.xpath("/config/extra/text()"))
+
+    def testSetupSolrConfigWithAdditionalInvalidSolrConfigShouldRaiseAnError(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<extra>option</extra>""")
+        try:
+            self._createServer(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
+            self.fail()
+        except ValueError, e:
+            self.assertEquals("No elements found with which to extend the solrconfig.xml", str(e))
+
+    def testSetupWithNoFeatures(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'suggestions': False}, 'core2': {}}
+        self._createServer(stateDir=solrDataDir, port=8042, config=config)
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
+        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
+
+    def testInvalidCoreConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'suggestions': False}, 'core2': False}
+        try:
+            self._createServer(stateDir=solrDataDir, port=8042, config=config)
+            self.fail()
+        except AssertionError, e:
+            self.assertEquals("Core feature descriptions must be a dictionary (empty for no additional features).", str(e))
+            self.assertFalse(isdir(solrDataDir))
+
+    def testUnknownFeatureInConfig(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        config = {'core1': {'unknown-feature': True}}
+        try:
+            self._createServer(stateDir=solrDataDir, port=8042, config=config)
+            self.fail()
+        except ValueError, e:
+            self.assertEquals("Unknown feature 'unknown-feature'", str(e))
+
+    def testNotMatchingLuceneMatchVersion(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
+
+        self.assertRaises(ValueError, lambda: self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {}}))
+
+    def testStartSolr(self):
+        solrServer = self._createServer(stateDir=join(self.tempdir, 'the/state/dir'), port=1423, config={})
+        execCalled = []
+        solrServer._execvp = lambda *args, **kwargs: execCalled.append((args, kwargs))
+        solrServer.start(javaMX="1234M")
+        self.assertEquals(1, len(execCalled))
+        self.assertEquals((
+            'java', 
+            ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr4.0.0/start.jar'],
+        ), execCalled[0][0])
+        self.assertEquals({}, execCalled[0][1])
+
+    def testSetupSolrCoreWithExtraFilters(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {'schemaExtension':[
+            { 
+                'extensionType': 'fieldTypeFilter',
+                'fieldTypeName': 'text_ws',
+                'filterClass': 'solr.ASCIIFoldingFilterFactory',
+            }
+        ]}})
+        schemaXml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
+        self.assertEquals(['solr.LowerCaseFilterFactory', 'solr.ASCIIFoldingFilterFactory'], schemaXml.xpath('/schema/types/fieldType[@name="text_ws"]/analyzer/filter/@class'))
+
+    def xtestStartSolrReally(self):
+        tempdir = "/tmp/testSetupSolrConfig"
+        isdir(tempdir) and rmtree(tempdir)
+        mkdir(tempdir)
+        solrDataDir = join(tempdir, 'solr-data')
+        solrServer = self._createServer(stateDir=solrDataDir, port=8000, config={"test": {'admin': True}})
+        solrServer.start(javaMX="1024M")
+
+    def _createServer(self, stateDir, port, config):
+        solrConfFile = join(self.tempdir, 'solr.conf')
+        jsonDump(config, open(solrConfFile, 'w'))
+        return Server(stateDir, port, solrConfFile)
+        
+
diff --git a/test/solrconfigtest.py b/test/solrconfigtest.py
deleted file mode 100644
index 2766485..0000000
--- a/test/solrconfigtest.py
+++ /dev/null
@@ -1,241 +0,0 @@
-# -*- coding: utf-8 -*-
-## begin license ##
-# 
-# "Solr Run" starts Solr with correct parameters etc. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
-# This file is part of "Solr Run"
-# 
-# "Solr Run" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Solr Run" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-import sys
-from unittest import main
-from StringIO import StringIO
-from os import mkdir, listdir, system
-from os.path import join, dirname, abspath, basename, isdir
-from shutil import rmtree
-from simplejson import dump as jsonDump
-from lxml.etree import parse, tostring
-
-from seecr.test import SeecrTestCase
-sys.path.insert(0, '../bin')
-start_solr = __import__('start-solr')
-
-
-mydir = dirname(abspath(__file__))
-version = "4.0.0"
-
-class SolrConfigTest(SeecrTestCase):
-    def testParseArguments(self):
-        options, arguments = start_solr.parseArguments(['--port=8042', '--stateDir=/tmp', '--config=/tmp/config.json'])
-        self.assertEquals(8042, options.port)
-        self.assertEquals('/tmp', options.stateDir)
-        self.assertEquals('/tmp/config.json', options.config)
-
-    def testIncompleteArguments(self):
-        stdout_mock = StringIO()
-        sys.stdout = stdout_mock
-        try:
-            self.assertRaises(ValueError, lambda: start_solr.parseArguments(['--port=8042', '--stateDir=/tmp']))
-        finally:
-            sys.stdout = sys.__stdout__
-
-    def testSetupSolrConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
-        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
-        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
-        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
-        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
-
-        f = open(join(solrDataDir, 'start.config'))
-        for line in f:
-            if line.startswith('jetty.home'):
-                break
-        else:
-            self.fail("No jetty.home line found")
-        f.close()
-        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('jetty.lib=/usr/share/java/solr4.0.0' in open(join(solrDataDir, 'start.config')).read())
-
-        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
-        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
-
-        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
-        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-        self.assertEquals(set([u'córë2', 'core1']), set(solr_xml.xpath("//core/@name")))
-        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
-
-        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
-
-        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
-
-    def testSetupSolrTwiceConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
-        self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
-        self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
-        jetty_xml = parse(open(join(solrDataDir, 'etc', 'jetty.xml')))
-        self.assertEquals(['8042'], jetty_xml.xpath('//SystemProperty[@name="jetty.port"]/@default'))
-
-        f = open(join(solrDataDir, 'start.config'))
-        for line in f:
-            if line.startswith('jetty.home'):
-                break
-        else:
-            self.fail("No jetty.home line found")
-        f.close()
-        self.assertEquals('jetty.home=%s\n' % solrDataDir, line)
-        self.assertTrue('jetty.lib=/usr/share/java/solr4.0.0' in open(join(solrDataDir, 'start.config')).read())
-
-        context_solr_xml = parse(open(join(solrDataDir, 'contexts', 'solr.xml')))
-        self.assertEquals(['/usr/share/java/webapps/apache-solr-%s.war' % version], context_solr_xml.xpath('//Set[@name="war"]/text()'))
-
-        self.assertEquals(set(['core1', 'córë2']), set(listdir(join(solrDataDir, 'cores'))))
-        solr_xml = parse(open(join(solrDataDir, 'solr.xml')))
-        self.assertEquals(set(['core1', u'córë2']), set(solr_xml.xpath("//core/@name")))
-        self.assertEquals(set(['cores/core1', u'cores/córë2']), set(solr_xml.xpath("//core/@instanceDir")))
-
-        schema_core1_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-core1'], schema_core1_xml.xpath("/schema/@name"))
-
-        schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
-        self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
-
-    def testSetupSolrConfigWithAutocomplete(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'autocomplete': {}}, 'core2': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertTrue('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertTrue('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertFalse('terms' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertFalse('/terms' in solrconfig_xml.xpath("/config/requestHandler/@name"))
-
-    def testSetupSolrConfigWithSuggestions(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core2': {'suggestions': {'field': 'afieldname'}}, 'core1': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertTrue('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-        self.assertEquals(['afieldname'], solrconfig_xml.xpath('/config/searchComponent[@name="suggestions"]/lst/str[@name="field"]/text()'))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-
-    def testSetupSolrConfigWithAdditionalSolrConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<config><extra>option</extra></config>""")
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core', 'conf', 'solrconfig.xml')))
-
-        self.assertEquals(['option'], solrconfig_xml.xpath("/config/extra/text()"))
-
-    def testSetupSolrConfigWithAdditionalInvalidSolrConfigShouldRaiseAnError(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<extra>option</extra>""")
-        try:
-            self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core': {'additionalSolrConfig': join(self.tempdir, 'solrconfig.xml')}})
-            self.fail()
-        except ValueError, e:
-            self.assertEquals("No elements found with which to extend the solrconfig.xml", str(e))
-
-    def testSetupWithNoFeatures(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'suggestions': False}, 'core2': {}}
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml')))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-
-        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core2', 'conf', 'solrconfig.xml')))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/requestHandler[@name='/select']/arr/str/text()"))
-        self.assertFalse('suggestions' in solrconfig_xml.xpath("/config/searchComponent/@name"))
-
-    def testInvalidCoreConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'suggestions': False}, 'core2': False}
-        try:
-            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-            self.fail()
-        except AssertionError, e:
-            self.assertEquals("Core feature descriptions must be a dictionary (empty for no additional features).", str(e))
-            self.assertFalse(isdir(solrDataDir))
-
-    def testUnknownFeatureInConfig(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        config = {'core1': {'unknown-feature': True}}
-        try:
-            self._createSolrConfig(stateDir=solrDataDir, port=8042, config=config)
-            self.fail()
-        except ValueError, e:
-            self.assertEquals("Unknown feature 'unknown-feature'", str(e))
-
-    def testNotMatchingLuceneMatchVersion(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}})
-        system('sed "s,<luceneMatchVersion>.*</luceneMatchVersion>,<luceneMatchVersion>LUCENE_32</luceneMatchVersion>," -i %s' % join(solrDataDir, 'cores', 'core1', 'conf', 'solrconfig.xml'))
-
-        self.assertRaises(ValueError, lambda: self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {}}))
-
-    def testStartSolr(self):
-        solrConfig = self._createSolrConfig(stateDir=join(self.tempdir, 'the/state/dir'), port=1423, config={})
-        execCalled = []
-        solrConfig._execvp = lambda *args, **kwargs: execCalled.append((args, kwargs))
-        solrConfig.start(javaMX="1234M")
-        self.assertEquals(1, len(execCalled))
-        self.assertEquals((
-            'java', 
-            ['java', '-Xmx1234M', '-Djetty.port=1423', '-DSTART=%s/the/state/dir/start.config' % self.tempdir, '-Dsolr.solr.home=%s/the/state/dir' % self.tempdir, '-jar', '/usr/share/java/solr4.0.0/start.jar'],
-        ), execCalled[0][0])
-        self.assertEquals({}, execCalled[0][1])
-
-    def testSetupSolrCoreWithExtraFilters(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createSolrConfig(stateDir=solrDataDir, port=8042, config={'core1': {'schemaExtension':[
-            { 
-                'extensionType': 'fieldTypeFilter',
-                'fieldTypeName': 'text_ws',
-                'filterClass': 'solr.ASCIIFoldingFilterFactory',
-            }
-        ]}})
-        schemaXml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['solr.LowerCaseFilterFactory', 'solr.ASCIIFoldingFilterFactory'], schemaXml.xpath('/schema/types/fieldType[@name="text_ws"]/analyzer/filter/@class'))
-
-    def xtestStartSolrReally(self):
-        tempdir = "/tmp/testSetupSolrConfig"
-        isdir(tempdir) and rmtree(tempdir)
-        mkdir(tempdir)
-        solrDataDir = join(tempdir, 'solr-data')
-        solrConfig = self._createSolrConfig(stateDir=solrDataDir, port=8000, config={"test": {'admin': True}})
-        solrConfig.start(javaMX="1024M")
-
-    def _createSolrConfig(self, stateDir, port, config):
-        solrConfFile = join(self.tempdir, 'solr.conf')
-        jsonDump(config, open(solrConfFile, 'w'))
-        return start_solr.SolrConfig(stateDir, port, solrConfFile)
-        
-
-- 
1.7.2.5


From cfe2235ba995a238663b9340e1314adf3bb9356e Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Wed, 12 Dec 2012 12:13:18 +0100
Subject: [PATCH 44/66] HM/TJ: license.

---
 meresco/__init__.py                     |    3 ++-
 meresco/solr/__init__.py                |    3 ++-
 meresco/solr/cql2solrlucenequery.py     |    3 ++-
 meresco/solr/fields2solrdoc.py          |    1 +
 meresco/solr/server.py                  |   12 +++++++-----
 meresco/solr/solrinterface.py           |    1 +
 meresco/solr/solrlucenequerycomposer.py |    1 +
 meresco/solr/solrresponse.py            |   25 +++++++++++++++++++++++++
 setup.py                                |    3 ++-
 test/_alltests.py                       |    3 ++-
 test/_integration/__init__.py           |   26 ++++++++++++++++++++++++++
 test/_integration/integrationstate.py   |   14 +++++++-------
 test/_integration/solrservertest.py     |   25 +++++++++++++++++++++++++
 test/_integrationtest.py                |   25 +++++++++++++++++++++++++
 test/alltests.sh                        |    3 ++-
 test/cql2solrlucenequerytest.py         |    1 +
 test/fields2solrdoctest.py              |    1 +
 test/integrationtest.sh                 |   14 +++++++-------
 test/servertest.py                      |   12 +++++++-----
 test/sitecustomize.py                   |    3 ++-
 test/solrinterfacetest.py               |    1 +
 test/solrlucenequerycomposertest.py     |    1 +
 testsetup.sh                            |    3 ++-
 23 files changed, 152 insertions(+), 32 deletions(-)

diff --git a/meresco/__init__.py b/meresco/__init__.py
index af326b5..6c3aa66 100644
--- a/meresco/__init__.py
+++ b/meresco/__init__.py
@@ -3,7 +3,8 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
diff --git a/meresco/solr/__init__.py b/meresco/solr/__init__.py
index 4dfd28d..df383b8 100644
--- a/meresco/solr/__init__.py
+++ b/meresco/solr/__init__.py
@@ -3,7 +3,8 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
diff --git a/meresco/solr/cql2solrlucenequery.py b/meresco/solr/cql2solrlucenequery.py
index 4076d97..0df7222 100644
--- a/meresco/solr/cql2solrlucenequery.py
+++ b/meresco/solr/cql2solrlucenequery.py
@@ -3,7 +3,8 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
diff --git a/meresco/solr/fields2solrdoc.py b/meresco/solr/fields2solrdoc.py
index 6dc9768..377e6e5 100644
--- a/meresco/solr/fields2solrdoc.py
+++ b/meresco/solr/fields2solrdoc.py
@@ -4,6 +4,7 @@
 #  to integrate Solr into "Meresco." 
 # 
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
 # 
 # This file is part of "Meresco Solr"
diff --git a/meresco/solr/server.py b/meresco/solr/server.py
index c5a0df1..4bc9da7 100644
--- a/meresco/solr/server.py
+++ b/meresco/solr/server.py
@@ -1,24 +1,26 @@
 ## begin license ##
 # 
-# "Solr Run" starts Solr with correct parameters etc. 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
 # 
+# Copyright (C) 2012 SURF http://www.surf.nl
 # Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
-# This file is part of "Solr Run"
+# This file is part of "Meresco Solr"
 # 
-# "Solr Run" is free software; you can redistribute it and/or modify
+# "Meresco Solr" is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 # 
-# "Solr Run" is distributed in the hope that it will be useful,
+# "Meresco Solr" is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 # 
 # You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
+# along with "Meresco Solr"; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 # 
 ## end license ##
diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index 6f59930..4e64c8f 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -4,6 +4,7 @@
 #  to integrate Solr into "Meresco." 
 # 
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
 # This file is part of "Meresco Solr"
diff --git a/meresco/solr/solrlucenequerycomposer.py b/meresco/solr/solrlucenequerycomposer.py
index 92e6892..a639b23 100644
--- a/meresco/solr/solrlucenequerycomposer.py
+++ b/meresco/solr/solrlucenequerycomposer.py
@@ -4,6 +4,7 @@
 #  to integrate Solr into "Meresco." 
 # 
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
diff --git a/meresco/solr/solrresponse.py b/meresco/solr/solrresponse.py
index e876691..05ae621 100644
--- a/meresco/solr/solrresponse.py
+++ b/meresco/solr/solrresponse.py
@@ -1,3 +1,28 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2012 SURF http://www.surf.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
 
 class SolrResponse(object):
     def __init__(self, **kwargs):
diff --git a/setup.py b/setup.py
index a0ea169..55aa2fb 100644
--- a/setup.py
+++ b/setup.py
@@ -3,7 +3,8 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
diff --git a/test/_alltests.py b/test/_alltests.py
index 3c43864..3a01ac8 100644
--- a/test/_alltests.py
+++ b/test/_alltests.py
@@ -3,7 +3,8 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
diff --git a/test/_integration/__init__.py b/test/_integration/__init__.py
index cf09f09..1d78837 100644
--- a/test/_integration/__init__.py
+++ b/test/_integration/__init__.py
@@ -1 +1,27 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2012 SURF http://www.surf.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
 from integrationstate import IntegrationState
diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
index 7546e55..437591b 100644
--- a/test/_integration/integrationstate.py
+++ b/test/_integration/integrationstate.py
@@ -1,27 +1,27 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
 # 
-# "NBC+" also known as "ZP (ZoekPlatform)" is
-#  initiated by Stichting Bibliotheek.nl to provide a new search service
-#  for all public libraries in the Netherlands. 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
 # 
+# Copyright (C) 2012 SURF http://www.surf.nl
 # Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
-# This file is part of "NBC+ (Zoekplatform BNL)"
+# This file is part of "Meresco Solr"
 # 
-# "NBC+ (Zoekplatform BNL)" is free software; you can redistribute it and/or modify
+# "Meresco Solr" is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 # 
-# "NBC+ (Zoekplatform BNL)" is distributed in the hope that it will be useful,
+# "Meresco Solr" is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 # 
 # You should have received a copy of the GNU General Public License
-# along with "NBC+ (Zoekplatform BNL)"; if not, write to the Free Software
+# along with "Meresco Solr"; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 # 
 ## end license ##
diff --git a/test/_integration/solrservertest.py b/test/_integration/solrservertest.py
index 3ca91b8..bc36ccc 100644
--- a/test/_integration/solrservertest.py
+++ b/test/_integration/solrservertest.py
@@ -1,3 +1,28 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2012 SURF http://www.surf.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
 
 from seecr.test import IntegrationTestCase
 from seecr.test.utils import getRequest
diff --git a/test/_integrationtest.py b/test/_integrationtest.py
index e46b368..e7dc6bb 100644
--- a/test/_integrationtest.py
+++ b/test/_integrationtest.py
@@ -1,5 +1,30 @@
 #!/usr/bin/env python
 # -*- coding: utf-8 -*-
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2012 SURF http://www.surf.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
 
 from os import system                               #DO_NOT_DISTRIBUTE
 from glob import glob                               #DO_NOT_DISTRIBUTE
diff --git a/test/alltests.sh b/test/alltests.sh
index be42d6c..cec7694 100755
--- a/test/alltests.sh
+++ b/test/alltests.sh
@@ -4,7 +4,8 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
diff --git a/test/cql2solrlucenequerytest.py b/test/cql2solrlucenequerytest.py
index c24c673..3af0db6 100644
--- a/test/cql2solrlucenequerytest.py
+++ b/test/cql2solrlucenequerytest.py
@@ -4,6 +4,7 @@
 #  to integrate Solr into "Meresco." 
 # 
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
diff --git a/test/fields2solrdoctest.py b/test/fields2solrdoctest.py
index dc9eee5..c9a2086 100644
--- a/test/fields2solrdoctest.py
+++ b/test/fields2solrdoctest.py
@@ -4,6 +4,7 @@
 #  to integrate Solr into "Meresco." 
 # 
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
 # 
 # This file is part of "Meresco Solr"
diff --git a/test/integrationtest.sh b/test/integrationtest.sh
index 4509d02..124b1fe 100755
--- a/test/integrationtest.sh
+++ b/test/integrationtest.sh
@@ -1,27 +1,27 @@
 #!/bin/bash
 ## begin license ##
 # 
-# "NBC+" also known as "ZP (ZoekPlatform)" is
-#  initiated by Stichting Bibliotheek.nl to provide a new search service
-#  for all public libraries in the Netherlands. 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
 # 
+# Copyright (C) 2012 SURF http://www.surf.nl
 # Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
-# This file is part of "NBC+ (Zoekplatform BNL)"
+# This file is part of "Meresco Solr"
 # 
-# "NBC+ (Zoekplatform BNL)" is free software; you can redistribute it and/or modify
+# "Meresco Solr" is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 # 
-# "NBC+ (Zoekplatform BNL)" is distributed in the hope that it will be useful,
+# "Meresco Solr" is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 # 
 # You should have received a copy of the GNU General Public License
-# along with "NBC+ (Zoekplatform BNL)"; if not, write to the Free Software
+# along with "Meresco Solr"; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 # 
 ## end license ##
diff --git a/test/servertest.py b/test/servertest.py
index 944d59a..e511166 100644
--- a/test/servertest.py
+++ b/test/servertest.py
@@ -1,25 +1,27 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
 # 
-# "Solr Run" starts Solr with correct parameters etc. 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
 # 
+# Copyright (C) 2012 SURF http://www.surf.nl
 # Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
-# This file is part of "Solr Run"
+# This file is part of "Meresco Solr"
 # 
-# "Solr Run" is free software; you can redistribute it and/or modify
+# "Meresco Solr" is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 # 
-# "Solr Run" is distributed in the hope that it will be useful,
+# "Meresco Solr" is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 # 
 # You should have received a copy of the GNU General Public License
-# along with "Solr Run"; if not, write to the Free Software
+# along with "Meresco Solr"; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 # 
 ## end license ##
diff --git a/test/sitecustomize.py b/test/sitecustomize.py
index 95f0462..2ac9e7e 100644
--- a/test/sitecustomize.py
+++ b/test/sitecustomize.py
@@ -3,7 +3,8 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
index 023f331..f21f24a 100644
--- a/test/solrinterfacetest.py
+++ b/test/solrinterfacetest.py
@@ -4,6 +4,7 @@
 #  to integrate Solr into "Meresco." 
 # 
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
 # This file is part of "Meresco Solr"
diff --git a/test/solrlucenequerycomposertest.py b/test/solrlucenequerycomposertest.py
index 442100f..87926d9 100644
--- a/test/solrlucenequerycomposertest.py
+++ b/test/solrlucenequerycomposertest.py
@@ -4,6 +4,7 @@
 #  to integrate Solr into "Meresco." 
 # 
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
diff --git a/testsetup.sh b/testsetup.sh
index bcc3e70..5729561 100755
--- a/testsetup.sh
+++ b/testsetup.sh
@@ -4,7 +4,8 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 SURF http://www.surf.nl
 # 
 # This file is part of "Meresco Solr"
 # 
-- 
1.7.2.5


From f068a8520f4199229d033a35b0c197b2daacd008 Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Wed, 12 Dec 2012 13:58:35 +0100
Subject: [PATCH 45/66] HM/TJ: testsetup.sh works again.

---
 bin/start-solr         |    4 ++--
 meresco/solr/server.py |   12 ++++++------
 setup.py               |   13 ++++++++++++-
 testsetup.sh           |   34 +++++++++++-----------------------
 4 files changed, 31 insertions(+), 32 deletions(-)

diff --git a/bin/start-solr b/bin/start-solr
index 22e4cc6..5222515 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -33,11 +33,11 @@ from os.path import join
 from optparse import OptionParser, Option
 from subprocess import Popen
 
-from meresco.solr.server import Server, solrUsrShareDir
+from meresco.solr.server import Server, usrShareDir
 
 
 def parseArguments(args):
-    features = [f.rsplit('.', 1)[0] for f in listdir(join(solrUsrShareDir, 'solrconfig.d'))]
+    features = [f.rsplit('.', 1)[0] for f in listdir(join(usrShareDir, 'solrconfig.d'))]
     parser = OptionParser(description="""Available features: %s.""" % ', '.join(features), epilog="""
 Example config: 
 {
diff --git a/meresco/solr/server.py b/meresco/solr/server.py
index 4bc9da7..2bafd0c 100644
--- a/meresco/solr/server.py
+++ b/meresco/solr/server.py
@@ -35,8 +35,8 @@ from simplejson import load as jsonLoad
 
 
 mydir = dirname(abspath(__file__))
-solrUsrShareDir = '/usr/share/solr4.0.0-run'
-solrUsrShareDir = join(dirname(dirname(mydir)), 'usr-share') # DO_NOT_DISTRIBUTE
+usrShareDir = '/usr/share/solr4.0.0-run'
+usrShareDir = join(dirname(dirname(mydir)), 'usr-share') # DO_NOT_DISTRIBUTE
 SOLR_VERSION = "4.0.0"
 
 
@@ -49,9 +49,9 @@ class Server(object):
         assert all(type(v) == dict for v in self.config.values()), "Core feature descriptions must be a dictionary (empty for no additional features)."
 
         if not isdir(self.stateDir):
-            copytree(join(solrUsrShareDir, 'solr-data'), self.stateDir)
+            copytree(join(usrShareDir, 'solr-data'), self.stateDir)
         else:
-            newMatchVersion = parse(open(join(solrUsrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
+            newMatchVersion = parse(open(join(usrShareDir, 'core-data', 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
             for coreDir in listdir(join(self.stateDir, 'cores')):
                 currentMatchVersion = parse(open(join(self.stateDir, 'cores', coreDir, 'conf', 'solrconfig.xml'))).xpath("//luceneMatchVersion/text()")[0]
                 if currentMatchVersion != newMatchVersion:
@@ -90,7 +90,7 @@ class Server(object):
             return
         if options == False:
             return
-        featureFilename = join(solrUsrShareDir, 'solrconfig.d', '%s.xml' % name)
+        featureFilename = join(usrShareDir, 'solrconfig.d', '%s.xml' % name)
         if not isfile(featureFilename):
             raise ValueError("Unknown feature '%s'" % name)
 
@@ -117,7 +117,7 @@ class Server(object):
             SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
             coreDir = join(self.stateDir, 'cores', core)
             isdir(coreDir) and rmtree(coreDir)
-            copytree(join(solrUsrShareDir, 'core-data'), coreDir)
+            copytree(join(usrShareDir, 'core-data'), coreDir)
             schema_xml_path = join(coreDir, 'conf', 'schema.xml')
             schema_xml = parse(open(schema_xml_path))
             schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
diff --git a/setup.py b/setup.py
index 55aa2fb..04dffa7 100644
--- a/setup.py
+++ b/setup.py
@@ -26,12 +26,23 @@
 
 from distutils.core import setup
 
+version = '$Version: master$'[9:-1].strip()
+from os import walk, listdir
+from os.path import join
+data_files = []
+for path, dirs, files in walk('usr-share'):
+    if not files:
+        continue
+    data_files.append((path.replace('usr-share', '/usr/share/meresco-solr'), [join(path, f) for f in files]))
+
 setup(
     name='meresco-solr',
     packages=[
         'meresco.solr',
     ],
-    version='%VERSION%',
+    data_files=data_files,
+    scripts=[join('bin', f) for f in listdir('bin')],
+    version=version,
     url='http://www.meresco.org',
     author='Seecr (Seek You Too B.V.)',
     author_email='info@seecr.nl',
diff --git a/testsetup.sh b/testsetup.sh
index 5729561..3b10ce7 100755
--- a/testsetup.sh
+++ b/testsetup.sh
@@ -26,35 +26,23 @@
 ## end license ##
 
 set -o errexit
+mydir=$(cd $(dirname $0);pwd)
 
-rm -rf tmp build
-
-fullPythonVersion=python2.6
-${fullPythonVersion} setup.py install --root tmp
-
-
-VERSION="x.y.z"
+source /usr/share/seecr-test/functions
 
-find tmp -name '*.py' -exec sed -r -e \
-    "/DO_NOT_DISTRIBUTE/ d;
-    s/\\\$Version:[^\\\$]*\\\$/\\\$Version: ${VERSION}\\\$/" -i '{}' \;
+rm -rf tmp build
 
-if [ -f /etc/debian_version ]; then
-    SITE_PACKAGE_DIR=`pwd`/tmp/usr/local/lib/${fullPythonVersion}/dist-packages
-else
-    SITE_PACKAGE_DIR=`pwd`/tmp/usr/lib/${fullPythonVersion}/site-packages
-fi
+definePythonVars
 
-cp meresco/__init__.py ${SITE_PACKAGE_DIR}/meresco
-export PYTHONPATH=${SITE_PACKAGE_DIR}:${PYTHONPATH}
+${PYTHON} setup.py install --root tmp
+cp meresco/__init__.py ${SITEPACKAGES}/meresco/
 cp -r test tmp/test
+find tmp -type f -exec sed -e \
+    "s,^usrShareDir.*$,usrShareDir = '$mydir/tmp/usr/share/meresco-solr'," -i {} \;
 
-set +o errexit
-(
-cd tmp/test
-./alltests.sh
-)
-set -o errexit
+removeDoNotDistribute tmp
+
+runtests "$@"
 
 rm -rf tmp build
 
-- 
1.7.2.5


From 9794409f736f86ae6340c24e2249ce737606c348 Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Wed, 12 Dec 2012 14:41:05 +0100
Subject: [PATCH 46/66] HM/TJ: helperserver added to test SolrInterface with a "real" solr.

---
 meresco/solr/__init__.py              |    1 +
 test/_integration/helperserver.py     |   77 +++++++++++++++++++++++++++++++++
 test/_integration/integrationstate.py |    5 ++
 3 files changed, 83 insertions(+), 0 deletions(-)
 create mode 100755 test/_integration/helperserver.py

diff --git a/meresco/solr/__init__.py b/meresco/solr/__init__.py
index df383b8..7a7f9a7 100644
--- a/meresco/solr/__init__.py
+++ b/meresco/solr/__init__.py
@@ -23,3 +23,4 @@
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 # 
 ## end license ##
+from solrinterface import SolrInterface
diff --git a/test/_integration/helperserver.py b/test/_integration/helperserver.py
new file mode 100755
index 0000000..b576fbf
--- /dev/null
+++ b/test/_integration/helperserver.py
@@ -0,0 +1,77 @@
+#!/usr/bin/python
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2012 SURF http://www.surf.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+import sys                # DO_NOT_DISTRIBUTE
+sys.path.insert(0, '../..')  # DO_NOT_DISTRIBUTE
+
+from meresco.core import Observable
+
+from weightless.core import be, compose
+from weightless.io import Reactor
+from sys import argv
+from simplejson import loads
+
+from meresco.components.http.utils import okPlainText
+from meresco.components.http import ObservableHttpServer
+from meresco.components import ParseArguments
+
+from meresco.solr import SolrInterface
+
+class HelperHandler(Observable):
+    def handleRequest(self, path, Body, **kwargs):
+        if path == '/ping':
+            yield okPlainText
+            yield 'pong'
+            return
+        methodKwargs = loads(Body)
+        message = [p for p in path.split('/') if p][0]
+        yield self.all.unknown(message, **methodKwargs)
+        yield okPlainText
+
+
+def createServer(reactor, port, solrPort):
+    return be((Observable(),
+        (ObservableHttpServer(reactor, port),
+            (HelperHandler(),
+                (SolrInterface(host='localhost', port=solrPort, core='records', commitTimeout=0.01),)
+            )
+        )
+    ))
+
+def main():
+    parser = ParseArguments()
+    parser.addOption('', '--port', type='int', mandatory=True)
+    parser.addOption('', '--solrPort', type='int', mandatory=True)
+    options, arguments = parser.parse()
+
+    reactor = Reactor()
+    server = createServer(reactor, **vars(options))
+    list(compose(server.once.observer_init()))
+    reactor.loop()
+
+if __name__ == '__main__':
+    main()
diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
index 437591b..7da7f62 100644
--- a/test/_integration/integrationstate.py
+++ b/test/_integration/integrationstate.py
@@ -57,6 +57,7 @@ class IntegrationState(_IntegrationState):
         self.solrStatePath = join(self.integrationTempdir, 'solr')
 
         self.solrPort = PortNumberGenerator.next()
+        self.solrClientPort = PortNumberGenerator.next()
 
         self.solrCore = "records"
         self.config = {
@@ -70,6 +71,7 @@ class IntegrationState(_IntegrationState):
         return join(projectDir, 'bin')
 
     def setUp(self):
+        self._startMerescoSolrInterfaceServer()
         self._startSolrServer()
         self._createDatabase()
    
@@ -79,6 +81,9 @@ class IntegrationState(_IntegrationState):
     def _startSolrServer(self):
         self._startServer('solr', self.binPath('start-solr'), 'http://localhost:%s/solr/%s/admin/ping' % (self.solrPort, self.solrCore), port=self.solrPort, stateDir=self.solrStatePath, config=self.configPath)
 
+    def _startMerescoSolrInterfaceServer(self):
+        self._startServer('solr-client', self.binPath('helperserver.py', binDirs=[mydir]), 'http://localhost:%s/ping' % self.solrClientPort, cwd=mydir, port=self.solrClientPort, solrPort=self.solrPort)
+
     def _createDatabase(self):
         if self.fastMode:
             print "Reusing database in", self.integrationTempdir
-- 
1.7.2.5


From f7a57b121876ed02b34ac3c9d72018726be46b44 Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Wed, 12 Dec 2012 15:59:43 +0100
Subject: [PATCH 47/66] HM/TJ: SolrInterface tested in integrationtest.

---
 meresco/solr/solrinterface.py           |    2 +-
 meresco/solr/solrresponse.py            |    1 -
 test/_integration/helperserver.py       |   12 +++++-
 test/_integration/solrinterfacetest.py  |   62 +++++++++++++++++++++++++++++++
 test/_integrationtest.py                |    1 +
 test/solrinterfacetest.py               |   12 +++---
 usr-share/core-data/conf/solrconfig.xml |    4 +-
 7 files changed, 82 insertions(+), 12 deletions(-)
 create mode 100644 test/_integration/solrinterfacetest.py

diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index 4e64c8f..5edf266 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -61,7 +61,7 @@ class SolrInterface(Observable):
     def _path(self, action):
         return '/solr/%s' % action if self._core is None else '/solr/%s/%s' % (self._core, action)
 
-    def add(self, identifier, partname, data):
+    def add(self, identifier, data, **kwargs):
         path = self._path('update')
         path += "?commitWithin=%d" % self._commitWithin
         yield self._send(path=path, body="<add>%s</add>" % data)
diff --git a/meresco/solr/solrresponse.py b/meresco/solr/solrresponse.py
index 05ae621..01b4f25 100644
--- a/meresco/solr/solrresponse.py
+++ b/meresco/solr/solrresponse.py
@@ -28,4 +28,3 @@ class SolrResponse(object):
     def __init__(self, **kwargs):
         self.__dict__.update(kwargs)
 
-
diff --git a/test/_integration/helperserver.py b/test/_integration/helperserver.py
index b576fbf..8926261 100755
--- a/test/_integration/helperserver.py
+++ b/test/_integration/helperserver.py
@@ -33,13 +33,14 @@ from meresco.core import Observable
 from weightless.core import be, compose
 from weightless.io import Reactor
 from sys import argv
-from simplejson import loads
+from simplejson import loads, dumps
 
 from meresco.components.http.utils import okPlainText
 from meresco.components.http import ObservableHttpServer
 from meresco.components import ParseArguments
 
 from meresco.solr import SolrInterface
+from traceback import format_exc
 
 class HelperHandler(Observable):
     def handleRequest(self, path, Body, **kwargs):
@@ -49,8 +50,15 @@ class HelperHandler(Observable):
             return
         methodKwargs = loads(Body)
         message = [p for p in path.split('/') if p][0]
-        yield self.all.unknown(message, **methodKwargs)
         yield okPlainText
+        try:
+            if message in ['add', 'delete']:
+                yield self.all.unknown(message, **methodKwargs)
+            else:
+                response = yield self.any.unknown(message, **methodKwargs)
+                yield "%s: %s" % (type(response).__name__, dumps(vars(response)))
+        except:
+            yield format_exc()
 
 
 def createServer(reactor, port, solrPort):
diff --git a/test/_integration/solrinterfacetest.py b/test/_integration/solrinterfacetest.py
new file mode 100644
index 0000000..f3ee27a
--- /dev/null
+++ b/test/_integration/solrinterfacetest.py
@@ -0,0 +1,62 @@
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2012 SURF http://www.surf.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from seecr.test import IntegrationTestCase
+from seecr.test.utils import postRequest
+from simplejson import dumps, loads
+from time import sleep
+
+class SolrInterfaceTest(IntegrationTestCase):
+    def testAddQueryDelete(self):
+        addKwargs=dict(
+                identifier='record:testAddQueryDelete',
+                data='''<doc>
+    <field name="__id__">record:testAddQueryDelete</field>
+    <field name="title">The title</field>
+</doc>''',
+            )
+        header, body = postRequest(port=self.solrClientPort, path='/add', data=dumps(addKwargs), parse=False)
+        self.assertEquals('', body)
+        sleep(0.1)
+
+        queryKwargs=dict(
+                luceneQueryString='__id__:record\:testAddQueryDelete',
+            )
+        header, body = postRequest(port=self.solrClientPort, path='/executeQuery', data=dumps(queryKwargs), parse=False)
+        responseType, responseDict = body.split(': ', 1)
+        self.assertEquals('SolrResponse', responseType)
+        response = loads(responseDict)
+        self.assertEquals(1, response['total'])
+        self.assertEquals(['record:testAddQueryDelete'], response['hits'])
+
+        header, body = postRequest(port=self.solrClientPort, path='/delete', data=dumps(dict(identifier='record:testAddQueryDelete')), parse=False)
+        self.assertEquals('', body)
+        sleep(0.1)
+
+        header, body = postRequest(port=self.solrClientPort, path='/executeQuery', data=dumps(queryKwargs), parse=False)
+        responseType, responseDict = body.split(': ', 1)
+        response = loads(responseDict)
+        self.assertEquals(0, response['total'])
diff --git a/test/_integrationtest.py b/test/_integrationtest.py
index e7dc6bb..1a4e248 100644
--- a/test/_integrationtest.py
+++ b/test/_integrationtest.py
@@ -52,6 +52,7 @@ if __name__ == '__main__':
         "default", 
         tests=[
             '_integration.solrservertest.SolrServerTest',
+            '_integration.solrinterfacetest.SolrInterfaceTest',
         ],
         fastMode=fastMode).addToTestRunner(runner)
 
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
index f21f24a..1ab546e 100644
--- a/test/solrinterfacetest.py
+++ b/test/solrinterfacetest.py
@@ -45,7 +45,7 @@ class SolrInterfaceTest(TestCase):
         sendData = []
         interface = SolrInterface("localhost", "8888", core="THE_CORE")
         interface._send = lambda path, body: sendData.append((path, body))
-        list(interface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        list(interface.add(identifier="recordId", partname="ignored", data="<record><data>recordData</data></record>"))
         self.assertEquals(1, len(sendData))
         self.assertEquals(('/solr/THE_CORE/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
         total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True)], response=RESPONSE, solrInterface=interface)
@@ -53,17 +53,17 @@ class SolrInterfaceTest(TestCase):
         self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc", body)
 
     def testAdd(self):
-        g = compose(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        g = compose(self._solrInterface.add(identifier="recordId", partname="ignored", data="<record><data>recordData</data></record>"))
         self._returnValueFromGenerator(g, ["SOME RESPONSE"])
 
-        g = compose(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        g = compose(self._solrInterface.add(identifier="recordId", partname="ignored", data="<record><data>recordData</data></record>"))
         self.assertRaises(
             IOError,
             lambda: self._returnValueFromGenerator(g, ["ERROR"], '500'))
 
         sendData = []
         self._solrInterface._send = lambda path, body: sendData.append((path, body))
-        list(self._solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        list(self._solrInterface.add(identifier="recordId", partname="ignored", data="<record><data>recordData</data></record>"))
         self.assertEquals(1, len(sendData))
         self.assertEquals(('/solr/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
 
@@ -71,7 +71,7 @@ class SolrInterfaceTest(TestCase):
         sent_data = []
         iSolr = SolrInterface("localhost", "8889", commitTimeout=10)
         iSolr._send = lambda path, body: sent_data.append((path, body))
-        r = iSolr.add("record1", "part0", "<record><data>data here</data></record>")
+        r = iSolr.add(identifier="record1", partname="part0", data="<record><data>data here</data></record>")
         list(r)
         self.assertEquals('/solr/update?commitWithin=10000', sent_data[0][0])
         self.assertEquals(1, len(sent_data))
@@ -216,7 +216,7 @@ class SolrInterfaceTest(TestCase):
             raise StopIteration(result)
         solrInterface._httppost = httppost
 
-        g = compose(solrInterface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
+        g = compose(solrInterface.add(identifier="recordId", partname="ignored", data="<record><data>recordData</data></record>"))
         self._returnValueFromGenerator(g, ["SOME RESPONSE"])
         self.assertEquals(['solrServer'], observer.calledMethodNames())
         self.assertEquals('localhost', kwargs[0]['host'])
diff --git a/usr-share/core-data/conf/solrconfig.xml b/usr-share/core-data/conf/solrconfig.xml
index 296db2c..d84d9ca 100644
--- a/usr-share/core-data/conf/solrconfig.xml
+++ b/usr-share/core-data/conf/solrconfig.xml
@@ -66,7 +66,7 @@
     <httpCaching never304="true" />
   </requestDispatcher>
 
-  <requestHandler name="/search" class="org.apache.solr.handler.component.SearchHandler">
+  <requestHandler name="/select" class="org.apache.solr.handler.component.SearchHandler">
   </requestHandler>
 
 
@@ -90,7 +90,7 @@
   <!-- ping/healthcheck -->
   <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
     <lst name="invariants">
-      <str name="qt">/search</str>
+      <str name="qt">/select</str>
       <str name="q">solrpingquery</str>
     </lst>
     <lst name="defaults">
-- 
1.7.2.5


From 2a7e0a8e353c3339398e2a257ef94bc99da04363 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Wed, 12 Dec 2012 15:28:46 +0000
Subject: [PATCH 48/66] HM/TJ: added systemPath stuff for testing.

---
 bin/start-solr |   11 +++++++++--
 1 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/bin/start-solr b/bin/start-solr
index 5222515..ede2259 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -24,8 +24,15 @@
 # 
 ## end license ##
 
-import sys                # DO_NOT_DISTRIBUTE
-sys.path.insert(0, '..')  # DO_NOT_DISTRIBUTE
+from os.path import abspath, dirname                #DO_NOT_DISTRIBUTE
+from os import system, getcwd                       #DO_NOT_DISTRIBUTE
+from glob import glob                               #DO_NOT_DISTRIBUTE
+from sys import path as systemPath, exit            #DO_NOT_DISTRIBUTE
+parentdir = dirname(dirname(abspath(__file__)))     #DO_NOT_DISTRIBUTE
+system('find .. -name "*.pyc" | xargs rm -f')       #DO_NOT_DISTRIBUTE
+for path in glob(parentdir+'/deps.d/*'):            #DO_NOT_DISTRIBUTE
+    systemPath.insert(0, path)                      #DO_NOT_DISTRIBUTE
+systemPath.insert(0, parentdir)                     #DO_NOT_DISTRIBUTE
 
 from sys import argv, exit
 from os import listdir
-- 
1.7.2.5


From 1f8cd34153191ca6177434fff07065e5553dd7fc Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Wed, 12 Dec 2012 16:50:30 +0100
Subject: [PATCH 49/66] TJ/HM: added test records.

---
 test/_integration/integrationstate.py  |   19 +++++------
 test/_integration/solrinterfacetest.py |   20 ++++++-----
 test/data/integration/record_0001.doc  |   27 +++++++++++++++
 test/data/integration/record_0002.doc  |   30 +++++++++++++++++
 test/data/integration/record_0003.doc  |   25 ++++++++++++++
 test/data/integration/record_0004.doc  |   25 ++++++++++++++
 test/data/integration/record_0005.doc  |   31 +++++++++++++++++
 test/data/integration/record_0006.doc  |   29 ++++++++++++++++
 test/data/integration/record_0007.doc  |   36 ++++++++++++++++++++
 test/data/integration/record_0008.doc  |   30 +++++++++++++++++
 test/data/integration/record_0009.doc  |   27 +++++++++++++++
 test/data/integration/record_0010.doc  |   30 +++++++++++++++++
 test/data/integration/record_0011.doc  |   31 +++++++++++++++++
 test/data/integration/record_0012.doc  |   23 +++++++++++++
 test/data/integration/record_0013.doc  |   25 ++++++++++++++
 test/data/integration/record_0014.doc  |   23 +++++++++++++
 test/data/integration/record_0015.doc  |   24 +++++++++++++
 test/data/integration/record_0016.doc  |   26 +++++++++++++++
 test/data/integration/record_0017.doc  |   25 ++++++++++++++
 test/data/integration/record_0018.doc  |   30 +++++++++++++++++
 test/data/integration/record_0019.doc  |   24 +++++++++++++
 test/data/integration/record_0020.doc  |   30 +++++++++++++++++
 test/data/integration/record_0021.doc  |   30 +++++++++++++++++
 test/data/integration/record_0022.doc  |   26 +++++++++++++++
 test/data/integration/record_0023.doc  |   29 ++++++++++++++++
 test/data/integration/record_0024.doc  |   28 ++++++++++++++++
 test/data/integration/record_0025.doc  |   28 ++++++++++++++++
 test/data/integration/record_0026.doc  |   29 ++++++++++++++++
 test/data/integration/record_0027.doc  |   25 ++++++++++++++
 test/data/integration/record_0028.doc  |   29 ++++++++++++++++
 test/data/integration/record_0029.doc  |   27 +++++++++++++++
 test/data/integration/record_0030.doc  |   28 ++++++++++++++++
 test/data/integration/record_0031.doc  |   29 ++++++++++++++++
 test/data/integration/record_0032.doc  |   28 ++++++++++++++++
 test/data/integration/record_0033.doc  |   26 +++++++++++++++
 test/data/integration/record_0034.doc  |   29 ++++++++++++++++
 test/data/integration/record_0035.doc  |   25 ++++++++++++++
 test/data/integration/record_0036.doc  |   27 +++++++++++++++
 test/data/integration/record_0037.doc  |   28 ++++++++++++++++
 test/data/integration/record_0038.doc  |   29 ++++++++++++++++
 test/data/integration/record_0039.doc  |   26 +++++++++++++++
 test/data/integration/record_0040.doc  |   29 ++++++++++++++++
 test/data/integration/record_0041.doc  |   19 +++++++++++
 test/data/integration/record_0042.doc  |   24 +++++++++++++
 test/data/integration/record_0043.doc  |   26 +++++++++++++++
 test/data/integration/record_0044.doc  |   24 +++++++++++++
 test/data/integration/record_0045.doc  |    5 +++
 test/data/integration/record_0046.doc  |    5 +++
 test/data/integration/record_0047.doc  |   20 +++++++++++
 test/data/integration/record_0048.doc  |    7 ++++
 test/data/integration/record_0049.doc  |    6 +++
 test/data/integration/record_0050.doc  |    5 +++
 test/data/integration/record_0051.doc  |   18 ++++++++++
 test/data/integration/record_0052.doc  |    5 +++
 test/data/integration/record_0053.doc  |    5 +++
 test/data/integration/record_0054.doc  |    6 +++
 test/data/integration/record_0055.doc  |    5 +++
 test/data/integration/record_0056.doc  |    6 +++
 test/data/integration/record_0057.doc  |    5 +++
 test/data/integration/record_0058.doc  |    7 ++++
 test/data/integration/record_0059.doc  |    6 +++
 test/data/integration/record_0060.doc  |   19 +++++++++++
 test/data/integration/record_0061.doc  |   56 ++++++++++++++++++++++++++++++++
 test/data/integration/record_0062.doc  |   13 +++++++
 test/data/integration/record_0063.doc  |   13 +++++++
 test/data/integration/record_0064.doc  |   12 +++++++
 test/data/integration/record_0065.doc  |   12 +++++++
 test/data/integration/record_0066.doc  |   12 +++++++
 test/data/integration/record_0067.doc  |   24 +++++++++++++
 test/data/integration/record_0068.doc  |   18 ++++++++++
 test/data/integration/record_0069.doc  |   32 ++++++++++++++++++
 71 files changed, 1541 insertions(+), 19 deletions(-)
 create mode 100644 test/data/integration/record_0001.doc
 create mode 100644 test/data/integration/record_0002.doc
 create mode 100644 test/data/integration/record_0003.doc
 create mode 100644 test/data/integration/record_0004.doc
 create mode 100644 test/data/integration/record_0005.doc
 create mode 100644 test/data/integration/record_0006.doc
 create mode 100644 test/data/integration/record_0007.doc
 create mode 100644 test/data/integration/record_0008.doc
 create mode 100644 test/data/integration/record_0009.doc
 create mode 100644 test/data/integration/record_0010.doc
 create mode 100644 test/data/integration/record_0011.doc
 create mode 100644 test/data/integration/record_0012.doc
 create mode 100644 test/data/integration/record_0013.doc
 create mode 100644 test/data/integration/record_0014.doc
 create mode 100644 test/data/integration/record_0015.doc
 create mode 100644 test/data/integration/record_0016.doc
 create mode 100644 test/data/integration/record_0017.doc
 create mode 100644 test/data/integration/record_0018.doc
 create mode 100644 test/data/integration/record_0019.doc
 create mode 100644 test/data/integration/record_0020.doc
 create mode 100644 test/data/integration/record_0021.doc
 create mode 100644 test/data/integration/record_0022.doc
 create mode 100644 test/data/integration/record_0023.doc
 create mode 100644 test/data/integration/record_0024.doc
 create mode 100644 test/data/integration/record_0025.doc
 create mode 100644 test/data/integration/record_0026.doc
 create mode 100644 test/data/integration/record_0027.doc
 create mode 100644 test/data/integration/record_0028.doc
 create mode 100644 test/data/integration/record_0029.doc
 create mode 100644 test/data/integration/record_0030.doc
 create mode 100644 test/data/integration/record_0031.doc
 create mode 100644 test/data/integration/record_0032.doc
 create mode 100644 test/data/integration/record_0033.doc
 create mode 100644 test/data/integration/record_0034.doc
 create mode 100644 test/data/integration/record_0035.doc
 create mode 100644 test/data/integration/record_0036.doc
 create mode 100644 test/data/integration/record_0037.doc
 create mode 100644 test/data/integration/record_0038.doc
 create mode 100644 test/data/integration/record_0039.doc
 create mode 100644 test/data/integration/record_0040.doc
 create mode 100644 test/data/integration/record_0041.doc
 create mode 100644 test/data/integration/record_0042.doc
 create mode 100644 test/data/integration/record_0043.doc
 create mode 100644 test/data/integration/record_0044.doc
 create mode 100644 test/data/integration/record_0045.doc
 create mode 100644 test/data/integration/record_0046.doc
 create mode 100644 test/data/integration/record_0047.doc
 create mode 100644 test/data/integration/record_0048.doc
 create mode 100644 test/data/integration/record_0049.doc
 create mode 100644 test/data/integration/record_0050.doc
 create mode 100644 test/data/integration/record_0051.doc
 create mode 100644 test/data/integration/record_0052.doc
 create mode 100644 test/data/integration/record_0053.doc
 create mode 100644 test/data/integration/record_0054.doc
 create mode 100644 test/data/integration/record_0055.doc
 create mode 100644 test/data/integration/record_0056.doc
 create mode 100644 test/data/integration/record_0057.doc
 create mode 100644 test/data/integration/record_0058.doc
 create mode 100644 test/data/integration/record_0059.doc
 create mode 100644 test/data/integration/record_0060.doc
 create mode 100644 test/data/integration/record_0061.doc
 create mode 100644 test/data/integration/record_0062.doc
 create mode 100644 test/data/integration/record_0063.doc
 create mode 100644 test/data/integration/record_0064.doc
 create mode 100644 test/data/integration/record_0065.doc
 create mode 100644 test/data/integration/record_0066.doc
 create mode 100644 test/data/integration/record_0067.doc
 create mode 100644 test/data/integration/record_0068.doc
 create mode 100644 test/data/integration/record_0069.doc

diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
index 7da7f62..6bcaa5c 100644
--- a/test/_integration/integrationstate.py
+++ b/test/_integration/integrationstate.py
@@ -99,14 +99,13 @@ class IntegrationState(_IntegrationState):
             exit(1)
 
     def _uploadSolrData(self, dataDir):
-        for f in sorted(glob(join(dataDir, 'solr*.records'))):
-            print 'HIER VERDER'
-            break
-            oaibatchLxml = parse(open(f))
-            for record in xpath(oaibatchLxml, '//oai:record'):
-                print 'Uploading %s' % xpath(record, 'oai:header/oai:identifier/text()')[0]
-                data = lxmltostring(xpath(record, 'oai:metadata/doc')[0])
-                postRequest(port=self.solrPort, path='/solr/%s/update' % self.solrCore, data='<add>%s</add>' % data, contentType='text/xml')
-                postRequest(port=self.solrPort, path='/solr/%s/update' % self.solrCore, data='<commit/>', contentType='text/xml')
-        
+        for docFile in sorted(glob(join(dataDir, '*.doc'))):
+            identifier = basename(docFile).rsplit('.',1)[0]
+            addKwargs=dict(
+                identifier=identifier,
+                data=open(docFile).read(),
+            )
+            header, body = postRequest(port=self.solrClientPort, path='/add', data=dumps(addKwargs), parse=False)
+            assert '' == body, 'Something bad happened:\n' + body
+               
 
diff --git a/test/_integration/solrinterfacetest.py b/test/_integration/solrinterfacetest.py
index f3ee27a..e56942d 100644
--- a/test/_integration/solrinterfacetest.py
+++ b/test/_integration/solrinterfacetest.py
@@ -42,13 +42,7 @@ class SolrInterfaceTest(IntegrationTestCase):
         self.assertEquals('', body)
         sleep(0.1)
 
-        queryKwargs=dict(
-                luceneQueryString='__id__:record\:testAddQueryDelete',
-            )
-        header, body = postRequest(port=self.solrClientPort, path='/executeQuery', data=dumps(queryKwargs), parse=False)
-        responseType, responseDict = body.split(': ', 1)
-        self.assertEquals('SolrResponse', responseType)
-        response = loads(responseDict)
+        response = self.executeQuery(luceneQueryString='__id__:record\:testAddQueryDelete')
         self.assertEquals(1, response['total'])
         self.assertEquals(['record:testAddQueryDelete'], response['hits'])
 
@@ -56,7 +50,15 @@ class SolrInterfaceTest(IntegrationTestCase):
         self.assertEquals('', body)
         sleep(0.1)
 
+        response = self.executeQuery(luceneQueryString='__id__:record\:testAddQueryDelete')
+        self.assertEquals(0, response['total'])
+
+    def testDatabase(self):
+        response = self.executeQuery(luceneQueryString='*:*')
+        self.assertEquals(69, response['total'])
+
+    def executeQuery(self, **queryKwargs):
         header, body = postRequest(port=self.solrClientPort, path='/executeQuery', data=dumps(queryKwargs), parse=False)
         responseType, responseDict = body.split(': ', 1)
-        response = loads(responseDict)
-        self.assertEquals(0, response['total'])
+        self.assertEquals('SolrResponse', responseType)
+        return loads(responseDict)
diff --git a/test/data/integration/record_0001.doc b/test/data/integration/record_0001.doc
new file mode 100644
index 0000000..18a1430
--- /dev/null
+++ b/test/data/integration/record_0001.doc
@@ -0,0 +1,27 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0001</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">an illu</field>
+  <field name="untokenized.dc:date">1970</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">An illustrated history of Black Americans</field>
+  <field name="__all__">1970</field>
+  <field name="__all__">Franklin, John Hope</field>
+  <field name="__all__">192 p</field>
+  <field name="__all__">28 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">780950577</field>
+  <field name="dc:creator">Franklin, John Hope</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">An illustrated history of Black Americans</field>
+  <field name="ppn">780950577</field>
+  <field name="untokenized.dc:creator">Franklin, John Hope</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1970</field>
+  <field name="untokenized.lh:holder">urn:iln:27</field>
+  <field name="dc:format">28 cm</field>
+  <field name="dc:format">192 p</field>
+  <field name="sorted.dc:creator">franklin</field>
+  <field name="sorted.dc:date">1970</field>
+</doc>
diff --git a/test/data/integration/record_0002.doc b/test/data/integration/record_0002.doc
new file mode 100644
index 0000000..b2c7451
--- /dev/null
+++ b/test/data/integration/record_0002.doc
@@ -0,0 +1,30 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0002</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">graded</field>
+  <field name="untokenized.dc:date">1971</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Graded lessons in macramé, knotting and netting</field>
+  <field name="__all__">1971</field>
+  <field name="__all__">Walker, Louisa</field>
+  <field name="__all__">xiv, 254 p</field>
+  <field name="__all__">21 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">781010179</field>
+  <field name="__all__">0486227545</field>
+  <field name="dc:creator">Walker, Louisa</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Graded lessons in macramé, knotting and netting</field>
+  <field name="ppn">781010179</field>
+  <field name="untokenized.dc:creator">Walker, Louisa</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1971</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="untokenized.lh:holder">urn:iln:8</field>
+  <field name="isbn">0486227545</field>
+  <field name="dc:format">21 cm</field>
+  <field name="dc:format">xiv, 254 p</field>
+  <field name="sorted.dc:creator">walker</field>
+  <field name="sorted.dc:date">1971</field>
+</doc>
diff --git a/test/data/integration/record_0003.doc b/test/data/integration/record_0003.doc
new file mode 100644
index 0000000..70f9618
--- /dev/null
+++ b/test/data/integration/record_0003.doc
@@ -0,0 +1,25 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0003</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">rapport</field>
+  <field name="untokenized.dc:date">1963</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Rapport inzake doping</field>
+  <field name="__all__">1963</field>
+  <field name="__all__">24 p</field>
+  <field name="__all__">24 cm</field>
+  <field name="__all__">"Overgedrukt uit: Verslagen en mededelingen betreffende de volksgezondheid no. 2/3, februari/maart 1963."</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">78109481x</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Rapport inzake doping</field>
+  <field name="ppn">78109481x</field>
+  <field name="dc:format">24 cm</field>
+  <field name="dc:format">24 p</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1963</field>
+  <field name="untokenized.lh:holder">urn:iln:8</field>
+  <field name="untokenized.lh:holder">urn:iln:192</field>
+  <field name="sorted.dc:date">1963</field>
+</doc>
diff --git a/test/data/integration/record_0004.doc b/test/data/integration/record_0004.doc
new file mode 100644
index 0000000..76c99e7
--- /dev/null
+++ b/test/data/integration/record_0004.doc
@@ -0,0 +1,25 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0004</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">the cha</field>
+  <field name="untokenized.dc:date">1973</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">The challenge of urban growth to governments and private enterprise</field>
+  <field name="__all__">1973</field>
+  <field name="__all__">36 p</field>
+  <field name="__all__">21 cm</field>
+  <field name="__all__">statements and conclusions on the Congress theme</field>
+  <field name="__all__">XXIVth Congress of the International Chamber of Commerce, Rio de Janeiro, 19-26 May 1973</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">78110002x</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">The challenge of urban growth to governments and private enterprise</field>
+  <field name="ppn">78110002x</field>
+  <field name="dc:format">21 cm</field>
+  <field name="dc:format">36 p</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1973</field>
+  <field name="untokenized.lh:holder">urn:iln:214</field>
+  <field name="sorted.dc:date">1973</field>
+</doc>
diff --git a/test/data/integration/record_0005.doc b/test/data/integration/record_0005.doc
new file mode 100644
index 0000000..bd1f9b0
--- /dev/null
+++ b/test/data/integration/record_0005.doc
@@ -0,0 +1,31 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0005</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:fre</field>
+  <field name="sorted.dc:title">illustr</field>
+  <field name="untokenized.dc:date">1971</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Illustrated notebooks, 1917-1955</field>
+  <field name="__all__">1971</field>
+  <field name="__all__">Braque, Georges</field>
+  <field name="__all__">117 p</field>
+  <field name="__all__">29 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">781120845</field>
+  <field name="__all__">0486202321</field>
+  <field name="dc:creator">Braque, Georges</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Illustrated notebooks, 1917-1955</field>
+  <field name="ppn">781120845</field>
+  <field name="untokenized.dc:creator">Braque, Georges</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1971</field>
+  <field name="untokenized.lh:holder">urn:iln:10</field>
+  <field name="untokenized.lh:holder">urn:iln:27</field>
+  <field name="isbn">0486202321</field>
+  <field name="dc:format">29 cm</field>
+  <field name="dc:format">117 p</field>
+  <field name="sorted.dc:creator">braque</field>
+  <field name="sorted.dc:date">1971</field>
+</doc>
diff --git a/test/data/integration/record_0006.doc b/test/data/integration/record_0006.doc
new file mode 100644
index 0000000..a72632d
--- /dev/null
+++ b/test/data/integration/record_0006.doc
@@ -0,0 +1,29 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0006</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">the liv</field>
+  <field name="untokenized.dc:date">1972</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">The Living Theatre</field>
+  <field name="__all__">1972</field>
+  <field name="__all__">Biner, Pierre</field>
+  <field name="__all__">256 p</field>
+  <field name="__all__">23 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">78117421x</field>
+  <field name="__all__">0818005017</field>
+  <field name="dc:creator">Biner, Pierre</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">The Living Theatre</field>
+  <field name="ppn">78117421x</field>
+  <field name="untokenized.dc:creator">Biner, Pierre</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1972</field>
+  <field name="untokenized.lh:holder">urn:iln:27</field>
+  <field name="isbn">0818005017</field>
+  <field name="dc:format">23 cm</field>
+  <field name="dc:format">256 p</field>
+  <field name="sorted.dc:creator">biner</field>
+  <field name="sorted.dc:date">1972</field>
+</doc>
diff --git a/test/data/integration/record_0007.doc b/test/data/integration/record_0007.doc
new file mode 100644
index 0000000..a4a7120
--- /dev/null
+++ b/test/data/integration/record_0007.doc
@@ -0,0 +1,36 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0007</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="dc:title">Letters and other writings of a Natal Sheriff, Thomas Phipson 1815-76</field>
+  <field name="untokenized.dc:date">1968</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Letters and other writings of a Natal Sheriff, Thomas Phipson 1815-76</field>
+  <field name="__all__">1968</field>
+  <field name="__all__">Phipson, Thomas</field>
+  <field name="__all__">Currey, Ralph Nixon</field>
+  <field name="__all__">xxvii, 248 p</field>
+  <field name="__all__">Natal (South Africa)</field>
+  <field name="__all__">Natal</field>
+  <field name="__all__">22 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">781565766</field>
+  <field name="dc:creator">Phipson, Thomas</field>
+  <field name="dc:creator">Currey, Ralph Nixon</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:subject">Natal (South Africa)</field>
+  <field name="untokenized.dc:subject">Natal</field>
+  <field name="ppn">781565766</field>
+  <field name="untokenized.dc:creator">Phipson, Thomas</field>
+  <field name="untokenized.dc:creator">Currey, Ralph Nixon</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="sorted.dc:title">letters</field>
+  <field name="dc:date">1968</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">22 cm</field>
+  <field name="dc:format">xxvii, 248 p</field>
+  <field name="sorted.dc:creator">phipson</field>
+  <field name="sorted.dc:date">1968</field>
+  <field name="dc:subject">Natal (South Africa)</field>
+  <field name="dc:subject">Natal</field>
+</doc>
diff --git a/test/data/integration/record_0008.doc b/test/data/integration/record_0008.doc
new file mode 100644
index 0000000..271b9ec
--- /dev/null
+++ b/test/data/integration/record_0008.doc
@@ -0,0 +1,30 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0008</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">religio</field>
+  <field name="untokenized.dc:date">1972</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Religion of reason</field>
+  <field name="__all__">1972</field>
+  <field name="__all__">Cohen, Hermann</field>
+  <field name="__all__">xliii, 489 p</field>
+  <field name="__all__">25 cm</field>
+  <field name="__all__">out of the sources of Judaism</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">781685796</field>
+  <field name="__all__">0804452296</field>
+  <field name="dc:creator">Cohen, Hermann</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Religion of reason</field>
+  <field name="ppn">781685796</field>
+  <field name="untokenized.dc:creator">Cohen, Hermann</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1972</field>
+  <field name="untokenized.lh:holder">urn:iln:62</field>
+  <field name="isbn">0804452296</field>
+  <field name="dc:format">25 cm</field>
+  <field name="dc:format">xliii, 489 p</field>
+  <field name="sorted.dc:creator">cohen</field>
+  <field name="sorted.dc:date">1972</field>
+</doc>
diff --git a/test/data/integration/record_0009.doc b/test/data/integration/record_0009.doc
new file mode 100644
index 0000000..2fde48f
--- /dev/null
+++ b/test/data/integration/record_0009.doc
@@ -0,0 +1,27 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0009</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">300 yea</field>
+  <field name="untokenized.dc:date">1976</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">300 years of Canada's quilts</field>
+  <field name="__all__">1976</field>
+  <field name="__all__">Conroy, Mary</field>
+  <field name="__all__">ix, 133 p</field>
+  <field name="__all__">18 x 26 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">781830087</field>
+  <field name="dc:creator">Conroy, Mary</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">300 years of Canada's quilts</field>
+  <field name="ppn">781830087</field>
+  <field name="untokenized.dc:creator">Conroy, Mary</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1976</field>
+  <field name="untokenized.lh:holder">urn:iln:8</field>
+  <field name="dc:format">18 x 26 cm</field>
+  <field name="dc:format">ix, 133 p</field>
+  <field name="sorted.dc:creator">conroy</field>
+  <field name="sorted.dc:date">1976</field>
+</doc>
diff --git a/test/data/integration/record_0010.doc b/test/data/integration/record_0010.doc
new file mode 100644
index 0000000..3729c8d
--- /dev/null
+++ b/test/data/integration/record_0010.doc
@@ -0,0 +1,30 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0010</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">an intr</field>
+  <field name="untokenized.dc:date">1970</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">An introduction to Romance linguistics</field>
+  <field name="__all__">1970</field>
+  <field name="__all__">Iordan, Iorgu</field>
+  <field name="__all__">xi, 403 p</field>
+  <field name="__all__">23 cm</field>
+  <field name="__all__">its schools and scholars</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">782135250</field>
+  <field name="__all__">083714244x</field>
+  <field name="dc:creator">Iordan, Iorgu</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">An introduction to Romance linguistics</field>
+  <field name="ppn">782135250</field>
+  <field name="untokenized.dc:creator">Iordan, Iorgu</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1970</field>
+  <field name="untokenized.lh:holder">urn:iln:33</field>
+  <field name="isbn">083714244x</field>
+  <field name="dc:format">23 cm</field>
+  <field name="dc:format">xi, 403 p</field>
+  <field name="sorted.dc:creator">iordan</field>
+  <field name="sorted.dc:date">1970</field>
+</doc>
diff --git a/test/data/integration/record_0011.doc b/test/data/integration/record_0011.doc
new file mode 100644
index 0000000..ee8a6bb
--- /dev/null
+++ b/test/data/integration/record_0011.doc
@@ -0,0 +1,31 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0011</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="dc:title">De Baerkenhuizen, Anno 1349</field>
+  <field name="untokenized.dc:date">1966</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">De Baerkenhuizen, Anno 1349</field>
+  <field name="__all__">1966</field>
+  <field name="__all__">Nieuwkerk Kramer, H G</field>
+  <field name="__all__">15 p</field>
+  <field name="__all__">Doesburg (Netherlands)</field>
+  <field name="__all__">20 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">78240829x</field>
+  <field name="dc:creator">Nieuwkerk Kramer, H G</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:subject">Doesburg (Netherlands)</field>
+  <field name="ppn">78240829x</field>
+  <field name="untokenized.dc:creator">Nieuwkerk Kramer, H G</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="sorted.dc:title">baerken</field>
+  <field name="dc:date">1966</field>
+  <field name="untokenized.lh:holder">urn:iln:12</field>
+  <field name="untokenized.lh:holder">urn:iln:192</field>
+  <field name="dc:format">20 cm</field>
+  <field name="dc:format">15 p</field>
+  <field name="sorted.dc:creator">nieuwkerk kramer</field>
+  <field name="sorted.dc:date">1966</field>
+  <field name="dc:subject">Doesburg (Netherlands)</field>
+</doc>
diff --git a/test/data/integration/record_0012.doc b/test/data/integration/record_0012.doc
new file mode 100644
index 0000000..5d9d3aa
--- /dev/null
+++ b/test/data/integration/record_0012.doc
@@ -0,0 +1,23 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0012</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">eska ou</field>
+  <field name="untokenized.dc:date">1976</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Eska outboard motor service manual</field>
+  <field name="__all__">1976</field>
+  <field name="__all__">56 p</field>
+  <field name="__all__">29 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">782455735</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Eska outboard motor service manual</field>
+  <field name="ppn">782455735</field>
+  <field name="dc:format">29 cm</field>
+  <field name="dc:format">56 p</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1976</field>
+  <field name="untokenized.lh:holder">urn:iln:27</field>
+  <field name="sorted.dc:date">1976</field>
+</doc>
diff --git a/test/data/integration/record_0013.doc b/test/data/integration/record_0013.doc
new file mode 100644
index 0000000..e8bb5ae
--- /dev/null
+++ b/test/data/integration/record_0013.doc
@@ -0,0 +1,25 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0013</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">deco, 1</field>
+  <field name="untokenized.dc:date">1975</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Deco, 1925-1935</field>
+  <field name="__all__">1975</field>
+  <field name="__all__">64 p</field>
+  <field name="__all__">29 cm</field>
+  <field name="__all__">[exhibition, June 10-Sept. 2, 1975, The Gallery, Stratford ... et al.]</field>
+  <field name="__all__">Cover title</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">782698131</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Deco, 1925-1935</field>
+  <field name="ppn">782698131</field>
+  <field name="dc:format">29 cm</field>
+  <field name="dc:format">64 p</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1975</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="sorted.dc:date">1975</field>
+</doc>
diff --git a/test/data/integration/record_0014.doc b/test/data/integration/record_0014.doc
new file mode 100644
index 0000000..1622cc1
--- /dev/null
+++ b/test/data/integration/record_0014.doc
@@ -0,0 +1,23 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0014</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">collect</field>
+  <field name="untokenized.dc:date">1975</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Collections of the royal castle of Wawel</field>
+  <field name="__all__">1975</field>
+  <field name="__all__">434 p</field>
+  <field name="__all__">31 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">782745520</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Collections of the royal castle of Wawel</field>
+  <field name="ppn">782745520</field>
+  <field name="dc:format">31 cm</field>
+  <field name="dc:format">434 p</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1975</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="sorted.dc:date">1975</field>
+</doc>
diff --git a/test/data/integration/record_0015.doc b/test/data/integration/record_0015.doc
new file mode 100644
index 0000000..f084511
--- /dev/null
+++ b/test/data/integration/record_0015.doc
@@ -0,0 +1,24 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0015</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">europea</field>
+  <field name="untokenized.dc:date">1973</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">European model code of safe practice in the storage and handling of petroleum products</field>
+  <field name="__all__">1973</field>
+  <field name="__all__">     v</field>
+  <field name="__all__">26 cm</field>
+  <field name="__all__">"Prepared by a Working Group, formed following a meeting of representatives of European Petroleum Technical Organisations, held at the Institute of Petroleum, London, in Dec. 1969."</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">782773850</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">European model code of safe practice in the storage and handling of petroleum products</field>
+  <field name="ppn">782773850</field>
+  <field name="dc:format">26 cm</field>
+  <field name="dc:format">     v</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1973</field>
+  <field name="untokenized.lh:holder">urn:iln:27</field>
+  <field name="sorted.dc:date">1973</field>
+</doc>
diff --git a/test/data/integration/record_0016.doc b/test/data/integration/record_0016.doc
new file mode 100644
index 0000000..33a0a54
--- /dev/null
+++ b/test/data/integration/record_0016.doc
@@ -0,0 +1,26 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0016</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:fre</field>
+  <field name="sorted.dc:title">watteau</field>
+  <field name="untokenized.dc:date">1975</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">De Watteau à David</field>
+  <field name="__all__">1975</field>
+  <field name="__all__">209 p</field>
+  <field name="__all__">22 cm</field>
+  <field name="__all__">peintures et dessins des musées de province français</field>
+  <field name="__all__">Catalog of exposition held Sept. 27-Nov. 30, 1975</field>
+  <field name="__all__">At head of title: Europalia 75 France</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">782843964</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">De Watteau à David</field>
+  <field name="ppn">782843964</field>
+  <field name="dc:format">22 cm</field>
+  <field name="dc:format">209 p</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1975</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="sorted.dc:date">1975</field>
+</doc>
diff --git a/test/data/integration/record_0017.doc b/test/data/integration/record_0017.doc
new file mode 100644
index 0000000..11cadd5
--- /dev/null
+++ b/test/data/integration/record_0017.doc
@@ -0,0 +1,25 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0017</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ger</field>
+  <field name="sorted.dc:title">werden</field>
+  <field name="untokenized.dc:date">1967</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Werden und Wandlung</field>
+  <field name="__all__">1967</field>
+  <field name="__all__">239 p</field>
+  <field name="__all__">21 cm</field>
+  <field name="__all__">Studien zur Kunst der Donauschule. (Schriftleitung: Kurt Holter und Otto Wutzel)</field>
+  <field name="__all__">A symposium organized by the Oberösterreichische Musealverein</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">783032536</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Werden und Wandlung</field>
+  <field name="ppn">783032536</field>
+  <field name="dc:format">21 cm</field>
+  <field name="dc:format">239 p</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1967</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="sorted.dc:date">1967</field>
+</doc>
diff --git a/test/data/integration/record_0018.doc b/test/data/integration/record_0018.doc
new file mode 100644
index 0000000..f0f6494
--- /dev/null
+++ b/test/data/integration/record_0018.doc
@@ -0,0 +1,30 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0018</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:fre</field>
+  <field name="dc:title">Les très riches heures du Bourbonnais</field>
+  <field name="untokenized.dc:date">1975</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Les très riches heures du Bourbonnais</field>
+  <field name="__all__">1975</field>
+  <field name="__all__">Varennes, Jean Charles</field>
+  <field name="__all__">355 p., [8] leaves of plates</field>
+  <field name="__all__">Bourbonnais (France)</field>
+  <field name="__all__">21 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">783064071</field>
+  <field name="dc:creator">Varennes, Jean Charles</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:subject">Bourbonnais (France)</field>
+  <field name="ppn">783064071</field>
+  <field name="untokenized.dc:creator">Varennes, Jean Charles</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="sorted.dc:title">les trè</field>
+  <field name="dc:date">1975</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">21 cm</field>
+  <field name="dc:format">355 p., [8] leaves of plates</field>
+  <field name="sorted.dc:creator">varennes</field>
+  <field name="sorted.dc:date">1975</field>
+  <field name="dc:subject">Bourbonnais (France)</field>
+</doc>
diff --git a/test/data/integration/record_0019.doc b/test/data/integration/record_0019.doc
new file mode 100644
index 0000000..4124e20
--- /dev/null
+++ b/test/data/integration/record_0019.doc
@@ -0,0 +1,24 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0019</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">time ca</field>
+  <field name="untokenized.dc:date">1968</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Time capsule/1925</field>
+  <field name="__all__">1968</field>
+  <field name="__all__">239 p</field>
+  <field name="__all__">?cm</field>
+  <field name="__all__">a history of the year condensed from the pages of Time</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">783151330</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Time capsule/1925</field>
+  <field name="ppn">783151330</field>
+  <field name="dc:format">?cm</field>
+  <field name="dc:format">239 p</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1968</field>
+  <field name="untokenized.lh:holder">urn:iln:27</field>
+  <field name="sorted.dc:date">1968</field>
+</doc>
diff --git a/test/data/integration/record_0020.doc b/test/data/integration/record_0020.doc
new file mode 100644
index 0000000..854573a
--- /dev/null
+++ b/test/data/integration/record_0020.doc
@@ -0,0 +1,30 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0020</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ger</field>
+  <field name="sorted.dc:title">der men</field>
+  <field name="untokenized.dc:date">1975</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Der Mensch und die Graugans</field>
+  <field name="__all__">1975</field>
+  <field name="__all__">Pilz, Gunter</field>
+  <field name="__all__">246 p</field>
+  <field name="__all__">21 cm</field>
+  <field name="__all__">eine Kritik an Konrad Lorenz</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">783288034</field>
+  <field name="__all__">3524006442</field>
+  <field name="dc:creator">Pilz, Gunter</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Der Mensch und die Graugans</field>
+  <field name="ppn">783288034</field>
+  <field name="untokenized.dc:creator">Pilz, Gunter</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1975</field>
+  <field name="untokenized.lh:holder">urn:iln:27</field>
+  <field name="isbn">3524006442</field>
+  <field name="dc:format">21 cm</field>
+  <field name="dc:format">246 p</field>
+  <field name="sorted.dc:creator">pilz</field>
+  <field name="sorted.dc:date">1975</field>
+</doc>
diff --git a/test/data/integration/record_0021.doc b/test/data/integration/record_0021.doc
new file mode 100644
index 0000000..cda70ef
--- /dev/null
+++ b/test/data/integration/record_0021.doc
@@ -0,0 +1,30 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0021</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:fre</field>
+  <field name="sorted.dc:title">les imp</field>
+  <field name="untokenized.dc:date">1971</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Les imprimeurs et les libraires dans la Côte-d'Or</field>
+  <field name="__all__">1971</field>
+  <field name="__all__">Clément-Janin, Michel Hilaire</field>
+  <field name="__all__">viii, 238 p</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">1e uitg.: 1873</field>
+  <field name="__all__">Fotomech. herdr. van de 2e uitg.: Dijon, 1883</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803160496</field>
+  <field name="dc:creator">Clément-Janin, Michel Hilaire</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Les imprimeurs et les libraires dans la Côte-d'Or</field>
+  <field name="ppn">803160496</field>
+  <field name="untokenized.dc:creator">Clément-Janin, Michel Hilaire</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1971</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="untokenized.lh:holder">urn:iln:10</field>
+  <field name="dc:format">in-8</field>
+  <field name="dc:format">viii, 238 p</field>
+  <field name="sorted.dc:creator">clément-janin</field>
+  <field name="sorted.dc:date">1971</field>
+</doc>
diff --git a/test/data/integration/record_0022.doc b/test/data/integration/record_0022.doc
new file mode 100644
index 0000000..47c6f3d
--- /dev/null
+++ b/test/data/integration/record_0022.doc
@@ -0,0 +1,26 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0022</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:fre</field>
+  <field name="sorted.dc:title">établis</field>
+  <field name="untokenized.dc:date">1875</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Établissement de l'imprimerie dans la province de Languedoc</field>
+  <field name="__all__">1875</field>
+  <field name="__all__">Desbarreaux-Bernard, Tibulle</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">Eerst verschenen in: Histoire générale de Languedoc, dl. 7</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803160569</field>
+  <field name="dc:creator">Desbarreaux-Bernard, Tibulle</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Établissement de l'imprimerie dans la province de Languedoc</field>
+  <field name="ppn">803160569</field>
+  <field name="untokenized.dc:creator">Desbarreaux-Bernard, Tibulle</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1875</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-8</field>
+  <field name="sorted.dc:creator">desbarreaux-bernard</field>
+  <field name="sorted.dc:date">1875</field>
+</doc>
diff --git a/test/data/integration/record_0023.doc b/test/data/integration/record_0023.doc
new file mode 100644
index 0000000..f238816
--- /dev/null
+++ b/test/data/integration/record_0023.doc
@@ -0,0 +1,29 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0023</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ita</field>
+  <field name="sorted.dc:title">serie d</field>
+  <field name="untokenized.dc:date">1970</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Serie di opere ebraiche impresse dai celebri tipografi Soncini ed altre in greco, latino ed italiano</field>
+  <field name="__all__">1970</field>
+  <field name="__all__">Zaccaria Antonucci, Gaetano</field>
+  <field name="__all__">vi, 122, 71 p</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">1e uitg.: 1868</field>
+  <field name="__all__">Fotomech. herdr. van de 3e dr.: Fermo, 1870</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">81000853x</field>
+  <field name="dc:creator">Zaccaria Antonucci, Gaetano</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Serie di opere ebraiche impresse dai celebri tipografi Soncini ed altre in greco, latino ed italiano</field>
+  <field name="ppn">81000853x</field>
+  <field name="untokenized.dc:creator">Zaccaria Antonucci, Gaetano</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1970</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-8</field>
+  <field name="dc:format">vi, 122, 71 p</field>
+  <field name="sorted.dc:creator">zaccaria antonucci</field>
+  <field name="sorted.dc:date">1970</field>
+</doc>
diff --git a/test/data/integration/record_0024.doc b/test/data/integration/record_0024.doc
new file mode 100644
index 0000000..5cecfa0
--- /dev/null
+++ b/test/data/integration/record_0024.doc
@@ -0,0 +1,28 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0024</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:fre</field>
+  <field name="sorted.dc:title">histoir</field>
+  <field name="untokenized.dc:date">1886</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Histoire de l'imprimerie en Agenais, depuis l'origine jusqu' à nos jours</field>
+  <field name="__all__">1886</field>
+  <field name="__all__">Andrieu, Jules</field>
+  <field name="__all__">172 p</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">810009765</field>
+  <field name="dc:creator">Andrieu, Jules</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Histoire de l'imprimerie en Agenais, depuis l'origine jusqu' à nos jours</field>
+  <field name="ppn">810009765</field>
+  <field name="untokenized.dc:creator">Andrieu, Jules</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1886</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="untokenized.lh:holder">urn:iln:11</field>
+  <field name="dc:format">in-8</field>
+  <field name="dc:format">172 p</field>
+  <field name="sorted.dc:creator">andrieu</field>
+  <field name="sorted.dc:date">1886</field>
+</doc>
diff --git a/test/data/integration/record_0025.doc b/test/data/integration/record_0025.doc
new file mode 100644
index 0000000..e842f69
--- /dev/null
+++ b/test/data/integration/record_0025.doc
@@ -0,0 +1,28 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0025</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">catalog</field>
+  <field name="untokenized.dc:date">1919</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Catalogue of the incunabula in the library of the College of physicians of Philadelphia</field>
+  <field name="__all__">1919</field>
+  <field name="__all__">Fisher, Charles Perry</field>
+  <field name="__all__">ii, 108 p</field>
+  <field name="__all__">24 cm</field>
+  <field name="__all__">Overdruk uit : Annals of medical history, vol. 2, 1 (p. 44-78) en vol. 2, 2 (p. 191-193)</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803156901</field>
+  <field name="dc:creator">Fisher, Charles Perry</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Catalogue of the incunabula in the library of the College of physicians of Philadelphia</field>
+  <field name="ppn">803156901</field>
+  <field name="untokenized.dc:creator">Fisher, Charles Perry</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1919</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">24 cm</field>
+  <field name="dc:format">ii, 108 p</field>
+  <field name="sorted.dc:creator">fisher</field>
+  <field name="sorted.dc:date">1919</field>
+</doc>
diff --git a/test/data/integration/record_0026.doc b/test/data/integration/record_0026.doc
new file mode 100644
index 0000000..c80676c
--- /dev/null
+++ b/test/data/integration/record_0026.doc
@@ -0,0 +1,29 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0026</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:fre</field>
+  <field name="sorted.dc:title">notes s</field>
+  <field name="untokenized.dc:date">1897</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Notes sur le supplément de Proctor aux Annales de Campbell</field>
+  <field name="__all__">1897</field>
+  <field name="__all__">Polain, Marie Louis Félix Alphonse</field>
+  <field name="__all__">Pellechet, Marie Léontine Cathérine</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">Extrait de "La Revue du Bibliothèque"</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803427409</field>
+  <field name="dc:creator">Polain, Marie Louis Félix Alphonse</field>
+  <field name="dc:creator">Pellechet, Marie Léontine Cathérine</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Notes sur le supplément de Proctor aux Annales de Campbell</field>
+  <field name="ppn">803427409</field>
+  <field name="untokenized.dc:creator">Polain, Marie Louis Félix Alphonse</field>
+  <field name="untokenized.dc:creator">Pellechet, Marie Léontine Cathérine</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1897</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-8</field>
+  <field name="sorted.dc:creator">polain</field>
+  <field name="sorted.dc:date">1897</field>
+</doc>
diff --git a/test/data/integration/record_0027.doc b/test/data/integration/record_0027.doc
new file mode 100644
index 0000000..4a4c691
--- /dev/null
+++ b/test/data/integration/record_0027.doc
@@ -0,0 +1,25 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0027</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:lat</field>
+  <field name="sorted.dc:title">specime</field>
+  <field name="untokenized.dc:date">1794</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Specimen historico-criticum editionum Italicarum saeculi XV</field>
+  <field name="__all__">1794</field>
+  <field name="__all__">Audiffredi, Giovanni Battista</field>
+  <field name="__all__">in-4</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803431112</field>
+  <field name="dc:creator">Audiffredi, Giovanni Battista</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Specimen historico-criticum editionum Italicarum saeculi XV</field>
+  <field name="ppn">803431112</field>
+  <field name="untokenized.dc:creator">Audiffredi, Giovanni Battista</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1794</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-4</field>
+  <field name="sorted.dc:creator">audiffredi</field>
+  <field name="sorted.dc:date">1794</field>
+</doc>
diff --git a/test/data/integration/record_0028.doc b/test/data/integration/record_0028.doc
new file mode 100644
index 0000000..1c2917c
--- /dev/null
+++ b/test/data/integration/record_0028.doc
@@ -0,0 +1,29 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0028</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ger</field>
+  <field name="sorted.dc:title">die ink</field>
+  <field name="untokenized.dc:date">1972</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Die Inkunabeln der Bibliotheca Bipontina</field>
+  <field name="__all__">1972</field>
+  <field name="__all__">Reinwald, Ignaz</field>
+  <field name="__all__">47 p</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">Eerst verschenen in: Die Pfälzische Landesbibliothek 1921-1971. - 1971</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803431570</field>
+  <field name="dc:creator">Reinwald, Ignaz</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Die Inkunabeln der Bibliotheca Bipontina</field>
+  <field name="ppn">803431570</field>
+  <field name="untokenized.dc:creator">Reinwald, Ignaz</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1972</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="untokenized.lh:holder">urn:iln:302</field>
+  <field name="dc:format">in-8</field>
+  <field name="dc:format">47 p</field>
+  <field name="sorted.dc:creator">reinwald</field>
+  <field name="sorted.dc:date">1972</field>
+</doc>
diff --git a/test/data/integration/record_0029.doc b/test/data/integration/record_0029.doc
new file mode 100644
index 0000000..ac7e684
--- /dev/null
+++ b/test/data/integration/record_0029.doc
@@ -0,0 +1,27 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0029</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:lat</field>
+  <field name="sorted.dc:title">annaliu</field>
+  <field name="untokenized.dc:date">1789</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Annalium typographicorum M. Maittaire supplementum</field>
+  <field name="__all__">1789</field>
+  <field name="__all__">Denis, Michael</field>
+  <field name="__all__">2 dl</field>
+  <field name="__all__">in-4</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803432682</field>
+  <field name="dc:creator">Denis, Michael</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Annalium typographicorum M. Maittaire supplementum</field>
+  <field name="ppn">803432682</field>
+  <field name="untokenized.dc:creator">Denis, Michael</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1789</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-4</field>
+  <field name="dc:format">2 dl</field>
+  <field name="sorted.dc:creator">denis</field>
+  <field name="sorted.dc:date">1789</field>
+</doc>
diff --git a/test/data/integration/record_0030.doc b/test/data/integration/record_0030.doc
new file mode 100644
index 0000000..583e5e7
--- /dev/null
+++ b/test/data/integration/record_0030.doc
@@ -0,0 +1,28 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0030</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ita</field>
+  <field name="sorted.dc:title">gli inc</field>
+  <field name="untokenized.dc:date">1906</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Gli incunabuli della Biblioteca comunale di Cento</field>
+  <field name="__all__">1906</field>
+  <field name="__all__">Sighinolfi, Lino</field>
+  <field name="__all__">viii, 58 p</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">con l'aggiunto di alcuni codice ed incunabuli posseduti dal comm. Antonio Maiocchi</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803534590</field>
+  <field name="dc:creator">Sighinolfi, Lino</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Gli incunabuli della Biblioteca comunale di Cento</field>
+  <field name="ppn">803534590</field>
+  <field name="untokenized.dc:creator">Sighinolfi, Lino</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1906</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-8</field>
+  <field name="dc:format">viii, 58 p</field>
+  <field name="sorted.dc:creator">sighinolfi</field>
+  <field name="sorted.dc:date">1906</field>
+</doc>
diff --git a/test/data/integration/record_0031.doc b/test/data/integration/record_0031.doc
new file mode 100644
index 0000000..52aa767
--- /dev/null
+++ b/test/data/integration/record_0031.doc
@@ -0,0 +1,29 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0031</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:fre</field>
+  <field name="sorted.dc:title">l'impri</field>
+  <field name="untokenized.dc:date">1868</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">L'imprimerie à Toulouse au XVe, XVIe et XVIIe siècles</field>
+  <field name="__all__">1868</field>
+  <field name="__all__">Desbarreaux-Bernard, Tibulle</field>
+  <field name="__all__">148, 17 p</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">Alleen aanwezig dl. 1: Catalogue raisonné des livres imprimés au XVe siècle</field>
+  <field name="__all__">1e uitg.: 1865</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">810017768</field>
+  <field name="dc:creator">Desbarreaux-Bernard, Tibulle</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">L'imprimerie à Toulouse au XVe, XVIe et XVIIe siècles</field>
+  <field name="ppn">810017768</field>
+  <field name="untokenized.dc:creator">Desbarreaux-Bernard, Tibulle</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1868</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-8</field>
+  <field name="dc:format">148, 17 p</field>
+  <field name="sorted.dc:creator">desbarreaux-bernard</field>
+  <field name="sorted.dc:date">1868</field>
+</doc>
diff --git a/test/data/integration/record_0032.doc b/test/data/integration/record_0032.doc
new file mode 100644
index 0000000..d797551
--- /dev/null
+++ b/test/data/integration/record_0032.doc
@@ -0,0 +1,28 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0032</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ger</field>
+  <field name="sorted.dc:title">rede üb</field>
+  <field name="untokenized.dc:date">1869</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Rede über die Gewissensfreiheit</field>
+  <field name="__all__">1869</field>
+  <field name="__all__">Castelar, Emilio</field>
+  <field name="__all__">28 p</field>
+  <field name="__all__">19 cm</field>
+  <field name="__all__">Gehalten am 5. Mai 1869 in der Sitzung der syanischen Cortes</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">810090449</field>
+  <field name="dc:creator">Castelar, Emilio</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Rede über die Gewissensfreiheit</field>
+  <field name="ppn">810090449</field>
+  <field name="untokenized.dc:creator">Castelar, Emilio</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1869</field>
+  <field name="untokenized.lh:holder">urn:iln:8</field>
+  <field name="dc:format">19 cm</field>
+  <field name="dc:format">28 p</field>
+  <field name="sorted.dc:creator">castelar</field>
+  <field name="sorted.dc:date">1869</field>
+</doc>
diff --git a/test/data/integration/record_0033.doc b/test/data/integration/record_0033.doc
new file mode 100644
index 0000000..46b6a4c
--- /dev/null
+++ b/test/data/integration/record_0033.doc
@@ -0,0 +1,26 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0033</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ger</field>
+  <field name="sorted.dc:title">verzeic</field>
+  <field name="untokenized.dc:date">1790</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Verzeichnisz alter Druckdenkmale der Bibliothek des uralten Benediktinerstifts zum H. Mang in Füeszen</field>
+  <field name="__all__">1790</field>
+  <field name="__all__">Helmschrott, Joseph Maria</field>
+  <field name="__all__">in-4</field>
+  <field name="__all__">2 st. in 1 dl</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803431384</field>
+  <field name="dc:creator">Helmschrott, Joseph Maria</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Verzeichnisz alter Druckdenkmale der Bibliothek des uralten Benediktinerstifts zum H. Mang in Füeszen</field>
+  <field name="ppn">803431384</field>
+  <field name="untokenized.dc:creator">Helmschrott, Joseph Maria</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1790</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-4</field>
+  <field name="sorted.dc:creator">helmschrott</field>
+  <field name="sorted.dc:date">1790</field>
+</doc>
diff --git a/test/data/integration/record_0034.doc b/test/data/integration/record_0034.doc
new file mode 100644
index 0000000..ad26835
--- /dev/null
+++ b/test/data/integration/record_0034.doc
@@ -0,0 +1,29 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0034</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ger</field>
+  <field name="sorted.dc:title">die leh</field>
+  <field name="untokenized.dc:date">1815</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Die Lehre von der Verjährung durch fortgesetzten Besitz</field>
+  <field name="__all__">1815</field>
+  <field name="__all__">Unterholzner, Karl August Dominikus</field>
+  <field name="__all__">472 p</field>
+  <field name="__all__">21 cm</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">810361515</field>
+  <field name="dc:creator">Unterholzner, Karl August Dominikus</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Die Lehre von der Verjährung durch fortgesetzten Besitz</field>
+  <field name="ppn">810361515</field>
+  <field name="untokenized.dc:creator">Unterholzner, Karl August Dominikus</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1815</field>
+  <field name="untokenized.lh:holder">urn:iln:4</field>
+  <field name="untokenized.lh:holder">urn:iln:5</field>
+  <field name="untokenized.lh:holder">urn:iln:8</field>
+  <field name="dc:format">21 cm</field>
+  <field name="dc:format">472 p</field>
+  <field name="sorted.dc:creator">unterholzner</field>
+  <field name="sorted.dc:date">1815</field>
+</doc>
diff --git a/test/data/integration/record_0035.doc b/test/data/integration/record_0035.doc
new file mode 100644
index 0000000..fc9c3da
--- /dev/null
+++ b/test/data/integration/record_0035.doc
@@ -0,0 +1,25 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0035</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">nationa</field>
+  <field name="untokenized.dc:date">1976</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">National Symposium on Cooperative Education and Family Welfare and Rural Development, Mogadishu, Somalia</field>
+  <field name="__all__">1976</field>
+  <field name="__all__">iii leaves, 182 p</field>
+  <field name="__all__">30 cm</field>
+  <field name="__all__">Mogadishu, Somalia, 25 Oct.-4 Nov. 1976</field>
+  <field name="__all__">Cover title</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">80183063x</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">National Symposium on Cooperative Education and Family Welfare and Rural Development, Mogadishu, Somalia</field>
+  <field name="ppn">80183063x</field>
+  <field name="dc:format">30 cm</field>
+  <field name="dc:format">iii leaves, 182 p</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1976</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="sorted.dc:date">1976</field>
+</doc>
diff --git a/test/data/integration/record_0036.doc b/test/data/integration/record_0036.doc
new file mode 100644
index 0000000..c2be7c2
--- /dev/null
+++ b/test/data/integration/record_0036.doc
@@ -0,0 +1,27 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0036</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ita</field>
+  <field name="sorted.dc:title">elenco</field>
+  <field name="untokenized.dc:date">1954</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Elenco descrittivo degli incunaboli della Biblioteca universitaria di Cagliari e di altre biblioteche sarde</field>
+  <field name="__all__">1954</field>
+  <field name="__all__">Coni, Franco</field>
+  <field name="__all__">60 p</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803533306</field>
+  <field name="dc:creator">Coni, Franco</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Elenco descrittivo degli incunaboli della Biblioteca universitaria di Cagliari e di altre biblioteche sarde</field>
+  <field name="ppn">803533306</field>
+  <field name="untokenized.dc:creator">Coni, Franco</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1954</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-8</field>
+  <field name="dc:format">60 p</field>
+  <field name="sorted.dc:creator">coni</field>
+  <field name="sorted.dc:date">1954</field>
+</doc>
diff --git a/test/data/integration/record_0037.doc b/test/data/integration/record_0037.doc
new file mode 100644
index 0000000..1cb0ff9
--- /dev/null
+++ b/test/data/integration/record_0037.doc
@@ -0,0 +1,28 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0037</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">the cyc</field>
+  <field name="untokenized.dc:date">1894</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">The Cyclopaedia of names</field>
+  <field name="__all__">1894</field>
+  <field name="__all__">Smith, Benjamin E.</field>
+  <field name="__all__">vii, 1085 p</field>
+  <field name="__all__">33 cm</field>
+  <field name="__all__">a pronouncing and etymological dictionary of names in geography, biography, mythology, history, ethnology, art, archaeology, fiction, etc., etc., etc.</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">810262517</field>
+  <field name="dc:creator">Smith, Benjamin E.</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">The Cyclopaedia of names</field>
+  <field name="ppn">810262517</field>
+  <field name="untokenized.dc:creator">Smith, Benjamin E.</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1894</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">33 cm</field>
+  <field name="dc:format">vii, 1085 p</field>
+  <field name="sorted.dc:creator">smith</field>
+  <field name="sorted.dc:date">1894</field>
+</doc>
diff --git a/test/data/integration/record_0038.doc b/test/data/integration/record_0038.doc
new file mode 100644
index 0000000..a04461b
--- /dev/null
+++ b/test/data/integration/record_0038.doc
@@ -0,0 +1,29 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0038</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ger</field>
+  <field name="sorted.dc:title">die sti</field>
+  <field name="untokenized.dc:date">1940</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Die Stiftsbibliotheken zu Merseburg, Naumburg und Zeitz</field>
+  <field name="__all__">1940</field>
+  <field name="__all__">Juntke, Fritz</field>
+  <field name="__all__">1 dl</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">die Verzeichnisse ihres Bestandes ...</field>
+  <field name="__all__">Niet verder verschenen</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">803440111</field>
+  <field name="dc:creator">Juntke, Fritz</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Die Stiftsbibliotheken zu Merseburg, Naumburg und Zeitz</field>
+  <field name="ppn">803440111</field>
+  <field name="untokenized.dc:creator">Juntke, Fritz</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1940</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-8</field>
+  <field name="dc:format">1 dl</field>
+  <field name="sorted.dc:creator">juntke</field>
+  <field name="sorted.dc:date">1940</field>
+</doc>
diff --git a/test/data/integration/record_0039.doc b/test/data/integration/record_0039.doc
new file mode 100644
index 0000000..a77757d
--- /dev/null
+++ b/test/data/integration/record_0039.doc
@@ -0,0 +1,26 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0039</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">catalog</field>
+  <field name="untokenized.dc:date">1961</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Catalogue presenting our holdings in the sixteenth imprints with the principal rare acquisitions in 1961</field>
+  <field name="__all__">1961</field>
+  <field name="__all__">35 p</field>
+  <field name="__all__">in-8</field>
+  <field name="__all__">exhibited in commemoration of the 31th anniversary of Tenri Central Library from Oct. 18, 1961 to Oct. 31, 1961</field>
+  <field name="__all__">Tentoonstellingscatalogus</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">81003283x</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Catalogue presenting our holdings in the sixteenth imprints with the principal rare acquisitions in 1961</field>
+  <field name="ppn">81003283x</field>
+  <field name="dc:format">in-8</field>
+  <field name="dc:format">35 p</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1961</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="untokenized.lh:holder">urn:iln:11</field>
+  <field name="sorted.dc:date">1961</field>
+</doc>
diff --git a/test/data/integration/record_0040.doc b/test/data/integration/record_0040.doc
new file mode 100644
index 0000000..75553ee
--- /dev/null
+++ b/test/data/integration/record_0040.doc
@@ -0,0 +1,29 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0040</field>
+  <field name="prov.source">http://localhost:43343/oai</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:ger</field>
+  <field name="sorted.dc:title">erschrö</field>
+  <field name="untokenized.dc:date">1971</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Erschröckliche und warhafftige Wunderzeichen, 1543-1586</field>
+  <field name="__all__">1971</field>
+  <field name="__all__">Weber, Bruno</field>
+  <field name="__all__">2 dl</field>
+  <field name="__all__">in-8 en fol</field>
+  <field name="__all__">Facsimiledruck von Einblattdrucken aus der Sammlung Wikiana in der Zentralbibliothek Zürich</field>
+  <field name="__all__">Titel van de Kommentarband: Wunderzeichen und Winkeldrucker 1543-1586</field>
+  <field name="__all__">http://localhost:43343/oai</field>
+  <field name="__all__">810032996</field>
+  <field name="dc:creator">Weber, Bruno</field>
+  <field name="untokenized.prov.source">http://localhost:43343/oai</field>
+  <field name="dc:title">Erschröckliche und warhafftige Wunderzeichen, 1543-1586</field>
+  <field name="ppn">810032996</field>
+  <field name="untokenized.dc:creator">Weber, Bruno</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1971</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="dc:format">in-8 en fol</field>
+  <field name="dc:format">2 dl</field>
+  <field name="sorted.dc:creator">weber</field>
+  <field name="sorted.dc:date">1971</field>
+</doc>
diff --git a/test/data/integration/record_0041.doc b/test/data/integration/record_0041.doc
new file mode 100644
index 0000000..af34ed8
--- /dev/null
+++ b/test/data/integration/record_0041.doc
@@ -0,0 +1,19 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0041</field>
+  <field name="prov.source">http://webggc.oclc.nl</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">harry s</field>
+  <field name="untokenized.dc:date">19XX</field>
+  <field name="__all__">Harry Sacksioni</field>
+  <field name="__all__">19XX</field>
+  <field name="__all__">gitaar</field>
+  <field name="__all__">http://webggc.oclc.nl</field>
+  <field name="__all__">322337593</field>
+  <field name="untokenized.prov.source">http://webggc.oclc.nl</field>
+  <field name="dc:title">Harry Sacksioni</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/resource/Sheet_music</field>
+  <field name="ppn">322337593</field>
+  <field name="untokenized.unparsable.dc:date">19XX</field>
+  <field name="dc:date">19XX</field>
+  <field name="untokenized.lh:holder">urn:iln:283</field>
+</doc>
diff --git a/test/data/integration/record_0042.doc b/test/data/integration/record_0042.doc
new file mode 100644
index 0000000..b7586e0
--- /dev/null
+++ b/test/data/integration/record_0042.doc
@@ -0,0 +1,24 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0042</field>
+  <field name="prov.source">http://webggc.oclc.nl</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">harry p</field>
+  <field name="untokenized.dc:date">2004</field>
+  <field name="__all__">VIDEO</field>
+  <field name="__all__">Harry Potter jaar 1-4</field>
+  <field name="__all__">2004</field>
+  <field name="__all__">[starring] Daniel Radcliffe ... [et al.]</field>
+  <field name="__all__">4-disc dvd box</field>
+  <field name="__all__">http://webggc.oclc.nl</field>
+  <field name="__all__">323615066</field>
+  <field name="dc:creator">[starring] Daniel Radcliffe ... [et al.]</field>
+  <field name="untokenized.prov.source">http://webggc.oclc.nl</field>
+  <field name="dc:title">Harry Potter jaar 1-4</field>
+  <field name="ppn">323615066</field>
+  <field name="untokenized.dc:creator">[starring] Daniel Radcliffe ... [et al.]</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Film</field>
+  <field name="dc:date">2004</field>
+  <field name="untokenized.lh:holder">urn:iln:27</field>
+  <field name="sorted.dc:creator">[starring] daniel radcliffe ... [et al.]</field>
+  <field name="sorted.dc:date">2004</field>
+</doc>
diff --git a/test/data/integration/record_0043.doc b/test/data/integration/record_0043.doc
new file mode 100644
index 0000000..f9c7403
--- /dev/null
+++ b/test/data/integration/record_0043.doc
@@ -0,0 +1,26 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0043</field>
+  <field name="prov.source">http://webggc.oclc.nl</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">das tag</field>
+  <field name="untokenized.dc:date">2004</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">Das Tagebuch 1880-1937</field>
+  <field name="__all__">2004</field>
+  <field name="__all__">Harry Graf Kessler</field>
+  <field name="__all__">http://webggc.oclc.nl</field>
+  <field name="__all__">265768918</field>
+  <field name="__all__">0123456789</field>
+  <field name="dc:creator">Harry Graf Kessler</field>
+  <field name="untokenized.prov.source">http://webggc.oclc.nl</field>
+  <field name="dc:title">Das Tagebuch 1880-1937</field>
+  <field name="ppn">265768918</field>
+  <field name="untokenized.dc:creator">Harry Graf Kessler</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">2004</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="untokenized.lh:holder">urn:iln:12</field>
+  <field name="isbn">0123456789</field>
+  <field name="sorted.dc:creator">harry graf kessler</field>
+  <field name="sorted.dc:date">2004</field>
+</doc>
diff --git a/test/data/integration/record_0044.doc b/test/data/integration/record_0044.doc
new file mode 100644
index 0000000..1e989cb
--- /dev/null
+++ b/test/data/integration/record_0044.doc
@@ -0,0 +1,24 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0044</field>
+  <field name="prov.source">http://webggc.oclc.nl</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">d'un mo</field>
+  <field name="untokenized.dc:date">1985</field>
+  <field name="__all__">TEXT</field>
+  <field name="__all__">D'un monde à l'autre</field>
+  <field name="__all__">1985</field>
+  <field name="__all__">Claude Foucart</field>
+  <field name="__all__">la correspondance André Gide-Harry Kessler (1903-1933)</field>
+  <field name="__all__">http://webggc.oclc.nl</field>
+  <field name="__all__">86577210x</field>
+  <field name="dc:creator">Claude Foucart</field>
+  <field name="untokenized.prov.source">http://webggc.oclc.nl</field>
+  <field name="dc:title">D'un monde à l'autre</field>
+  <field name="ppn">86577210x</field>
+  <field name="untokenized.dc:creator">Claude Foucart</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="dc:date">1985</field>
+  <field name="untokenized.lh:holder">urn:iln:2</field>
+  <field name="sorted.dc:creator">claude foucart</field>
+  <field name="sorted.dc:date">1985</field>
+</doc>
diff --git a/test/data/integration/record_0045.doc b/test/data/integration/record_0045.doc
new file mode 100644
index 0000000..37081a9
--- /dev/null
+++ b/test/data/integration/record_0045.doc
@@ -0,0 +1,5 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0045</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Company</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+</doc>
diff --git a/test/data/integration/record_0046.doc b/test/data/integration/record_0046.doc
new file mode 100644
index 0000000..97bce53
--- /dev/null
+++ b/test/data/integration/record_0046.doc
@@ -0,0 +1,5 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0046</field>
+  <field name="untokenized.rdf:type">http://www.w3.org/2004/02/skos/core#ConceptScheme</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+</doc>
diff --git a/test/data/integration/record_0047.doc b/test/data/integration/record_0047.doc
new file mode 100644
index 0000000..5d6195a
--- /dev/null
+++ b/test/data/integration/record_0047.doc
@@ -0,0 +1,20 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0047</field>
+  <field name="prov.source">http://data.bibliotheek.nl/consumentenbond</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">samsung</field>
+  <field name="untokenized.dc:date">2010</field>
+  <field name="__all__">Samsung WB2000</field>
+  <field name="__all__">2010</field>
+  <field name="__all__">Public</field>
+  <field name="__all__">Samsung WB2000 Richtprijs: Testresultaat: 56Predikaat: null-null Specificaties: merk: Samsung type: WB2000 testoordeel: 5,6 test_maand: 10 test_jaar: 2010 sub_type: Geavanceerd beschrijving: De Samsung WB2000 heeft in 1 van onze tests heel weinig last van kleurruis. Dat zijn verkeerd gekleurde pixels die bijvoorbeeld op kunnen treden als je bij weinig licht fotografeert. Het is 1 van de dingen waar we op letten in onze uitgebreide vergelijkende testen. De WB2000 is een geavanceerde compactcamera met Full HD-video en veel instellingen voor gevorderden. Zo kun je bijvoorbeeld de gevoeligheid instellen op ISO1600 of 3200, zoals wij deden in de genoemde test. In onze beeldstabilisatietest doet de WB2000 het niet zo goed. We simuleren dan de trillingen van een mensenhand. De camera moet de trillingen compenseren, zodat de foto toch scherp wordt. Sommige testfoto&amp;apos;s van de WB2000 zijn duidelijk vaag, andere wat minder. Maar in het algemeen zien we op deze foto&amp;apos;s juist weer teveel beeldruis. De WB2000 laat hier echt een steek vallen. Zelfs de meeste kleine en eenvoudige camera&amp;apos;s hebben in onze test betere beeldstabilisatie. Verkrijgbaarheid: Slecht Fotokwaliteit: 5,9 Gebruiksgemak: 5,5 Scherm: 5,8 Zoeker: N.v.t. Gebruiksduur: Onbekend Flitser: 6,2 Kwaliteit video: 7,0 Effectief aantal megapixels: 10 (3648 x 2736 px) Sensorgrootte: &amp;#177;7 mm Optisch zoombereik: 24 - 120 mm = 5x Kleinste diafragmawaarde: 2.4 - 5.8 Bestandsformaten: JPEG en RAW Geheugenkaart: SD(HC) Grootte intern geheugen: 22 MB Beeldstabilisatiesysteem: Optische beeldstabilisatie Afmetingen camera (bxhxd): 10.5 x 6 x 3 cm Gewicht: 178 gram Aanraakscherm: Nee Waterdicht: Nee Afmetingen scherm: 61 x 46 mm = 3&amp;apos;&amp;apos; Scherm beweegbaar: Nee Type zoeker: LCD scherm Oogcorrectie op zoeker: N.v.t. Kleinste scherpstelafstand (groothoek/tele/macro): 50 / 80 / 5 Continu scherpstellen: Nee Diafragmavoorkeuze: Ja Sluitertijdvoorkeuze: Ja Bereik sluitertijden in sec: 1/2000 - 16 (max. 1 sec in P-stand) ISO bereik: 80 - 3200 Aantal scene-instellingen: 12 Belichtingscorrectie (van/tot): -2 / +2 Aantal instellingen witbalans: 5 Aantal en type batterij: 1 speciale Li-Ion accu Oplader meegeleverd: Ja Batterij opladen: alleen in camera Type flitser: Vast ingebouwd Sterkte van de flitser regelbaar: Ja Zoom reflector: Nee Anti-rode ogen flitser: Ja Flitsschoen: Nee Maximale videoresolutie: 1920 x 1080 MP4 Zoomen tijdens filmen: Optisch Commentaar bij foto: Ja Luidspreker in camera: Ja Microfoonaansluiting: Nee Als memorecorder te gebruiken: Ja Fabrikant / importeur: Samsung Telefoon fabrikant: 0900-7267864 Website fabrikant: &amp;lt;a href=&amp;quot;http://http://www.samsung.nl&amp;quot;&amp;gt;http://www.samsung.nl&amp;lt;/a&amp;gt; Panoramahulp: Ja GPS: Nee Bracketing: Ja</field>
+  <field name="__all__">2010-10-01</field>
+  <field name="__all__">http://data.bibliotheek.nl/consumentenbond</field>
+  <field name="untokenized.prov.source">http://data.bibliotheek.nl/consumentenbond</field>
+  <field name="dc:title">Samsung WB2000</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/resource/Article_(publishing)</field>
+  <field name="untokenized.rdf:type">http://purl.org/ontology/bibo/Report</field>
+  <field name="dc:date">2010</field>
+  <field name="sorted.dc:date">2010</field>
+  <field name="dc:description">Samsung WB2000 Richtprijs: Testresultaat: 56Predikaat: null-null Specificaties: merk: Samsung type: WB2000 testoordeel: 5,6 test_maand: 10 test_jaar: 2010 sub_type: Geavanceerd beschrijving: De Samsung WB2000 heeft in 1 van onze tests heel weinig last van kleurruis. Dat zijn verkeerd gekleurde pixels die bijvoorbeeld op kunnen treden als je bij weinig licht fotografeert. Het is 1 van de dingen waar we op letten in onze uitgebreide vergelijkende testen. De WB2000 is een geavanceerde compactcamera met Full HD-video en veel instellingen voor gevorderden. Zo kun je bijvoorbeeld de gevoeligheid instellen op ISO1600 of 3200, zoals wij deden in de genoemde test. In onze beeldstabilisatietest doet de WB2000 het niet zo goed. We simuleren dan de trillingen van een mensenhand. De camera moet de trillingen compenseren, zodat de foto toch scherp wordt. Sommige testfoto&amp;apos;s van de WB2000 zijn duidelijk vaag, andere wat minder. Maar in het algemeen zien we op deze foto&amp;apos;s juist weer teveel beeldruis. De WB2000 laat hier echt een steek vallen. Zelfs de meeste kleine en eenvoudige camera&amp;apos;s hebben in onze test betere beeldstabilisatie. Verkrijgbaarheid: Slecht Fotokwaliteit: 5,9 Gebruiksgemak: 5,5 Scherm: 5,8 Zoeker: N.v.t. Gebruiksduur: Onbekend Flitser: 6,2 Kwaliteit video: 7,0 Effectief aantal megapixels: 10 (3648 x 2736 px) Sensorgrootte: &amp;#177;7 mm Optisch zoombereik: 24 - 120 mm = 5x Kleinste diafragmawaarde: 2.4 - 5.8 Bestandsformaten: JPEG en RAW Geheugenkaart: SD(HC) Grootte intern geheugen: 22 MB Beeldstabilisatiesysteem: Optische beeldstabilisatie Afmetingen camera (bxhxd): 10.5 x 6 x 3 cm Gewicht: 178 gram Aanraakscherm: Nee Waterdicht: Nee Afmetingen scherm: 61 x 46 mm = 3&amp;apos;&amp;apos; Scherm beweegbaar: Nee Type zoeker: LCD scherm Oogcorrectie op zoeker: N.v.t. Kleinste scherpstelafstand (groothoek/tele/macro): 50 / 80 / 5 Continu scherpstellen: Nee Diafragmavoorkeuze: Ja Sluitertijdvoorkeuze: Ja Bereik sluitertijden in sec: 1/2000 - 16 (max. 1 sec in P-stand) ISO bereik: 80 - 3200 Aantal scene-instellingen: 12 Belichtingscorrectie (van/tot): -2 / +2 Aantal instellingen witbalans: 5 Aantal en type batterij: 1 speciale Li-Ion accu Oplader meegeleverd: Ja Batterij opladen: alleen in camera Type flitser: Vast ingebouwd Sterkte van de flitser regelbaar: Ja Zoom reflector: Nee Anti-rode ogen flitser: Ja Flitsschoen: Nee Maximale videoresolutie: 1920 x 1080 MP4 Zoomen tijdens filmen: Optisch Commentaar bij foto: Ja Luidspreker in camera: Ja Microfoonaansluiting: Nee Als memorecorder te gebruiken: Ja Fabrikant / importeur: Samsung Telefoon fabrikant: 0900-7267864 Website fabrikant: &amp;lt;a href=&amp;quot;http://http://www.samsung.nl&amp;quot;&amp;gt;http://www.samsung.nl&amp;lt;/a&amp;gt; Panoramahulp: Ja GPS: Nee Bracketing: Ja</field>
+</doc>
diff --git a/test/data/integration/record_0048.doc b/test/data/integration/record_0048.doc
new file mode 100644
index 0000000..ab9dcb0
--- /dev/null
+++ b/test/data/integration/record_0048.doc
@@ -0,0 +1,7 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0048</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Agent</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="__all__">United States</field>
+  <field name="__all__">United States</field>
+</doc>
diff --git a/test/data/integration/record_0049.doc b/test/data/integration/record_0049.doc
new file mode 100644
index 0000000..d8566f6
--- /dev/null
+++ b/test/data/integration/record_0049.doc
@@ -0,0 +1,6 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0049</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/resource/Organisation</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="__all__">Project Gutenberg</field>
+</doc>
diff --git a/test/data/integration/record_0050.doc b/test/data/integration/record_0050.doc
new file mode 100644
index 0000000..c29da70
--- /dev/null
+++ b/test/data/integration/record_0050.doc
@@ -0,0 +1,5 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0050</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="__all__">Engels</field>
+</doc>
diff --git a/test/data/integration/record_0051.doc b/test/data/integration/record_0051.doc
new file mode 100644
index 0000000..1c33728
--- /dev/null
+++ b/test/data/integration/record_0051.doc
@@ -0,0 +1,18 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0051</field>
+  <field name="prov.source">http://data.bibliotheek.nl/gutenberg</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:eng</field>
+  <field name="sorted.dc:title">united</field>
+  <field name="__all__">etext1</field>
+  <field name="__all__">United States Declaration of Independence</field>
+  <field name="__all__">This is the original PG edition.
+See also our revised edition: #16780</field>
+  <field name="__all__">http://data.bibliotheek.nl/gutenberg</field>
+  <field name="dc:identifier">etext1</field>
+  <field name="untokenized.prov.source">http://data.bibliotheek.nl/gutenberg</field>
+  <field name="dc:title">United States Declaration of Independence</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/resource/E-book</field>
+  <field name="dc:description">This is the original PG edition.
+See also our revised edition: #16780</field>
+</doc>
diff --git a/test/data/integration/record_0052.doc b/test/data/integration/record_0052.doc
new file mode 100644
index 0000000..6fda11c
--- /dev/null
+++ b/test/data/integration/record_0052.doc
@@ -0,0 +1,5 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0052</field>
+  <field name="untokenized.rdf:type">http://www.w3.org/2004/02/skos/core#ConceptScheme</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+</doc>
diff --git a/test/data/integration/record_0053.doc b/test/data/integration/record_0053.doc
new file mode 100644
index 0000000..10f665f
--- /dev/null
+++ b/test/data/integration/record_0053.doc
@@ -0,0 +1,5 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0053</field>
+  <field name="untokenized.rdf:type">http://www.w3.org/2004/02/skos/core#ConceptScheme</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+</doc>
diff --git a/test/data/integration/record_0054.doc b/test/data/integration/record_0054.doc
new file mode 100644
index 0000000..8f9ac20
--- /dev/null
+++ b/test/data/integration/record_0054.doc
@@ -0,0 +1,6 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0054</field>
+  <field name="untokenized.rdf:type">http://www.w3.org/2004/02/skos/core#Concept</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="__all__">Geschiedenis en politiek</field>
+</doc>
diff --git a/test/data/integration/record_0055.doc b/test/data/integration/record_0055.doc
new file mode 100644
index 0000000..d271584
--- /dev/null
+++ b/test/data/integration/record_0055.doc
@@ -0,0 +1,5 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0055</field>
+  <field name="untokenized.rdf:type">http://www.w3.org/2004/02/skos/core#ConceptScheme</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+</doc>
diff --git a/test/data/integration/record_0056.doc b/test/data/integration/record_0056.doc
new file mode 100644
index 0000000..cb94279
--- /dev/null
+++ b/test/data/integration/record_0056.doc
@@ -0,0 +1,6 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0056</field>
+  <field name="untokenized.rdf:type">http://www.w3.org/2004/02/skos/core#Concept</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="__all__">Azië en Australië</field>
+</doc>
diff --git a/test/data/integration/record_0057.doc b/test/data/integration/record_0057.doc
new file mode 100644
index 0000000..eba1132
--- /dev/null
+++ b/test/data/integration/record_0057.doc
@@ -0,0 +1,5 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0057</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Company</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+</doc>
diff --git a/test/data/integration/record_0058.doc b/test/data/integration/record_0058.doc
new file mode 100644
index 0000000..043256e
--- /dev/null
+++ b/test/data/integration/record_0058.doc
@@ -0,0 +1,7 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0058</field>
+  <field name="untokenized.rdf:type">http://www.w3.org/2004/02/skos/core#Concept</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="__all__">Rubrieken volgens de gedrukte versie Winkler Prins</field>
+  <field name="__all__">gesin - geschiedenis India voor 20ste eeuw</field>
+</doc>
diff --git a/test/data/integration/record_0059.doc b/test/data/integration/record_0059.doc
new file mode 100644
index 0000000..e1a099b
--- /dev/null
+++ b/test/data/integration/record_0059.doc
@@ -0,0 +1,6 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0059</field>
+  <field name="untokenized.rdf:type">http://purl.org/dc/terms/RightsStatement</field>
+  <field name="untokenized.rdf:type">http://purl.org/dc/terms/RightsStatement</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+</doc>
diff --git a/test/data/integration/record_0060.doc b/test/data/integration/record_0060.doc
new file mode 100644
index 0000000..c88e94c
--- /dev/null
+++ b/test/data/integration/record_0060.doc
@@ -0,0 +1,19 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0060</field>
+  <field name="prov.source">http://data.bibliotheek.nl/winklerprins</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">saka’s</field>
+  <field name="__all__">Saka’s</field>
+  <field name="__all__">Saka’s</field>
+  <field name="__all__">-189341</field>
+  <field name="__all__">http://www.winklerprins.com/online/?id=-100003227</field>
+  <field name="__all__">, samenvattende Indische naam voor </field>
+  <field name="__all__">-189341</field>
+  <field name="__all__">-100003227</field>
+  <field name="__all__">http://data.bibliotheek.nl/winklerprins</field>
+  <field name="dc:identifier">-189341</field>
+  <field name="untokenized.prov.source">http://data.bibliotheek.nl/winklerprins</field>
+  <field name="dc:title">Saka’s</field>
+  <field name="untokenized.rdf:type">http://www.w3.org/2004/02/skos/core#Concept</field>
+  <field name="dc:description">, samenvattende Indische naam voor </field>
+</doc>
diff --git a/test/data/integration/record_0061.doc b/test/data/integration/record_0061.doc
new file mode 100644
index 0000000..60d6f36
--- /dev/null
+++ b/test/data/integration/record_0061.doc
@@ -0,0 +1,56 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0061</field>
+  <field name="dc:source">seecr</field>
+  <field name="dc:source">seecr</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">12 piec</field>
+  <field name="untokenized.dc:date">2012</field>
+  <field name="__all__">G Km TANS</field>
+  <field name="__all__">7423</field>
+  <field name="__all__">Daisy-ROM</field>
+  <field name="__all__">Bladmuziek</field>
+  <field name="__all__">12 PIECES FACILES BD. 1</field>
+  <field name="__all__">G Km TANS</field>
+  <field name="__all__">2012</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">EAX0118</field>
+  <field name="__all__">40 YORK</field>
+  <field name="__all__">7024</field>
+  <field name="__all__">Boeken</field>
+  <field name="__all__">CD</field>
+  <field name="__all__">Kastnr. 8729. - Bevar werken van : Th. Deloney ; M. praetorius ; P. Attaignant...[et al.]</field>
+  <field name="__all__">1588 - Music from the time of the spanish Armada / The York Waits</field>
+  <field name="__all__">York Waits, The</field>
+  <field name="__all__">Saydisc CD SOL 373</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">seecr</field>
+  <field name="dc:creator">G Km TANS</field>
+  <field name="dc:creator">York Waits, The</field>
+  <field name="dc:type">http://purl.org/dc/dcmitype/Sound</field>
+  <field name="dc:type">http://purl.org/dc/dcmitype/Sound</field>
+  <field name="untokenized.prov.source">seecr</field>
+  <field name="untokenized.prov.source">seecr</field>
+  <field name="dc:title">12 PIECES FACILES BD. 1</field>
+  <field name="dc:title">1588 - Music from the time of the spanish Armada / The York Waits</field>
+  <field name="untokenized.dc:creator">G Km TANS</field>
+  <field name="untokenized.dc:creator">York Waits, The</field>
+  <field name="prov.source">seecr</field>
+  <field name="prov.source">seecr</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Song</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Song</field>
+  <field name="dc:date">2012</field>
+  <field name="dc:identifier">G Km TANS</field>
+  <field name="dc:identifier">7423</field>
+  <field name="dc:identifier">EAX0118</field>
+  <field name="dc:identifier">40 YORK</field>
+  <field name="dc:identifier">7024</field>
+  <field name="dc:publisher">Saydisc CD SOL 373</field>
+  <field name="dc:format">Daisy-ROM</field>
+  <field name="dc:format">Bladmuziek</field>
+  <field name="dc:format">Boeken</field>
+  <field name="dc:format">CD</field>
+  <field name="sorted.dc:creator">g km tans</field>
+  <field name="sorted.dc:date">2012</field>
+  <field name="dc:description">Kastnr. 8729. - Bevar werken van : Th. Deloney ; M. praetorius ; P. Attaignant...[et al.]</field>
+</doc>
diff --git a/test/data/integration/record_0062.doc b/test/data/integration/record_0062.doc
new file mode 100644
index 0000000..0ee6957
--- /dev/null
+++ b/test/data/integration/record_0062.doc
@@ -0,0 +1,13 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0062</field>
+  <field name="dc:source">seecr</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">waar is</field>
+  <field name="__all__">Waar is Morée vandaag?</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">seecr</field>
+  <field name="prov.source">seecr</field>
+  <field name="untokenized.prov.source">seecr</field>
+  <field name="dc:title">Waar is Morée vandaag?</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/resource/Manuscript</field>
+</doc>
diff --git a/test/data/integration/record_0063.doc b/test/data/integration/record_0063.doc
new file mode 100644
index 0000000..a8a4da6
--- /dev/null
+++ b/test/data/integration/record_0063.doc
@@ -0,0 +1,13 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0063</field>
+  <field name="dc:source">seecr</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">sacrém</field>
+  <field name="__all__">Sacrément</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">seecr</field>
+  <field name="prov.source">seecr</field>
+  <field name="untokenized.prov.source">seecr</field>
+  <field name="dc:title">Sacrément</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/resource/Manuscript</field>
+</doc>
diff --git a/test/data/integration/record_0064.doc b/test/data/integration/record_0064.doc
new file mode 100644
index 0000000..1484a0b
--- /dev/null
+++ b/test/data/integration/record_0064.doc
@@ -0,0 +1,12 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0064</field>
+  <field name="dc:source">seecr</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="isbn">9870136042594</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">9870136042594</field>
+  <field name="prov.source">seecr</field>
+  <field name="untokenized.prov.source">seecr</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+</doc>
diff --git a/test/data/integration/record_0065.doc b/test/data/integration/record_0065.doc
new file mode 100644
index 0000000..024e834
--- /dev/null
+++ b/test/data/integration/record_0065.doc
@@ -0,0 +1,12 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0065</field>
+  <field name="dc:source">seecr</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">12345678x</field>
+  <field name="prov.source">seecr</field>
+  <field name="untokenized.prov.source">seecr</field>
+  <field name="issn">12345678x</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Magazine</field>
+</doc>
diff --git a/test/data/integration/record_0066.doc b/test/data/integration/record_0066.doc
new file mode 100644
index 0000000..84a452a
--- /dev/null
+++ b/test/data/integration/record_0066.doc
@@ -0,0 +1,12 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0066</field>
+  <field name="dc:source">seecr</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">123</field>
+  <field name="prov.source">seecr</field>
+  <field name="untokenized.prov.source">seecr</field>
+  <field name="ppn">123</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+</doc>
diff --git a/test/data/integration/record_0067.doc b/test/data/integration/record_0067.doc
new file mode 100644
index 0000000..2545ba4
--- /dev/null
+++ b/test/data/integration/record_0067.doc
@@ -0,0 +1,24 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0067</field>
+  <field name="dc:source">seecr</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="sorted.dc:title">1588 -</field>
+  <field name="__all__">CD</field>
+  <field name="__all__">Kastnr. 8729. - Bevar werken van : Th. Deloney ; M. praetorius ; P. Attaignant...[et al.]</field>
+  <field name="__all__">1588 - Music from the time of the spanish Armada / The York Waits</field>
+  <field name="__all__">York Waits, The</field>
+  <field name="__all__">Saydisc CD SOL 373</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">seecr</field>
+  <field name="dc:creator">York Waits, The</field>
+  <field name="dc:type">http://purl.org/dc/dcmitype/Sound</field>
+  <field name="untokenized.prov.source">seecr</field>
+  <field name="dc:title">1588 - Music from the time of the spanish Armada / The York Waits</field>
+  <field name="untokenized.dc:creator">York Waits, The</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Album</field>
+  <field name="dc:publisher">Saydisc CD SOL 373</field>
+  <field name="dc:format">CD</field>
+  <field name="sorted.dc:creator">york waits</field>
+  <field name="prov.source">seecr</field>
+  <field name="dc:description">Kastnr. 8729. - Bevar werken van : Th. Deloney ; M. praetorius ; P. Attaignant...[et al.]</field>
+</doc>
diff --git a/test/data/integration/record_0068.doc b/test/data/integration/record_0068.doc
new file mode 100644
index 0000000..3d31436
--- /dev/null
+++ b/test/data/integration/record_0068.doc
@@ -0,0 +1,18 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0068</field>
+  <field name="dc:source">seecr</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="__all__">EAX0118</field>
+  <field name="__all__">40 YORK</field>
+  <field name="__all__">7024</field>
+  <field name="__all__">Boeken</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">seecr</field>
+  <field name="prov.source">seecr</field>
+  <field name="untokenized.prov.source">seecr</field>
+  <field name="dc:identifier">EAX0118</field>
+  <field name="dc:identifier">40 YORK</field>
+  <field name="dc:identifier">7024</field>
+  <field name="dc:format">Boeken</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Book</field>
+</doc>
diff --git a/test/data/integration/record_0069.doc b/test/data/integration/record_0069.doc
new file mode 100644
index 0000000..60a7798
--- /dev/null
+++ b/test/data/integration/record_0069.doc
@@ -0,0 +1,32 @@
+<doc xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+  <field name="__id__">record:0069</field>
+  <field name="dc:source">seecr</field>
+  <field name="untokenized.dc:language">urn:iso:std:iso:639:-2:dut</field>
+  <field name="dc:title">1588 - Music from the time of the spanish Armada / The York Waits</field>
+  <field name="__all__">EAX0118</field>
+  <field name="__all__">40 YORK</field>
+  <field name="__all__">7024</field>
+  <field name="__all__">Boeken</field>
+  <field name="__all__">seecr</field>
+  <field name="__all__">CD</field>
+  <field name="__all__">Kastnr. 8729. - Bevar werken van : Th. Deloney ; M. praetorius ; P. Attaignant...[et al.]</field>
+  <field name="__all__">1588 - Music from the time of the spanish Armada / The York Waits</field>
+  <field name="__all__">York Waits, The</field>
+  <field name="__all__">Saydisc CD SOL 373</field>
+  <field name="__all__">seecr</field>
+  <field name="dc:creator">York Waits, The</field>
+  <field name="dc:type">http://purl.org/dc/dcmitype/Sound</field>
+  <field name="untokenized.prov.source">seecr</field>
+  <field name="dc:identifier">EAX0118</field>
+  <field name="dc:identifier">40 YORK</field>
+  <field name="dc:identifier">7024</field>
+  <field name="untokenized.dc:creator">York Waits, The</field>
+  <field name="untokenized.rdf:type">http://dbpedia.org/ontology/Album</field>
+  <field name="sorted.dc:title">1588 -</field>
+  <field name="dc:publisher">Saydisc CD SOL 373</field>
+  <field name="dc:format">Boeken</field>
+  <field name="dc:format">CD</field>
+  <field name="sorted.dc:creator">york waits</field>
+  <field name="prov.source">seecr</field>
+  <field name="dc:description">Kastnr. 8729. - Bevar werken van : Th. Deloney ; M. praetorius ; P. Attaignant...[et al.]</field>
+</doc>
-- 
1.7.2.5


From 1d3fe7271d2f38124d49b4adbe4301da9a1159b8 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Fri, 14 Dec 2012 09:51:46 +0100
Subject: [PATCH 50/66] JPM/TJ: added prefix names.

---
 meresco/solr/__init__.py       |    4 ++++
 meresco/solr/fields2solrdoc.py |    2 +-
 2 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/meresco/solr/__init__.py b/meresco/solr/__init__.py
index 7a7f9a7..89b49da 100644
--- a/meresco/solr/__init__.py
+++ b/meresco/solr/__init__.py
@@ -24,3 +24,7 @@
 # 
 ## end license ##
 from solrinterface import SolrInterface
+from fields2solrdoc import Fields2SolrDoc
+
+UNTOKENIZED_PREFIX = 'untokenized.'
+SORTED_PREFIX = 'sorted.'
diff --git a/meresco/solr/fields2solrdoc.py b/meresco/solr/fields2solrdoc.py
index 377e6e5..7c7658d 100644
--- a/meresco/solr/fields2solrdoc.py
+++ b/meresco/solr/fields2solrdoc.py
@@ -30,7 +30,7 @@ from xml.sax.saxutils import escape as escapeXml
 from itertools import chain
 
 class Fields2SolrDoc(Observable):
-    def __init__(self, transactionName, partname, singularValueFields=None):
+    def __init__(self, transactionName, partname="solr", singularValueFields=None):
         Observable.__init__(self)
         self._transactionName = transactionName
         self._partname = partname
-- 
1.7.2.5


From d648e5d293588d3446dc8bb2c2fe6be9e52f92fb Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Fri, 14 Dec 2012 10:06:03 +0100
Subject: [PATCH 51/66] JPM/TJ: added isSingularValueField argument as alternative to singularValueFields (method instead of list).

---
 meresco/solr/fields2solrdoc.py |   14 ++++++++++----
 test/fields2solrdoctest.py     |   19 +++++++++++++++++++
 2 files changed, 29 insertions(+), 4 deletions(-)

diff --git a/meresco/solr/fields2solrdoc.py b/meresco/solr/fields2solrdoc.py
index 7c7658d..175e5ec 100644
--- a/meresco/solr/fields2solrdoc.py
+++ b/meresco/solr/fields2solrdoc.py
@@ -30,11 +30,16 @@ from xml.sax.saxutils import escape as escapeXml
 from itertools import chain
 
 class Fields2SolrDoc(Observable):
-    def __init__(self, transactionName, partname="solr", singularValueFields=None):
+    def __init__(self, transactionName, partname="solr", singularValueFields=None, isSingularValueField=None):
         Observable.__init__(self)
         self._transactionName = transactionName
         self._partname = partname
-        self._singularValueFields = set(singularValueFields) if singularValueFields else set()
+        if singularValueFields and isSingularValueField:
+            raise ValueError("Use either 'singularValueFields' or 'isSingularValueField'")
+        self._isSingularValueField = isSingularValueField
+        if singularValueFields:
+            singularValueFields = set(singularValueFields)
+            self._isSingularValueField = lambda name: name in singularValueFields
         self.txs = {}
 
     def begin(self, name):
@@ -47,8 +52,9 @@ class Fields2SolrDoc(Observable):
     def addField(self, name, value):
         tx = self.ctx.tx
         valueList = self.txs[tx.getId()].setdefault(name, [])
-        if len(valueList) == 1 and name in self._singularValueFields:
-            return
+        if not self._isSingularValueField is None:
+            if len(valueList) == 1 and self._isSingularValueField(name):
+                return
         valueList.append(value)
 
     def commit(self, id):
diff --git a/test/fields2solrdoctest.py b/test/fields2solrdoctest.py
index c9a2086..34ce3a5 100644
--- a/test/fields2solrdoctest.py
+++ b/test/fields2solrdoctest.py
@@ -118,3 +118,22 @@ class Fields2SolrDocTest(SeecrTestCase):
         list(compose(fxf.commit(__callstack_var_tx__.getId())))
         method = observer.calledMethods[0]
         self.assertEquals({'__id__': ['identifier'], 'once':['one'], 'twice': ['one', 'two']}, todict(method.kwargs['data']))
+
+    def testIsSingularValueField(self):
+        __callstack_var_tx__ = Transaction('name') 
+        __callstack_var_tx__.locals['id'] = 'identifier'
+        observer = CallTrace('observer', emptyGeneratorMethods=['add'])
+        fxf = Fields2SolrDoc('name', 'partname', isSingularValueField=lambda name: name == 'once')
+        fxf.addObserver(observer)
+        fxf.begin(name='name')
+        fxf.addField('once', 'one')
+        fxf.addField('once', 'two')
+        fxf.addField('twice', 'one')
+        fxf.addField('twice', 'two')
+        list(compose(fxf.commit(__callstack_var_tx__.getId())))
+        method = observer.calledMethods[0]
+        self.assertEquals({'__id__': ['identifier'], 'once':['one'], 'twice': ['one', 'two']}, todict(method.kwargs['data']))
+
+    def testChooseSingularValueFieldsOrIsSingularValueField(self):
+        self.assertRaises(ValueError, lambda: Fields2SolrDoc('name', singularValueFields=['fields'], isSingularValueField=lambda name: False))
+
-- 
1.7.2.5


From b4fce444748045939bab376431dfe8cce2b9ce61 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Fri, 14 Dec 2012 15:05:47 +0100
Subject: [PATCH 52/66] JJ/HM: Configure additionalSchemaXml

---
 meresco/solr/server.py |   12 ++++++++++++
 test/servertest.py     |    8 ++++++++
 2 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/meresco/solr/server.py b/meresco/solr/server.py
index 2bafd0c..0b00201 100644
--- a/meresco/solr/server.py
+++ b/meresco/solr/server.py
@@ -88,6 +88,10 @@ class Server(object):
             filepath = options if options.startswith('/') else join(self.configBasedir, options)
             self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
             return
+        if name == 'additionalSchemaXml':
+            filepath = options if options.startswith('/') else join(self.configBasedir, options)
+            self._extendSchemaXml(core=core, lxmlElementList=parse(open(filepath)).xpath('/schema/*'))
+            return
         if options == False:
             return
         featureFilename = join(usrShareDir, 'solrconfig.d', '%s.xml' % name)
@@ -108,6 +112,14 @@ class Server(object):
         core_sorlconfig.getroot().extend(lxmlElementList)
         open(solrconfig_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
 
+    def _extendSchemaXml(self, core, lxmlElementList):
+        if not lxmlElementList:
+            raise ValueError("No elements found with which to extend the schema.xml")
+        schemaxml_file = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
+        core_sorlconfig = parse(open(schemaxml_file))
+        core_sorlconfig.getroot().extend(lxmlElementList)
+        open(schemaxml_file, 'w').write(tostring(core_sorlconfig, pretty_print=True, encoding="UTF-8"))
+
     def _setupCoreData(self):
         cores = self.config.keys()
         solr_xml = parse(open(join(self.stateDir, 'solr.xml')))
diff --git a/test/servertest.py b/test/servertest.py
index e511166..94966a4 100644
--- a/test/servertest.py
+++ b/test/servertest.py
@@ -139,6 +139,14 @@ class ServerTest(SeecrTestCase):
 
         self.assertEquals(['option'], solrconfig_xml.xpath("/config/extra/text()"))
 
+    def testSetupSolrConfigWithAdditionalSchemaXml(self):
+        solrDataDir = join(self.tempdir, 'solr-data')
+        open(join(self.tempdir, 'schema.xml'), 'w').write("""<schema><fields><field name="extra"/></fields></schema>""")
+        self._createServer(stateDir=solrDataDir, port=8042, config={'core': {'additionalSchemaXml': join(self.tempdir, 'schema.xml')}})
+        solrconfig_xml = parse(open(join(solrDataDir, 'cores', 'core', 'conf', 'schema.xml')))
+
+        self.assertEquals(1, len(solrconfig_xml.xpath("/schema/fields/field[@name='extra']")))
+
     def testSetupSolrConfigWithAdditionalInvalidSolrConfigShouldRaiseAnError(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         open(join(self.tempdir, 'solrconfig.xml'), 'w').write("""<extra>option</extra>""")
-- 
1.7.2.5


From 0076e60fb5924f92e40d92d54284baeac434244c Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Fri, 14 Dec 2012 15:08:03 +0100
Subject: [PATCH 53/66] JPM/TJ: rename CQL2SolrLuceneQuery -> Cql2SolrLuceneQuery (with backwards compatibility alias)

---
 meresco/solr/__init__.py              |    1 +
 meresco/solr/cql2solrlucenequery.py   |    3 ++-
 setup.py                              |    2 --
 test/_alltests.py                     |    2 +-
 test/_integration/integrationstate.py |    3 ---
 test/cql2solrlucenequerytest.py       |    6 +++---
 6 files changed, 7 insertions(+), 10 deletions(-)

diff --git a/meresco/solr/__init__.py b/meresco/solr/__init__.py
index 89b49da..ddad78a 100644
--- a/meresco/solr/__init__.py
+++ b/meresco/solr/__init__.py
@@ -25,6 +25,7 @@
 ## end license ##
 from solrinterface import SolrInterface
 from fields2solrdoc import Fields2SolrDoc
+from cql2solrlucenequery import Cql2SolrLuceneQuery
 
 UNTOKENIZED_PREFIX = 'untokenized.'
 SORTED_PREFIX = 'sorted.'
diff --git a/meresco/solr/cql2solrlucenequery.py b/meresco/solr/cql2solrlucenequery.py
index 0df7222..79de707 100644
--- a/meresco/solr/cql2solrlucenequery.py
+++ b/meresco/solr/cql2solrlucenequery.py
@@ -30,7 +30,7 @@ from meresco.components.statistics import Logger
 from meresco.components.clausecollector import ClauseCollector
 from meresco.solr.solrlucenequerycomposer import SolrLuceneQueryComposer
 
-class CQL2SolrLuceneQuery(Observable, Logger):
+class Cql2SolrLuceneQuery(Observable, Logger):
 
     def __init__(self, unqualifiedFields, name=None):
         Observable.__init__(self, name=name)
@@ -44,3 +44,4 @@ class CQL2SolrLuceneQuery(Observable, Logger):
         ClauseCollector(ast, self.log).visit()
         return self._cqlComposer.compose(ast)
 
+CQL2SolrLuceneQuery = Cql2SolrLuceneQuery
diff --git a/setup.py b/setup.py
index 04dffa7..a332194 100644
--- a/setup.py
+++ b/setup.py
@@ -31,8 +31,6 @@ from os import walk, listdir
 from os.path import join
 data_files = []
 for path, dirs, files in walk('usr-share'):
-    if not files:
-        continue
     data_files.append((path.replace('usr-share', '/usr/share/meresco-solr'), [join(path, f) for f in files]))
 
 setup(
diff --git a/test/_alltests.py b/test/_alltests.py
index 3a01ac8..ff3872c 100644
--- a/test/_alltests.py
+++ b/test/_alltests.py
@@ -38,7 +38,7 @@ from fields2solrdoctest import Fields2SolrDocTest
 from solrinterfacetest import SolrInterfaceTest
 from solrlucenequerycomposertest import SolrLuceneQueryComposerTest
 from servertest import ServerTest
-from cql2solrlucenequerytest import CQL2SolrLuceneQueryTest
+from cql2solrlucenequerytest import Cql2SolrLuceneQueryTest
 
 if __name__ == '__main__':
     main()
diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
index 6bcaa5c..db14d0f 100644
--- a/test/_integration/integrationstate.py
+++ b/test/_integration/integrationstate.py
@@ -75,9 +75,6 @@ class IntegrationState(_IntegrationState):
         self._startSolrServer()
         self._createDatabase()
    
-    def tearDown(self):
-        _IntegrationState.tearDown(self)
-
     def _startSolrServer(self):
         self._startServer('solr', self.binPath('start-solr'), 'http://localhost:%s/solr/%s/admin/ping' % (self.solrPort, self.solrCore), port=self.solrPort, stateDir=self.solrStatePath, config=self.configPath)
 
diff --git a/test/cql2solrlucenequerytest.py b/test/cql2solrlucenequerytest.py
index 3af0db6..354bb69 100644
--- a/test/cql2solrlucenequerytest.py
+++ b/test/cql2solrlucenequerytest.py
@@ -27,7 +27,7 @@
 from unittest import TestCase
 from seecr.test import CallTrace
 from cqlparser import parseString
-from meresco.solr.cql2solrlucenequery import CQL2SolrLuceneQuery
+from meresco.solr.cql2solrlucenequery import Cql2SolrLuceneQuery
 from meresco.core import Observable
 from weightless.core import be, compose
 
@@ -35,9 +35,9 @@ def executeQueryMock(luceneQueryString, *args, **kwargs):
     return
     yield
 
-class CQL2SolrLuceneQueryTest(TestCase):
+class Cql2SolrLuceneQueryTest(TestCase):
     def setUp(self):
-        self.convertor = CQL2SolrLuceneQuery([('field', 1.0)])
+        self.convertor = Cql2SolrLuceneQuery([('field', 1.0)])
         self.observer = CallTrace('Query responder', methods={'executeQuery': executeQueryMock})
         self.dna = be((Observable(),
             (self.convertor, 
-- 
1.7.2.5


From 476145196e2fea1d6cdd2778c72fe48f92d6b47d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Tue, 18 Dec 2012 11:33:12 +0100
Subject: [PATCH 54/66] JPM/HM: Overwrite only conf directory. Now the whole core was removed inclusive data

---
 meresco/solr/server.py |   10 ++++++----
 test/servertest.py     |   11 +++++++----
 2 files changed, 13 insertions(+), 8 deletions(-)

diff --git a/meresco/solr/server.py b/meresco/solr/server.py
index 0b00201..019ffe1 100644
--- a/meresco/solr/server.py
+++ b/meresco/solr/server.py
@@ -128,8 +128,11 @@ class Server(object):
         for core in cores:
             SubElement(coresElement, "core", attrib={'name': unicode(core), 'instanceDir': join('cores', unicode(core))})
             coreDir = join(self.stateDir, 'cores', core)
-            isdir(coreDir) and rmtree(coreDir)
-            copytree(join(usrShareDir, 'core-data'), coreDir)
+            if not isdir(coreDir):
+                makedirs(coreDir)
+            confDir = join(coreDir, 'conf')
+            isdir(confDir) and rmtree(confDir)
+            copytree(join(usrShareDir, 'core-data', 'conf'), confDir)
             schema_xml_path = join(coreDir, 'conf', 'schema.xml')
             schema_xml = parse(open(schema_xml_path))
             schema_xml.xpath("/schema")[0].attrib['name'] = unicode("meresco-%s" % core)
@@ -145,7 +148,7 @@ class Server(object):
 
     def _setupStartConfig(self):
         startConfigPath = join(self.stateDir, 'start.config')
-        startConfig = oldStartConfig = open(startConfigPath).read()
+        startConfig = open(startConfigPath).read()
         startConfig = compile('^jetty\.home=.*$', flags=MULTILINE).sub('jetty.home=' + self.stateDir, startConfig)
         startConfig = compile('^jetty\.lib=.*$', flags=MULTILINE).sub('jetty.lib=/usr/share/java/solr%s' % SOLR_VERSION, startConfig)
         open(startConfigPath, 'w').write(startConfig)
@@ -166,4 +169,3 @@ class Server(object):
 
     def _execvp(self, *args, **kwargs):
         execvp(*args, **kwargs)
-
diff --git a/test/servertest.py b/test/servertest.py
index 94966a4..7abcf33 100644
--- a/test/servertest.py
+++ b/test/servertest.py
@@ -26,12 +26,11 @@
 # 
 ## end license ##
 
-from StringIO import StringIO
-from os import mkdir, listdir, system
-from os.path import join, dirname, abspath, basename, isdir
+from os import mkdir, listdir, system, makedirs
+from os.path import join, dirname, abspath, isdir
 from shutil import rmtree
 from simplejson import dump as jsonDump
-from lxml.etree import parse, tostring
+from lxml.etree import parse
 
 from meresco.solr.server import Server
 
@@ -76,6 +75,8 @@ class ServerTest(SeecrTestCase):
     def testSetupSolrTwiceConfig(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {}})
+        makedirs(join(solrDataDir, 'cores', 'core1', 'data'))
+        self.assertEquals(['data', 'conf'], listdir(join(solrDataDir, 'cores', 'core1')))
         self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
         self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
         self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
@@ -106,6 +107,8 @@ class ServerTest(SeecrTestCase):
         schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
         self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
 
+        self.assertEquals(['data', 'conf'], listdir(join(solrDataDir, 'cores', 'core1')))
+
     def testSetupSolrConfigWithAutocomplete(self):
         solrDataDir = join(self.tempdir, 'solr-data')
         config = {'core1': {'autocomplete': {}}, 'core2': {}}
-- 
1.7.2.5


From a78b73a04860eedffd66f1abf24dfd51b37f4f35 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 18 Dec 2012 15:45:57 +0100
Subject: [PATCH 55/66] JJ/TJ: raise Exception.

---
 bin/start-solr |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/bin/start-solr b/bin/start-solr
index ede2259..68b7ec2 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -71,7 +71,11 @@ Example config:
 
 if __name__ == '__main__':
     args = argv[1:]
-    options, arguments = parseArguments(args)
+    try:
+        options, arguments = parseArguments(args)
+    except ValueError, e:
+        print e
+        exit(1)
 
     if Popen(["java -version 2>&1 | grep 'libgcj' > /dev/null 2>&1"], shell=True).wait() == 0:
         print "Don't use GCJ as the default java JRE."
-- 
1.7.2.5


From 7dd9d77757f65a2b7ad15fb8552a1a0661fd536e Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 18 Dec 2012 16:14:38 +0100
Subject: [PATCH 56/66] JJ/TJ: added drilldownDict.

---
 meresco/solr/solrinterface.py |    1 +
 test/solrinterfacetest.py     |   74 ++++++++++++++++++----------------------
 2 files changed, 34 insertions(+), 41 deletions(-)

diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index 5edf266..531ec49 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -171,6 +171,7 @@ def _updateResponseWithDrilldownData(arguments, xml, response):
         drilldownResult = facet_fields.xpath('int')
         drilldownData.append((facet_fields.attrib["name"], ((termCount.attrib['name'], int(termCount.text)) for termCount in drilldownResult)))
     response.drilldownData = drilldownData
+    response.drilldownDict = dict(drilldownData)
 
 def _updateResponseWithSuggestionData(arguments, xml, response):
     suggestions = {}
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
index 1ab546e..a6b704b 100644
--- a/test/solrinterfacetest.py
+++ b/test/solrinterfacetest.py
@@ -48,7 +48,7 @@ class SolrInterfaceTest(TestCase):
         list(interface.add(identifier="recordId", partname="ignored", data="<record><data>recordData</data></record>"))
         self.assertEquals(1, len(sendData))
         self.assertEquals(('/solr/THE_CORE/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True)], response=RESPONSE, solrInterface=interface)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True)], response=RESPONSE, solrInterface=interface)
         self.assertEquals(path, "/solr/THE_CORE/select")
         self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc", body)
 
@@ -124,11 +124,11 @@ class SolrInterfaceTest(TestCase):
             self.assertEquals('Value commitTimeout should be greater then zero', str(e))
 
     def testExecuteQuery(self):
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=None, response=RESPONSE) 
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=0, stop=10, sortKeys=None, response=RESPONSE) 
         self.assertEquals("/solr/select", path)
         self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1','3','5'], hits)
+        self.assertEquals(3, response.total)
+        self.assertEquals(['1','3','5'], response.hits)
 
     def testPrefixSearch(self):
         response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", response=TERMS_PREFIX_RESPONSE) 
@@ -144,42 +144,44 @@ class SolrInterfaceTest(TestCase):
         self.assertQueryArguments('terms.limit=5&terms.prefix=ho&terms.fl=afield', body)
 
     def testExecuteEmptyQuery(self):
-        self.assertRaises(ValueError, self.executeQuery, '', response=RESPONSE)
+        self.assertRaises(ValueError, self.executeQueryResponse, '', response=RESPONSE)
 
     def testExecuteQueryWithStartStopAndSortKeys(self):
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True), dict(sortBy="anotherfield", sortDescending=False)], response=RESPONSE)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True), dict(sortBy="anotherfield", sortDescending=False)], response=RESPONSE)
         self.assertEquals("/solr/select", path)
         self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc,anotherfield+asc", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1','3','5'], hits)
+        self.assertEquals(3, response.total)
+        self.assertEquals(['1','3','5'], response.hits)
 
     def testExecuteQuerySortAscending(self):
-        total, hits, (path, body) = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=[dict(sortBy="field", sortDescending=False)], response=RESPONSE)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=0, stop=10, sortKeys=[dict(sortBy="field", sortDescending=False)], response=RESPONSE)
         self.assertEquals("/solr/select", path)
         self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10&sort=field+asc", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1','3','5'], hits)
+        self.assertEquals(3, response.total)
+        self.assertEquals(['1','3','5'], response.hits)
 
     def testDrilldown(self):
-        total, hits, drilldownData, (path, body) = self.executeQuery("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__other__', 5, False)], response=RESPONSE % FACET_COUNTS)
-        result = dict(drilldownData)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__other__', 5, False)], response=RESPONSE % FACET_COUNTS)
         self.assertEquals("/solr/select", path)
         self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1', '3', '5'], hits)
-        self.assertEquals(['__all__', '__other__'], result.keys())
-        self.assertEquals([("term_0", 1), ("term_1", 2)], list(result['__all__']))
-        self.assertEquals([("term_2", 3), ("term_3", 4)], list(result['__other__']))
+        self.assertEquals(3, response.total)
+        self.assertEquals(['1', '3', '5'], response.hits)
+        self.assertEquals(['__all__', '__other__'], [f for f, termCounts in response.drilldownData])
+        self.assertEquals(set(['__all__', '__other__']), set(response.drilldownDict.keys()))
+        self.assertEquals([("term_0", 1), ("term_1", 2)], list(response.drilldownDict['__all__']))
+        for fieldname, termCounts in response.drilldownData:
+            if fieldname == '__other__':
+                otherTermCounts = termCounts
+        self.assertEquals([("term_2", 3), ("term_3", 4)], list(termCounts))
 
     def testDrilldownOnSameFieldTwice(self):
-        total, hits, drilldownData, (path, body) = self.executeQuery("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__all__', 5, False)], response=RESPONSE % FACET_COUNTS_SAME_FIELD_TWICE)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__all__', 5, False)], response=RESPONSE % FACET_COUNTS_SAME_FIELD_TWICE)
         self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__all__&f.__all__.facet.limit=5&f.__all__.facet.sort=index", body)
-        self.assertEquals(3, total)
-        self.assertEquals(['1', '3', '5'], hits)
-        self.assertEquals(2, len(drilldownData))
-        result = dict(drilldownData)
-        self.assertEquals(['__all__'], result.keys())
-        self.assertEquals([("term_0", 1), ("term_1", 2)], list(result['__all__']))
+        self.assertEquals(3, response.total)
+        self.assertEquals(['1', '3', '5'], response.hits)
+        self.assertEquals(2, len(response.drilldownData))
+        self.assertEquals(['__all__'], response.drilldownDict.keys())
+        self.assertEquals([("term_0", 1), ("term_1", 2)], list(response.drilldownDict['__all__']))
 
     def testExecuteQuerySolrHostFromObserver(self):
         solrInterface = SolrInterface()
@@ -228,10 +230,10 @@ class SolrInterfaceTest(TestCase):
         self.assertEquals(6, response.queryTime)
 
     def testSolrGivesSpellCheckResults(self):
-        total, hits, suggestions, (path, body) = self.executeQuery(query="__all__:aap AND __all__:bo", response=RESPONSE % SUGGESTIONS, suggestionsCount=2, suggestionsQuery="aap AND bo")
+        response, (path, body) = self.executeQueryResponse(query="__all__:aap AND __all__:bo", response=RESPONSE % SUGGESTIONS, suggestionsCount=2, suggestionsQuery="aap AND bo")
         self.assertQueryArguments('spellcheck.count=2&rows=10&spellcheck=true&spellcheck.q=aap+AND+bo&q=__all__%3Aaap+AND+__all__%3Abo&start=0', body)
-        self.assertEquals(['1','3','5'], hits)
-        self.assertEquals({'aap': (0, 3, ['aapje', 'raap']), 'bo': (8, 10, ['bio', 'bon'])}, suggestions)
+        self.assertEquals(['1','3','5'], response.hits)
+        self.assertEquals({'aap': (0, 3, ['aapje', 'raap']), 'bo': (8, 10, ['bio', 'bon'])}, response.suggestions)
 
     def testFieldnames(self):
         readData = []
@@ -248,9 +250,9 @@ class SolrInterfaceTest(TestCase):
         self.assertEquals(['__all__', '__exists__', '__id__', '__timestamp__', 'field0', 'field1', 'untokenized.field0'], response.hits)
 
     def testPassFilterQuery(self):
-        total, hits, (path, body) = self.executeQuery("*", filterQuery="field:value", response=RESPONSE) 
+        response, (path, body) = self.executeQueryResponse("*", filterQuery="field:value", response=RESPONSE) 
         self.assertQueryArguments("q=*&fq=field:value&start=0&rows=10", body)
-        total, hits, (path, body) = self.executeQuery("*", filterQuery="field:http\://host.nl", response=RESPONSE) 
+        response, (path, body) = self.executeQueryResponse("*", filterQuery="field:http\://host.nl", response=RESPONSE) 
         self.assertQueryArguments("q=*&fq=field:http\://host.nl&start=0&rows=10", body)
 
     def executeQueryResponse(self, query, response, solrInterface=None, **kwargs):
@@ -266,7 +268,7 @@ class SolrInterfaceTest(TestCase):
             gen.send(response)
         except StopIteration, e:
             (response,) = e.args 
-            return response, sendData
+            return response, sendData[0]
 
     def executePrefixSearch(self, response, solrInterface=None, **kwargs):
         if solrInterface is None:
@@ -283,16 +285,6 @@ class SolrInterfaceTest(TestCase):
             (response,) = e.args 
             return response, sendData[0]
     
-    def executeQuery(self, query, response, solrInterface=None, **kwargs):
-        response, sendData = self.executeQueryResponse(query, response, solrInterface=solrInterface, **kwargs)
-        result = [response.total, response.hits]
-        if getattr(response, 'drilldownData', None) is not None:
-            result.append(response.drilldownData)
-        if getattr(response, 'suggestions', None) is not None:
-            result.append(response.suggestions)
-        result.append(sendData[0])
-        return result
-
     def _returnValueFromGenerator(self, g, serverResponses, responseStatus='200'):
         for response in serverResponses:
             s = g.next()
-- 
1.7.2.5


From 5c811ac1d458573b67fa8959c5e376aa73316140 Mon Sep 17 00:00:00 2001
From: Hendrik Moree <hendrik@seecr.nl>
Date: Tue, 18 Dec 2012 17:02:22 +0100
Subject: [PATCH 57/66] JPM/HM: Added range.double field

---
 usr-share/core-data/conf/schema.xml |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/usr-share/core-data/conf/schema.xml b/usr-share/core-data/conf/schema.xml
index e2db7ed..d79ab06 100644
--- a/usr-share/core-data/conf/schema.xml
+++ b/usr-share/core-data/conf/schema.xml
@@ -30,7 +30,9 @@
 
     <fieldType name="sorted_string" class="solr.StrField" sortMissingLast="true" omitNorms="true" multiValued="false" indexed="true" stored="false" />
 
-    <fieldType name="datetime" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/> 
+    <fieldType name="datetime" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>
+
+    <fieldType name="trie_double" class="solr.TrieDoubleField" multiValued="true" omitNorms="true" indexed="true" stored="false"/>
  </types>
 
 
@@ -38,6 +40,7 @@
    <field name="__id__" type="string" stored="true" required="true" /> 
    <field name="__all__" type="text_ws" /> 
    <field name="__timestamp__" type="datetime" indexed="true" stored="false" default="NOW" sortMissingLast="true" omitNorms="true" multiValued="false" />
+   <dynamicField name="range.double.*" type="trie_double"/>
    <dynamicField name="sorted.*" type="sorted_string" />
    <dynamicField name="untokenized.*" type="untokenized_string" />
    <dynamicField name="meta.*" type="untokenized_string" />
-- 
1.7.2.5


From b4f5f21ad420cf0e216ed33f9de35111d497a1ee Mon Sep 17 00:00:00 2001
From: Thijs Janssen <thijs@seecr.nl>
Date: Wed, 19 Dec 2012 09:03:44 +0100
Subject: [PATCH 58/66] TJ: use set for every listdir in test.

---
 test/servertest.py |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/test/servertest.py b/test/servertest.py
index 7abcf33..d1a33c9 100644
--- a/test/servertest.py
+++ b/test/servertest.py
@@ -76,7 +76,7 @@ class ServerTest(SeecrTestCase):
         solrDataDir = join(self.tempdir, 'solr-data')
         self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {}})
         makedirs(join(solrDataDir, 'cores', 'core1', 'data'))
-        self.assertEquals(['data', 'conf'], listdir(join(solrDataDir, 'cores', 'core1')))
+        self.assertEquals(set(['data', 'conf']), set(listdir(join(solrDataDir, 'cores', 'core1'))))
         self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {}, 'córë2': {}})
         self.assertEquals(set(['contexts', 'cores', 'start.config', 'solr.xml', 'etc']), set(listdir(solrDataDir)))
         self.assertEquals(set(['webdefault.xml', 'jetty.xml']), set(listdir(join(solrDataDir, 'etc'))))
@@ -107,7 +107,7 @@ class ServerTest(SeecrTestCase):
         schema_core2_xml = parse(open(join(solrDataDir, 'cores', 'córë2', 'conf', 'schema.xml')))
         self.assertEquals(['meresco-córë2'], schema_core2_xml.xpath("/schema/@name"))
 
-        self.assertEquals(['data', 'conf'], listdir(join(solrDataDir, 'cores', 'core1')))
+        self.assertEquals(set(['data', 'conf']), set(listdir(join(solrDataDir, 'cores', 'core1'))))
 
     def testSetupSolrConfigWithAutocomplete(self):
         solrDataDir = join(self.tempdir, 'solr-data')
-- 
1.7.2.5


From c64bd501e4d287ea0851b6d1bef4874045e0c103 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hendrik=20Mor=C3=A9e?= <hendrik@seecr.nl>
Date: Wed, 19 Dec 2012 13:34:50 +0100
Subject: [PATCH 59/66] HM/JPM: added 'facets' kwarg to executeQuery in favor of now deprecated fieldnamesAndMaximums, with support for pivoting

---
 meresco/solr/solrinterface.py          |   40 ++++++++++++++++++++++++++++----
 test/_integration/solrinterfacetest.py |    5 ++++
 test/solrinterfacetest.py              |   24 +++++++++++++++++++
 3 files changed, 64 insertions(+), 5 deletions(-)

diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index 531ec49..9a41a96 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -33,6 +33,7 @@ from time import sleep
 from xml.sax.saxutils import escape as escapeXml
 from weightless.http import httpget, httppost
 from meresco.core import Observable
+from warnings import warn
 
 from solrresponse import SolrResponse
 
@@ -71,7 +72,9 @@ class SolrInterface(Observable):
         path += "?commitWithin=%d" % self._commitWithin
         yield self._send(path=path, body="<delete><id>%s</id></delete>" % escapeXml(identifier))
 
-    def executeQuery(self, luceneQueryString, start=0, stop=10, sortKeys=None, fieldnamesAndMaximums=None, suggestionsCount=0, suggestionsQuery=None, filterQuery=None, **kwargs):
+    def executeQuery(self, luceneQueryString, start=0, stop=10, sortKeys=None, fieldnamesAndMaximums=None, suggestionsCount=0, suggestionsQuery=None, filterQuery=None, facets=None, **kwargs):
+        if fieldnamesAndMaximums:
+            warn("fieldnamesAndMaximums is deprecated. Please use facets")
         if not luceneQueryString:
             raise ValueError("Empty luceneQueryString not allowed.")
         arguments = dict(
@@ -84,6 +87,7 @@ class SolrInterface(Observable):
         if filterQuery:
             arguments['fq'] = filterQuery
 
+        arguments.update(_facetArguments(facets))
         arguments.update(_drilldownArguments(fieldnamesAndMaximums))
         if suggestionsCount > 0 and suggestionsQuery:
             arguments["spellcheck"] = 'true'
@@ -97,7 +101,7 @@ class SolrInterface(Observable):
         identifiers = xml.xpath('/response/result/doc/str[@name="__id__"]/text()')
         qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
         response = SolrResponse(total=recordCount, hits=identifiers, queryTime=qtime)
-        if fieldnamesAndMaximums is not None:
+        if not (fieldnamesAndMaximums or facets) is None:
             _updateResponseWithDrilldownData(arguments, xml, response)
         if suggestionsCount > 0 and suggestionsQuery:
             _updateResponseWithSuggestionData(arguments, xml, response)
@@ -152,6 +156,32 @@ class SolrInterface(Observable):
     def _solrServer(self):
         return (self._host, self._port) if self._host else self.call.solrServer()
 
+def _facetArguments(facets):
+    def facetLimit(facet):
+        maxTerms = facet.get('maxTerms', None)
+        arguments.setdefault('f.%s.facet.limit' % facet['field'], []).append(maxTerms if maxTerms else -1)
+
+    def facetSort(facet):
+        sortByTerm = facet.get('sortByTerm', None)
+        if sortByTerm is not None:
+            arguments.setdefault('f.%s.facet.sort' % facet['field'], []).append('index' if sortByTerm else 'count')
+
+    arguments = {}
+    if facets is not None:
+        arguments['facet'] = "on"
+        arguments['facet.mincount'] = "1"
+        arguments['facet.field'] = []
+        for facet in facets:
+            if isinstance(facet, dict):
+                arguments['facet.field'].append(facet['field'])
+                facetLimit(facet)
+                facetSort(facet)
+            else:
+                arguments["facet.pivot"] = ','.join(f['field'] for f in facet)
+                for f in facet:
+                    facetLimit(f)
+                    facetSort(f)
+    return arguments
 
 def _drilldownArguments(fieldnamesAndMaximums):
     arguments = {}
@@ -159,10 +189,10 @@ def _drilldownArguments(fieldnamesAndMaximums):
         arguments['facet'] = "on"
         arguments['facet.mincount'] = "1"
         arguments['facet.field'] = []
-        for fieldname, maximumResults, howToSort in fieldnamesAndMaximums:
+        for fieldname, maxTerms, sortedByTermCount in fieldnamesAndMaximums:
             arguments['facet.field'].append(fieldname)
-            arguments.setdefault('f.%s.facet.limit' % fieldname, []).append(-1 if maximumResults == 0 else maximumResults)
-            arguments.setdefault('f.%s.facet.sort' % fieldname, []).append('count' if howToSort else 'index')
+            arguments.setdefault('f.%s.facet.limit' % fieldname, []).append(-1 if maxTerms == 0 else maxTerms)
+            arguments.setdefault('f.%s.facet.sort' % fieldname, []).append('count' if sortedByTermCount else 'index')
     return arguments
 
 def _updateResponseWithDrilldownData(arguments, xml, response):
diff --git a/test/_integration/solrinterfacetest.py b/test/_integration/solrinterfacetest.py
index e56942d..f302889 100644
--- a/test/_integration/solrinterfacetest.py
+++ b/test/_integration/solrinterfacetest.py
@@ -57,6 +57,11 @@ class SolrInterfaceTest(IntegrationTestCase):
         response = self.executeQuery(luceneQueryString='*:*')
         self.assertEquals(69, response['total'])
 
+    def testPivoting(self):
+        response = self.executeQuery(luceneQueryString='*:*', facets=[
+            [{'field': 'untokenized.rdf:type'}, {'field': 'untokenized.dc:date'}]            
+        ])
+
     def executeQuery(self, **queryKwargs):
         header, body = postRequest(port=self.solrClientPort, path='/executeQuery', data=dumps(queryKwargs), parse=False)
         responseType, responseDict = body.split(': ', 1)
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
index a6b704b..d475c74 100644
--- a/test/solrinterfacetest.py
+++ b/test/solrinterfacetest.py
@@ -183,6 +183,30 @@ class SolrInterfaceTest(TestCase):
         self.assertEquals(['__all__'], response.drilldownDict.keys())
         self.assertEquals([("term_0", 1), ("term_1", 2)], list(response.drilldownDict['__all__']))
 
+    def testPivotDrilldown(self):
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[
+                [
+                    {'field': '__all__', 'sortByTerm': True},
+                    {'field': '__other__', 'maxTerms': 5}
+                ], 
+                {'field': '__field1__', 'maxTerms': 2, 'sortByTerm': False},
+                {'field': '__field2__', 'maxTerms': None}
+            ], response=RESPONSE % FACET_COUNTS)
+        arguments = parse_qs(body, keep_blank_values=True)
+        self.assertEquals(['1'], arguments['facet.mincount'])
+        self.assertEquals(['meresco.exists:true'], arguments['q'])
+        self.assertEquals(['0'], arguments['start'])
+        self.assertEquals(['10'], arguments['rows'])
+        self.assertEquals(['on'], arguments['facet'])
+        self.assertEquals(['__all__,__other__'], arguments['facet.pivot'])
+        self.assertEquals(['__field1__', '__field2__'], arguments['facet.field'])
+        self.assertEquals(['count'], arguments['f.__field1__.facet.sort'])
+        self.assertEquals(['index'], arguments['f.__all__.facet.sort'])
+        self.assertEquals(['2'], arguments['f.__field1__.facet.limit'])
+        self.assertEquals(['-1'], arguments['f.__all__.facet.limit'])
+        self.assertEquals(['5'], arguments['f.__other__.facet.limit'])
+        self.assertEquals(['-1'], arguments['f.__field2__.facet.limit'])
+
     def testExecuteQuerySolrHostFromObserver(self):
         solrInterface = SolrInterface()
         observer = CallTrace(returnValues={'solrServer': ('localhost', 1234)})
-- 
1.7.2.5


From d3184a0b0910380e13dd8f2d3e540e6e7e637f3d Mon Sep 17 00:00:00 2001
From: Hendrik Moree <hendrik@seecr.nl>
Date: Wed, 19 Dec 2012 16:53:08 +0100
Subject: [PATCH 60/66] JPM/HM: SolrInterface handles json output from solr for path /select; Working pivoting

---
 meresco/solr/solrinterface.py          |   48 +++--
 test/_integration/solrinterfacetest.py |    3 +-
 test/solrinterfacetest.py              |  339 ++++++++++++++++++++------------
 3 files changed, 250 insertions(+), 140 deletions(-)

diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index 9a41a96..39d6877 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -34,6 +34,7 @@ from xml.sax.saxutils import escape as escapeXml
 from weightless.http import httpget, httppost
 from meresco.core import Observable
 from warnings import warn
+from simplejson import loads
 
 from solrresponse import SolrResponse
 
@@ -81,6 +82,7 @@ class SolrInterface(Observable):
                 q=luceneQueryString, 
                 start=start, 
                 rows=stop-start, 
+                wt='json'
             )
         if sortKeys:
             arguments["sort"] = ','.join("%s %s" % (sortKey['sortBy'], 'desc' if sortKey['sortDescending'] else 'asc') for sortKey in sortKeys)
@@ -96,15 +98,15 @@ class SolrInterface(Observable):
 
         path = self._path('select')
         body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
-        xml = parse(StringIO(body))
-        recordCount = int(xml.xpath('/response/result/@numFound')[0])
-        identifiers = xml.xpath('/response/result/doc/str[@name="__id__"]/text()')
-        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
+        jsonResponse = loads(body)
+        recordCount = jsonResponse['response']['numFound']
+        identifiers = [doc.values()[0] for doc in jsonResponse['response']['docs']]
+        qtime = jsonResponse['responseHeader']['QTime']
         response = SolrResponse(total=recordCount, hits=identifiers, queryTime=qtime)
         if not (fieldnamesAndMaximums or facets) is None:
-            _updateResponseWithDrilldownData(arguments, xml, response)
+             _updateResponseWithDrilldownData(arguments, jsonResponse['facet_counts'], response)
         if suggestionsCount > 0 and suggestionsQuery:
-            _updateResponseWithSuggestionData(arguments, xml, response)
+            _updateResponseWithSuggestionData(arguments, jsonResponse['spellcheck']['suggestions'], response)
         raise StopIteration(response)
 
     def prefixSearch(self, field, prefix, limit=10):
@@ -195,18 +197,32 @@ def _drilldownArguments(fieldnamesAndMaximums):
             arguments.setdefault('f.%s.facet.sort' % fieldname, []).append('count' if sortedByTermCount else 'index')
     return arguments
 
-def _updateResponseWithDrilldownData(arguments, xml, response):
+def _updateResponseWithDrilldownData(arguments, facetCounts, response):
     drilldownData = []
-    for facet_fields in xml.xpath('/response/lst[@name="facet_counts"]/lst[@name="facet_fields"]/lst'):
-        drilldownResult = facet_fields.xpath('int')
-        drilldownData.append((facet_fields.attrib["name"], ((termCount.attrib['name'], int(termCount.text)) for termCount in drilldownResult)))
+    for fieldname, termCounts in facetCounts['facet_fields'].items():
+        terms = []
+        for i in xrange(0, len(termCounts), 2):
+            terms.append({'term': termCounts[i], 'count': termCounts[i+1]})
+        drilldownData.append(dict(fieldname=fieldname, terms=terms))
+    if 'facet_pivot' in facetCounts:
+        for drilldown in facetCounts['facet_pivot'].values():
+            drilldownData.append(_buildDrilldownDict(drilldown))
     response.drilldownData = drilldownData
-    response.drilldownDict = dict(drilldownData)
 
-def _updateResponseWithSuggestionData(arguments, xml, response):
+def _buildDrilldownDict(drilldown):
+    fieldname = drilldown[0]['field']
+    terms = []
+    for d in drilldown:
+        termDict = {'term': d['value'], 'count': d['count']}
+        if 'pivot' in d:
+            termDict['pivot'] = _buildDrilldownDict(d['pivot'])
+        terms.append(termDict)
+    return dict(fieldname=fieldname, terms=terms)
+
+def _updateResponseWithSuggestionData(arguments, spellcheckResult, response):
     suggestions = {}
-    for suggestion in xml.xpath('/response/lst[@name="spellcheck"]/lst[@name="suggestions"]/lst'):
-        startOffset = int(suggestion.xpath('int[@name="startOffset"]/text()')[0])
-        endOffset = int(suggestion.xpath('int[@name="endOffset"]/text()')[0])
-        suggestions[suggestion.attrib['name']] = (startOffset, endOffset, suggestion.xpath('arr[@name="suggestion"]/str/text()'))
+    for i in xrange(0, len(spellcheckResult), 2):
+        name = spellcheckResult[i]
+        suggestion = spellcheckResult[i+1]
+        suggestions[name] = (suggestion['startOffset'], suggestion['endOffset'], suggestion['suggestion'])
     response.suggestions = suggestions
diff --git a/test/_integration/solrinterfacetest.py b/test/_integration/solrinterfacetest.py
index f302889..3ca75ae 100644
--- a/test/_integration/solrinterfacetest.py
+++ b/test/_integration/solrinterfacetest.py
@@ -59,8 +59,9 @@ class SolrInterfaceTest(IntegrationTestCase):
 
     def testPivoting(self):
         response = self.executeQuery(luceneQueryString='*:*', facets=[
-            [{'field': 'untokenized.rdf:type'}, {'field': 'untokenized.dc:date'}]            
+            [{'field': 'untokenized.rdf:type'}, {'field': 'untokenized.dc:date', 'maxTerms': 4}]            
         ])
+        self.assertEquals({}, response)
 
     def executeQuery(self, **queryKwargs):
         header, body = postRequest(port=self.solrClientPort, path='/executeQuery', data=dumps(queryKwargs), parse=False)
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
index d475c74..6e1b9ed 100644
--- a/test/solrinterfacetest.py
+++ b/test/solrinterfacetest.py
@@ -25,20 +25,17 @@
 # 
 ## end license ##
 
-from unittest import TestCase
-
 from cgi import parse_qs
 
 from weightless.core import compose
 from weightless.io import Suspend
 from meresco.core import Observable
 from meresco.solr.solrinterface import SolrInterface
-from seecr.test import CallTrace
-
+from seecr.test import CallTrace, SeecrTestCase
 
-class SolrInterfaceTest(TestCase):
+class SolrInterfaceTest(SeecrTestCase):
     def setUp(self):
-        TestCase.setUp(self)
+        SeecrTestCase.setUp(self)
         self._solrInterface = SolrInterface("localhost", 8888)
 
     def testCoreSupport(self):
@@ -48,9 +45,9 @@ class SolrInterfaceTest(TestCase):
         list(interface.add(identifier="recordId", partname="ignored", data="<record><data>recordData</data></record>"))
         self.assertEquals(1, len(sendData))
         self.assertEquals(('/solr/THE_CORE/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
-        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True)], response=RESPONSE, solrInterface=interface)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True)], response=JSON_RESPONSE % "", solrInterface=interface)
         self.assertEquals(path, "/solr/THE_CORE/select")
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc", body)
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc&wt=json", body)
 
     def testAdd(self):
         g = compose(self._solrInterface.add(identifier="recordId", partname="ignored", data="<record><data>recordData</data></record>"))
@@ -124,9 +121,9 @@ class SolrInterfaceTest(TestCase):
             self.assertEquals('Value commitTimeout should be greater then zero', str(e))
 
     def testExecuteQuery(self):
-        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=0, stop=10, sortKeys=None, response=RESPONSE) 
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=0, stop=10, sortKeys=None, response=JSON_RESPONSE % "") 
         self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10", body)
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10&wt=json", body)
         self.assertEquals(3, response.total)
         self.assertEquals(['1','3','5'], response.hits)
 
@@ -144,44 +141,40 @@ class SolrInterfaceTest(TestCase):
         self.assertQueryArguments('terms.limit=5&terms.prefix=ho&terms.fl=afield', body)
 
     def testExecuteEmptyQuery(self):
-        self.assertRaises(ValueError, self.executeQueryResponse, '', response=RESPONSE)
+        self.assertRaises(ValueError, self.executeQueryResponse, '', response=JSON_RESPONSE % "")
 
     def testExecuteQueryWithStartStopAndSortKeys(self):
-        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True), dict(sortBy="anotherfield", sortDescending=False)], response=RESPONSE)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True), dict(sortBy="anotherfield", sortDescending=False)], response=JSON_RESPONSE % "")
         self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc,anotherfield+asc", body)
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc,anotherfield+asc&wt=json", body)
         self.assertEquals(3, response.total)
         self.assertEquals(['1','3','5'], response.hits)
 
     def testExecuteQuerySortAscending(self):
-        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=0, stop=10, sortKeys=[dict(sortBy="field", sortDescending=False)], response=RESPONSE)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=0, stop=10, sortKeys=[dict(sortBy="field", sortDescending=False)], response=JSON_RESPONSE % "")
         self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10&sort=field+asc", body)
+        self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10&sort=field+asc&wt=json", body)
         self.assertEquals(3, response.total)
         self.assertEquals(['1','3','5'], response.hits)
 
     def testDrilldown(self):
-        response, (path, body) = self.executeQueryResponse("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__other__', 5, False)], response=RESPONSE % FACET_COUNTS)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'field': '__all__', 'maxTerms': 5, "sortByTerm": True}, {'field': '__other__', 'maxTerms': 5, 'sortByTerm': True}], response=JSON_RESPONSE % JSON_FACET_COUNTS)
         self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
+        self.assertQueryArguments("wt=json&facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
         self.assertEquals(3, response.total)
         self.assertEquals(['1', '3', '5'], response.hits)
-        self.assertEquals(['__all__', '__other__'], [f for f, termCounts in response.drilldownData])
-        self.assertEquals(set(['__all__', '__other__']), set(response.drilldownDict.keys()))
-        self.assertEquals([("term_0", 1), ("term_1", 2)], list(response.drilldownDict['__all__']))
-        for fieldname, termCounts in response.drilldownData:
-            if fieldname == '__other__':
-                otherTermCounts = termCounts
-        self.assertEquals([("term_2", 3), ("term_3", 4)], list(termCounts))
+        self.assertEquals(['__all__', '__other__'], [f['fieldname'] for f in response.drilldownData])
+        self.assertEquals([{'term': "term_0", 'count': 1}, {'term': "term_1", 'count': 2}], response.drilldownData[0]['terms'])
+        self.assertEquals([{'term': "term_2", 'count': 3}, {'term': "term_3", 'count': 4}], response.drilldownData[1]['terms'])
 
     def testDrilldownOnSameFieldTwice(self):
-        response, (path, body) = self.executeQueryResponse("meresco.exists:true", fieldnamesAndMaximums=[('__all__', 5, False), ('__all__', 5, False)], response=RESPONSE % FACET_COUNTS_SAME_FIELD_TWICE)
-        self.assertQueryArguments("facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__all__&f.__all__.facet.limit=5&f.__all__.facet.sort=index", body)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'field': '__all__', 'maxTerms': 5, "sortByTerm":True}, {'field': '__all__', 'maxTerms': 5, 'sortByTerm': True}], response=JSON_RESPONSE % JSON_FACET_COUNTS_SAME_FIELD_TWICE)
+        self.assertQueryArguments("wt=json&facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__all__&f.__all__.facet.limit=5&f.__all__.facet.sort=index", body)
         self.assertEquals(3, response.total)
         self.assertEquals(['1', '3', '5'], response.hits)
-        self.assertEquals(2, len(response.drilldownData))
-        self.assertEquals(['__all__'], response.drilldownDict.keys())
-        self.assertEquals([("term_0", 1), ("term_1", 2)], list(response.drilldownDict['__all__']))
+        self.assertEquals(1, len(response.drilldownData))
+        self.assertEquals(['__all__'], [f['fieldname'] for f in response.drilldownData])
+        self.assertEquals([{'term': "term_0", 'count': 1}, {'term': "term_1", 'count': 2}], response.drilldownData[0]['terms'])
 
     def testPivotDrilldown(self):
         response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[
@@ -191,7 +184,7 @@ class SolrInterfaceTest(TestCase):
                 ], 
                 {'field': '__field1__', 'maxTerms': 2, 'sortByTerm': False},
                 {'field': '__field2__', 'maxTerms': None}
-            ], response=RESPONSE % FACET_COUNTS)
+            ], response=JSON_RESPONSE % JSON_FACET_WITH_PIVOT)
         arguments = parse_qs(body, keep_blank_values=True)
         self.assertEquals(['1'], arguments['facet.mincount'])
         self.assertEquals(['meresco.exists:true'], arguments['q'])
@@ -206,6 +199,82 @@ class SolrInterfaceTest(TestCase):
         self.assertEquals(['-1'], arguments['f.__all__.facet.limit'])
         self.assertEquals(['5'], arguments['f.__other__.facet.limit'])
         self.assertEquals(['-1'], arguments['f.__field2__.facet.limit'])
+        self.assertEqualsWS(repr([
+                {
+                    'fieldname': '__field2__',
+                    'terms': [
+                        {
+                            'term': '4',
+                            'count': 4
+                        },
+                        {
+                            'term': '5',
+                            'count': 5
+                        },
+                        {
+                            'term': '6',
+                            'count': 6
+                        }
+                    ]
+                },
+                {
+                    'fieldname': '__field1__',
+                    'terms': [
+                        {
+                            'term': '1',
+                            'count': 1
+                        },
+                        {
+                            'term': '2',
+                            'count': 2
+                        },
+                        {
+                            'term': '3',
+                            'count': 3
+                        }
+                    ]
+                },
+                {
+                    'fieldname': '__all__',
+                    'terms': [
+                        {
+                            'term': 'all:1',
+                            'count': 1,
+                            'pivot': {
+                                'fieldname': '__other__',
+                                'terms': [
+                                    {
+                                        'term': 'other:1',
+                                        'count': 1
+                                    },
+                                    {
+                                        'term': 'other:2',
+                                        'count': 2
+                                    }
+                                ]
+                            }
+                            
+                        },
+                        {
+                            'term': 'all:2',
+                            'count': 2,
+                            'pivot': {
+                                'fieldname': '__other__',
+                                'terms': [
+                                    {
+                                        'term': 'other:3',
+                                        'count': 3
+                                    },
+                                    {
+                                        'term': 'other:4',
+                                        'count': 4
+                                    }
+                                ]
+                            }
+                        }
+                    ]
+                }
+            ]), repr(response.drilldownData))
 
     def testExecuteQuerySolrHostFromObserver(self):
         solrInterface = SolrInterface()
@@ -221,9 +290,9 @@ class SolrInterfaceTest(TestCase):
         solrInterface._httppost = httppost
 
         g = compose(solrInterface.executeQuery("meresco.exists:true"))
-        self._returnValueFromGenerator(g, [RESPONSE])
+        self._returnValueFromGenerator(g, [JSON_RESPONSE % ""])
         self.assertEquals(['solrServer'], observer.calledMethodNames())
-        self.assertQueryArguments('q=meresco.exists%3Atrue&start=0&rows=10', kwargs[0]['body'])
+        self.assertQueryArguments('q=meresco.exists%3Atrue&start=0&rows=10&wt=json', kwargs[0]['body'])
         self.assertEquals('localhost', kwargs[0]['host'])
         self.assertEquals('/solr/select', kwargs[0]['request'])
         self.assertEquals(1234, kwargs[0]['port'])
@@ -250,12 +319,12 @@ class SolrInterfaceTest(TestCase):
         self.assertEquals({'Content-Type': 'text/xml', 'Content-Length': len(kwargs[0]['body'])}, kwargs[0]['headers'])
 
     def testQueryResponseTime(self):
-        response, readData = self.executeQueryResponse("meresco.exists:true", response=RESPONSE % "")
+        response, readData = self.executeQueryResponse("meresco.exists:true", response=JSON_RESPONSE % "")
         self.assertEquals(6, response.queryTime)
 
     def testSolrGivesSpellCheckResults(self):
-        response, (path, body) = self.executeQueryResponse(query="__all__:aap AND __all__:bo", response=RESPONSE % SUGGESTIONS, suggestionsCount=2, suggestionsQuery="aap AND bo")
-        self.assertQueryArguments('spellcheck.count=2&rows=10&spellcheck=true&spellcheck.q=aap+AND+bo&q=__all__%3Aaap+AND+__all__%3Abo&start=0', body)
+        response, (path, body) = self.executeQueryResponse(query="__all__:aap AND __all__:bo", response=JSON_RESPONSE % JSON_SUGGESTIONS, suggestionsCount=2, suggestionsQuery="aap AND bo")
+        self.assertQueryArguments('spellcheck.count=2&rows=10&spellcheck=true&spellcheck.q=aap+AND+bo&q=__all__%3Aaap+AND+__all__%3Abo&start=0&wt=json', body)
         self.assertEquals(['1','3','5'], response.hits)
         self.assertEquals({'aap': (0, 3, ['aapje', 'raap']), 'bo': (8, 10, ['bio', 'bon'])}, response.suggestions)
 
@@ -274,10 +343,10 @@ class SolrInterfaceTest(TestCase):
         self.assertEquals(['__all__', '__exists__', '__id__', '__timestamp__', 'field0', 'field1', 'untokenized.field0'], response.hits)
 
     def testPassFilterQuery(self):
-        response, (path, body) = self.executeQueryResponse("*", filterQuery="field:value", response=RESPONSE) 
-        self.assertQueryArguments("q=*&fq=field:value&start=0&rows=10", body)
-        response, (path, body) = self.executeQueryResponse("*", filterQuery="field:http\://host.nl", response=RESPONSE) 
-        self.assertQueryArguments("q=*&fq=field:http\://host.nl&start=0&rows=10", body)
+        response, (path, body) = self.executeQueryResponse("*", filterQuery="field:value", response=JSON_RESPONSE % "") 
+        self.assertQueryArguments("q=*&fq=field:value&start=0&rows=10&wt=json", body)
+        response, (path, body) = self.executeQueryResponse("*", filterQuery="field:http\://host.nl", response=JSON_RESPONSE % "") 
+        self.assertQueryArguments("q=*&fq=field:http\://host.nl&start=0&rows=10&wt=json", body)
 
     def executeQueryResponse(self, query, response, solrInterface=None, **kwargs):
         if solrInterface is None:
@@ -327,33 +396,6 @@ class SolrInterfaceTest(TestCase):
         arguments2 = parse_qs(arguments2, keep_blank_values=True)
         self.assertEquals(arguments1, arguments2)
 
-RESPONSE = """
-<response>
-    <lst name="responseHeader">
-        <int name="status">0</int>
-        <int name="QTime">6</int>
-        <lst name="params">
-            <str name="indent">on</str>
-            <str name="start">0</str>
-            <str name="q">meresco.exists:true</str>
-            <str name="version">2.2</str>
-            <str name="rows">10</str>
-        </lst>
-    </lst>
-    <result name="response" numFound="3" start="0">
-        <doc>
-            <str name="__id__">1</str>
-        </doc>
-        <doc>
-            <str name="__id__">3</str>
-        </doc>
-        <doc>
-            <str name="__id__">5</str>
-        </doc>
-    </result>
-    %s
-</response>"""
-
 TERMS_PREFIX_RESPONSE = """
 <response>
     <lst name="responseHeader">
@@ -376,63 +418,50 @@ TERMS_PREFIX_RESPONSE = """
     </lst>
 </response>"""
 
-SUGGESTIONS="""
-<lst name="spellcheck">
-    <lst name="suggestions">
-        <lst name="aap">
-            <int name="numFound">2</int>
-            <int name="startOffset">0</int>
-            <int name="endOffset">3</int>
-            <arr name="suggestion">
-                <str>aapje</str>
-                <str>raap</str>
-            </arr>
-        </lst>
-        <lst name="bo">
-            <int name="numFound">2</int>
-            <int name="startOffset">8</int>
-            <int name="endOffset">10</int>
-            <arr name="suggestion">
-                <str>bio</str>
-                <str>bon</str>
-            </arr>
-        </lst>
-    </lst>
-</lst>"""
-
-FACET_COUNTS="""
-<lst name="facet_counts">
-    <lst name="facet_queries"/>
-    <lst name="facet_fields">
-        <lst name="__all__">
-            <int name="term_0">1</int>
-            <int name="term_1">2</int>
-        </lst>
-        <lst name="__other__">
-            <int name="term_2">3</int>
-            <int name="term_3">4</int>
-        </lst>
-    </lst>
-    <lst name="facet_dates"/>
-    <lst name="facet_ranges"/>
-</lst>"""
-
-FACET_COUNTS_SAME_FIELD_TWICE="""
-<lst name="facet_counts">
-    <lst name="facet_queries"/>
-    <lst name="facet_fields">
-        <lst name="__all__">
-            <int name="term_0">1</int>
-            <int name="term_1">2</int>
-        </lst>
-        <lst name="__all__">
-            <int name="term_0">1</int>
-            <int name="term_1">2</int>
-        </lst>
-    </lst>
-    <lst name="facet_dates"/>
-    <lst name="facet_ranges"/>
-</lst>"""
+JSON_SUGGESTIONS = """,
+"spellcheck":{
+    "suggestions":[
+        "aap",{
+            "numFound":2,
+            "startOffset":0,
+            "endOffset":3,
+            "suggestion":[
+                "aapje","raap"
+            ]
+        },
+        "bo",{
+            "numFound":2,
+            "startOffset":8,
+            "endOffset":10,
+            "suggestion":[
+                "bio","bon"
+            ]
+        }
+    ]
+}
+"""
+
+JSON_FACET_COUNTS = """,
+"facet_counts":{
+    "facet_queries":{},
+    "facet_fields":{
+        "__all__":["term_0",1,"term_1",2],
+        "__other__":["term_2",3,"term_3",4]
+    },
+    "facet_dates": {},
+    "facet_ranges": {}
+}"""
+
+JSON_FACET_COUNTS_SAME_FIELD_TWICE = """,
+"facet_counts":{
+    "facet_queries":{},
+    "facet_fields":{
+        "__all__":["term_0",1,"term_1",2],
+        "__all__":["term_0",1,"term_1",2]
+    },
+    "facet_dates": {},
+    "facet_ranges": {}
+}"""
 
 FIELDNAMES_RESPONSE="""
 <response>
@@ -465,3 +494,67 @@ org.apache.lucene.store.MMapDirectory:org.apache.lucene.store.MMapDirectory@/dat
 <lst name="info">...</lst>
 </response>
 """
+
+
+JSON_RESPONSE = """
+{
+    "responseHeader":{
+        "status":0,
+        "QTime":6
+    },
+    "response":{
+        "numFound":3,
+        "start":0,
+        "docs":[{"__id__": "1"}, {"__id__": "3"}, {"__id__": "5"}]
+    }
+    %s
+}"""
+
+JSON_FACET_WITH_PIVOT = """,
+"facet_counts":{
+    "facet_queries":{},
+    "facet_fields":{
+        "__field1__":["1",1,"2",2,"3",3],
+        "__field2__":["4",4,"5",5,"6",6]
+    },
+    "facet_dates":{},
+    "facet_ranges":{},
+    "facet_pivot":{
+        "__all__,__other__":[
+            {
+                "field":"__all__",
+                "value":"all:1",
+                "count":1,
+                "pivot":[
+                    {
+                        "field":"__other__",
+                        "value":"other:1",
+                        "count":1
+                    },
+                    {
+                        "field":"__other__",
+                        "value":"other:2",
+                        "count":2
+                    }
+                ]
+            },
+            {
+                "field":"__all__",
+                "value":"all:2",
+                "count":2,
+                "pivot":[
+                    {
+                        "field":"__other__",
+                        "value":"other:3",
+                        "count":3
+                    },
+                    {
+                        "field":"__other__",
+                        "value":"other:4",
+                        "count":4
+                    }
+                ]
+            }
+        ]
+    }
+}"""
-- 
1.7.2.5


From 32f8f86f738bb9812013f8fc5bd8ad66a37c9e92 Mon Sep 17 00:00:00 2001
From: Hendrik Moree <hendrik@seecr.nl>
Date: Thu, 20 Dec 2012 13:47:45 +0100
Subject: [PATCH 61/66] HM/JPM: pivoting integration tested

---
 meresco/solr/solrinterface.py          |   42 +++++++++++++-------------------
 test/_integration/helperserver.py      |    2 +-
 test/_integration/integrationstate.py  |    2 +
 test/_integration/solrinterfacetest.py |   38 +++++++++++++++++++++++++----
 test/solrinterfacetest.py              |   24 ++++++++++++++----
 5 files changed, 72 insertions(+), 36 deletions(-)

diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index 39d6877..a7cde7a 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -26,21 +26,23 @@
 ## end license ##
 
 from urllib import urlencode
-from socket import socket
 from lxml.etree import parse
 from StringIO import StringIO
-from time import sleep
 from xml.sax.saxutils import escape as escapeXml
 from weightless.http import httpget, httppost
 from meresco.core import Observable
-from warnings import warn
 from simplejson import loads
 
 from solrresponse import SolrResponse
 
+
 CRLF = '\r\n'
 
 class SolrInterface(Observable):
+    COUNT = 'count'
+    INDEX = 'index'
+    SUPPORTED_SORTBY_VALUES = [COUNT, INDEX]
+
     def __init__(self, host=None, port=None, core=None, commitTimeout=1):
         Observable.__init__(self)
         self._host = host
@@ -73,9 +75,7 @@ class SolrInterface(Observable):
         path += "?commitWithin=%d" % self._commitWithin
         yield self._send(path=path, body="<delete><id>%s</id></delete>" % escapeXml(identifier))
 
-    def executeQuery(self, luceneQueryString, start=0, stop=10, sortKeys=None, fieldnamesAndMaximums=None, suggestionsCount=0, suggestionsQuery=None, filterQuery=None, facets=None, **kwargs):
-        if fieldnamesAndMaximums:
-            warn("fieldnamesAndMaximums is deprecated. Please use facets")
+    def executeQuery(self, luceneQueryString, start=0, stop=10, sortKeys=None, suggestionsCount=0, suggestionsQuery=None, filterQuery=None, facets=None, **kwargs):
         if not luceneQueryString:
             raise ValueError("Empty luceneQueryString not allowed.")
         arguments = dict(
@@ -90,7 +90,6 @@ class SolrInterface(Observable):
             arguments['fq'] = filterQuery
 
         arguments.update(_facetArguments(facets))
-        arguments.update(_drilldownArguments(fieldnamesAndMaximums))
         if suggestionsCount > 0 and suggestionsQuery:
             arguments["spellcheck"] = 'true'
             arguments["spellcheck.count"] = suggestionsCount
@@ -103,7 +102,7 @@ class SolrInterface(Observable):
         identifiers = [doc.values()[0] for doc in jsonResponse['response']['docs']]
         qtime = jsonResponse['responseHeader']['QTime']
         response = SolrResponse(total=recordCount, hits=identifiers, queryTime=qtime)
-        if not (fieldnamesAndMaximums or facets) is None:
+        if not facets is None:
              _updateResponseWithDrilldownData(arguments, jsonResponse['facet_counts'], response)
         if suggestionsCount > 0 and suggestionsQuery:
             _updateResponseWithSuggestionData(arguments, jsonResponse['spellcheck']['suggestions'], response)
@@ -131,7 +130,7 @@ class SolrInterface(Observable):
     def _send(self, path, body, contentType="text/xml"):
         headers = None
         if body:
-            headers={'Content-Type': contentType, 'Content-Length': len(body)}
+             headers={'Content-Type': contentType, 'Content-Length': len(body)}
         host, port = self._solrServer() # WARNING: can return a different server each time.
         response = yield self._httppost(host=host, port=port, request=path, body=body, headers=headers)
         header, body = response.split("\r\n\r\n", 1)
@@ -164,9 +163,11 @@ def _facetArguments(facets):
         arguments.setdefault('f.%s.facet.limit' % facet['field'], []).append(maxTerms if maxTerms else -1)
 
     def facetSort(facet):
-        sortByTerm = facet.get('sortByTerm', None)
-        if sortByTerm is not None:
-            arguments.setdefault('f.%s.facet.sort' % facet['field'], []).append('index' if sortByTerm else 'count')
+        sortBy = facet.get('sortBy', None)
+        if sortBy is not None:
+            if not sortBy in SolrInterface.SUPPORTED_SORTBY_VALUES:
+                raise ValueError("'sortBy' should be one of %s" % SolrInterface.SUPPORTED_SORTBY_VALUES)
+            arguments.setdefault('f.%s.facet.sort' % facet['field'], []).append(sortBy)
 
     arguments = {}
     if facets is not None:
@@ -180,23 +181,12 @@ def _facetArguments(facets):
                 facetSort(facet)
             else:
                 arguments["facet.pivot"] = ','.join(f['field'] for f in facet)
+                arguments['facet.pivot.mincount'] = "0"
                 for f in facet:
                     facetLimit(f)
                     facetSort(f)
     return arguments
 
-def _drilldownArguments(fieldnamesAndMaximums):
-    arguments = {}
-    if fieldnamesAndMaximums is not None:
-        arguments['facet'] = "on"
-        arguments['facet.mincount'] = "1"
-        arguments['facet.field'] = []
-        for fieldname, maxTerms, sortedByTermCount in fieldnamesAndMaximums:
-            arguments['facet.field'].append(fieldname)
-            arguments.setdefault('f.%s.facet.limit' % fieldname, []).append(-1 if maxTerms == 0 else maxTerms)
-            arguments.setdefault('f.%s.facet.sort' % fieldname, []).append('count' if sortedByTermCount else 'index')
-    return arguments
-
 def _updateResponseWithDrilldownData(arguments, facetCounts, response):
     drilldownData = []
     for fieldname, termCounts in facetCounts['facet_fields'].items():
@@ -215,7 +205,9 @@ def _buildDrilldownDict(drilldown):
     for d in drilldown:
         termDict = {'term': d['value'], 'count': d['count']}
         if 'pivot' in d:
-            termDict['pivot'] = _buildDrilldownDict(d['pivot'])
+            pivot = d['pivot']
+            if pivot:
+                termDict['pivot'] = _buildDrilldownDict(pivot)
         terms.append(termDict)
     return dict(fieldname=fieldname, terms=terms)
 
diff --git a/test/_integration/helperserver.py b/test/_integration/helperserver.py
index 8926261..efbebf0 100755
--- a/test/_integration/helperserver.py
+++ b/test/_integration/helperserver.py
@@ -65,7 +65,7 @@ def createServer(reactor, port, solrPort):
     return be((Observable(),
         (ObservableHttpServer(reactor, port),
             (HelperHandler(),
-                (SolrInterface(host='localhost', port=solrPort, core='records', commitTimeout=0.01),)
+                (SolrInterface(host='localhost', port=solrPort, core='records', commitTimeout=0.5),)
             )
         )
     ))
diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
index db14d0f..2000fd0 100644
--- a/test/_integration/integrationstate.py
+++ b/test/_integration/integrationstate.py
@@ -89,6 +89,7 @@ class IntegrationState(_IntegrationState):
         print "Creating database in", self.integrationTempdir
         try:
             self._uploadSolrData(join(self.testdataDir))
+            sleep(2)
             print "Finished creating database in %s seconds" % (time() - start)
         except Exception, e:
             print 'Error received while creating database for', self.stateName
@@ -97,6 +98,7 @@ class IntegrationState(_IntegrationState):
 
     def _uploadSolrData(self, dataDir):
         for docFile in sorted(glob(join(dataDir, '*.doc'))):
+            # print docFile
             identifier = basename(docFile).rsplit('.',1)[0]
             addKwargs=dict(
                 identifier=identifier,
diff --git a/test/_integration/solrinterfacetest.py b/test/_integration/solrinterfacetest.py
index 3ca75ae..c2aa504 100644
--- a/test/_integration/solrinterfacetest.py
+++ b/test/_integration/solrinterfacetest.py
@@ -29,6 +29,7 @@ from seecr.test.utils import postRequest
 from simplejson import dumps, loads
 from time import sleep
 
+
 class SolrInterfaceTest(IntegrationTestCase):
     def testAddQueryDelete(self):
         addKwargs=dict(
@@ -40,15 +41,15 @@ class SolrInterfaceTest(IntegrationTestCase):
             )
         header, body = postRequest(port=self.solrClientPort, path='/add', data=dumps(addKwargs), parse=False)
         self.assertEquals('', body)
-        sleep(0.1)
-
+        sleep(0.6)
+        
         response = self.executeQuery(luceneQueryString='__id__:record\:testAddQueryDelete')
         self.assertEquals(1, response['total'])
         self.assertEquals(['record:testAddQueryDelete'], response['hits'])
 
         header, body = postRequest(port=self.solrClientPort, path='/delete', data=dumps(dict(identifier='record:testAddQueryDelete')), parse=False)
         self.assertEquals('', body)
-        sleep(0.1)
+        sleep(0.6)
 
         response = self.executeQuery(luceneQueryString='__id__:record\:testAddQueryDelete')
         self.assertEquals(0, response['total'])
@@ -59,9 +60,36 @@ class SolrInterfaceTest(IntegrationTestCase):
 
     def testPivoting(self):
         response = self.executeQuery(luceneQueryString='*:*', facets=[
-            [{'field': 'untokenized.rdf:type'}, {'field': 'untokenized.dc:date', 'maxTerms': 4}]            
+            [{'field': 'untokenized.rdf:type', 'maxTerms': 2}, {'field': 'untokenized.dc:date', 'maxTerms': 2}]            
         ])
-        self.assertEquals({}, response)
+        self.assertEquals([
+            {
+                "fieldname": "untokenized.rdf:type", 
+                "terms": [
+                    {
+                        "count": 46, 
+                        "pivot": {
+                            "fieldname": "untokenized.dc:date", 
+                            "terms": [
+                                {
+                                    "count": 5, 
+                                    "term": "1975"
+                                }, 
+                                {
+                                    "count": 4, 
+                                    "term": "1971"
+                                }, 
+                            ]
+                        }, 
+                        "term": "http://dbpedia.org/ontology/Book"
+                    }, 
+                    {
+                        "count": 4, 
+                        "term": "http://www.w3.org/2004/02/skos/core#Concept"
+                    }, 
+                ]
+            }
+        ], response['drilldownData'])
 
     def executeQuery(self, **queryKwargs):
         header, body = postRequest(port=self.solrClientPort, path='/executeQuery', data=dumps(queryKwargs), parse=False)
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
index 6e1b9ed..310092a 100644
--- a/test/solrinterfacetest.py
+++ b/test/solrinterfacetest.py
@@ -33,6 +33,7 @@ from meresco.core import Observable
 from meresco.solr.solrinterface import SolrInterface
 from seecr.test import CallTrace, SeecrTestCase
 
+
 class SolrInterfaceTest(SeecrTestCase):
     def setUp(self):
         SeecrTestCase.setUp(self)
@@ -158,17 +159,20 @@ class SolrInterfaceTest(SeecrTestCase):
         self.assertEquals(['1','3','5'], response.hits)
 
     def testDrilldown(self):
-        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'field': '__all__', 'maxTerms': 5, "sortByTerm": True}, {'field': '__other__', 'maxTerms': 5, 'sortByTerm': True}], response=JSON_RESPONSE % JSON_FACET_COUNTS)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'field': '__all__', 'maxTerms': 5, "sortBy": "count"}, {'field': '__other__', 'maxTerms': 5, 'sortBy': "index"}], response=JSON_RESPONSE % JSON_FACET_COUNTS)
         self.assertEquals("/solr/select", path)
-        self.assertQueryArguments("wt=json&facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
+        self.assertQueryArguments("wt=json&facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=count&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
         self.assertEquals(3, response.total)
         self.assertEquals(['1', '3', '5'], response.hits)
         self.assertEquals(['__all__', '__other__'], [f['fieldname'] for f in response.drilldownData])
         self.assertEquals([{'term': "term_0", 'count': 1}, {'term': "term_1", 'count': 2}], response.drilldownData[0]['terms'])
         self.assertEquals([{'term': "term_2", 'count': 3}, {'term': "term_3", 'count': 4}], response.drilldownData[1]['terms'])
 
+    def testDrilldownUnsupportedSortBy(self):
+        self.assertRaises(ValueError, lambda: self.executeQueryResponse("meresco.exists:true", facets=[{'field': '__all__', 'maxTerms': 5, "sortBy": "timestamp"}], response=JSON_RESPONSE % JSON_FACET_COUNTS))
+
     def testDrilldownOnSameFieldTwice(self):
-        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'field': '__all__', 'maxTerms': 5, "sortByTerm":True}, {'field': '__all__', 'maxTerms': 5, 'sortByTerm': True}], response=JSON_RESPONSE % JSON_FACET_COUNTS_SAME_FIELD_TWICE)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'field': '__all__', 'maxTerms': 5, "sortBy": "index"}, {'field': '__all__', 'maxTerms': 5, 'sortBy': "index"}], response=JSON_RESPONSE % JSON_FACET_COUNTS_SAME_FIELD_TWICE)
         self.assertQueryArguments("wt=json&facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__all__&f.__all__.facet.limit=5&f.__all__.facet.sort=index", body)
         self.assertEquals(3, response.total)
         self.assertEquals(['1', '3', '5'], response.hits)
@@ -179,10 +183,10 @@ class SolrInterfaceTest(SeecrTestCase):
     def testPivotDrilldown(self):
         response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[
                 [
-                    {'field': '__all__', 'sortByTerm': True},
+                    {'field': '__all__', 'sortBy': 'index'},
                     {'field': '__other__', 'maxTerms': 5}
                 ], 
-                {'field': '__field1__', 'maxTerms': 2, 'sortByTerm': False},
+                {'field': '__field1__', 'maxTerms': 2, 'sortBy': 'count'},
                 {'field': '__field2__', 'maxTerms': None}
             ], response=JSON_RESPONSE % JSON_FACET_WITH_PIVOT)
         arguments = parse_qs(body, keep_blank_values=True)
@@ -271,6 +275,10 @@ class SolrInterfaceTest(SeecrTestCase):
                                     }
                                 ]
                             }
+                        },
+                        {
+                            'term': 'all:3',
+                            'count': 2
                         }
                     ]
                 }
@@ -554,6 +562,12 @@ JSON_FACET_WITH_PIVOT = """,
                         "count":4
                     }
                 ]
+            },
+            {
+                "field":"__all__",
+                "value":"all:3",
+                "count":2,
+                "pivot":[]
             }
         ]
     }
-- 
1.7.2.5


From c04cd547596adfbc2bbe6f4486cbacf54199820c Mon Sep 17 00:00:00 2001
From: Hendrik Moree <hendrik@seecr.nl>
Date: Thu, 20 Dec 2012 13:52:44 +0100
Subject: [PATCH 62/66] HM/JPM: renamed HelperServer to SolrClientServer

---
 test/_integration/helperserver.py     |   85 ---------------------------------
 test/_integration/integrationstate.py |    2 +-
 test/_integration/solrclientserver.py |   85 +++++++++++++++++++++++++++++++++
 3 files changed, 86 insertions(+), 86 deletions(-)
 delete mode 100755 test/_integration/helperserver.py
 create mode 100755 test/_integration/solrclientserver.py

diff --git a/test/_integration/helperserver.py b/test/_integration/helperserver.py
deleted file mode 100755
index efbebf0..0000000
--- a/test/_integration/helperserver.py
+++ /dev/null
@@ -1,85 +0,0 @@
-#!/usr/bin/python
-## begin license ##
-# 
-# "Meresco Solr" is a set of components and tools
-#  to integrate Solr into "Meresco." 
-# 
-# Copyright (C) 2012 SURF http://www.surf.nl
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# 
-# This file is part of "Meresco Solr"
-# 
-# "Meresco Solr" is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-# 
-# "Meresco Solr" is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License
-# along with "Meresco Solr"; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-## end license ##
-
-import sys                # DO_NOT_DISTRIBUTE
-sys.path.insert(0, '../..')  # DO_NOT_DISTRIBUTE
-
-from meresco.core import Observable
-
-from weightless.core import be, compose
-from weightless.io import Reactor
-from sys import argv
-from simplejson import loads, dumps
-
-from meresco.components.http.utils import okPlainText
-from meresco.components.http import ObservableHttpServer
-from meresco.components import ParseArguments
-
-from meresco.solr import SolrInterface
-from traceback import format_exc
-
-class HelperHandler(Observable):
-    def handleRequest(self, path, Body, **kwargs):
-        if path == '/ping':
-            yield okPlainText
-            yield 'pong'
-            return
-        methodKwargs = loads(Body)
-        message = [p for p in path.split('/') if p][0]
-        yield okPlainText
-        try:
-            if message in ['add', 'delete']:
-                yield self.all.unknown(message, **methodKwargs)
-            else:
-                response = yield self.any.unknown(message, **methodKwargs)
-                yield "%s: %s" % (type(response).__name__, dumps(vars(response)))
-        except:
-            yield format_exc()
-
-
-def createServer(reactor, port, solrPort):
-    return be((Observable(),
-        (ObservableHttpServer(reactor, port),
-            (HelperHandler(),
-                (SolrInterface(host='localhost', port=solrPort, core='records', commitTimeout=0.5),)
-            )
-        )
-    ))
-
-def main():
-    parser = ParseArguments()
-    parser.addOption('', '--port', type='int', mandatory=True)
-    parser.addOption('', '--solrPort', type='int', mandatory=True)
-    options, arguments = parser.parse()
-
-    reactor = Reactor()
-    server = createServer(reactor, **vars(options))
-    list(compose(server.once.observer_init()))
-    reactor.loop()
-
-if __name__ == '__main__':
-    main()
diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
index 2000fd0..5a6b633 100644
--- a/test/_integration/integrationstate.py
+++ b/test/_integration/integrationstate.py
@@ -79,7 +79,7 @@ class IntegrationState(_IntegrationState):
         self._startServer('solr', self.binPath('start-solr'), 'http://localhost:%s/solr/%s/admin/ping' % (self.solrPort, self.solrCore), port=self.solrPort, stateDir=self.solrStatePath, config=self.configPath)
 
     def _startMerescoSolrInterfaceServer(self):
-        self._startServer('solr-client', self.binPath('helperserver.py', binDirs=[mydir]), 'http://localhost:%s/ping' % self.solrClientPort, cwd=mydir, port=self.solrClientPort, solrPort=self.solrPort)
+        self._startServer('solr-client', self.binPath('solrclientserver.py', binDirs=[mydir]), 'http://localhost:%s/ping' % self.solrClientPort, cwd=mydir, port=self.solrClientPort, solrPort=self.solrPort)
 
     def _createDatabase(self):
         if self.fastMode:
diff --git a/test/_integration/solrclientserver.py b/test/_integration/solrclientserver.py
new file mode 100755
index 0000000..7fad4ea
--- /dev/null
+++ b/test/_integration/solrclientserver.py
@@ -0,0 +1,85 @@
+#!/usr/bin/python
+## begin license ##
+# 
+# "Meresco Solr" is a set of components and tools
+#  to integrate Solr into "Meresco." 
+# 
+# Copyright (C) 2012 SURF http://www.surf.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Solr"
+# 
+# "Meresco Solr" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Solr" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Solr"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+import sys                # DO_NOT_DISTRIBUTE
+sys.path.insert(0, '../..')  # DO_NOT_DISTRIBUTE
+
+from meresco.core import Observable
+
+from weightless.core import be, compose
+from weightless.io import Reactor
+from sys import argv
+from simplejson import loads, dumps
+
+from meresco.components.http.utils import okPlainText
+from meresco.components.http import ObservableHttpServer
+from meresco.components import ParseArguments
+
+from meresco.solr import SolrInterface
+from traceback import format_exc
+
+
+class _HelperHandler(Observable):
+    def handleRequest(self, path, Body, **kwargs):
+        if path == '/ping':
+            yield okPlainText
+            yield 'pong'
+            return
+        methodKwargs = loads(Body)
+        message = [p for p in path.split('/') if p][0]
+        yield okPlainText
+        try:
+            if message in ['add', 'delete']:
+                yield self.all.unknown(message, **methodKwargs)
+            else:
+                response = yield self.any.unknown(message, **methodKwargs)
+                yield "%s: %s" % (type(response).__name__, dumps(vars(response)))
+        except:
+            yield format_exc()
+
+def createServer(reactor, port, solrPort):
+    return be((Observable(),
+        (ObservableHttpServer(reactor, port),
+            (_HelperHandler(),
+                (SolrInterface(host='localhost', port=solrPort, core='records', commitTimeout=0.5),)
+            )
+        )
+    ))
+
+def main():
+    parser = ParseArguments()
+    parser.addOption('', '--port', type='int', mandatory=True)
+    parser.addOption('', '--solrPort', type='int', mandatory=True)
+    options, arguments = parser.parse()
+
+    reactor = Reactor()
+    server = createServer(reactor, **vars(options))
+    list(compose(server.once.observer_init()))
+    reactor.loop()
+
+if __name__ == '__main__':
+    main()
-- 
1.7.2.5


From 4b58a827a64dbc8402158b820f623655b307df7e Mon Sep 17 00:00:00 2001
From: Hendrik Moree <hendrik@seecr.nl>
Date: Thu, 20 Dec 2012 16:19:07 +0100
Subject: [PATCH 63/66] JPM/HM: prefixSearch and fieldnames with json

---
 bin/start-solr                         |    6 +-
 meresco/solr/server.py                 |   17 -----
 meresco/solr/solrinterface.py          |   25 ++++----
 test/_integration/integrationstate.py  |    2 +-
 test/_integration/solrinterfacetest.py |   32 +++++++---
 test/servertest.py                     |   12 ----
 test/solrinterfacetest.py              |  114 ++++++++++++++++----------------
 7 files changed, 96 insertions(+), 112 deletions(-)

diff --git a/bin/start-solr b/bin/start-solr
index 68b7ec2..cd2fff8 100755
--- a/bin/start-solr
+++ b/bin/start-solr
@@ -51,10 +51,8 @@ Example config:
     "core1": {},
     "core2": {"feature": {"option": "value"}},
     "core3": {"booleanFeature": true},
-    "core4": {"schemaExtension": [
-        {"extensionType":"fieldTypeFilter", "fieldTypeName":"text_ws", "filterClass":"solr.ASCIIFoldingFilterFactory"}
-    ]},
-    "core5": {"additionalSolrConfig": "full path to additional solrconfig.xml"}
+    "core4": {"additionalSchemaXml": "path to additional schema.xml"},
+    "core5": {"additionalSolrConfig": "path to additional solrconfig.xml"}
 }
 """)
     parser.format_epilog = lambda formatter: parser.epilog
diff --git a/meresco/solr/server.py b/meresco/solr/server.py
index 019ffe1..3884e10 100644
--- a/meresco/solr/server.py
+++ b/meresco/solr/server.py
@@ -66,24 +66,7 @@ class Server(object):
             for feature, options in features.items():
                 self._setupFeature(name=feature, core=core, options=options)
 
-    def _setupFeatureSchemaExtension(self, core, options):
-        schemaXmlFile = join(self.stateDir, 'cores', core, 'conf', 'schema.xml')
-        schemaXml = parse(open(schemaXmlFile))
-        for option in options:
-            if option.get('extensionType') == 'fieldTypeFilter':
-                fieldTypeName = option['fieldTypeName']
-                fieldTypes = schemaXml.xpath('/schema/types/fieldType[@name="%s"]' %  fieldTypeName)
-                assert len(fieldTypes) == 1
-                analyzer = fieldTypes[0].xpath('analyzer')[0]
-                SubElement(analyzer, 'filter', attrib={'class': option['filterClass']})
-
-        with open(schemaXmlFile, 'w') as f:
-            f.write(tostring(schemaXml, encoding="UTF-8", pretty_print=True, xml_declaration=True))
-
     def _setupFeature(self, name, core, options):
-        if name == 'schemaExtension':
-            self._setupFeatureSchemaExtension(core=core, options=options)
-            return
         if name == 'additionalSolrConfig':
             filepath = options if options.startswith('/') else join(self.configBasedir, options)
             self._extendSolrConfig(core=core, lxmlElementList=parse(open(filepath)).xpath('/config/*'))
diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index a7cde7a..6409989 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -26,8 +26,6 @@
 ## end license ##
 
 from urllib import urlencode
-from lxml.etree import parse
-from StringIO import StringIO
 from xml.sax.saxutils import escape as escapeXml
 from weightless.http import httpget, httppost
 from meresco.core import Observable
@@ -36,8 +34,6 @@ from simplejson import loads
 from solrresponse import SolrResponse
 
 
-CRLF = '\r\n'
-
 class SolrInterface(Observable):
     COUNT = 'count'
     INDEX = 'index'
@@ -109,21 +105,21 @@ class SolrInterface(Observable):
         raise StopIteration(response)
 
     def prefixSearch(self, field, prefix, limit=10):
-        arguments = {'terms.fl': field, 'terms.prefix': prefix, 'terms.limit': limit}
+        arguments = {'terms.fl': field, 'terms.prefix': prefix, 'terms.limit': limit, 'wt': 'json'}
         path = self._path('terms')
         body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
-        xml = parse(StringIO(body))
-        terms = xml.xpath('/response/lst[@name="terms"]/lst[@name="%s"]/int/@name' % field)
-        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
+        jsonResponse = loads(body)
+        terms = jsonResponse['terms'][field][::2]
+        qtime = jsonResponse['responseHeader']['QTime']
         response = SolrResponse(total=len(terms), hits=terms, queryTime=qtime)
         raise StopIteration(response)
     
     def fieldnames(self):
         path = self._path('admin/luke')
-        body = yield self._read(path)
-        xml = parse(StringIO(body))
-        fieldnames = xml.xpath('/response/lst[@name="fields"]/lst/@name')
-        qtime = int(xml.xpath('/response/lst[@name="responseHeader"]/int[@name="QTime"]/text()')[0])
+        body = yield self._read(path, arguments={'wt': 'json'})
+        jsonResponse = loads(body)
+        fieldnames = jsonResponse['fields'].keys()
+        qtime = jsonResponse['responseHeader']['QTime']
         response = SolrResponse(total=len(fieldnames), hits=fieldnames, queryTime=qtime)
         raise StopIteration(response)
 
@@ -137,8 +133,10 @@ class SolrInterface(Observable):
         self._verify200(header, response)
         raise StopIteration(body)
 
-    def _read(self, path):
+    def _read(self, path, arguments=None):
         host, port = self._solrServer()
+        if arguments:
+            path += '?' + urlencode(arguments, doseq=True)
         response = yield self._httpget(host, port, path)
         header, body = response.split('\r\n\r\n', 1)
         self._verify200(header, response)
@@ -218,3 +216,4 @@ def _updateResponseWithSuggestionData(arguments, spellcheckResult, response):
         suggestion = spellcheckResult[i+1]
         suggestions[name] = (suggestion['startOffset'], suggestion['endOffset'], suggestion['suggestion'])
     response.suggestions = suggestions
+
diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
index 5a6b633..e59c059 100644
--- a/test/_integration/integrationstate.py
+++ b/test/_integration/integrationstate.py
@@ -61,7 +61,7 @@ class IntegrationState(_IntegrationState):
 
         self.solrCore = "records"
         self.config = {
-                self.solrCore: {}
+                self.solrCore: {'autocomplete': True, 'suggestions': {'field': '__all__'}}
             }
         self.configPath = join(self.integrationTempdir, 'solr.config')
         with open(self.configPath, 'w') as f:
diff --git a/test/_integration/solrinterfacetest.py b/test/_integration/solrinterfacetest.py
index c2aa504..4e02268 100644
--- a/test/_integration/solrinterfacetest.py
+++ b/test/_integration/solrinterfacetest.py
@@ -41,25 +41,25 @@ class SolrInterfaceTest(IntegrationTestCase):
             )
         header, body = postRequest(port=self.solrClientPort, path='/add', data=dumps(addKwargs), parse=False)
         self.assertEquals('', body)
-        sleep(0.6)
+        sleep(0.75)
         
-        response = self.executeQuery(luceneQueryString='__id__:record\:testAddQueryDelete')
+        response = self.solrRequest(luceneQueryString='__id__:record\:testAddQueryDelete')
         self.assertEquals(1, response['total'])
         self.assertEquals(['record:testAddQueryDelete'], response['hits'])
 
         header, body = postRequest(port=self.solrClientPort, path='/delete', data=dumps(dict(identifier='record:testAddQueryDelete')), parse=False)
         self.assertEquals('', body)
-        sleep(0.6)
+        sleep(0.75)
 
-        response = self.executeQuery(luceneQueryString='__id__:record\:testAddQueryDelete')
+        response = self.solrRequest(luceneQueryString='__id__:record\:testAddQueryDelete')
         self.assertEquals(0, response['total'])
 
     def testDatabase(self):
-        response = self.executeQuery(luceneQueryString='*:*')
+        response = self.solrRequest(luceneQueryString='*:*')
         self.assertEquals(69, response['total'])
 
     def testPivoting(self):
-        response = self.executeQuery(luceneQueryString='*:*', facets=[
+        response = self.solrRequest(luceneQueryString='*:*', facets=[
             [{'field': 'untokenized.rdf:type', 'maxTerms': 2}, {'field': 'untokenized.dc:date', 'maxTerms': 2}]            
         ])
         self.assertEquals([
@@ -91,8 +91,22 @@ class SolrInterfaceTest(IntegrationTestCase):
             }
         ], response['drilldownData'])
 
-    def executeQuery(self, **queryKwargs):
-        header, body = postRequest(port=self.solrClientPort, path='/executeQuery', data=dumps(queryKwargs), parse=False)
+    def testPrefixSearch(self):
+        response = self.solrRequest(path='/prefixSearch', prefix="cha", field='__all__')
+        self.assertEquals(['charles', 'challenge', 'chamber'], response['hits'])
+
+    def testFieldnames(self):
+        response = self.solrRequest(path='/fieldnames')
+        fields = response['hits']
+        self.assertEquals(28, len(fields))
+        self.assertTrue('__all__' in fields, fields)
+
+    def testSuggestions(self):
+        response = self.solrRequest(path='/executeQuery', luceneQueryString="*:*", suggestionsQuery='callenge', suggestionsCount=5)
+        self.assertEquals([0, 8, ['challenge', 'college', 'vallen', 'alleen', 'gallery']], response['suggestions']['callenge'])
+
+    def solrRequest(self, path="/executeQuery", **queryKwargs):
+        header, body = postRequest(port=self.solrClientPort, path=path, data=dumps(queryKwargs), parse=False)
         responseType, responseDict = body.split(': ', 1)
-        self.assertEquals('SolrResponse', responseType)
+        self.assertEquals('SolrResponse', responseType, responseType + responseDict)
         return loads(responseDict)
diff --git a/test/servertest.py b/test/servertest.py
index d1a33c9..caac6cd 100644
--- a/test/servertest.py
+++ b/test/servertest.py
@@ -209,18 +209,6 @@ class ServerTest(SeecrTestCase):
         ), execCalled[0][0])
         self.assertEquals({}, execCalled[0][1])
 
-    def testSetupSolrCoreWithExtraFilters(self):
-        solrDataDir = join(self.tempdir, 'solr-data')
-        self._createServer(stateDir=solrDataDir, port=8042, config={'core1': {'schemaExtension':[
-            { 
-                'extensionType': 'fieldTypeFilter',
-                'fieldTypeName': 'text_ws',
-                'filterClass': 'solr.ASCIIFoldingFilterFactory',
-            }
-        ]}})
-        schemaXml = parse(open(join(solrDataDir, 'cores', 'core1', 'conf', 'schema.xml')))
-        self.assertEquals(['solr.LowerCaseFilterFactory', 'solr.ASCIIFoldingFilterFactory'], schemaXml.xpath('/schema/types/fieldType[@name="text_ws"]/analyzer/filter/@class'))
-
     def xtestStartSolrReally(self):
         tempdir = "/tmp/testSetupSolrConfig"
         isdir(tempdir) and rmtree(tempdir)
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
index 310092a..d108de6 100644
--- a/test/solrinterfacetest.py
+++ b/test/solrinterfacetest.py
@@ -134,12 +134,12 @@ class SolrInterfaceTest(SeecrTestCase):
         self.assertEquals(10, response.total)
         self.assertEquals(76, response.queryTime)
         self.assertEquals('/solr/terms', path)
-        self.assertQueryArguments('terms.limit=10&terms.prefix=ho&terms.fl=afield', body)
+        self.assertQueryArguments('terms.limit=10&terms.prefix=ho&terms.fl=afield&wt=json', body)
 
     def testPrefixSearchWithLimit(self):
         response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", limit=5, response=TERMS_PREFIX_RESPONSE) 
         self.assertEquals('/solr/terms', path)
-        self.assertQueryArguments('terms.limit=5&terms.prefix=ho&terms.fl=afield', body)
+        self.assertQueryArguments('terms.limit=5&terms.prefix=ho&terms.fl=afield&wt=json', body)
 
     def testExecuteEmptyQuery(self):
         self.assertRaises(ValueError, self.executeQueryResponse, '', response=JSON_RESPONSE % "")
@@ -338,8 +338,8 @@ class SolrInterfaceTest(SeecrTestCase):
 
     def testFieldnames(self):
         readData = []
-        def read(path):
-            readData.append(path)
+        def read(path, arguments):
+            readData.append((path, arguments))
         self._solrInterface._read = read
         gen = self._solrInterface.fieldnames()
         gen.next()
@@ -347,8 +347,8 @@ class SolrInterfaceTest(SeecrTestCase):
             gen.send(FIELDNAMES_RESPONSE)
         except StopIteration, e:
             (response,) = e.args 
-        self.assertEquals(['/solr/admin/luke'], readData)
-        self.assertEquals(['__all__', '__exists__', '__id__', '__timestamp__', 'field0', 'field1', 'untokenized.field0'], response.hits)
+        self.assertEquals([('/solr/admin/luke', {'wt': 'json'})], readData)
+        self.assertEquals(sorted(['__all__', '__exists__', '__id__', '__timestamp__', 'field0', 'field1', 'untokenized.field0']), sorted(response.hits))
 
     def testPassFilterQuery(self):
         response, (path, body) = self.executeQueryResponse("*", filterQuery="field:value", response=JSON_RESPONSE % "") 
@@ -405,26 +405,28 @@ class SolrInterfaceTest(SeecrTestCase):
         self.assertEquals(arguments1, arguments2)
 
 TERMS_PREFIX_RESPONSE = """
-<response>
-    <lst name="responseHeader">
-        <int name="status">0</int>
-        <int name="QTime">76</int>
-    </lst>
-    <lst name="terms">
-        <lst name="afield">
-            <int name="hoogte">221194</int>
-            <int name="holland">162140</int>
-            <int name="hoe">57391</int>
-            <int name="horticulture">30914</int>
-            <int name="houden">15239</int>
-            <int name="housing">14980</int>
-            <int name="houdt">14178</int>
-            <int name="hoge">12870</int>
-            <int name="hoofd">12583</int>
-            <int name="houten">10945</int>
-        </lst>
-    </lst>
-</response>"""
+{
+    "responseHeader": 
+    {
+        "status":0,
+        "QTime":76
+    },
+    "terms":
+    {
+        "afield":[
+            "hoogte",221194,
+            "holland",162140,
+            "hoe",57391,
+            "horticulture",30914,
+            "houden",15239,
+            "housing",14980,
+            "houdt",14178,
+            "hoge",12870,
+            "hoofd",12583,
+            "houten",10945
+        ]
+    }
+}"""
 
 JSON_SUGGESTIONS = """,
 "spellcheck":{
@@ -472,36 +474,36 @@ JSON_FACET_COUNTS_SAME_FIELD_TWICE = """,
 }"""
 
 FIELDNAMES_RESPONSE="""
-<response>
-<lst name="responseHeader">
-<int name="status">0</int>
-<int name="QTime">4701</int>
-</lst>
-<lst name="index">
-<int name="numDocs">265054</int>
-<int name="maxDoc">332132</int>
-<int name="numTerms">1972551</int>
-<long name="version">1348587033477</long>
-<int name="segmentCount">11</int>
-<bool name="current">true</bool>
-<bool name="hasDeletions">true</bool>
-<str name="directory">
-org.apache.lucene.store.MMapDirectory:org.apache.lucene.store.MMapDirectory@/data/dev/index-state/14e40aff-9ee8-4b6c-826c-e0fb82232e33-solr/cores/records/data/index lockFactory=org.apache.lucene.store.NativeFSLockFactory@1c851ed
-</str>
-<date name="lastModified">2012-09-26T22:23:31Z</date>
-</lst>
-<lst name="fields">
-<lst name="__all__">...</lst>
-<lst name="__exists__">...</lst>
-<lst name="__id__">...</lst>
-<lst name="__timestamp__">...</lst>
-<lst name="field0">...</lst>
-<lst name="field1">...</lst>
-<lst name="untokenized.field0">...</lst>
-</lst>
-<lst name="info">...</lst>
-</response>
-"""
+{
+    "responseHeader":{
+        "status":0,
+        "QTime":2
+    },
+    "index":{
+        "numDocs":69,
+        "maxDoc":69,
+        "version":7,
+        "segmentCount":1,
+        "current":true,
+        "hasDeletions":false,
+        "directory":"org.apache.lucene.store.NRTCachingDirectory:NRTCachingDirectory(org.apache.lucene.store.MMapDirectory@/tmp/integrationtest-solr-default/solr/cores/records/data/index lockFactory=org.apache.lucene.store.NativeFSLockFactory@7d0c3a08; maxCacheMB=48.0 maxMergeSizeMB=4.0)",
+        "userData":{}
+    },
+    "fields": {
+        "__all__": {
+            "type":"text_ws",
+            "schema":"IT-M----------",
+            "index":"(unstored field)",
+            "docs":62
+        },
+        "__exists__": "...",
+        "__id__": "...",
+        "__timestamp__": "...",
+        "field0": "...",
+        "field1": "...",
+        "untokenized.field0": "..."
+    }
+}"""
 
 
 JSON_RESPONSE = """
-- 
1.7.2.5


From e6c983fe2cce62aea1230f3e2dc69c1edc67dac7 Mon Sep 17 00:00:00 2001
From: Hendrik Moree <hendrik@seecr.nl>
Date: Thu, 20 Dec 2012 16:59:17 +0100
Subject: [PATCH 64/66] JPM/HM: fieldname iso field

---
 meresco/solr/solrinterface.py |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index 6409989..355ab2a 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -104,12 +104,12 @@ class SolrInterface(Observable):
             _updateResponseWithSuggestionData(arguments, jsonResponse['spellcheck']['suggestions'], response)
         raise StopIteration(response)
 
-    def prefixSearch(self, field, prefix, limit=10):
-        arguments = {'terms.fl': field, 'terms.prefix': prefix, 'terms.limit': limit, 'wt': 'json'}
+    def prefixSearch(self, fieldname, prefix, limit=10):
+        arguments = {'terms.fl': fieldname, 'terms.prefix': prefix, 'terms.limit': limit, 'wt': 'json'}
         path = self._path('terms')
         body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
         jsonResponse = loads(body)
-        terms = jsonResponse['terms'][field][::2]
+        terms = jsonResponse['terms'][fieldname][::2]
         qtime = jsonResponse['responseHeader']['QTime']
         response = SolrResponse(total=len(terms), hits=terms, queryTime=qtime)
         raise StopIteration(response)
@@ -158,14 +158,14 @@ class SolrInterface(Observable):
 def _facetArguments(facets):
     def facetLimit(facet):
         maxTerms = facet.get('maxTerms', None)
-        arguments.setdefault('f.%s.facet.limit' % facet['field'], []).append(maxTerms if maxTerms else -1)
+        arguments.setdefault('f.%s.facet.limit' % facet['fieldname'], []).append(maxTerms if maxTerms else -1)
 
     def facetSort(facet):
         sortBy = facet.get('sortBy', None)
         if sortBy is not None:
             if not sortBy in SolrInterface.SUPPORTED_SORTBY_VALUES:
                 raise ValueError("'sortBy' should be one of %s" % SolrInterface.SUPPORTED_SORTBY_VALUES)
-            arguments.setdefault('f.%s.facet.sort' % facet['field'], []).append(sortBy)
+            arguments.setdefault('f.%s.facet.sort' % facet['fieldname'], []).append(sortBy)
 
     arguments = {}
     if facets is not None:
@@ -174,11 +174,11 @@ def _facetArguments(facets):
         arguments['facet.field'] = []
         for facet in facets:
             if isinstance(facet, dict):
-                arguments['facet.field'].append(facet['field'])
+                arguments['facet.field'].append(facet['fieldname'])
                 facetLimit(facet)
                 facetSort(facet)
             else:
-                arguments["facet.pivot"] = ','.join(f['field'] for f in facet)
+                arguments["facet.pivot"] = ','.join(f['fieldname'] for f in facet)
                 arguments['facet.pivot.mincount'] = "0"
                 for f in facet:
                     facetLimit(f)
-- 
1.7.2.5


From 0472fd0dd28da09116734383a03511e47cb4e3e7 Mon Sep 17 00:00:00 2001
From: Hendrik Moree <hendrik@seecr.nl>
Date: Fri, 21 Dec 2012 09:49:44 +0100
Subject: [PATCH 65/66] JJ/HM: prefixSearch with fieldname iso field

---
 test/solrinterfacetest.py |   18 +++++++++---------
 1 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
index d108de6..944dede 100644
--- a/test/solrinterfacetest.py
+++ b/test/solrinterfacetest.py
@@ -129,7 +129,7 @@ class SolrInterfaceTest(SeecrTestCase):
         self.assertEquals(['1','3','5'], response.hits)
 
     def testPrefixSearch(self):
-        response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", response=TERMS_PREFIX_RESPONSE) 
+        response, (path, body) = self.executePrefixSearch(prefix="ho", fieldname="afield", response=TERMS_PREFIX_RESPONSE) 
         self.assertEquals(['hoogte', 'holland', 'hoe', 'horticulture', 'houden', 'housing', 'houdt', 'hoge', 'hoofd', 'houten'], response.hits)
         self.assertEquals(10, response.total)
         self.assertEquals(76, response.queryTime)
@@ -137,7 +137,7 @@ class SolrInterfaceTest(SeecrTestCase):
         self.assertQueryArguments('terms.limit=10&terms.prefix=ho&terms.fl=afield&wt=json', body)
 
     def testPrefixSearchWithLimit(self):
-        response, (path, body) = self.executePrefixSearch(prefix="ho", field="afield", limit=5, response=TERMS_PREFIX_RESPONSE) 
+        response, (path, body) = self.executePrefixSearch(prefix="ho", fieldname="afield", limit=5, response=TERMS_PREFIX_RESPONSE) 
         self.assertEquals('/solr/terms', path)
         self.assertQueryArguments('terms.limit=5&terms.prefix=ho&terms.fl=afield&wt=json', body)
 
@@ -159,7 +159,7 @@ class SolrInterfaceTest(SeecrTestCase):
         self.assertEquals(['1','3','5'], response.hits)
 
     def testDrilldown(self):
-        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'field': '__all__', 'maxTerms': 5, "sortBy": "count"}, {'field': '__other__', 'maxTerms': 5, 'sortBy': "index"}], response=JSON_RESPONSE % JSON_FACET_COUNTS)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'fieldname': '__all__', 'maxTerms': 5, "sortBy": "count"}, {'fieldname': '__other__', 'maxTerms': 5, 'sortBy': "index"}], response=JSON_RESPONSE % JSON_FACET_COUNTS)
         self.assertEquals("/solr/select", path)
         self.assertQueryArguments("wt=json&facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=count&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
         self.assertEquals(3, response.total)
@@ -169,10 +169,10 @@ class SolrInterfaceTest(SeecrTestCase):
         self.assertEquals([{'term': "term_2", 'count': 3}, {'term': "term_3", 'count': 4}], response.drilldownData[1]['terms'])
 
     def testDrilldownUnsupportedSortBy(self):
-        self.assertRaises(ValueError, lambda: self.executeQueryResponse("meresco.exists:true", facets=[{'field': '__all__', 'maxTerms': 5, "sortBy": "timestamp"}], response=JSON_RESPONSE % JSON_FACET_COUNTS))
+        self.assertRaises(ValueError, lambda: self.executeQueryResponse("meresco.exists:true", facets=[{'fieldname': '__all__', 'maxTerms': 5, "sortBy": "timestamp"}], response=JSON_RESPONSE % JSON_FACET_COUNTS))
 
     def testDrilldownOnSameFieldTwice(self):
-        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'field': '__all__', 'maxTerms': 5, "sortBy": "index"}, {'field': '__all__', 'maxTerms': 5, 'sortBy': "index"}], response=JSON_RESPONSE % JSON_FACET_COUNTS_SAME_FIELD_TWICE)
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'fieldname': '__all__', 'maxTerms': 5, "sortBy": "index"}, {'fieldname': '__all__', 'maxTerms': 5, 'sortBy': "index"}], response=JSON_RESPONSE % JSON_FACET_COUNTS_SAME_FIELD_TWICE)
         self.assertQueryArguments("wt=json&facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__all__&f.__all__.facet.limit=5&f.__all__.facet.sort=index", body)
         self.assertEquals(3, response.total)
         self.assertEquals(['1', '3', '5'], response.hits)
@@ -183,11 +183,11 @@ class SolrInterfaceTest(SeecrTestCase):
     def testPivotDrilldown(self):
         response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[
                 [
-                    {'field': '__all__', 'sortBy': 'index'},
-                    {'field': '__other__', 'maxTerms': 5}
+                    {'fieldname': '__all__', 'sortBy': 'index'},
+                    {'fieldname': '__other__', 'maxTerms': 5}
                 ], 
-                {'field': '__field1__', 'maxTerms': 2, 'sortBy': 'count'},
-                {'field': '__field2__', 'maxTerms': None}
+                {'fieldname': '__field1__', 'maxTerms': 2, 'sortBy': 'count'},
+                {'fieldname': '__field2__', 'maxTerms': None}
             ], response=JSON_RESPONSE % JSON_FACET_WITH_PIVOT)
         arguments = parse_qs(body, keep_blank_values=True)
         self.assertEquals(['1'], arguments['facet.mincount'])
-- 
1.7.2.5


From 615e8683f79e388e85406f6e79e5f6e69d2b96f1 Mon Sep 17 00:00:00 2001
From: Hendrik Moree <hendrik@seecr.nl>
Date: Fri, 21 Dec 2012 10:36:00 +0100
Subject: [PATCH 66/66] JJ/HM: fieldname iso field

---
 test/_integration/solrinterfacetest.py |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/test/_integration/solrinterfacetest.py b/test/_integration/solrinterfacetest.py
index 4e02268..8b3406b 100644
--- a/test/_integration/solrinterfacetest.py
+++ b/test/_integration/solrinterfacetest.py
@@ -60,7 +60,7 @@ class SolrInterfaceTest(IntegrationTestCase):
 
     def testPivoting(self):
         response = self.solrRequest(luceneQueryString='*:*', facets=[
-            [{'field': 'untokenized.rdf:type', 'maxTerms': 2}, {'field': 'untokenized.dc:date', 'maxTerms': 2}]            
+            [{'fieldname': 'untokenized.rdf:type', 'maxTerms': 2}, {'fieldname': 'untokenized.dc:date', 'maxTerms': 2}]            
         ])
         self.assertEquals([
             {
@@ -92,7 +92,7 @@ class SolrInterfaceTest(IntegrationTestCase):
         ], response['drilldownData'])
 
     def testPrefixSearch(self):
-        response = self.solrRequest(path='/prefixSearch', prefix="cha", field='__all__')
+        response = self.solrRequest(path='/prefixSearch', prefix="cha", fieldname='__all__')
         self.assertEquals(['charles', 'challenge', 'chamber'], response['hits'])
 
     def testFieldnames(self):
-- 
1.7.2.5

