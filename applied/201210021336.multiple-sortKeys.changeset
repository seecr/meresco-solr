Changeset created on Tue Oct 02 13:36:45 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Solr accepts multiple sortKeys

    ExecuteQuery accepts a list with dictionaries with 'sortBy' and 'sortDescending' keys.

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-solr/workingsets/4.0.10-Edurep/version_0

diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=*.swp' '--exclude=deps.d' '--exclude=applied' version_0/meresco/solr/solrinterface.py /home/edurep/development/meresco-solr/workingsets/4.0.10-Edurep/version_1/meresco/solr/solrinterface.py
--- version_0/meresco/solr/solrinterface.py	2012-10-01 11:21:19.000000000 +0200
+++ version_1/meresco/solr/solrinterface.py	2012-10-02 15:36:41.000000000 +0200
@@ -70,7 +70,7 @@
         path += "?commitWithin=%d" % self._commitWithin
         yield self._send(path=path, body="<delete><id>%s</id></delete>" % escapeXml(identifier))
 
-    def executeQuery(self, luceneQueryString, start=0, stop=10, sortBy=None, sortDescending=None, fieldnamesAndMaximums=None, suggestionsCount=0, suggestionsQuery=None, **kwargs):
+    def executeQuery(self, luceneQueryString, start=0, stop=10, sortKeys=None, fieldnamesAndMaximums=None, suggestionsCount=0, suggestionsQuery=None, **kwargs):
         if not luceneQueryString:
             raise ValueError("Empty luceneQueryString not allowed.")
         arguments = dict(
@@ -78,8 +78,8 @@
                 start=start, 
                 rows=stop-start, 
             )
-        if sortBy is not None:
-            arguments["sort"] = "%s %s" % (sortBy, 'desc' if sortDescending else 'asc')
+        if sortKeys:
+            arguments["sort"] = ','.join("%s %s" % (sortKey['sortBy'], 'desc' if sortKey['sortDescending'] else 'asc') for sortKey in sortKeys)
         arguments.update(_drilldownArguments(fieldnamesAndMaximums))
         if suggestionsCount > 0 and suggestionsQuery:
             arguments["spellcheck"] = 'true'
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=*.swp' '--exclude=deps.d' '--exclude=applied' version_0/test/solrinterfacetest.py /home/edurep/development/meresco-solr/workingsets/4.0.10-Edurep/version_1/test/solrinterfacetest.py
--- version_0/test/solrinterfacetest.py	2012-10-01 11:21:19.000000000 +0200
+++ version_1/test/solrinterfacetest.py	2012-10-02 15:36:41.000000000 +0200
@@ -47,7 +47,7 @@
         list(interface.add("recordId", "ignored", "<record><data>recordData</data></record>"))
         self.assertEquals(1, len(sendData))
         self.assertEquals(('/solr/THE_CORE/update?commitWithin=1000', '<add><record><data>recordData</data></record></add>'), sendData[0])
-        total, hits, path = self.executeQuery("meresco.exists:true", start=5, stop=10, sortBy="field", sortDescending=True, response=RESPONSE, solrInterface=interface)
+        total, hits, path = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True)], response=RESPONSE, solrInterface=interface)
         self.assertQuery("/solr/THE_CORE/select?q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc", path)
 
     def testAdd(self):
@@ -122,7 +122,7 @@
             self.assertEquals('Value commitTimeout should be greater then zero', str(e))
 
     def testExecuteQuery(self):
-        total, hits, path = self.executeQuery("meresco.exists:true", start=0, stop=10, sortBy=None, sortDescending=False, response=RESPONSE) 
+        total, hits, path = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=None, response=RESPONSE) 
         self.assertQuery("/solr/select?q=meresco.exists%3Atrue&start=0&rows=10", path)
         self.assertEquals(3, total)
         self.assertEquals(['1','3','5'], hits)
@@ -142,13 +142,13 @@
         self.assertRaises(ValueError, self.executeQuery, '', response=RESPONSE)
 
     def testExecuteQueryWithStartStopAndSortKeys(self):
-        total, hits, path = self.executeQuery("meresco.exists:true", start=5, stop=10, sortBy="field", sortDescending=True, response=RESPONSE)
-        self.assertQuery("/solr/select?q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc", path)
+        total, hits, path = self.executeQuery("meresco.exists:true", start=5, stop=10, sortKeys=[dict(sortBy="field", sortDescending=True), dict(sortBy="anotherfield", sortDescending=False)], response=RESPONSE)
+        self.assertQuery("/solr/select?q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc,anotherfield+asc", path)
         self.assertEquals(3, total)
         self.assertEquals(['1','3','5'], hits)
 
     def testExecuteQuerySortAscending(self):
-        total, hits, path = self.executeQuery("meresco.exists:true", start=0, stop=10, sortBy="field", sortDescending=False, response=RESPONSE)
+        total, hits, path = self.executeQuery("meresco.exists:true", start=0, stop=10, sortKeys=[dict(sortBy="field", sortDescending=False)], response=RESPONSE)
         self.assertQuery("/solr/select?q=meresco.exists%3Atrue&start=0&rows=10&sort=field+asc", path)
         self.assertEquals(3, total)
         self.assertEquals(['1','3','5'], hits)
