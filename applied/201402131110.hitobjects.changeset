Changeset created on Thu Feb 13 11:10:29 UTC 2014 by Seecr (Seek You Too B.V.)

Description: Provide Hit objects as result

    Provide Hit objects as results to queries instead of just identifiers

Baseline version: 5.5.3.1

From 6e6916a8a532525d8307a93c9abb4b4101763e0c Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Thu, 13 Feb 2014 11:55:02 +0100
Subject: [PATCH 1/2] JJ: added hit to make it compatible with latest meresco

---
 meresco/solr/solrinterface.py |    8 ++++++--
 test/solrinterfacetest.py     |   12 ++++++------
 2 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index 8d0eef8..d8f948c 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -38,6 +38,10 @@ UNTOKENIZED_PREFIX = 'untokenized.'
 SORTED_PREFIX = 'sorted.'
 
 
+class Hit(object):
+    def __init__(self, id):
+        self.id = id
+
 class SolrInterface(Observable):
     COUNT = 'count'
     INDEX = 'index'
@@ -96,9 +100,9 @@ class SolrInterface(Observable):
         body = yield self._send(path, urlencode(arguments, doseq=True), contentType='application/x-www-form-urlencoded')
         jsonResponse = loads(body)
         recordCount = jsonResponse['response']['numFound']
-        identifiers = [doc.values()[0] for doc in jsonResponse['response']['docs']]
+        hits = [Hit(doc.values()[0]) for doc in jsonResponse['response']['docs']]
         qtime = jsonResponse['responseHeader']['QTime']
-        response = SolrResponse(total=recordCount, hits=identifiers, queryTime=qtime)
+        response = SolrResponse(total=recordCount, hits=hits, queryTime=qtime)
         if 'facet_counts' in jsonResponse:
              _updateResponseWithDrilldownData(arguments, jsonResponse['facet_counts'], response)
         if suggestionRequest and 'spellcheck' in jsonResponse:
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
index bd7e77f..960cc6a 100644
--- a/test/solrinterfacetest.py
+++ b/test/solrinterfacetest.py
@@ -120,7 +120,7 @@ class SolrInterfaceTest(SeecrTestCase):
         self.assertEquals("/solr/select", path)
         self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10&wt=json", body)
         self.assertEquals(3, response.total)
-        self.assertEquals(['1','3','5'], response.hits)
+        self.assertEquals(['1','3','5'], [hit.id for hit in response.hits])
 
     def testPrefixSearch(self):
         response, (path, body) = self.executePrefixSearch(prefix="ho", fieldname="afield", response=TERMS_PREFIX_RESPONSE) 
@@ -143,21 +143,21 @@ class SolrInterfaceTest(SeecrTestCase):
         self.assertEquals("/solr/select", path)
         self.assertQueryArguments("q=meresco.exists%3Atrue&start=5&rows=5&sort=field+desc,anotherfield+asc&wt=json", body)
         self.assertEquals(3, response.total)
-        self.assertEquals(['1','3','5'], response.hits)
+        self.assertEquals(['1','3','5'], [hit.id for hit in response.hits])
 
     def testExecuteQuerySortAscending(self):
         response, (path, body) = self.executeQueryResponse("meresco.exists:true", start=0, stop=10, sortKeys=[dict(sortBy="field", sortDescending=False)], response=JSON_RESPONSE % "")
         self.assertEquals("/solr/select", path)
         self.assertQueryArguments("q=meresco.exists%3Atrue&start=0&rows=10&sort=field+asc&wt=json", body)
         self.assertEquals(3, response.total)
-        self.assertEquals(['1','3','5'], response.hits)
+        self.assertEquals(['1','3','5'], [hit.id for hit in response.hits])
 
     def testDrilldown(self):
         response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'fieldname': '__all__', 'maxTerms': 5, "sortBy": "count"}, {'fieldname': '__other__', 'maxTerms': 5, 'sortBy': "index"}], response=JSON_RESPONSE % JSON_FACET_COUNTS)
         self.assertEquals("/solr/select", path)
         self.assertQueryArguments("wt=json&facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=count&f.__all__.facet.limit=5&facet.field=__other__&f.__other__.facet.limit=5&f.__other__.facet.sort=index", body)
         self.assertEquals(3, response.total)
-        self.assertEquals(['1', '3', '5'], response.hits)
+        self.assertEquals(['1', '3', '5'], [hit.id for hit in response.hits])
         self.assertEquals(['__all__', '__other__'], [f['fieldname'] for f in response.drilldownData])
         self.assertEquals([{'term': "term_0", 'count': 1}, {'term': "term_1", 'count': 2}], response.drilldownData[0]['terms'])
         self.assertEquals([{'term': "term_2", 'count': 3}, {'term': "term_3", 'count': 4}], response.drilldownData[1]['terms'])
@@ -169,7 +169,7 @@ class SolrInterfaceTest(SeecrTestCase):
         response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[{'fieldname': '__all__', 'maxTerms': 5, "sortBy": "index"}, {'fieldname': '__all__', 'maxTerms': 5, 'sortBy': "index"}], response=JSON_RESPONSE % JSON_FACET_COUNTS_SAME_FIELD_TWICE)
         self.assertQueryArguments("wt=json&facet.mincount=1&q=meresco.exists%3Atrue&start=0&rows=10&facet=on&facet.field=__all__&f.__all__.facet.sort=index&f.__all__.facet.limit=5&facet.field=__all__&f.__all__.facet.limit=5&f.__all__.facet.sort=index", body)
         self.assertEquals(3, response.total)
-        self.assertEquals(['1', '3', '5'], response.hits)
+        self.assertEquals(['1', '3', '5'], [hit.id for hit in response.hits])
         self.assertEquals(1, len(response.drilldownData))
         self.assertEquals(['__all__'], [f['fieldname'] for f in response.drilldownData])
         self.assertEquals([{'term': "term_0", 'count': 1}, {'term': "term_1", 'count': 2}], response.drilldownData[0]['terms'])
@@ -337,7 +337,7 @@ class SolrInterfaceTest(SeecrTestCase):
     def testSolrGivesSpellCheckResults(self):
         response, (path, body) = self.executeQueryResponse(query="__all__:aap AND __all__:bo", response=JSON_RESPONSE % JSON_SUGGESTIONS, suggestionRequest=dict(count=2, query="aap AND bo"))
         self.assertQueryArguments('spellcheck.count=2&rows=10&spellcheck=true&spellcheck.q=aap+AND+bo&q=__all__%3Aaap+AND+__all__%3Abo&start=0&wt=json', body)
-        self.assertEquals(['1','3','5'], response.hits)
+        self.assertEquals(['1','3','5'], [hit.id for hit in response.hits])
         self.assertEquals({'aap': (0, 3, ['aapje', 'raap']), 'bo': (8, 10, ['bio', 'bon'])}, response.suggestions)
 
     def testFieldnames(self):
-- 
1.7.10.4


From 78a12aa3513385b1ce646cd70d30a1e54a69ae90 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Thu, 13 Feb 2014 12:05:05 +0100
Subject: [PATCH 2/2] JJ: update deps

---
 deps.txt |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/deps.txt b/deps.txt
index 918dc6f..efbeccc 100644
--- a/deps.txt
+++ b/deps.txt
@@ -1,4 +1,4 @@
-python-meresco-components (>= 4.8)
+python-meresco-components (>= 4.9.16.1)
 python-meresco-components (<< 4.10)
 python-meresco-core (>= 4.0.3)
 python-meresco-core (<< 4.1)
-- 
1.7.10.4

