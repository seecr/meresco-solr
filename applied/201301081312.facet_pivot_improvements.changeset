Changeset created on Tue Jan 08 13:12:30 UTC 2013 by Seecr (Seek You Too B.V.)

Description: Pivotting improvements

    Small improvements to handle cases where no pivots are returned.

Baseline version: 5.0.2

From 3f368027fee574ff05cc23d4c8ad9aaffdd4e547 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Mon, 7 Jan 2013 13:53:46 +0100
Subject: [PATCH 1/3] TJ/JPM: increased sleeptime.

---
 test/_integration/integrationstate.py  |    2 +-
 test/_integration/solrinterfacetest.py |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/test/_integration/integrationstate.py b/test/_integration/integrationstate.py
index e59c059..9e46197 100644
--- a/test/_integration/integrationstate.py
+++ b/test/_integration/integrationstate.py
@@ -89,7 +89,7 @@ class IntegrationState(_IntegrationState):
         print "Creating database in", self.integrationTempdir
         try:
             self._uploadSolrData(join(self.testdataDir))
-            sleep(2)
+            sleep(5)
             print "Finished creating database in %s seconds" % (time() - start)
         except Exception, e:
             print 'Error received while creating database for', self.stateName
diff --git a/test/_integration/solrinterfacetest.py b/test/_integration/solrinterfacetest.py
index 8b3406b..d38e765 100644
--- a/test/_integration/solrinterfacetest.py
+++ b/test/_integration/solrinterfacetest.py
@@ -41,7 +41,7 @@ class SolrInterfaceTest(IntegrationTestCase):
             )
         header, body = postRequest(port=self.solrClientPort, path='/add', data=dumps(addKwargs), parse=False)
         self.assertEquals('', body)
-        sleep(0.75)
+        sleep(1)
         
         response = self.solrRequest(luceneQueryString='__id__:record\:testAddQueryDelete')
         self.assertEquals(1, response['total'])
@@ -49,7 +49,7 @@ class SolrInterfaceTest(IntegrationTestCase):
 
         header, body = postRequest(port=self.solrClientPort, path='/delete', data=dumps(dict(identifier='record:testAddQueryDelete')), parse=False)
         self.assertEquals('', body)
-        sleep(0.75)
+        sleep(1)
 
         response = self.solrRequest(luceneQueryString='__id__:record\:testAddQueryDelete')
         self.assertEquals(0, response['total'])
-- 
1.7.2.5


From edc4b3495465eaac7863737c9bb7328336e07a66 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Mon, 7 Jan 2013 14:03:35 +0100
Subject: [PATCH 2/3] JPM/TJ: allow multiple facets.

---
 doc/license.conf                       |    4 +-
 meresco/solr/solrinterface.py          |    7 ++--
 test/_integration/solrinterfacetest.py |   61 ++++++++++++++++++++++++++++++-
 3 files changed, 65 insertions(+), 7 deletions(-)

diff --git a/doc/license.conf b/doc/license.conf
index e747689..f107b38 100644
--- a/doc/license.conf
+++ b/doc/license.conf
@@ -3,8 +3,8 @@
     "description": "\"Meresco Solr\" is a set of components and tools\n to integrate Solr into \"Meresco.\"",
     "license": "GPLv2",
     "copyrights": [
-        {"name": "Seecr (Seek You Too B.V.)", "url": "http://seecr.nl", "years": [2012]},
-        {"name": "SURF", "url": "http://www.surf.nl", "years": [2012]}
+        {"name": "Seecr (Seek You Too B.V.)", "url": "http://seecr.nl", "years": [2013]},
+        {"name": "SURF", "url": "http://www.surf.nl", "years": [2013]}
     ],
     "copyrights_unused": [
         {"name": "Stichting Bibliotheek.nl (BNL)", "url": "http://www.bibliotheek.nl", "years": [2012]},
diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index 355ab2a..5d3f847 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -3,8 +3,8 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 SURF http://www.surf.nl
+# Copyright (C) 2011-2013 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012-2013 SURF http://www.surf.nl
 # Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
 # This file is part of "Meresco Solr"
@@ -172,13 +172,14 @@ def _facetArguments(facets):
         arguments['facet'] = "on"
         arguments['facet.mincount'] = "1"
         arguments['facet.field'] = []
+        arguments['facet.pivot'] = []
         for facet in facets:
             if isinstance(facet, dict):
                 arguments['facet.field'].append(facet['fieldname'])
                 facetLimit(facet)
                 facetSort(facet)
             else:
-                arguments["facet.pivot"] = ','.join(f['fieldname'] for f in facet)
+                arguments["facet.pivot"].append(','.join(f['fieldname'] for f in facet))
                 arguments['facet.pivot.mincount'] = "0"
                 for f in facet:
                     facetLimit(f)
diff --git a/test/_integration/solrinterfacetest.py b/test/_integration/solrinterfacetest.py
index d38e765..dfb7f90 100644
--- a/test/_integration/solrinterfacetest.py
+++ b/test/_integration/solrinterfacetest.py
@@ -3,8 +3,8 @@
 # "Meresco Solr" is a set of components and tools
 #  to integrate Solr into "Meresco." 
 # 
-# Copyright (C) 2012 SURF http://www.surf.nl
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012-2013 SURF http://www.surf.nl
+# Copyright (C) 2012-2013 Seecr (Seek You Too B.V.) http://seecr.nl
 # 
 # This file is part of "Meresco Solr"
 # 
@@ -91,6 +91,63 @@ class SolrInterfaceTest(IntegrationTestCase):
             }
         ], response['drilldownData'])
 
+    def testPivotingMultipleFacets(self):
+        response = self.solrRequest(luceneQueryString='*:*', facets=[
+            [{'fieldname': 'untokenized.rdf:type', 'maxTerms': 2}, {'fieldname': 'untokenized.dc:date', 'maxTerms': 2}],
+            [{'fieldname': 'untokenized.dc:subject', 'maxTerms': 2}, {'fieldname': 'untokenized.dc:date', 'maxTerms': 2}],
+        ])
+        self.assertEquals([
+            {
+                "fieldname": "untokenized.rdf:type", 
+                "terms": [
+                    {
+                        "count": 46, 
+                        "pivot": {
+                            "fieldname": "untokenized.dc:date", 
+                            "terms": [
+                                {
+                                    "count": 5, 
+                                    "term": "1975"
+                                }, 
+                                {
+                                    "count": 4, 
+                                    "term": "1971"
+                                }, 
+                            ]
+                        }, 
+                        "term": "http://dbpedia.org/ontology/Book"
+                    }, 
+                    {
+                        "count": 4, 
+                        "term": "http://www.w3.org/2004/02/skos/core#Concept"
+                    }, 
+                ]
+            },
+            {'fieldname': 'untokenized.dc:subject',
+                'terms': [{
+                    'count': 1, 
+                    'pivot': {
+                        'fieldname': 'untokenized.dc:date', 
+                        'terms': [{
+                            'count': 1, 
+                            'term': '1975'
+                        }]
+                    }, 
+                    'term': 'Bourbonnais (France)'
+                }, {
+                    'count': 1, 
+                    'pivot': {
+                        'fieldname': 'untokenized.dc:date', 
+                        'terms': [{
+                            'count': 1, 
+                            'term': '1966'
+                        }]
+                    }, 
+                    'term': 'Doesburg (Netherlands)'
+                }]
+            }
+        ], response['drilldownData'])
+
     def testPrefixSearch(self):
         response = self.solrRequest(path='/prefixSearch', prefix="cha", fieldname='__all__')
         self.assertEquals(['charles', 'challenge', 'chamber'], response['hits'])
-- 
1.7.2.5


From ccb8b9cb52c46ccddb9407a90be8b3b90fc7082a Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Tue, 8 Jan 2013 11:44:57 +0100
Subject: [PATCH 3/3] JJ/TJ: Allow empty results for facet_pivot.

---
 meresco/solr/solrinterface.py |    5 +++--
 test/solrinterfacetest.py     |   22 ++++++++++++++++++++++
 2 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/meresco/solr/solrinterface.py b/meresco/solr/solrinterface.py
index 5d3f847..2a0e220 100644
--- a/meresco/solr/solrinterface.py
+++ b/meresco/solr/solrinterface.py
@@ -194,8 +194,9 @@ def _updateResponseWithDrilldownData(arguments, facetCounts, response):
             terms.append({'term': termCounts[i], 'count': termCounts[i+1]})
         drilldownData.append(dict(fieldname=fieldname, terms=terms))
     if 'facet_pivot' in facetCounts:
-        for drilldown in facetCounts['facet_pivot'].values():
-            drilldownData.append(_buildDrilldownDict(drilldown))
+        drilldownData.extend([_buildDrilldownDict(drilldown) \
+                for drilldown in facetCounts['facet_pivot'].values() \
+                    if drilldown])
     response.drilldownData = drilldownData
 
 def _buildDrilldownDict(drilldown):
diff --git a/test/solrinterfacetest.py b/test/solrinterfacetest.py
index 944dede..d7218eb 100644
--- a/test/solrinterfacetest.py
+++ b/test/solrinterfacetest.py
@@ -284,6 +284,17 @@ class SolrInterfaceTest(SeecrTestCase):
                 }
             ]), repr(response.drilldownData))
 
+    def testPivotDrilldown(self):
+        response, (path, body) = self.executeQueryResponse("meresco.exists:true", facets=[
+                [
+                    {'fieldname': '__all__', 'sortBy': 'index'},
+                    {'fieldname': '__other__', 'maxTerms': 5}
+                ], 
+            ], response=JSON_RESPONSE % JSON_FACET_WITH_PIVOT_NO_RESPONSE)
+        arguments = parse_qs(body, keep_blank_values=True)
+        self.assertEqualsWS(repr([
+            ]), repr(response.drilldownData))
+
     def testExecuteQuerySolrHostFromObserver(self):
         solrInterface = SolrInterface()
         observer = CallTrace(returnValues={'solrServer': ('localhost', 1234)})
@@ -574,3 +585,14 @@ JSON_FACET_WITH_PIVOT = """,
         ]
     }
 }"""
+
+JSON_FACET_WITH_PIVOT_NO_RESPONSE = """,
+"facet_counts":{
+    "facet_queries":{},
+    "facet_dates":{},
+    "facet_fields":{},
+    "facet_ranges":{},
+    "facet_pivot":{
+        "__all__,__other__":[]
+    }
+}"""
-- 
1.7.2.5

